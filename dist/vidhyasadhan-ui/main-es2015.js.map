{"version":3,"sources":["./src/app/_components/website/sitesubscribe/sitesubscribe.component.ts","./src/app/_components/website/sitesubscribe/sitesubscribe.component.html","./src/app/_components/website/sitehome/sitehome.component.ts","./src/app/_components/website/sitehome/sitehome.component.html","./src/app/_components/alertbox/alertbox.component.ts","./src/app/_components/alertbox/alertbox.component.html","./src/app/_components/activatescreen/activatescreen.component.ts","./src/app/_components/activatescreen/activatescreen.component.html","./src/app/_components/home/home.component.ts","./src/app/_components/home/home.component.html","./src/app/core/notification-middleware.service.ts","./src/app/_components/website/sitenav/sitenav.component.ts","./src/app/_components/website/sitenav/sitenav.component.html","./src/app/_components/tutor-referrals/tutor-referrals-details/tutor-referrals-details.component.ts","./src/app/_components/tutor-referrals/tutor-referrals-details/tutor-referrals-details.component.html","./src/app/_components/login/login.component.ts","./src/app/_components/login/login.component.html","./src/app/_components/mapcomponent/mapcomponent.component.ts","./src/app/_components/mapcomponent/mapcomponent.component.html","./src/app/_components/events/eventdetail/eventdetail.component.ts","./src/app/_components/events/eventdetail/eventdetail.component.html","./src/app/_services/fileuploader.service.ts","./src/app/_components/assignmentdetail/assignmentdetail.component.ts","./src/app/_components/assignmentdetail/assignmentdetail.component.html","./src/app/_services/course.service.ts","./src/app/_components/profile/profile.component.ts","./src/app/_components/profile/profile.component.html","./src/app/alert/alerts/alerts.component.ts","./src/app/alert/alerts/alerts.component.html","./src/app/_components/tutors/tutors.component.ts","./src/app/_components/tutors/tutors.component.html","./src/app/_components/broadcast/broadcast.component.ts","./src/app/_components/broadcast/broadcast.component.html","./src/environments/environment.ts","./src/app/_services/demo.service.ts","./src/app/_layouts/mainlayout/mainlayout.component.ts","./src/app/_layouts/mainlayout/mainlayout.component.html","./src/app/_helpers/fieldmatcher.ts","./src/app/_components/admin-pages/adminpayments/adminpayments.component.ts","./src/app/_components/admin-pages/adminpayments/adminpayments.component.html","./src/app/_components/login/forgotpassword/forgotpassword.component.ts","./src/app/_components/login/forgotpassword/forgotpassword.component.html","./src/app/_models/alert.ts","./src/app/_components/assignments/noassignments/noassignments.component.ts","./src/app/_components/assignments/noassignments/noassignments.component.html","./src/app/_components/evaluate/evaluate.component.ts","./src/app/_components/evaluate/evaluate.component.html","./src/app/_components/promoter/promoterregister/promoterregister.component.ts","./src/app/_components/promoter/promoterregister/promoterregister.component.html","./src/app/_layouts/sitelayout/sitelayout.component.ts","./src/app/_layouts/sitelayout/sitelayout.component.html","./src/app/tutorfilter.pipe.ts","./src/app/_components/confirmation/confirmation.component.ts","./src/app/_components/confirmation/confirmation.component.html","./src/app/_components/classroom/classroom.component.ts","./src/app/_components/classroom/classroom.component.html","./src/app/_components/demolist/demolist.component.ts","./src/app/_components/demolist/demolist.component.html","./src/app/_components/admin-pages/adminstudents/adminstudents.component.ts","./src/app/_components/admin-pages/adminstudents/adminstudents.component.html","./src/app/_components/demodetail/demodetail.component.ts","./src/app/_components/demodetail/demodetail.component.html","./src/app/_components/website/siteaboutus/siteaboutus.component.ts","./src/app/_components/website/siteaboutus/siteaboutus.component.html","./src/app/_components/calendar/custom-calendar-format.ts","./src/app/_helpers/jwt-token.interceptor.ts","./src/app/_layouts/adminlayout/adminlayout.component.ts","./src/app/_layouts/adminlayout/adminlayout.component.html","./src/app/directives/dragndir.directive.ts","./src/app/_components/profile/address/address.component.ts","./src/app/_components/carouselhelper/carouselhelper.component.ts","./src/app/_components/carouselhelper/carouselhelper.component.html","./src/app/_components/evaluation-detail/evaluation-detail.component.ts","./src/app/_components/evaluation-detail/evaluation-detail.component.html","./src/app/_services/admin.service.ts","./src/app/_components/tutor-referrals/tutor-referrals.component.ts","./src/app/_components/tutor-referrals/tutor-referrals.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/_components/attendancemodal/attendancemodal.component.ts","./src/app/_components/attendancemodal/attendancemodal.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_components/vsnavigation/vsnavigation.component.ts","./src/app/_components/vsnavigation/vsnavigation.component.html","./src/app/_components/student/studymaterial/studymaterial.component.ts","./src/app/_components/student/studymaterial/studymaterial.component.html","./src/app/_components/admin-dashboard/admin-dashboard.component.ts","./src/app/_components/admin-dashboard/admin-dashboard.component.html","./src/app/_services/user.service.ts","./src/app/_components/attendance/attendance.component.ts","./src/app/_components/attendance/attendance.component.html","./src/app/angmaterial.module.ts","./src/app/_services/student.service.ts","./src/app/_components/calendar/calendar.component.ts","./src/app/_components/calendar/calendar.component.html","./src/app/_components/website/sitecontactus/sitecontactus.component.ts","./src/app/_components/website/sitecontactus/sitecontactus.component.html","./src/app/_components/profilemodel/profilemodel.component.ts","./src/app/_components/profilemodel/profilemodel.component.html","./src/app/app.module.ts","./src/app/_components/events/events.component.ts","./src/app/_components/events/events.component.html","./src/app/_components/otp/otp.component.ts","./src/app/_components/otp/otp.component.html","./src/app/_components/student/allreports/allreports.component.ts","./src/app/_components/student/allreports/allreports.component.html","./src/app/_components/student/reports/reports.component.ts","./src/app/_components/student/reports/reports.component.html","./src/app/_components/navigation-bar/navigation-bar.component.ts","./src/app/_components/navigation-bar/navigation-bar.component.html","./src/app/_services/alert.service.ts","./src/app/_components/student/studymaterial/studentmateriallist/studentmateriallist.component.ts","./src/app/_components/student/studymaterial/studentmateriallist/studentmateriallist.component.html","./src/app/_pipes/urls/urlsafe.pipe.ts","./src/app/_services/staticdata.service.ts","./src/app/_helpers/app-initializer.ts","./src/app/_components/assignments/assignments.component.ts","./src/app/_components/assignments/assignments.component.html","./src/app/_helpers/customvalidators.ts","./src/app/_components/appnotifications/appnotifications.component.ts","./src/app/_components/appnotifications/appnotifications.component.html","./src/app/_components/assignmentlist/assignmentlist.component.ts","./src/app/_components/assignmentlist/assignmentlist.component.html","./src/app/_pipes/fieldsfilter.pipe.ts","./src/app/_components/events/eventslist/eventslist.component.ts","./src/app/_components/events/eventslist/eventslist.component.html","./src/app/_services/authservice.service.ts","./src/app/_components/student/studymaterial/studentmateriallist/studentmateriallist-datasource.ts","./src/app/_components/website/sitefooter/sitefooter.component.ts","./src/app/_components/website/sitefooter/sitefooter.component.html","./src/app/alert/alert.module.ts","./src/app/_components/footer/footer.component.ts","./src/app/_components/footer/footer.component.html","./src/app/_components/admin-pages/admintutors/admintutors.component.ts","./src/app/_components/admin-pages/admintutors/admintutors.component.html","./src/app/_components/notification/notification.component.ts","./src/app/_components/notification/notification.component.html","./src/app/_components/dashboard/admin/admin.component.ts","./src/app/_components/dashboard/admin/admin.component.html","./src/app/_services/notifications.service.ts","./src/app/_components/student/assignments/assignment-detail/assignment-detail.component.ts","./src/app/_components/student/assignments/assignment-detail/assignment-detail.component.html","./src/app/_helpers/error.interceptor.ts","./src/app/_components/login/resetpassword/resetpassword.component.ts","./src/app/_components/login/resetpassword/resetpassword.component.html","./src/app/_components/register/register.component.ts","./src/app/_components/register/register.component.html","./src/app/_components/student/adaptivereports/adaptivereports.component.ts","./src/app/_components/student/adaptivereports/adaptivereports.component.html","./src/app/_helpers/auth.guard.ts","./src/app/_components/website/sitefeatures/sitefeatures.component.ts","./src/app/_components/website/sitefeatures/sitefeatures.component.html","./src/app/_services/studymaterial.service.ts","./src/app/_components/student/studentpayments/studentpayments.component.ts","./src/app/_components/student/studentpayments/studentpayments.component.html","./src/app/_layouts/promoterlayout/promoterlayout.component.ts","./src/app/_layouts/promoterlayout/promoterlayout.component.html","./src/app/app-routing.module.ts","./src/app/_components/dashboard/dashboard.component.ts","./src/app/_components/dashboard/dashboard.component.html","./src/app/_components/student/assignments/assignments.component.ts","./src/app/_components/student/assignments/assignments.component.html","./src/app/_components/earnings/earnings.component.ts","./src/app/_components/earnings/earnings.component.html","./src/app/_components/demo/demo.component.ts","./src/app/_components/demo/demo.component.html","./src/app/_components/eventmodel/eventmodel.component.ts","./src/app/_components/eventmodel/eventmodel.component.html","./src/main.ts","./src/app/_services/attendance.service.ts","./src/app/_components/sidenav-bar/sidenav-bar.component.ts","./src/app/_components/sidenav-bar/sidenav-bar.component.html","./$_lazy_route_resource lazy namespace object","./src/app/_components/website/sitepricing/sitepricing.component.ts","./src/app/_components/website/sitepricing/sitepricing.component.html","./src/app/_components/demomodel/demomodel.component.ts","./src/app/_components/demomodel/demomodel.component.html","./src/app/_components/promoter/promoterlogin/promoterlogin.component.ts","./src/app/_components/promoter/promoterlogin/promoterlogin.component.html"],"names":[],"mappings":"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,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,4EACE;QAAA,gEACF;QAAA,4DAAO;QACP,wEACE;QAAA,iEACA;QAAA,sEACA;QAAA,iEACA;QAAA,4EACE;QAAA,6EACF;QAAA,4DAAO;QACT,4DAAO;QACT,4DAAM;QACN,sEACM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,4EACE;QAAA,gEACF;QAAA,4DAAO;QACP,wEACE;QAAA,iEACA;QAAA,sEACA;QAAA,iEACA;QAAA,4EACE;QAAA,6EACF;QAAA,4DAAO;QACT,4DAAO;QACT,4DAAM;QACN,sEACM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACK;QAAA,2EACC;QAAA,8EACE;QAD2C,gJAAS,UAAM,IAAC;QAC3D,0EACF;QAAA,4DAAS;QACV,4DAAM;QACX,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,sEAEF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACI;QAAA,yEACE;QAAA,8GAAiD;QAAA,iEAC7D;QAAA,+JACU;QAAA,4DAAI;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAM;;6FD5IO,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;AERD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;;AClSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;AAMlE,MAAM,wBAAwB;IAEnC,YAAoB,WAAwB,EACzB,SAAiD,EACxB,IAAS,EACjC,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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitesubscribe',\r\n  templateUrl: './sitesubscribe.component.html',\r\n  styleUrls: ['./sitesubscribe.component.css']\r\n})\r\nexport class SitesubscribeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"team bg-white\">\r\n  <div class=\"news-letter\">\r\n  <h2 class=\"history-text\">Subscribe our newsletter</h2>\r\n  <div class=\"line\"></div>\r\n    <p class=\"subscribe-text\">Subscribe to our newsletter for daily/weekly update of our products and services.</p>\r\n    <form class=\"form-inline justify-content-center\">\r\n      <div class=\"form-group mx-sm-3 mb-2\">\r\n        <label for=\"inputPassword2\" class=\"sr-only\">Email</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"Email\">\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-discover btn-primary mb-2\">Discover</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitehome',\r\n  templateUrl: './sitehome.component.html',\r\n  styleUrls: ['./sitehome.component.css']\r\n})\r\nexport class SitehomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  date: Date;\r\n  images = [];\r\n\r\n  ngOnInit(): void {\r\n    this.date = new Date();\r\n    this.loadImages();\r\n  }\r\n\r\n  loadImages(){\r\n    for (let index = 0; index < 4; index++) {\r\n      const element = {\r\n        id: index,\r\n        image1: 'assets/website/bg-svg/mg-' + (index + 1) + '.png',\r\n        image2: 'assets/website/bg-svg/mg-' + (index + 1) + '-1.png 2x,' + 'assets/website/bg-svg/mg-' + (index + 1) + '-2.png 3x',\r\n        image3: 'assets/website/bg-svg/mg-' + (index + 1) + '-2',\r\n        style: 'img-' + index\r\n      };\r\n      this.images.push(element);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <h2 class=\"welove-text\"> We provide easy ways to exchange <b>Study/Teach</b>.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/dashboard/dashboard-1.png\"\r\n             class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"home-1\">\r\n  <!-- <div class=\"container p-2 \">\r\n    <div class=\"row main-margin align-items-center\">\r\n      <div class=\"col-md-6 text-left\">\r\n        <h1 class=\"provider\">\r\n          We provide easy ways to exchange <b>Study/Teach</b>.\r\n        </h1>\r\n        <h4 class=\"platform\">\r\n          VidhyaSadhan is a platform to change the way you Study and Teach.\r\n        </h4>\r\n        <button class=\"start-btn\" mat-raised-button><span class=\"btn-text\">Get Started</span></button>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <img class=\"img img-fluid\" src=\"assets/dashboard/dashboard-1.png\">\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  <div class=\"container p-2\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-5\">\r\n        <img class=\"img img-fluid\" src=\"assets/website/home-1.png\" srcset=\"assets/website/home-2.png 2x,\r\n        assets/website/home-3.png 3x\">\r\n      </div>\r\n      <div class=\"col-md-6 text-left\">\r\n        <h1 class=\"dev\">\r\n          Welcome to VidhyaSadhan\r\n        </h1>\r\n        <div class=\"line\"></div>\r\n        <div class=\"dev-text\">\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\r\n          standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to\r\n          make a type specimen book. It has survived not only five centuries, but also the leap into electronic\r\n          typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset\r\n          sheets containing.\r\n        </div>\r\n        <button class=\"dev-discover\" mat-raised-button>Discover</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"bg-white welcome-card\">\r\n  <div class=\"edu-simple\">\r\n    <div class=\"mid-card\">\r\n      <div class=\"card\">\r\n        <!-- <div class=\"card-header made-simple\">\r\n          <h2 class=\"made-simple-txt\">\r\n            Your Education made simple\r\n          </h2>\r\n        </div> -->\r\n        <div class=\"card-body\">\r\n          <h2 class=\"made-simple-txt\">\r\n            Your Education made simple\r\n          </h2>\r\n          <div class=\"line\"></div>\r\n          <div class=\"card-deck\">\r\n            <div class=\"card border-0\">\r\n              <div class=\"card-body text-center\">\r\n                <span class=\"card-count\">01</span>\r\n                <img class=\"card-img-top\" src=\"assets/website/section3/tutor1.png\" srcset=\"assets/website/section3/tutor2.png 2x,\r\n                assets/website/section3/tutor3.png 3x\">\r\n                <h2 class=\"card-title\">All You Need to Start</h2>\r\n                <p class=\"card-text\">Register as a tutor and add to the top searched tutor list.</p>\r\n                <a name=\"\" id=\"\" class=\"btn btn-light\" href=\"#\" role=\"button\">Register as a Tutor ></a>\r\n              </div>\r\n            </div>\r\n            <div class=\"card border-0\">\r\n              <div class=\"card-body text-center d-flex flex-column\">\r\n                <div>\r\n\r\n                </div>\r\n                <div class=\"mt-auto\">\r\n                  <span class=\"card-count\">02</span>\r\n                  <img class=\"card-img-top\" src=\"assets/website/section3/mask-1.png\" srcset=\"assets/website/section3/mask-2.png 2x,\r\n                  assets/website/section3/mask-3.png 3x\">\r\n                  <h2 class=\"card-title\">Customize and Extend</h2>\r\n                  <p class=\"card-text\">Get the classrooms/tuitions booked online/offline at your convenience.</p>\r\n                  <a name=\"\" id=\"\" class=\"btn btn-light\" href=\"#\" role=\"button\">Browse For Students ></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card border-0\">\r\n              <div class=\"card-body text-center\">\r\n                <span class=\"card-count\">03</span>\r\n                <!-- <div>\r\n                  <img class=\"rect-228\" src=\"assets/website/section3/rectangle-228.png\" srcset=\"assets/website/section3/rectangle-228@2x.png 2x, assets/website/section3/rectangle-228@3x.png 3x\">\r\n                </div> -->\r\n                <img class=\"card-img-top\" src=\"assets/website/section3/rectangle-225.png\" srcset=\"assets/website/section3/rectangle-225@2x.png 2x,\r\n                assets/website/section3/rectangle-225@3x.png 3x\">\r\n                <h2 class=\"card-title\">Active Community</h2>\r\n                <p class=\"card-text\">VidhyaSadhan is one of the fastest-growing Tution communities.</p>\r\n                <a name=\"\" id=\"\" class=\"btn btn-light\" href=\"#\" role=\"button\">Check your Blogs ></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div class=\"bg-white\">\r\n  <div class=\"gexp-card flex-row flex-wrap\">\r\n    <div class=\"card-deck\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body text-left\">\r\n          <h2 class=\"card-title great-exp\">Great experience with VidhyaSadhan</h2>\r\n          <div class=\"line m-0\"></div>\r\n          <p class=\"card-text great-text\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum\r\n            has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of\r\n            type and scrambled.</p>\r\n          <button class=\"dev-discover\" mat-raised-button>Discover</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <img class=\"img img-fluid\" src=\"assets/event.svg\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"role-access\">\r\n  <div class=\"role-card\">\r\n    <div class=\"container\">\r\n      <h2 class=\"role-based\">Role-based access control</h2>\r\n      <div class=\"line\"></div>\r\n      <div class=\"d-flex p-2 justify-content-center\">\r\n        <div class=\"role-1\">\r\n          <img class=\"img img-fluid\" src=\"assets/registration/login-1.svg\" alt=\"\">\r\n          <p>Tutor</p>\r\n        </div>\r\n        <div class=\"role-1\">\r\n          <img class=\"img img-fluid\" src=\"assets/registration/login-2.svg\" alt=\"\">\r\n          <p>Student</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"blog\">\r\n  <h2 class=\"role-based\">\r\n    Our Blog\r\n  </h2>\r\n  <div class=\"line\"></div>\r\n  <p class=\"card-text blog-post\">\r\n    Get to know the latest stuff via our blog post.\r\n  </p>\r\n  <div class=\"blog-content\">\r\n    <div>\r\n      <mat-card class=\"text-left\">\r\n        <mat-card-header>\r\n          <mat-card-subtitle>{{date | date}}</mat-card-subtitle>\r\n          <mat-card-title class=\"how-to\">HOW TO FIND BEST TUTOR FOR MY EDUCATION</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"how-to-body\">\r\n          Lorem ipsum dolor sit amet, magna habemus\r\n          ius ad, qui minimum voluptaria in. Ad mei modus\r\n          quodsi complectitur, postea...\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button class=\"readmore-1\" mat-button>Read More</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <mat-card class=\"text-left\">\r\n        <mat-card-header>\r\n          <mat-card-subtitle>{{date | date}}</mat-card-subtitle>\r\n          <mat-card-title class=\"refer-10\">REFER 10 TUTORS\r\n            RATE IS NOW #400 PER...</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"refer-10-body\">\r\n          Lorem ipsum dolor sit amet, magna habemus\r\n          ius ad, qui minimum voluptaria in. Ad mei modus\r\n          quodsi complectitur, postea...\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button class=\"readmore-2\" mat-button>Read More</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <mat-card class=\"text-left\">\r\n        <mat-card-header>\r\n          <mat-card-subtitle>{{date | date}}</mat-card-subtitle>\r\n          <mat-card-title class=\"how-to\">CAN I CHOOSE NEAR BY STUDENTS FOR OFFLINE..</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"how-to-body\">\r\n          Lorem ipsum dolor sit amet, magna habemus\r\n          ius ad, qui minimum voluptaria in. Ad mei modus\r\n          quodsi complectitur, postea...\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button class=\"readmore-1\" mat-button>Read More</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"testimonial-header\">\r\n  <div class=\"testimonial d-flex flex-column justify-content-center\">\r\n    <h4 class=\"satisfied-students\">\r\n      10,000 Satisfied Students & Tutors\r\n      around the world\r\n    </h4>\r\n    <p>Yeah! we’re proud with numbers. We’ve helped thousands of students &\r\n      Tutors all around the world with our VidhyaSadhan service. Hover ontop of them pic to view their testimonials.</p>\r\n    <div class=\"testimonial-img\">\r\n      <img [src]=\"img.image1\" *ngFor=\"let img of images\"  [ngClass]=\"img.style\">\r\n      <img [src]=\"img.image1\" *ngFor=\"let img of images\"  [ngClass]=\"img.style\">\r\n      <!-- <ul class=\"list-inline\">\r\n        <li class=\"list-inline-item\" *ngFor=\"let img of images\">\r\n          <img [src]=\"img.image1\"  class=\"Mask-Group\">\r\n        </li>\r\n      </ul>\r\n      <ul class=\"list-inline\">\r\n        <li class=\"list-inline-item\" *ngFor=\"let img of images.reverse()\">\r\n          <img [src]=\"img.image1\"  class=\"Mask-Group\">\r\n        </li>\r\n      </ul> -->\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"d-flex flex-column justify-content-center bg-white\">\r\n  <div class=\"download\">\r\n    <h2 class=\"role-based\">Download our app</h2>\r\n    <div class=\"line\"></div>\r\n    <p class=\"download-text\">Discover exclusive Learning services with\r\n      our mobile experience.</p>\r\n    <img src=\"assets/website/Store.png\"\r\n       srcset=\"assets/website/Store-1.png 2x,\r\n       assets/website/Store-2.png 3x\"\r\n       class=\"Store\">\r\n  </div>\r\n</div>\r\n<div class=\"download-mobile\">\r\n<div class=\"d-flex justify-content-center m-auto\">\r\n  <img src=\"assets/website/X-1.png\"\r\n       srcset=\"assets/website/X-1-1.png 2x,\r\n       assets/website/X-1-1.png 3x\"\r\n       class=\"Store p-2\">\r\n  <img src=\"assets/website/X-2.png\"\r\n       srcset=\"assets/website/X-2-1.png 2x,\r\n       assets/website/X-2-2.png 3x\"\r\n       class=\"Store p-2\">\r\n</div>\r\n</div>\r\n<!-- <div class=\"d-flex flex-column justify-content-center bg-white\">\r\n  <div class=\"download subscribe-email\">\r\n    <h2 class=\"role-based\">Subscribe our newsletter</h2>\r\n    <p>Subscribe to our newsletter for daily/weekly update of our products and services.</p>\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-md-8\">\r\n        <input type=\"text\"\r\n        class=\"form-control\" name=\"\" id=\"\" aria-describedby=\"helpId\" placeholder=\"Email\">\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <a class=\"btn discover-btn\" href=\"#\" role=\"button\">Discover</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-alertbox',\r\n  templateUrl: './alertbox.component.html',\r\n  styleUrls: ['./alertbox.component.css']\r\n})\r\nexport class AlertboxComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<span class=\"example-pizza-party\">\r\n    {{data.message}}\r\n</span>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-activatescreen',\r\n  templateUrl: './activatescreen.component.html',\r\n  styleUrls: ['./activatescreen.component.css']\r\n})\r\nexport class ActivatescreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron jumbo-bg\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-3\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-header class=\"bg-welcome p-4\">\r\n          <mat-card-title>\r\n            <img src=\"assets/welcome/vidhya-sandhhan-copy.svg\" class=\"vidhya-sandhhan-copy\">\r\n            <h2 class=\"welcome\">Welcome to VidhyaSadhan </h2>\r\n            <div class=\"text-center\">\r\n                <img src=\"assets/welcome/mesa-de-trabajo-1-copy-2-x-8.png\" srcset=\"assets/welcome/mesa-de-trabajo-1-copy-2-x-8@2x.png 2x,\r\n                assets/welcome/mesa-de-trabajo-1-copy-2-x-8@3x.png 3x\" class=\"Mesa-de-trabajo-1-copy2x-8\">\r\n            </div>\r\n            <p class=\"activate-text\">\r\n              To activate your account, we need to know you received this Email. Please click on the link shared to\r\n              confirm that.\r\n            </p>\r\n            <div class=\"p-1 text-center\">\r\n              <a class=\"btn btn-md btn-primary\" [routerLink]=\"['/login']\">Login</a>\r\n            </div>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"bg-white text-center\">\r\n            <div class=\"p-4\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <img src=\"assets/welcome/online-stores-icon.svg\" class=\"online-stores-icon\">\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <h4 class=\"home-edu\">Online Home Education</h4>\r\n                        <p class=\"home-edu-sub\">\r\n                            Morbi sit amet sapien placerat lorem ultrices euismod sed at neque. Mauris tristique, lacus id maximus convallis, neque tellus ornare risus\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <img src=\"assets/welcome/marketplace-icon.svg\" class=\"online-stores-icon\">\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <h4 class=\"home-edu\">Online Home Education</h4>\r\n                        <p class=\"home-edu-sub\">\r\n                            Morbi sit amet sapien placerat lorem ultrices euismod sed at neque. Mauris tristique, lacus id maximus convallis, neque tellus ornare risus\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <mat-divider class=\"m-2\"\r\n                    [inset]=\"true\">\r\n                </mat-divider>\r\n\r\n                <img src=\"assets/welcome/ava.svg\" class=\"ava\">\r\n                <p class=\"contact-1\">Contact: info@vidhyasadhan.com</p>\r\n            </div>       \r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div class=\"text-center footer-text p-4\">\r\n    <p>Vidhyasadhan Inc., The Marketplace To Bring Life Changing Tution to All </p>\r\n     <p>XXX Old Middlefield Way #XXX, Mountain View, CA XXXX-XXXX</p>   \r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { NotificationMiddlewareService } from 'src/app/core/notification-middleware.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  loading = false;\r\n  users: User[];\r\n  user: User;\r\n\r\n  constructor(private userService: UserService, private authService: AuthserviceService) {\r\n    this.authService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.userService.getAll().pipe(first()).subscribe(users => {\r\n        this.loading = false;\r\n        this.users = users;\r\n    });\r\n}\r\n\r\nlogout(){\r\n}\r\n\r\n}\r\n","<app-dashboard></app-dashboard>","import {\r\n  Injectable,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  environment\r\n} from 'src/environments/environment';\r\nimport {\r\n  NotificationsService,\r\n  PushSubscription\r\n} from '../_services/notifications.service';\r\nimport {SwPush, SwUpdate} from '@angular/service-worker';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationMiddlewareService {\r\n\r\n  public pushNotificationStatus = {\r\n    isSubscribed: false,\r\n    isSupported: false,\r\n    isInProgress: false\r\n  };\r\n\r\n  swRegistration = null;\r\n  public notifications = [];\r\n  snackBarDuration: 10;\r\n  constructor(private notificationService: NotificationsService,\r\n              private swPush: SwPush,\r\n              public swUpdate: SwUpdate,\r\n              private matSnackBar: MatSnackBar) {}\r\n\r\n\r\n  init() {\r\n    if ('serviceWorker' in navigator && 'PushManager' in window) {\r\n      navigator.serviceWorker.register('/assets/sw.js')\r\n        .then(swReg => {\r\n          console.log('Service Worker is registered', swReg);\r\n          this.swRegistration = swReg;\r\n          this.checkSubscription();\r\n        })\r\n        .catch(error => {\r\n          console.error('Service Worker Error', error);\r\n        });\r\n      this.pushNotificationStatus.isSupported = true;\r\n    } else {\r\n      this.pushNotificationStatus.isSupported = false;\r\n    }\r\n  }\r\n\r\n  checkSubscription() {\r\n    this.swRegistration.pushManager.getSubscription()\r\n      .then(subscription => {\r\n        console.log(subscription);\r\n        console.log(JSON.stringify(subscription));\r\n        this.pushNotificationStatus.isSubscribed = !(subscription === null);\r\n      });\r\n  }\r\n\r\n  subscribe() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    const applicationServerKey = this.urlB64ToUint8Array(environment.applicationServerPublicKey);\r\n    this.swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey\r\n      })\r\n      .then(subscription => {\r\n        console.log(JSON.parse(JSON.stringify(subscription)));\r\n        this.pushNotificationStatus.isSubscribed = true;\r\n      })\r\n      .catch(err => {\r\n        console.log('Failed to subscribe the user: ', err);\r\n      })\r\n      .then(() => {\r\n        this.pushNotificationStatus.isInProgress = false;\r\n      });\r\n\r\n    navigator.serviceWorker.addEventListener('message', (event) => {\r\n        console.log('pushed');\r\n        this.notifications.push(event.data);\r\n        });\r\n  }\r\n\r\n  subscribeUser() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    const applicationServerKey = this.urlB64ToUint8Array(environment.applicationServerPublicKey);\r\n    this.swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey\r\n      })\r\n      .then(subscription => {\r\n        const subject = JSON.parse(JSON.stringify(subscription));\r\n        this.notificationService.subscribe({\r\n          auth: subject.keys.auth,\r\n          p256Dh: subject.keys.p256dh,\r\n          endPoint: subject.endpoint\r\n        }).subscribe(s => {\r\n          this.pushNotificationStatus.isSubscribed = true;\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log('Failed to subscribe the user: ', err);\r\n      })\r\n      .then(() => {\r\n        this.pushNotificationStatus.isInProgress = false;\r\n      });\r\n\r\n    navigator.serviceWorker.addEventListener('message', (event) => {\r\n        console.log('pushed');\r\n        this.notifications.push(event.data);\r\n        });\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    this.swRegistration.pushManager.getSubscription()\r\n      .then((subscription) => {\r\n        if (subscription) {\r\n          return subscription.unsubscribe();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error unsubscribing', error);\r\n      })\r\n      .then(() => {\r\n        this.pushNotificationStatus.isSubscribed = false;\r\n        this.pushNotificationStatus.isInProgress = false;\r\n      });\r\n  }\r\n\r\n  unsubscribeUser() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    let sub;\r\n    this.swRegistration.pushManager.getSubscription()\r\n      .then((subscription) => {\r\n        if (subscription) {\r\n          sub = JSON.parse(JSON.stringify(subscription));\r\n          return subscription.unsubscribe();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error unsubscribing', error);\r\n      })\r\n      .then(() => {\r\n        this.notificationService.unsubscribe({\r\n          auth: sub.keys.auth,\r\n          p256Dh: sub.keys.p256dh,\r\n          endPoint: sub.endpoint\r\n        }).subscribe(() => {\r\n          this.pushNotificationStatus.isSubscribed = false;\r\n          this.pushNotificationStatus.isInProgress = false;\r\n        });\r\n      });\r\n  }\r\n\r\n  urlB64ToUint8Array(publicKey) {\r\n    const padding = '='.repeat((4 - publicKey.length % 4) % 4);\r\n    const base64 = (publicKey + padding)\r\n      .replace(/\\-/g, '+')\r\n      .replace(/_/g, '/');\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n\r\n  toggleSubscription() {\r\n    if (this.pushNotificationStatus.isSubscribed) {\r\n     // this.unsubscribeUser();\r\n     this.unsubscribeNotifications();\r\n    } else {\r\n     // this.subscribeUser();\r\n     this.subscribeToNotifications();\r\n    }\r\n  }\r\n\r\n  initialize(){\r\n    if (this.swUpdate.isEnabled) {\r\n      this.pushNotificationStatus.isSupported = true;\r\n      this.swUpdate.available.subscribe(() => {\r\n          if (confirm(`New version available. Load New Version?`)) {\r\n              window.location.reload();\r\n          }\r\n      });\r\n    }\r\n\r\n    if (this.swPush.isEnabled){\r\n      this.pushNotificationStatus.isSupported = true;\r\n    }\r\n\r\n    console.log(this.swUpdate.isEnabled);\r\n    console.log(this.pushNotificationStatus.isSupported);\r\n    this.pushNotificationStatus.isSubscribed = !(this.swPush.subscription === null);\r\n  }\r\n\r\n  subscribeToNotifications() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    this.swPush.requestSubscription({\r\n        serverPublicKey: environment.applicationServerPublicKey\r\n    })\r\n    .then(sub => {\r\n      const subject = JSON.parse(JSON.stringify(sub));\r\n      this.notificationService.subscribe({\r\n        auth: subject.keys.auth,\r\n        p256Dh: subject.keys.p256dh,\r\n        endPoint: subject.endpoint\r\n      }).subscribe(s => {\r\n        this.pushNotificationStatus.isSubscribed = true;\r\n        const snackBarRef = this.matSnackBar.open('Now you are subscribed', null, {\r\n          duration: this.snackBarDuration\r\n        });\r\n      });\r\n    }).catch(err => console.error('Could not subscribe to notifications', err))\r\n    .then(() => {\r\n      this.pushNotificationStatus.isInProgress = false;\r\n    });\r\n  }\r\n\r\n  unsubscribeNotifications(){\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    const sub = JSON.parse(JSON.stringify(this.swPush.subscription));\r\n    console.log('test');\r\n    this.swPush.unsubscribe();\r\n    this.notificationService.unsubscribe({\r\n      auth: sub.keys.auth,\r\n      p256Dh: sub.keys.p256Dh,\r\n      endPoint: sub.endpoint\r\n    }).subscribe(() => {\r\n      this.pushNotificationStatus.isSubscribed = false;\r\n      this.pushNotificationStatus.isInProgress = false;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitenav',\r\n  templateUrl: './sitenav.component.html',\r\n  styleUrls: ['./sitenav.component.css']\r\n})\r\nexport class SitenavComponent implements OnInit {\r\n\r\n  public isCollapsed = true;\r\n  isSelected = true;\r\n\r\n  menunav = [\r\n    {id: 0, name: 'Home', isActive: true, path: '/'},\r\n    {id: 1, name: 'About Us', isActive: false, path: '/about-us'},\r\n    {id: 2, name: 'Features', isActive: false, path: '/features'},\r\n    {id: 3, name: 'Pricing', isActive: false, path: '/pricing'},\r\n    {id: 4, name: 'Contact Us', isActive: false, path: '/contact'},\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  clickedItem(item){\r\n    this.menunav.forEach(x => x.isActive = false);\r\n    item.isActive =  true;\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-white sticky-top\">\r\n    <a class=\"navbar-brand\" href=\"#\"><img src=\"assets/vidhyasadhan-logo.svg\"></a>\r\n    <button class=\"navbar-toggler hidden-lg-up\" type=\"button\" data-toggle=\"collapse\"\r\n    (click)=\"isCollapsed = !isCollapsed\" [attr.aria-expanded]=\"!isCollapsed\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n       aria-label=\"Toggle navigation\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\" [ngbCollapse]=\"isCollapsed\">\r\n      <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n        <li class=\"nav-item active\" [ngClass]=\"{'item-active': item.isActive}\" (click)=\"clickedItem(item)\" *ngFor=\"let item of menunav\">\r\n          <a class=\"nav-link\" [routerLink]=\"[item.path]\">{{item.name}} </a>\r\n        </li>\r\n        <li class=\"nav-item active dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Promoter/Parent</a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n            <a class=\"dropdown-item\" href=\"#\">Action 1</a>\r\n            <a class=\"dropdown-item\" href=\"#\">Action 2</a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n        <button [routerLink]=\"['/login']\" class=\"btn btn-outline-success my-2 my-sm-0 login-btn\" type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n@Component({\r\n  selector: 'app-tutor-referrals-details',\r\n  templateUrl: './tutor-referrals-details.component.html',\r\n  styleUrls: ['./tutor-referrals-details.component.css']\r\n})\r\nexport class TutorReferralsDetailsComponent implements OnInit {\r\n\r\n  @Input() name;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header modal-header-custom\">\r\n  <h4 class=\"modal-title referral-details\">Referral Details</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <form>\r\n          <div class=\"form-row align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <label class=\"sr-only\" for=\"inlineFormInput\">Name</label>\r\n              <input type=\"text\" class=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Search \">\r\n            </div> \r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <div class=\"col-3\">\r\n              <button type=\"submit\" class=\"btn btn-primary withdraw-button mb-2\">Withdraw</button>\r\n            </div>\r\n            <div class=\"col-9\"> \r\n              <button type=\"submit\" class=\"btn btn-secondary transfer-to-earn-button ml-2\">Transfer to Earnings</button>\r\n            </div>\r\n        </div>\r\n          \r\n         \r\n      </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12 padding-left-right\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 padding-left-right mt-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\"> Name</th>\r\n                  <th scope=\"col\">Email Address</th>\r\n                  <th scope=\"col\">Referred via</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Credits</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked>\r\n                        <label class=\"custom-control-label\" for=\"customCheck1\">1</label>\r\n                    </div>\r\n                  </td>\r\n                  <td>Bootstrap 4 CDN and Starter Template</td>\r\n                  <td>Cristina</td>\r\n                  <td>913</td>\r\n                  <td>2.846</td>\r\n                  <td>\r\n                    $26\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked>\r\n                        <label class=\"custom-control-label\" for=\"customCheck1\">1</label>\r\n                    </div>\r\n                  </td>\r\n                  <td>Bootstrap 4 CDN and Starter Template</td>\r\n                  <td>Cristina</td>\r\n                  <td>913</td>\r\n                  <td>2.846</td>\r\n                  <td>\r\n                    $26\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked>\r\n                        <label class=\"custom-control-label\" for=\"customCheck1\">1</label>\r\n                    </div>\r\n                  </td>\r\n                  <td>Bootstrap 4 CDN and Starter Template</td>\r\n                  <td>Cristina</td>\r\n                  <td>913</td>\r\n                  <td>2.846</td>\r\n                  <td>\r\n                    $26\r\n                  </td>\r\n                </tr>\r\n             \r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer justify-center-footer\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 text-center\" >\r\n      <!-- <nav aria-label=\"Page navigation example\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\">\r\n            <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n              <span aria-hidden=\"true\">&laquo;</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n          <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\r\n          <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\r\n          <li class=\"page-item\">\r\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n              <span aria-hidden=\"true\">&raquo;</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav> -->\r\n      <mat-paginator [length]=\"5\"\r\n        [pageSize]=\"5\"\r\n        [pageSizeOptions]=\"[5,10,15]\">\r\n        <!-- (page)=\"pageEvent = $event\" -->\r\n      </mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {\r\n  first\r\n} from 'rxjs/operators';\r\nimport {\r\n  ActivatedRoute,\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  loading = false;\r\n  loadforgot = false;\r\n  submitted = false;\r\n  passwordsubmitted = false;\r\n  returnUrl: string;\r\n  isAlert = false;\r\n  error = '';\r\n  isTutor = true;\r\n  username;\r\n  isForgot = false;\r\n  forgotMessage;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthserviceService\r\n  ) {\r\n    console.log(this.authService.userValue);\r\n    if (this.authService.userValue) {\r\n      this.router.navigate(['/vs']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    this.passwordForm = this.formBuilder.group({\r\n      username: [this.f.username.value, Validators.required],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required]\r\n    });\r\n\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/vs';\r\n  }\r\n\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  get p() {\r\n    return this.passwordForm.controls;\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authService.login(this.f.username.value, this.f.password.value, this.isTutor ? 1 : 2)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error: error => {\r\n          this.error = 'Please Check your Password or Email to Confirm';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  onpasswordSubmit(){\r\n    this.passwordsubmitted = true;\r\n\r\n    this.loadforgot = true;\r\n    if (this.passwordForm.valid){\r\n      const forgotModel = {\r\n        email : this.p.username.value,\r\n        password : this.p.password.value,\r\n        confirmPassword: this.p.confirmPassword.value,\r\n      };\r\n      this.authService.forgotpassword(forgotModel).subscribe(x => {\r\n        if (x){\r\n          this.forgotMessage = true;\r\n        }\r\n        else{\r\n          this.error = 'Unable to Reset Password';\r\n        }\r\n        this.loadforgot = false;\r\n      }, (error) => {\r\n        this.loadforgot = false;\r\n        this.error = error;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  forgotClick(e){\r\n    e.preventDefault();\r\n    this.isForgot = !this.isForgot;\r\n  }\r\n\r\n}\r\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor? '':'main-bg'\">\r\n  <mat-toolbar class=\"justify-content-center tb\">\r\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\r\n  </mat-toolbar>\r\n  <div class=\"equal-container login-side\">\r\n    <div class=\"equal-col\">\r\n      <div>\r\n        <div class=\"card rounded\">\r\n          <div class=\"card-dody\" *ngIf=\"!isForgot\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"log-form-mr bg-white\">\r\n              <div class=\"card-header text-center log-header \">\r\n                <h2>Choose Account Type</h2>\r\n                <div class=\"d-flex flex-wrap justify-content-center\">\r\n                  <div class=\"icon-bg\" [ngClass]=\"isTutor ? 'icon-bg-color-blue' : 'border-light'\"\r\n                    (click)=\"isTutor = true\">\r\n                    <img class=\"img-thumbnail img-prop\" src=\"assets/registration/login-1.svg\">\r\n                    <p>Tutor</p>\r\n                    <mat-icon *ngIf=\"isTutor\" class=\"icon-position icon-color-blue\" color=\"primary\">check_circle\r\n                    </mat-icon>\r\n                  </div>\r\n                  <div class=\"icon-bg\" [ngClass]=\"!isTutor ? 'icon-bg-color-pink' : 'border-light'\"\r\n                    (click)=\"isTutor = false\">\r\n                    <img class=\"img-thumbnail img-prop\" src=\"assets/registration/login-2.svg\">\r\n                    <p>Student</p>\r\n                    <mat-icon *ngIf=\"!isTutor\" class=\"icon-position icon-color-pink\" color=\"secondary\">check_circle\r\n                    </mat-icon>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h2 class=\"text-center\">Hello {{isTutor ? \"Tutor\" : \"Student\"}}</h2>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"username\">Email</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">email</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"email\" formControlName=\"username\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Email is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">Password</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">lock</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"password\" formControlName=\"password\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  </div>\r\n                  <span matSuffix><a [routerLink]=\"['/account/forgot-password']\" [queryParams]=\"{role: isTutor ? 'tutor': 'student'}\">Forgot?</a></span>\r\n                </mat-form-field>\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div class=\"account\">No account? <a\r\n                      [routerLink]=\"['/register', isTutor? 'tutor': 'student']\">Register</a></div>\r\n                  <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loading\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                  </button>\r\n                </div>\r\n                <div class=\"promoter-log\">Login as <a [routerLink]=\"['/promoter/login']\">Promoter</a> Or with<a\r\n                    [routerLink]=\"['/authenticate']\">OTP</a> </div>\r\n                <!-- <div class=\"promoter-log\">Login With <a [routerLink]=\"['/promoter/login']\">OTP</a> </div> -->\r\n                <div *ngIf=\"submitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"card-body\" class=\"log-form-mr bg-white\" *ngIf=\"isForgot\">\r\n            <div class=\"card-header text-center bg-transparent border-0\">\r\n              <h2 class=\"m-2\">Reset Password</h2>\r\n            </div>\r\n            <form [formGroup]=\"passwordForm\" class=\"m-4\" (ngSubmit)=\"onpasswordSubmit()\">\r\n              <div class=\"form-group loginform\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"username\">Email</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">email</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"email\" formControlName=\"username\"\r\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.username.errors }\" />\r\n                  <div *ngIf=\"passwordsubmitted && p.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"p.username.errors.required\">Email is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group loginform\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">New Password</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">lock</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"password\" formControlName=\"password\"\r\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\r\n                  <div *ngIf=\"passwordsubmitted && p.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"p.password.errors.required\">Password is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group loginform\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"confirmPassword\">Confirm Password</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">lock</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"password\" formControlName=\"confirmPassword\"\r\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\r\n                  <div *ngIf=\"passwordsubmitted && p.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"p.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between text-white\">\r\n                <a class=\"btn btn-secondary\" type=\"submit\" (click)=\"isForgot = !isForgot\" role=\"button\">Login?</a>\r\n                <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loadforgot\">\r\n                  <span *ngIf=\"loadforgot\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              <div class=\"alert alert-success\" *ngIf=\"submitted && forgotMessage\">\r\n                <strong>Password Reset Succesful. Please go back to</strong><a (click)=\"isForgot = !isForgot\"\r\n                  class=\"alert-link\">login</a>\r\n              </div>\r\n              <div *ngIf=\"submitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport * as mapboxgl from 'mapbox-gl';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Demo } from 'src/app/_models/demo';\r\n\r\n@Component({\r\n  selector: 'app-mapcomponent',\r\n  templateUrl: './mapcomponent.component.html',\r\n  styleUrls: ['./mapcomponent.component.css']\r\n})\r\nexport class MapcomponentComponent implements OnInit {\r\n\r\n  map: mapboxgl.Map;\r\n  style = 'mapbox://styles/mapbox/streets-v11';\r\n  lat = 17.36667;\r\n  lng = 78.46667;\r\n\r\n  @Input()\r\n  markersdata: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.lat = position.coords.latitude;\r\n      this.lng = position.coords.longitude;\r\n    });\r\n    this.map = new mapboxgl.Map({\r\n      container: 'map',\r\n      style: this.style,\r\n      zoom: 13,\r\n      center: [this.lng, this.lat],\r\n      accessToken: environment.mapbox_accessToken,\r\n  });\r\n\r\n    console.log(this.markersdata);\r\n  // Add map controls\r\n    this.map.addControl(new mapboxgl.NavigationControl());\r\n    this.markersdata.forEach(x => {\r\n      if (x.event?.langitude > 0 && x.event?.latitude > 0 ){\r\n        const marker = new mapboxgl.Marker().setLngLat([Number(x.event?.langitude), Number(x.event?.latitude)]).addTo(this.map);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"map\" id=\"map\" class=\"match-parent\" ></div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { LocationModel } from 'src/app/_models/location';\r\nimport * as moment from 'moment';\r\nimport { Demo } from 'src/app/_models/demo';\r\nimport { StaticData } from 'src/app/_models/static';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-eventdetail',\r\n  templateUrl: './eventdetail.component.html',\r\n  styleUrls: ['./eventdetail.component.css']\r\n})\r\nexport class EventdetailComponent implements OnInit {\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: AuthserviceService,\r\n              private demoService: DemoService,\r\n              private staticData: StaticdataService,\r\n              public alertService: AlertService) { }\r\n\r\n  public demoForm: FormGroup;\r\n  public submitted = false;\r\n  isLoading;\r\n  locations: LocationModel[] = [];\r\n  message;\r\n  timestamps;\r\n  staticDataSet: StaticData;\r\n  levels = [];\r\n  alertOptions: {\r\n    autoClose: true,\r\n    keepAfterRouteChange: false\r\n  };\r\n  days = [\r\n    {day: 'Monday', selected: false, code: 'MO' },\r\n    {day: 'Tuesday', selected: false, code: 'TU' },\r\n    {day: 'Wednesday', selected: false, code: 'WE' },\r\n    {day: 'Thursday', selected: false, code: 'TH' },\r\n    {day: 'Friday', selected: false, code: 'FR' },\r\n    {day: 'Saturday', selected: false, code: 'SA' },\r\n    {day: 'Sunday', selected: false, code: 'SU' }\r\n  ];\r\n  allChecked = false;\r\n\r\n  @Output() returnEvent = new EventEmitter<boolean>();\r\n\r\n  ngOnInit(): void {\r\n    this.demoForm = this.formBuilder.group({\r\n      courseId : [''],\r\n      title : ['', Validators.required],\r\n      subject: ['', Validators.required],\r\n      courseDescription : ['', Validators.required],\r\n      startDate : [new Date(), Validators.required],\r\n      endDate : [new Date(), Validators.required],\r\n      startTime: ['', Validators.required],\r\n      endTime: ['', Validators.required],\r\n      credits : [''],\r\n      grade: ['', Validators.required],\r\n      departmentID : [''],\r\n      courseAssignments : [''],\r\n      enrollments : [''],\r\n      location: ['', Validators.required],\r\n      video: ['', Validators.required],\r\n      calendar: [''],\r\n      eventType: [''],\r\n      notificationtype: ['Email', Validators.required],\r\n      remaindertime: ['10', Validators.required],\r\n      timer: ['Minutes', Validators.required]\r\n    });\r\n\r\n    this.locationSearch();\r\n    this.subjectSearch();\r\n    this.getTimeLabels();\r\n  }\r\n\r\n\r\n  private locationSearch() {\r\n    this.demoForm\r\n      .get('location')\r\n      .valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(() => this.isLoading = true),\r\n        switchMap(value => this.staticData.searchLocations(value)\r\n          .pipe(\r\n            finalize(() => this.isLoading = false))\r\n        )\r\n      )\r\n      .subscribe((locs) => {\r\n        this.locations = [];\r\n        locs?.features?.forEach(element => {\r\n          const location: LocationModel = {\r\n            locationId: element.id,\r\n            locationName: element.place_name,\r\n            langitude: element.geometry?.coordinates[0],\r\n            latitude: element.geometry?.coordinates[1]\r\n          };\r\n          this.locations.push(location);\r\n        });\r\n      });\r\n  }\r\n\r\n  private subjectSearch() {\r\n    this.staticData.getStaticDataSets().subscribe(x => { this.staticDataSet = x;\r\n                                                         x.subjects.forEach(y => {\r\n                                                         this.levels.push(y.level);\r\n      });\r\n     });\r\n  }\r\n\r\n  getTimeLabels(){\r\n    const times = (desiredStartTime, interval, period) => {\r\n      const periodsInADay = moment.duration(1, 'day').as(period);\r\n      const timeLabels = [];\r\n      const startTimeMoment = moment(desiredStartTime, 'hh:mm');\r\n      for (let i = 0; i <= periodsInADay; i += interval) {\r\n        startTimeMoment.add(i === 0 ? 0 : interval, period);\r\n        timeLabels.push(startTimeMoment.format('hh:mm A'));\r\n      }\r\n      return timeLabels;\r\n    };\r\n    this.timestamps = times('00:00', 15, 'minutes');\r\n  }\r\n\r\n  displayLoc(loc): string {\r\n    return loc ? loc.locationName : '';\r\n  }\r\n\r\n  get demoFormControls() { return this.demoForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    console.log(this.demoFormControls.location.value);\r\n    if (this.demoForm.valid)\r\n    {\r\n      const demodata: Demo = {\r\n        title: this.demoFormControls.title.value,\r\n        courseId: null,\r\n        credits: 0,\r\n        departmentID: null,\r\n        subject: this.demoFormControls.subject.value,\r\n        grade: this.demoFormControls.grade.value,\r\n        courseDescription: this.demoFormControls.courseDescription.value,\r\n        startDate: this.demoFormControls.startDate.value,\r\n        endDate: this.demoFormControls.endDate.value,\r\n        startTime: this.demoFormControls.startTime.value,\r\n        endTime: this.demoFormControls.endTime.value,\r\n        ownerId: Number.parseInt(this.authService.userValue.id, 10),\r\n        // courseAssignments: [{\r\n        //   instructorID: this.authService.userValue.id,\r\n        //   courseID: null\r\n        // }],\r\n        enrollments: [],\r\n        locationName: this.demoFormControls.location.value.locationName,\r\n        locationId: this.demoFormControls.location.value.locationId,\r\n        langitude: this.demoFormControls.location.value.langitude,\r\n        latitude: this.demoFormControls.location.value.latitude,\r\n        // calendarEvent: {\r\n        //   summary: this.demoFormControls.title.value,\r\n        //   location: this.demoFormControls.location.value.locationName,\r\n        //   description: this.demoFormControls.courseDescription.value,\r\n        //   timeZone: 'Asia/Calcutta',\r\n        //   start: this.getDateforTimes(this.demoFormControls.startDate.value, this.demoFormControls.startTime.value),\r\n        //   end: this.getDateforTimes(this.demoFormControls.startDate.value, this.demoFormControls.endTime.value),\r\n        //   recurrence: this.createRecurrance(),\r\n        //   attendees: [\r\n        //     this.authService.userValue.email\r\n        //   ],\r\n        //   organizer: null,\r\n        // },\r\n        isDemo: this.demoFormControls.eventType.value === 'Demo',\r\n        isOnline: this.demoFormControls.video.value,\r\n        selectedDays: this.days.filter(x => x.selected).map(x => x.day).join(','),\r\n      };\r\n\r\n      this.demoService.createDemo(demodata).subscribe((x: Demo) => {\r\n        if (x?.courseId !== (null || undefined)){\r\n          this.alertService.success('Succesfully Created Event', this.alertOptions);\r\n          this.gotoList();\r\n        }\r\n        else{\r\n          this.alertService.error('Unable to Create Event', this.alertOptions);\r\n        }\r\n      },\r\n     (error) => this.alertService.error(error, this.alertOptions));\r\n    }\r\n  }\r\n\r\n  getDateforTimes(date: Date, time){\r\n    const Year = Number(date.getFullYear());\r\n    const Month = Number(date.getMonth());\r\n    const Day = Number(date.getDate());\r\n\r\n    const paseddate =   this.parseDaytime(time);\r\n    const convertedDate = new Date(Year, Month, Day, paseddate[0], paseddate[1]);\r\n    console.log(convertedDate);\r\n    return convertedDate;\r\n  }\r\n\r\n  dayDiff(d1: Date, d2: Date)\r\n  {\r\n    const diff = Math.abs(d1.getTime() - d2.getTime());\r\n    const diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n   parseDaytime(converttime) {\r\n    const dtime = converttime.split(':');\r\n    let hours = dtime[0];\r\n    const minutes = dtime[1].split(' ')[0];\r\n    if (converttime.includes('pm') && hours !== 12) { hours += 12; }\r\n    return [hours, minutes];\r\n  }\r\n\r\n  resetForm(){\r\n    this.demoForm.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  cancelForm(){\r\n    this.demoForm.reset();\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList(){\r\n    this.returnEvent.emit(true);\r\n  }\r\n\r\n  changeAll(check){\r\n    this.allChecked = check;\r\n    if (this.days == null) {\r\n      return;\r\n    }\r\n    this.days.forEach(t => {\r\n      if (check === true){\r\n        t.selected = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  changeDays(check, day){\r\n    day.selected = check;\r\n    this.allChecked = this.days.filter(t => t.selected).length > 0 ? false : this.allChecked;\r\n  }\r\n\r\n  dateChanged(){\r\n    if (this.demoFormControls.startDate.valid && this.demoFormControls.endDate.valid){\r\n      const diff = this.demoFormControls.endDate.value.getTime() - this.demoFormControls.startDate.value.getTime();\r\n      console.log(diff);\r\n      if (diff < 0){\r\n        this.demoFormControls.endDate.setErrors({lesserdate: true});\r\n      }\r\n    }\r\n  }\r\n\r\n  createRecurrance(){\r\n    const count = this.dayDiff(this.demoFormControls.startDate.value,\r\n      this.demoFormControls.endDate.value);\r\n    const frequency = 'WEEKLY';\r\n    let result = [];\r\n    const byday = this.allChecked ? this.days.forEach(x => {\r\n      result = result.concat(x.code);\r\n    }) :  this.days.filter(x => x.selected).forEach(x => {\r\n      result = result.concat(x.code);\r\n    });\r\n\r\n    return result.length > 0 ? ['RRULE:FREQ=WEEKLY;COUNT=' + count + ';BYDAY=' + result.join(',')] : ['RRULE:FREQ=WEEKLY;COUNT=' + count];\r\n  }\r\n\r\n}\r\n\r\n\r\n// [{\r\n//   enrollmentID: 0,\r\n//   courseID: null,\r\n//   studentID: this.authService.userValue.id\r\n// }]\r\n","<form [formGroup]=\"demoForm\" class=\"demoform rounded\" (submit)=\"onSubmit()\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header bg-primary\">\r\n        <div class=\"d-flex\">\r\n            <a (click)=\"gotoList()\">\r\n                <mat-icon>west</mat-icon>\r\n              </a>\r\n              <h2 class=\"my-event\">\r\n                Schedule an Event\r\n              </h2>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label for=\"title\">Title</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"title\" id=\"title\" placeholder=\"Demo Title\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.title.errors }\">\r\n            <div *ngIf=\"submitted && demoFormControls.title.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.title.errors.required\">Title is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label for=\"subject\">Subject</mat-label>\r\n            <!-- <input matInput type=\"text\" formControlName=\"subject\" id=\"subject\" placeholder=\"Course/Subject\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.subject.errors }\"> -->\r\n              <mat-select placeholder=\"Subject\" formControlName=\"subject\" name=\"subject\" id=\"subject\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.subject.errors }\">\r\n                <mat-option *ngFor=\"let item of staticDataSet?.subjects\" [value]=\"item.name\">\r\n                  {{item.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            <div *ngIf=\"submitted && demoFormControls.title.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.title.errors.required\">Subject is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field  appearance=\"outline\">\r\n            <mat-label>Enter a date range</mat-label>\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n              <input matStartDate placeholder=\"Start date\" formControlName=\"startDate\">\r\n              <input matEndDate placeholder=\"End date\" formControlName=\"endDate\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field class=\"w-50 pl-1\" appearance=\"outline\">\r\n            <mat-label for=\"startTime\">Start Time</mat-label>\r\n            <mat-select formControlName=\"startTime\" id=\"startTime\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.startTime.errors }\">\r\n              <mat-option *ngFor=\"let timestamp of timestamps\" [value]=\"timestamp\">\r\n                {{timestamp}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <div *ngIf=\"submitted && demoFormControls.startTime.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.startTime.errors.required\">Start Time is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-50 pl-1\" appearance=\"outline\">\r\n            <mat-label for=\"endTime\">End Time</mat-label>\r\n            <mat-select formControlName=\"endTime\" id=\"endTime\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.endTime.errors }\">\r\n              <mat-option *ngFor=\"let timestamp of timestamps\" [value]=\"timestamp\">\r\n                {{timestamp}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <div *ngIf=\"submitted && demoFormControls.endTime.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.endTime.errors.required\">End Time is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"card event-bg\">\r\n        <div class=\"card-header\">\r\n          Event Details\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-6\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"location\">Where</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"location\" id=\"location\" [matAutocomplete]=\"loc\"\r\n                  placeholder=\"Where\" [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.location.errors }\">\r\n                <mat-autocomplete #loc=\"matAutocomplete\" [displayWith]=\"displayLoc\">\r\n                  <mat-option *ngFor=\"let location of locations\" [value]=\"location\">\r\n                    {{location.locationName}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <div *ngIf=\"submitted && demoFormControls.location.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"demoFormControls.location.errors.required\">Location is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group col-md-6\">\r\n                <mat-label>Which days are you able to tutor?</mat-label>\r\n                <section class=\"m-1\">\r\n                  <mat-checkbox class=\"day-margin\" [checked]=\"allChecked\" (change)=\"changeAll($event.checked)\">All\r\n                  </mat-checkbox>\r\n                  <mat-checkbox class=\"day-margin\" [checked]=\"day.selected\" (change)=\"changeDays($event.checked, day)\"\r\n                    *ngFor=\"let day of days\">{{day.day | slice:0:3}}</mat-checkbox>\r\n                </section>\r\n\r\n              <!-- <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"video\">Online?</mat-label>\r\n                <mat-select formControlName=\"video\" id=\"video\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.video.errors }\">\r\n                  <mat-option selected=\"selected\" value=\"Yes\">Yes</mat-option>\r\n                  <mat-option value=\"No\">No</mat-option>\r\n                </mat-select>\r\n              </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"grade\">Level/Grade</mat-label>\r\n                <!-- <input type=\"text\" formControlName=\"grade\" matInput id=\"grade\" placeholder=\"Grade\"> -->\r\n                <mat-select placeholder=\"Grade\" formControlName=\"grade\" name=\"grade\" id=\"grade\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.grade.errors }\">\r\n                  <mat-option *ngFor=\"let item of levels\" [value]=\"item\">\r\n                    {{item}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                </mat-form-field>\r\n                </div>\r\n            <div class=\"form-group col-md-3\">\r\n              <!-- <mat-label class=\"d-flex\">Event Type</mat-label> -->\r\n              <mat-radio-group formControlName=\"eventType\">\r\n                <mat-radio-button value=\"Demo\">Demo</mat-radio-button>\r\n                <mat-radio-button value=\"Tution\">Tution</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div class=\"form-group col-md-3\">\r\n              <mat-radio-group formControlName=\"video\">\r\n                <mat-radio-button value=\"true\">Online</mat-radio-button>\r\n                <mat-radio-button value=\"false\">Offline</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-12\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"courseDescription\">Description</mat-label>\r\n                <textarea matInput formControlName=\"courseDescription\" id=\"courseDescription\"\r\n                  placeholder=\"Description\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-6\">\r\n              Notifications:\r\n              <mat-select class=\"w-20\" formControlName=\"notificationtype\" id=\"notificationtype\">\r\n                <mat-option selected=\"selected\" value=\"None\">None</mat-option>\r\n                <mat-option value=\"Email\">Email</mat-option>\r\n                <mat-option value=\"Phone\">Phone</mat-option>\r\n              </mat-select>\r\n              <mat-select class=\"w-20\" formControlName=\"remaindertime\" id=\"remaindertime\">\r\n                <mat-option selected=\"selected\" value=\"0\">0</mat-option>\r\n                <mat-option value=\"0.5\">0.5</mat-option>\r\n                <mat-option value=\"1\">1</mat-option>\r\n                <mat-option value=\"5\">5</mat-option>\r\n                <mat-option value=\"10\">10</mat-option>\r\n                <mat-option value=\"15\">15</mat-option>\r\n                <mat-option value=\"20\">20</mat-option>\r\n              </mat-select>\r\n              <mat-select class=\"w-20\" formControlName=\"timer\" id=\"timer\">\r\n                <mat-option selected=\"selected\" value=\"None\">None</mat-option>\r\n                <mat-option value=\"Minutes\">Minutes</mat-option>\r\n                <mat-option value=\"Hours\">Hours</mat-option>\r\n                <mat-option value=\"Days\">Days</mat-option>\r\n              </mat-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-footer bg-light\">\r\n      <mat-card-actions class=\"footer-buttons clearfix\">\r\n        <button mat-raised-button (click)=\"resetForm()\" type=\"reset\" color=\"secondary\" class=\"m-2\">Reset</button>\r\n        <div class=\"float-right\">\r\n          <button mat-raised-button color=\"secondary\" (click)=\"cancelForm()\" class=\"m-2\">Cancel</button>\r\n          <button mat-raised-button type=\"submit\" color=\"accent\" class=\"m-2\">Send Invite</button>\r\n        </div>\r\n      </mat-card-actions>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable, Input } from '@angular/core';\r\n// import { BlobServiceClient, AnonymousCredential, newPipeline} from '@azure/storage-blob';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileuploaderService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  uploadFile(file){\r\n    const header = new HttpHeaders();\r\n    header.set('Accept', 'application/json');\r\n    header.delete('Content-Type');\r\n    return this.http.put<any>(`${environment.apiUrl}/files/upload`, file, {headers: header});\r\n  }\r\n\r\n  downloadFile(filename){\r\n    return this.http.get<any>(`${environment.apiUrl}/files/DownloadFile/` + filename);\r\n  }\r\n\r\n  listFiles(){\r\n    return this.http.get<any>(`${environment.apiUrl}/files/listfiles`);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {\r\n  Assignment, StudentAssignment\r\n} from 'src/app/_models/assignment';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { FileuploaderService } from 'src/app/_services/fileuploader.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { Demo } from 'src/app/_models/demo';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { StaticData } from 'src/app/_models/static';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-assignmentdetail',\r\n  templateUrl: './assignmentdetail.component.html',\r\n  styleUrls: ['./assignmentdetail.component.css']\r\n})\r\nexport class AssignmentdetailComponent implements OnInit {\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private fileUploader: FileuploaderService,\r\n              private staticdataService: StaticdataService,\r\n              public alertService: AlertService) {}\r\n\r\n  public assignmentForm: FormGroup;\r\n  public submitted = false;\r\n  success = null;\r\n  files: any[] = [];\r\n  imagepath;\r\n  uploadedFile;\r\n  staticData: StaticData;\r\n  levels;\r\n  subjects;\r\n\r\n  @Input()\r\n  course: Demo;\r\n\r\n  @Input()\r\n  students: any[] = [];\r\n\r\n  @Output()\r\n  assignmentCreated = new EventEmitter<boolean>();\r\n\r\n\r\n  menuItems = [{\r\n      id: 0,\r\n      value: 'Assignment',\r\n      icon: 'assignment_turned_in'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Quiz Assignment',\r\n      icon: 'batch_prediction'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Question',\r\n      icon: 'help'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Material',\r\n      icon: 'menu_book'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Topic',\r\n      icon: 'local_library'\r\n    },\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this.assignmentForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      topic: ['', Validators.required],\r\n      subject: ['', Validators.required],\r\n      grade: ['', Validators.required],\r\n      points: ['', Validators.required],\r\n      dueDate: ['', Validators.required],\r\n      instructions: [''],\r\n      assignmentFile: ['', Validators.required],\r\n    });\r\n\r\n    this.staticdataService.getStaticDataSets()\r\n      .subscribe(x => {\r\n        this.staticData = x;\r\n        this.levels = this.staticData.groups;\r\n        this.subjects = x.subjects.filter((thing, i, arr) => arr.findIndex(t => t.name === thing.name) === i);\r\n      });\r\n  }\r\n\r\n  get f() {\r\n    return this.assignmentForm.controls;\r\n  }\r\n\r\n  dropped(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  fileBrowse(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.assignmentForm.valid) {\r\n      const assignment: Assignment = {\r\n        title: this.f.title.value,\r\n        topic: this.f.topic.value,\r\n        instructorId: this.authService.userValue.id,\r\n        subject: this.f.subject.value,\r\n        grade: this.f.grade.value,\r\n        points: this.f.points.value,\r\n        startDate: new Date(),\r\n        dueDate: this.f.dueDate.value,\r\n        instructions: this.f.instructions.value,\r\n        assignmentFile: null,\r\n        questionSetId: 0,\r\n        courseId: this.course?.courseId,\r\n        studentAssignments: null,\r\n      };\r\n\r\n      this.uploadFile(this.files).then(event => {\r\n        assignment.assignmentFile = event.filepath;\r\n        this.courseService.createAssignment(assignment).subscribe(x => {\r\n          if (x.assignmentId >= 0){\r\n            this.success = 'Created Assignment Succesfully';\r\n            this.assignmentCancelled();\r\n          }\r\n          else{\r\n            this.success = 'Unable to Create Assignment at this time';\r\n          }\r\n        }, (error) => {\r\n          this.alertService.error('Unable to Create Assignment at this time');\r\n        });\r\n    });\r\n    }\r\n  }\r\n\r\n  getStudentAssignments(){\r\n    const studentsList: StudentAssignment[] = [];\r\n    this.students.forEach(x => {\r\n      if (x !== null){\r\n        const assignment: StudentAssignment = { userId : x.id };\r\n        studentsList.push(assignment);\r\n      }\r\n    });\r\n    return studentsList;\r\n  }\r\n\r\n  prepareFilesList(files: Array<any>) {\r\n    for (const item of files) {\r\n      item.progress = 0;\r\n      this.files.push(item);\r\n    }\r\n    console.log(this.files[0]);\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.imagepath = e.target.result;\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n    this.uploadFilesSimulator(0);\r\n  }\r\n\r\n  uploadFilesSimulator(index: number) {\r\n    setTimeout(() => {\r\n      if (index === this.files.length) {\r\n        return;\r\n      } else {\r\n        const progressInterval = setInterval(() => {\r\n          if (this.files[index].progress === 100) {\r\n            clearInterval(progressInterval);\r\n            this.uploadFilesSimulator(index + 1);\r\n          } else {\r\n            this.files[index].progress += 5;\r\n          }\r\n        }, 200);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n    const k = 1024;\r\n    const dm = decimals <= 0 ? 0 : decimals || 2;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  uploadFile(files) {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const fileToUpload =  files[0] as File;\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    return this.fileUploader.uploadFile(formData)\r\n      .toPromise();\r\n  }\r\n\r\n  assignmentCancelled(){\r\n    this.assignmentCreated.emit(true);\r\n  }\r\n\r\n}\r\n","<mat-card class=\"m-2\">\r\n  <form [formGroup]=\"assignmentForm\" (submit)=\"onSubmit()\">\r\n    <mat-card-content class=\"text-center\">\r\n      <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"success && submitted\">{{success}}</div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Exam Title</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"title\" id=\"title\" placeholder=\"Exam Title\">\r\n            <mat-icon matPrefix>queue_play_next</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Exam Topic</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"topic\" id=\"topic\" placeholder=\"topic\">\r\n            <mat-icon matPrefix>chrome_reader_mode</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Subject</mat-label>\r\n            <mat-select id=\"subject\" formControlName=\"subject\">\r\n              <mat-option>None</mat-option>\r\n              <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject.name\">\r\n                {{subject.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-icon matPrefix>subject</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Grade/Standard</mat-label>\r\n            <mat-select id=\"grade\" formControlName=\"grade\">\r\n              <mat-option>None</mat-option>\r\n              <mat-option *ngFor=\"let level of levels\" [value]=\"level.groupId\">\r\n                Grade - {{level.groupName}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-icon matPrefix>class</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Points</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"points\" id=\"points\" placeholder=\"Points\">\r\n            <mat-icon matPrefix>grading</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Due Date</mat-label>\r\n            <input matInput formControlName=\"dueDate\" id=\"dueDate\" [matDatepicker]=\"picker\" placeholder=\"Due Date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Instructions (Optional)</mat-label>\r\n          <textarea matInput placeholder=\"Instructions (Optional)\" matInput formControlName=\"instructions\"\r\n            id=\"instructions\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"container\" appDragndir (fileDropped)=\"dropped($event)\">\r\n        <input type=\"file\" class=\"fileinput\" #fileDropRef id=\"fileDropRef\" formControlName=\"assignmentFile\"\r\n          (change)=\"fileBrowse($event.target.files)\" />\r\n        <h3 class=\"text-dark\">Drag and Drop the file</h3>\r\n      </div>\r\n      <div class=\"info\">\r\n        <h4 class=\"name\">\r\n          {{ files[0]?.name }}\r\n        </h4>\r\n        <p class=\"size\" *ngIf=\"files.length>0\">\r\n          {{files[0]?.progress}}% of {{ formatBytes(files[0]?.size,0) }}\r\n        </p>\r\n        <mat-progress-bar mode=\"buffer\" [color]=\"'primary'\" [value]=\"files[0]?.progress\"\r\n          [bufferValue]=\"files[0]?.progress\">\r\n        </mat-progress-bar>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-footer>\r\n      <button class=\"ml-2 btn btn-md\" type=\"reset\" (click)=\"assignmentForm.reset()\" mat-raised-button>Reset</button>\r\n      <span class=\"float-right\">\r\n        <button class=\"mr-2 btn btn-md\" color=\"warn\" (click)=\"assignmentCancelled()\" mat-raised-button>Cancel</button>\r\n        <button class=\"mr-2 btn btn-md\" color=\"accent\" type=\"submit\" mat-raised-button>Save</button>\r\n      </span>\r\n      <mat-card-actions>\r\n      </mat-card-actions>\r\n    </mat-card-footer>\r\n  </form>\r\n</mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AuthserviceService } from './authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Calendar, CalendarResponse } from '../_models/calendar';\r\nimport { Demo } from '../_models/demo';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseService {\r\n\r\n  constructor(private http: HttpClient, private authService: AuthserviceService) {\r\n  }\r\n\r\n  getAllCourses(){\r\n    return this.http.get<any>(`${environment.apiUrl}/courses/allcourses`);\r\n  }\r\n\r\n  getAllCoursesByUser(userid){\r\n      const options = userid ? { params: new HttpParams().set('id', userid)} : {};\r\n      return this.http.get<Demo[]>(`${environment.apiUrl}/vevent/byuser`, options);\r\n  }\r\n\r\n  getAllCoursesByloggedUser(){\r\n  }\r\n\r\n  createCourse(course){\r\n    return this.http.post<any>(`${environment.apiUrl}/courses​/create`, course);\r\n  }\r\n\r\n  getCalendars(){\r\n    return this.http.get<any>(`${environment.apiUrl}/Calendar`);\r\n  }\r\n\r\n  getCalendarById(userId){\r\n    return this.http.get<CalendarResponse>(`${environment.apiUrl}/Calendar`);\r\n  }\r\n\r\n  createCalendar(calendar){\r\n    return this.http.post<any>(`${environment.apiUrl}/Calendar`, calendar);\r\n  }\r\n\r\n  createAssignment(assignment){\r\n    return this.http.post<any>(`${environment.apiUrl}/assignment`, assignment, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  addstudentstoassignment(assignments){\r\n    return this.http.post<any>(`${environment.apiUrl}/studentassignments`, assignments, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getAssignmentByTutor(userId){\r\n    const options = userId ?\r\n      { params: new HttpParams().set('id', userId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/assignment/bytutor`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n\r\n  getAssignmentByUser(userId){\r\n    const options = userId ?\r\n      { params: new HttpParams().set('id', userId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/assignment`, options);\r\n  }\r\n\r\n  getStudentAssignments(userId){\r\n    return this.http.get<any>(`${environment.apiUrl}/studentassignments/bystudent`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', userId)\r\n    });\r\n  }\r\n\r\n  updateStudentAssignments(assignment){\r\n    return this.http.put<any>(`${environment.apiUrl}/studentassignments`, assignment, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getTutorStudentAssignments(userId){\r\n    return this.http.get<any>(`${environment.apiUrl}/studentassignments/bytutor`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', userId)\r\n    });\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport {\r\n  UserService\r\n} from 'src/app/_services/user.service';\r\nimport {\r\n  User\r\n} from 'src/app/_models/user';\r\nimport {\r\n  StaticdataService\r\n} from 'src/app/_services/staticdata.service';\r\nimport {\r\n  StaticData\r\n} from 'src/app/_models/static';\r\nimport {\r\n  WeekDay,\r\n  formatDate\r\n} from '@angular/common';\r\nimport {\r\n  Profile\r\n} from 'src/app/_models/profile';\r\nimport {\r\n  HttpEventType\r\n} from '@angular/common/http';\r\nimport {\r\n  FileuploaderService\r\n} from 'src/app/_services/fileuploader.service';\r\nimport {\r\n  read\r\n} from 'fs';\r\nimport {\r\n  EventEmitter\r\n} from 'protractor';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\nimport {\r\n  format\r\n} from 'date-fns/fp';\r\nimport {\r\n  MatDialog\r\n} from '@angular/material/dialog';\r\nimport {\r\n  ProfilemodelComponent\r\n} from '../profilemodel/profilemodel.component';\r\nimport {\r\n  AlertService\r\n} from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  user: User;\r\n  profile: User;\r\n  staticData: StaticData;\r\n  public submitted = false;\r\n  proof;\r\n  successmessage = false;\r\n  proofdocument;\r\n  uploadedFile;\r\n  levels;\r\n  subjects;\r\n\r\n  days = [{\r\n      day: 'Monday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Tuesday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Wednesday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Thursday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Friday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Saturday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Sunday',\r\n      selected: false\r\n    }\r\n  ];\r\n  allChecked = false;\r\n\r\n  qualifications = [{\r\n      id: 1,\r\n      value: 'No High School'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'Some High School'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'High School Diploma or GED'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: 'Associate Degree'\r\n    },\r\n    {\r\n      id: 5,\r\n      value: 'Bachelors'\r\n    },\r\n    {\r\n      id: 6,\r\n      value: 'Masters'\r\n    },\r\n    {\r\n      id: 7,\r\n      value: 'Post Grad'\r\n    },\r\n    {\r\n      id: 8,\r\n      value: 'Doctorate'\r\n    },\r\n    {\r\n      id: 9,\r\n      value: 'Professional Degree'\r\n    },\r\n    {\r\n      id: 9,\r\n      value: 'Professional Certificate'\r\n    },\r\n  ];\r\n\r\n  nacategories = [{\r\n      id: 0,\r\n      value: 'Music',\r\n      subcategories: [{\r\n          id: 0,\r\n          value: 'Classical Music'\r\n        },\r\n        {\r\n          id: 1,\r\n          value: 'Tabla'\r\n        },\r\n        {\r\n          id: 2,\r\n          value: 'Piano'\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      id: 1,\r\n      value: 'Cricket',\r\n      subcategories: [{\r\n          id: 0,\r\n          value: 'Batsmen'\r\n        },\r\n        {\r\n          id: 1,\r\n          value: 'Bowler'\r\n        },\r\n        {\r\n          id: 2,\r\n          value: 'Wicket keeper'\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'Tennis',\r\n      subcategories: [{\r\n          id: 0,\r\n          value: 'Batsmen'\r\n        },\r\n        {\r\n          id: 1,\r\n          value: 'Bowler'\r\n        },\r\n        {\r\n          id: 2,\r\n          value: 'Wicket keeper'\r\n        },\r\n      ]\r\n    },\r\n  ];\r\n\r\n  nasubcategories = [{\r\n      id: 1,\r\n      value: 'Music'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'Cricket'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'Tennis'\r\n    },\r\n  ];\r\n\r\n  agegroups = [{\r\n      id: 1,\r\n      value: '5 to 10'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: '11 to 19'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: '20 to 35'\r\n    }\r\n  ];\r\n\r\n  @ViewChild('fileInput', {\r\n    static: false\r\n  }) fileInput: ElementRef;\r\n  files = [];\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private userService: UserService,\r\n              private staticdataService: StaticdataService,\r\n              private fileUploader: FileuploaderService,\r\n              public authService: AuthserviceService,\r\n              public dialog: MatDialog,\r\n              public alertService: AlertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userForm = this.formBuilder.group({\r\n      firstname: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      lastname: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      profilemail: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      profilephone: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      password: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      gender: [{\r\n        value: '',\r\n        disabled: false\r\n      }, Validators.required],\r\n      birthdate: [{\r\n        value: '',\r\n        disabled: false\r\n      }, Validators.required],\r\n      profilePic: [`assets/profile-pic.svg`],\r\n      streetAddress1: ['', Validators.required],\r\n      streetAddress2: [''],\r\n      inputCity: ['', Validators.required],\r\n      stateCode: ['', Validators.required],\r\n      inputPin: ['', Validators.required],\r\n      national: ['', Validators.required],\r\n      backgroundtype: ['', Validators.required],\r\n      medium: ['', Validators.required],\r\n      subject: ['', Validators.required],\r\n      board: [''],\r\n      standard: [''],\r\n      qualification: [''],\r\n      isteacher: [''],\r\n      tutorexp: [''],\r\n      tutorpreference: [''],\r\n      dayselection: [''],\r\n      distance: [''],\r\n      timing: [''],\r\n      rate: [''],\r\n      currency: [''],\r\n      proof: [''],\r\n      proofDoc: [''],\r\n      demo: [''],\r\n      interests: [''],\r\n      nacategory: [''],\r\n      nasubcategory: [''],\r\n      agegroup: [''],\r\n      certification: [''],\r\n    });\r\n    this.getUser();\r\n    this.staticdataService.getStaticDataSets()\r\n      .subscribe(x => {\r\n        this.staticData = x;\r\n        this.levels = this.staticData.groups;\r\n        this.subjects = x.subjects.filter((thing, i, arr) => arr.findIndex(t => t.name === thing.name) === i);\r\n      });\r\n  }\r\n\r\n  getUser() {\r\n    const currentUser: User = this.authService.userValue;\r\n    this.userService.get(currentUser.id).subscribe(data => {\r\n      this.user = data;\r\n      this.updateFormValus(data);\r\n    });\r\n    return currentUser;\r\n  }\r\n\r\n  get f() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  fileread(callback) {\r\n    const file = this.f.proofDoc.value;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (() => {\r\n      callback(reader.result);\r\n    });\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.userForm.valid) {\r\n      const userValues = {\r\n        id: this.profile.id,\r\n        firstName: this.f.firstname.value,\r\n        lastName: this.f.lastname.value,\r\n        email: this.f.profilemail.value,\r\n        phone: this.f.profilephone.value,\r\n        profilePic: this.f.profilePic.value,\r\n        address: {\r\n          addressType: '1',\r\n          addressId: this.profile.address ? this.profile.address.addressId : 0,\r\n          address1: this.f.streetAddress1.value,\r\n          address2: this.f.streetAddress2.value,\r\n          city: this.f.inputCity.value,\r\n          pinCode: this.f.inputPin.value,\r\n          stateCd: this.f.stateCode.value,\r\n          id: this.profile.id,\r\n          countryCd: 'IND',\r\n        },\r\n        accountDetails: {\r\n          id: this.profile.accountDetails ? this.profile.id : 0,\r\n          profilePic: this.f.profilePic.value === `assets/profile-pic.svg` ? null : this.f.profilePic.value,\r\n          sex: this.f.gender.value,\r\n          dateOfBirth: this.f.birthdate.value,\r\n          enrollmentDate: new Date(),\r\n          naCategory: this.f.nacategory.value,\r\n          naSubCategory: this.f.nasubcategory.value,\r\n          ageGroup: this.f.agegroup.value,\r\n          certification: this.f.certification.value,\r\n          board: this.f.board.value.join(','),\r\n          academyTypeId: (this.f.backgroundtype.value === undefined || this.f.backgroundtype.value === null)\r\n                                                      ? 0 : Number.parseInt(this.f.backgroundtype.value, 10),\r\n          subjects: this.f.subject.value.join(','),\r\n          level: this.f.standard.value.join(','),\r\n          isTutorBefore: this.f.isteacher.value === undefined ? false : this.f.isteacher.value,\r\n          professionalDescription: this.f.tutorexp.value,\r\n          highestEducation: this.f.qualification.value,\r\n          preference: this.f.tutorpreference.value,\r\n          availableDays: this.days.filter(x => x.selected === true).map(x => x.day).join(','),\r\n          preferredDistance: this.f.distance.value === undefined || this.f.distance.value === null\r\n                                                  ? 0 : Number.parseInt(this.f.distance.value, 10),\r\n          preferredTimeSlot: this.f.timing.value,\r\n          hourlyRate: this.f.rate.value === undefined || this.f.rate.value === null ? 0 :  Number.parseInt(this.f.rate.value, 10),\r\n          currency: this.f.currency.value,\r\n          idType: this.f.proof.value,\r\n          idDoc: this.f.proofDoc.value,\r\n          demoLink: this.f.demo.value,\r\n          intersets: this.f.interests.value,\r\n          medium: this.f.medium.value.join(',')\r\n        },\r\n      };\r\n      this.userService.updateProfileData(userValues)\r\n        .subscribe((x: User) => {\r\n            if (x !== (null || undefined)) {\r\n              this.alertService.success('Profile Updated Succesfully');\r\n            } else {\r\n              this.alertService.error('Profile is not Updated');\r\n            }\r\n          },\r\n          (error) => this.alertService.error(error));\r\n    }\r\n  }\r\n\r\n  getByteArray(file) {\r\n\r\n  }\r\n\r\n  updateFormValus(user: User) {\r\n    this.profile = user;\r\n    const available = user?.accountDetails?.availableDays?.split(',');\r\n    this.days.forEach(a => {\r\n      if (available ?.some(y => y === a.day)) {\r\n        a.selected = true;\r\n      }\r\n    });\r\n    this.userForm.patchValue({\r\n      firstname: user?.firstName,\r\n      lastname: user?.lastName,\r\n      profilemail: user?.email,\r\n      profilephone: user?.phone,\r\n      password: null,\r\n      gender: user?.accountDetails?.sex,\r\n      birthdate: user?.accountDetails?.dateOfBirth ? formatDate(user?.accountDetails?.dateOfBirth, 'yyyy-MM-dd', 'en-us') : null,\r\n      profilePic: user?.accountDetails ?.profilePic === null ? `assets/profile-pic.svg` : user?.accountDetails?.profilePic,\r\n      streetAddress1: user?.address?.address1,\r\n      streetAddress2: user?.address?.address2,\r\n      inputCity: user?.address?.city,\r\n      stateCode: user?.address?.stateCd,\r\n      inputPin: user?.address?.pinCode,\r\n      national: user?.address?.countryCd,\r\n      backgroundtype: user?.accountDetails?.academyTypeId.toString(),\r\n      medium: user?.accountDetails?.medium.split(','),\r\n      subject: user?.accountDetails?.subjects.split(','),\r\n      board: user?.accountDetails?.board.split(','),\r\n      standard: user?.accountDetails?.level.split(',').map(x => Number.parseInt(x, 10)),\r\n      qualification: user?.accountDetails?.highestEducation,\r\n      isteacher: (user?.accountDetails?.isTutorBefore) ? 'true' : 'false',\r\n      tutorexp: user?.accountDetails?.professionalDescription,\r\n      tutorpreference: user?.accountDetails?.preference,\r\n      dayselection: user?.accountDetails?.availableDays,\r\n      distance: user?.accountDetails?.preferredDistance,\r\n      timing: user?.accountDetails?.preferredTimeSlot,\r\n      rate: user?.accountDetails?.hourlyRate,\r\n      currency: user?.accountDetails?.currency,\r\n      proof: user?.accountDetails?.idType,\r\n      demo: user?.accountDetails?.demoLink,\r\n      interests: user?.accountDetails?.intersets,\r\n      agegroup: user?.accountDetails?.ageGroup,\r\n      certification: user?.accountDetails?.certification,\r\n      nacategory: user?.accountDetails?.naCategory,\r\n      nasubcategory: user?.accountDetails?.naSubCategory,\r\n    });\r\n  }\r\n\r\n  callUploadService(file) {}\r\n\r\n  uploadFile(files, type) {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const fileToUpload = files[0] as File;\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    const filepath = this.fileUploader.uploadFile(formData)\r\n      .subscribe(event => {\r\n        if (type === 0) {\r\n          this.uploadedFile = event.filepath;\r\n          this.userForm.get('profilePic').setValue(this.uploadedFile);\r\n        } else {\r\n          this.proofdocument = event.filepath;\r\n          this.userForm.get('proofDoc').setValue(this.proofdocument);\r\n        }\r\n      });\r\n  }\r\n\r\n  onClick() {\r\n    const fileInput = this.fileInput.nativeElement;\r\n    fileInput.onchange = () => {};\r\n    fileInput.click();\r\n  }\r\n\r\n  changeDays(checker, day) {\r\n    day.selected = checker;\r\n    this.allChecked = this.days.filter(t => t.selected).length > 0 ? false : this.allChecked;\r\n  }\r\n\r\n  changeAll(completed: boolean) {\r\n    this.allChecked = completed;\r\n    if (this.days == null) {\r\n      return;\r\n    }\r\n    this.days.forEach(t => {\r\n      if (completed === true) {\r\n        t.selected = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(ProfilemodelComponent, {\r\n      width: '350px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result !== null && result !== undefined) {\r\n        this.userForm.get('profilePic').setValue(result.image);\r\n        this.uploadFile(result.file, 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubCategory() {\r\n    return this.nacategories.filter(x => x.value === this.userForm.get('nacategory').value)[0] ?.subcategories ;\r\n  }\r\n\r\n  reset() {\r\n    this.getUser();\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"card p-margin\">\r\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"card-header\" [ngClass]=\"{'pink-bg': authService?.userValue?.role === 0}\">\r\n        <span>My Profile</span>\r\n      </div>\r\n      <div class=\"card-body white-bg card-scroll\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-3 order-sm-last text-center\">\r\n            <img [src]=\"userForm.get('profilePic').value\" alt=\"upload image\" (click)=\"openDialog()\" class=\"img img-thumbnail\">\r\n          </div>\r\n          <div class=\"col-sm-9\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>First Name</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"firstname\" id=\"firstname\" placeholder=\"Enter First Name\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Last Name</mat-label>\r\n                  <input matInput type=\"lastname\" formControlName=\"lastname\" id=\"lastname\"\r\n                    placeholder=\"Enter Last Name\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input type=\"email\" matInput formControlName=\"profilemail\" id=\"profilemail\"\r\n                    placeholder=\"Please Provide a Valid Email\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Phone</mat-label>\r\n                  <input matInput type=\"tel\" formControlName=\"profilephone\" id=\"profilephone\"\r\n                    placeholder=\"Please Provide a Valid Phone\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group col-md-6\">\r\n                <mat-label>Sex: </mat-label>\r\n                <mat-radio-group formControlName=\"gender\" [ngClass]=\"{ 'is-invalid': submitted && f.gender.errors }\">\r\n                  <mat-radio-button value=\"1\">Male</mat-radio-button>\r\n                  <mat-radio-button value=\"2\">Female</mat-radio-button>\r\n                </mat-radio-group>\r\n                <div *ngIf=\"submitted && f.gender.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.gender.errors.required\">Gender is Required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"birthdate\">Date Of Birth</mat-label>\r\n                  <input matInput formControlName=\"birthdate\" type=\"date\" id=\"birthdate\" [ngClass]=\"{ 'is-invalid': submitted && f.birthdate.errors }\">\r\n                  <div *ngIf=\"submitted && f.birthdate.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.birthdate.errors.required\">Date Of Birth is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"address-divider\">Address:</div> -->\r\n        <h4 class=\"address-div\">Address</h4>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"streetAddress1\">Street Address</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"streetAddress1\" id=\"streetAddress1\"\r\n                    placeholder=\"1234 Main St\" [ngClass]=\"{ 'is-invalid': submitted && f.streetAddress1.errors }\">\r\n                    <div *ngIf=\"submitted && f.streetAddress1.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.streetAddress1.errors.required\">Address is required</div>\r\n                    </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"streetAddress2\">Strret Address Line 2</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"streetAddress2\" id=\"streetAddress2\"\r\n                    placeholder=\"Apartment, studio, or floor\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"inputCity\">City</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"inputCity\" id=\"inputCity\" [ngClass]=\"{ 'is-invalid': submitted && f.inputCity.errors }\">\r\n                  <div *ngIf=\"submitted && f.inputCity.errors\" class=\"invalid-feedback\" >\r\n                    <div *ngIf=\"f.inputCity.errors.required\">City is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"stateCode\">State</mat-label>\r\n                  <mat-select id=\"stateCode\" formControlName=\"stateCode\" [ngClass]=\"{ 'is-invalid': submitted && f.stateCode.errors }\">\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor=\"let state of staticData?.states\" [value]=\"state.stateCd\">\r\n                      {{state.stateName}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"submitted && f.stateCode.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.stateCode.errors.required\">State is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"inputPin\">PinCode</mat-label>\r\n                  <input matInput type=\"text\" matInput id=\"inputPin\" formControlName=\"inputPin\" [ngClass]=\"{ 'is-invalid': submitted && f.inputPin.errors }\">\r\n                  <div *ngIf=\"submitted && f.inputPin.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.inputPin.errors.required\">Pincode is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"national\">Nationality</mat-label>\r\n                  <mat-select id=\"national\" formControlName=\"national\" [ngClass]=\"{ 'is-invalid': submitted && f.national.errors }\">\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor=\"let country of staticData?.countries\" [value]=\"country.countryCd\">\r\n                      {{country.countryName}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"submitted && f.national.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.national.errors.required\">Country is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h4 class=\"address-div\">Professional Background</h4>\r\n        <div class=\"row\">\r\n          <div class=\"form-group col-12\">\r\n            <mat-label>Professional Background</mat-label>\r\n            <mat-radio-group formControlName=\"backgroundtype\">\r\n              <mat-radio-button value=\"1\">Academic</mat-radio-button>\r\n              <mat-radio-button value=\"2\">Non Academic</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <span [ngSwitch]=\"userForm.get('backgroundtype').value === '1' \">\r\n            <span *ngSwitchCase=\"true\">\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"medium\">Medium Of Education</mat-label>\r\n                    <mat-select id=\"medium\" multiple formControlName=\"medium\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let medium of staticData?.mediums\" [value]=\"medium.mediumName\">\r\n                        {{medium.mediumName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"subject\">Subject Selection</mat-label>\r\n                      <mat-select id=\"subject\" multiple formControlName=\"subject\">\r\n                        <mat-option>None</mat-option>\r\n                        <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject.name\">\r\n                          {{subject.name}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"board\">Education Board</mat-label>\r\n                    <mat-select id=\"board\" multiple formControlName=\"board\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let board of staticData?.boards\" [value]=\"board.boardName\">\r\n                        {{board.boardName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"standard\">Class/Grade</mat-label>\r\n                    <mat-select id=\"standard\" multiple formControlName=\"standard\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let level of levels\" [value]=\"level.groupId\">\r\n                        Grade - {{level.groupName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </span>\r\n            <span *ngSwitchCase=\"false\">\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"nacategory\">Type Of Category/Activity</mat-label>\r\n                    <mat-select id=\"nacategory\" formControlName=\"nacategory\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let cat of nacategories; let i= index\" [value]=\"cat.value\">\r\n                        {{cat.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"nasubcategory\">Sub Category</mat-label>\r\n                    <mat-select id=\"nasubcategory\" formControlName=\"nasubcategory\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let subcat of getSubCategory()\" [value]=\"subcat?.value\">\r\n                        {{subcat?.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"agegroup\">Age Group</mat-label>\r\n                    <mat-select id=\"agegroup\" formControlName=\"agegroup\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let group of agegroups\" [value]=\"group.value\">\r\n                        {{group.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"certification\">Certification Details</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"certification\" id=\"certification\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </span>\r\n            </span>\r\n\r\n            <div class=\"form-row\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n                <div class=\"col-md-6\">\r\n                  <span [ngSwitch]=\"userForm.get('backgroundtype').value === '1'\">\r\n                    <span *ngSwitchCase=\"true\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"qualification\">Highest Education Qualification</mat-label>\r\n                    <mat-select id=\"qualification\" formControlName=\"qualification\">\r\n                      <mat-option *ngFor=\"let qualify of qualifications\" [value]=\"qualify.value\">{{qualify.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </span>\r\n                <span *ngSwitchCase=\"false\">\r\n\r\n                </span>\r\n                </span>\r\n                </div>\r\n\r\n              <div class=\"form-group col-md-6\">\r\n                <mat-label>Do you have a teacher Qualification?</mat-label>\r\n                <mat-radio-group formControlName=\"isteacher\">\r\n                  <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n                  <mat-radio-button value=\"false\">No</mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n              <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"tutorexp\">If you have tutored before, tell us about it here.</mat-label>\r\n                  <textarea matInput id=\"tutorexp\" formControlName=\"tutorexp\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h4 class=\"address-div\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">Tutor Details</h4>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-label>Preferred Teaching Style</mat-label>\r\n                  <mat-radio-group formControlName=\"tutorpreference\">\r\n                    <mat-radio-button value=\"Online\">Online</mat-radio-button>\r\n                    <mat-radio-button value=\"Offline\">Offline</mat-radio-button>\r\n                    <mat-radio-button value=\"Both\">Both</mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-label>Which days are you able to tutor?</mat-label>\r\n                  <section>\r\n                    <mat-checkbox class=\"day-margin\" [checked]=\"allChecked\" (change)=\"changeAll($event.checked)\">All\r\n                    </mat-checkbox>\r\n                    <mat-checkbox class=\"day-margin\" [checked]=\"day.selected\" (change)=\"changeDays($event.checked, day)\"\r\n                      *ngFor=\"let day of days\">{{day.day | slice:0:3}}</mat-checkbox>\r\n                  </section>\r\n                  <!-- <mat-selection-list #dat>\r\n                            <mat-list-option *ngFor=\"let day of days\">\r\n                              {{day | slice:0:3}}\r\n                            </mat-list-option>\r\n                          </mat-selection-list> -->\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"distance\">How far would you travel to tutor?</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"distance\" id=\"distance\"\r\n                      placeholder=\"Type your text here..\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"timing\">Which times are you available.</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"timing\" id=\"timing\"\r\n                      placeholder=\"Type your text here..\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"rate\">Hourly Rate</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"rate\" id=\"rate\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"currency\">Currency</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"currency\" id=\"currency\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <mat-label for=\"proof\">Government ID proof</mat-label>\r\n                      <mat-select id=\"proof\" formControlName=\"proof\">\r\n                        <mat-option selected value=\"Drivers Licence\">Drivers Licence</mat-option>\r\n                        <mat-option value=\"Aadhar Card\">Aadhar Card</mat-option>\r\n                        <mat-option value=\"Other\">Other</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <div class=\"pl-2 pr-2\">\r\n                      <input type=\"file\" #file formControlName=\"proofDoc\" placeholder=\"Choose file\" name=\"formFile\" (change)=\"uploadFile(file.files, 1)\" style=\"display:none;\">\r\n                      <button type=\"button\" class=\"btn btn-success d-none d-md-block\" (click)=\"file.click()\">Browse</button>\r\n                      <button mat-icon-button class=\"d-block d-md-none\" color=\"primary\" (click)=\"file.click()\"><mat-icon>attach_file</mat-icon></button>\r\n                      <!-- <ngx-mat-file-input formControlName=\"proofDoc\" id=\"proofDoc\">\r\n                      </ngx-mat-file-input> -->\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"demo\">Teaching Demo Link</mat-label>\r\n                    <input matInput type=\"text\" matInput id=\"demo\" formControlName=\"demo\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"interests\">To help us make this match give us some idea of your interests, hobbies\r\n                    etc.</mat-label>\r\n                  <textarea matInput id=\"interests\" formControlName=\"interests\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"card-footer bg-light\">\r\n        <mat-card-actions class=\"footer-buttons clearfix\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <button mat-raised-button color=\"secondary\" (click)=\"reset()\" class=\"m-2\">Reset</button>\r\n            <div class=\"d-flex\">\r\n              <button mat-raised-button  color=\"secondary\" class=\"m-2\">Cancel</button>\r\n              <button mat-raised-button type=\"submit\" color=\"accent\" class=\"m-2\">Update Profile</button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </mat-card-actions>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input\r\n} from '@angular/core';\r\nimport {\r\n  Alert,\r\n  AlertType\r\n} from 'src/app/_models/alert';\r\nimport {\r\n  Subscription\r\n} from 'rxjs';\r\nimport {\r\n  Router,\r\n  NavigationStart\r\n} from '@angular/router';\r\nimport {\r\n  AlertService\r\n} from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-alerts',\r\n  templateUrl: './alerts.component.html',\r\n  styleUrls: ['./alerts.component.css']\r\n})\r\nexport class AlertsComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() id = 'default-alert';\r\n  @Input() fade = true;\r\n\r\n  alerts: Alert[] = [];\r\n  alertSubscription: Subscription;\r\n  routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private alertService: AlertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.alertSubscription = this.alertService.onAlert(this.id)\r\n      .subscribe(alert => {\r\n        if (!alert.message) {\r\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n          return;\r\n        }\r\n\r\n        this.alerts.push(alert);\r\n\r\n        if (alert.autoClose) {\r\n          setTimeout(() => this.removeAlert(alert), 3000);\r\n        }\r\n      });\r\n\r\n    this.routeSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alertService.clear(this.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alertSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    if (!this.alerts.includes(alert)) {\r\n      return;\r\n    }\r\n\r\n    if (this.fade) {\r\n      this.alerts.find(x => x === alert).fade = true;\r\n      setTimeout(() => {\r\n        this.alerts = this.alerts.filter(x => x !== alert);\r\n      }, 250);\r\n    } else {\r\n      this.alerts = this.alerts.filter(x => x !== alert);\r\n    }\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) {\r\n      return;\r\n    }\r\n\r\n    const classes = ['alert', 'alert-dismissable'];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: 'alert alert-success',\r\n      [AlertType.Error]: 'alert alert-danger',\r\n      [AlertType.Info]: 'alert alert-info',\r\n      [AlertType.Warning]: 'alert alert-warning'\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push('fade');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n}\r\n","<div class=\"alert-location\">\r\n  <div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  UserService\r\n} from 'src/app/_services/user.service';\r\nimport {\r\n  User\r\n} from 'src/app/_models/user';\r\nimport * as moment from 'moment';\r\nimport {\r\n  MatDialog\r\n} from '@angular/material/dialog';\r\nimport {\r\n  DemomodelComponent\r\n} from '../demomodel/demomodel.component';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AlertboxComponent } from '../alertbox/alertbox.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-tutors',\r\n  templateUrl: './tutors.component.html',\r\n  styleUrls: ['./tutors.component.css']\r\n})\r\nexport class TutorsComponent implements OnInit {\r\n\r\n  public tutors: any;\r\n  weekArray: string[] = [];\r\n  public slicedTutors: any;\r\n  public searchForm: FormGroup;\r\n  query1;\r\n  query2;\r\n  query3;\r\n  demos;\r\n  disableDemo = false;\r\n  demoDisabled = false;\r\n  classDisabled = false;\r\n\r\n  constructor(private userservice: UserService,\r\n              public dialog: MatDialog,\r\n              private authService: AuthserviceService,\r\n              private demoService: DemoService,\r\n              private _snackBar: MatSnackBar,\r\n              private formBuilder: FormBuilder,\r\n              private studentService: StudentService,\r\n              private alertService: AlertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    this.userservice.getUserByRole(1).subscribe(x => {\r\n      this.tutors = x;\r\n      this.sliceTutors(x);\r\n    },\r\n    (error) => this.alertService.error(error));\r\n\r\n    this.studentService.getEnrollmentsbyStudent(this.authService.userValue.id).subscribe(x => {\r\n      this.demos = x.filter(y => y.event.isDemo);\r\n    });\r\n\r\n    this.loadRequests();\r\n\r\n    const weekarrays = moment.weekdays();\r\n    weekarrays.join('-');\r\n    this.weekArray.push('Monday to Thursday');\r\n    this.weekArray.push('Friday');\r\n    this.weekArray.push('Saturday, Sunday');\r\n  }\r\n\r\n  private loadRequests() {\r\n    this.studentService.getRequestsbyStudent(this.authService.userValue.id).subscribe(x => {\r\n      const today = new Date();\r\n      let demoCount = 0;\r\n      x.forEach(element => {\r\n        const requestDate = new Date(element.date);\r\n        if (element?.event?.isDemo === true && requestDate.getMonth() === today.getMonth() &&\r\n          requestDate.getFullYear() === today.getFullYear()) {\r\n          demoCount++;\r\n        }\r\n      });\r\n      this.disableDemo = demoCount > 2;\r\n    });\r\n  }\r\n\r\n  get f() { return this.searchForm.controls; }\r\n\r\n  sliceTutors(tutors){\r\n    this.slicedTutors = tutors?.slice(0, 4);\r\n  }\r\n\r\n  createForm(){\r\n    this.searchForm = this.formBuilder.group({\r\n      location : null,\r\n      subject : null,\r\n      tutor: null,\r\n      indicator: null\r\n      });\r\n  }\r\n\r\n  bookClass(e, tutor, type) {\r\n    this.selectDemo(e, tutor, type);\r\n  }\r\n\r\n  selectDemo(e, tutor, type) {\r\n    if ((type === true && this.demoDisabled) || (type === false && this.classDisabled)){\r\n      return;\r\n    }\r\n    const tutordialog =   this.dialog.open(DemomodelComponent, {\r\n      width: '350px',\r\n      data: {\r\n        tutorinfo: tutor,\r\n        student:  this.authService.userValue,\r\n        courses: tutor.events?.filter(x => x.isDemo === type),\r\n        type\r\n      }\r\n    });\r\n    tutordialog.afterClosed().subscribe(result => {\r\n      if (result !== null){\r\n        this.demoService.requestDemo(result).subscribe(\r\n          x => {\r\n            this._snackBar.openFromComponent(AlertboxComponent, {\r\n              duration: 5000,\r\n              data: { message: x?.requestId > 0  ? 'Request Sent to Tutor' : 'Unable to Send Request'},\r\n            });\r\n            this.loadRequests();\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  pagechange(event: PageEvent){\r\n    const startIndex = event.pageIndex * event.pageSize;\r\n    let endIndex = startIndex + event.pageSize;\r\n\r\n    if (endIndex > this.tutors.length){\r\n      endIndex = this.tutors.length;\r\n    }\r\n\r\n    this.slicedTutors = this.tutors.slice(startIndex, endIndex);\r\n  }\r\n\r\n  filterItem(){\r\n    let filteredItems = this.tutors;\r\n    if (this.f.location.value !== null &&  this.f.location.value !== undefined){\r\n      const keys = 'address1,city,pincode';\r\n      filteredItems = filteredItems.filter(item =>\r\n        item.address?.address1.toLowerCase().includes(this.f.location.value.toLowerCase())\r\n        || item.address?.city.toLowerCase().includes(this.f.location.value.toLowerCase())\r\n        || item.address?.pincode.toLowerCase().includes(this.f.location.value.toLowerCase()));\r\n    }\r\n    if (this.f.subject.value !== null && this.f.subject.value !== undefined){\r\n      const keys = 'subjects, level';\r\n      filteredItems = filteredItems.filter(item =>\r\n        item.accountDetails.subjects.toLowerCase().includes(this.f.subject.value.toLowerCase())\r\n        || item.accountDetails.level.toLowerCase().includes(this.f.subject.value.toLowerCase()));\r\n    }\r\n    if (this.f.tutor.value !== null && this.f.tutor.value !== undefined){\r\n      const keys = 'name';\r\n      filteredItems = filteredItems.filter(item =>\r\n        item.name?.toLowerCase().includes(this.f.tutor.value.toLowerCase()));\r\n    }\r\n    this.slicedTutors = filteredItems.slice(0, 4);\r\n  }\r\n\r\n  getDisabled(tutor, item){\r\n    if (item){\r\n      const demos = tutor.events?.filter(x => x.isDemo === true);\r\n      this.demoDisabled = !(demos?.length > 0 && !this.disableDemo);\r\n      return this.demoDisabled;\r\n    }\r\n    else{\r\n      const classes = tutor.events?.filter(x => x.isDemo === false);\r\n      this.classDisabled = !(classes?.length > 0);\r\n      return this.classDisabled;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"m-4 bg-tutor\">\r\n  <mat-toolbar class=\"tutor-header\">\r\n    <span>Book Tutor</span>\r\n    <span class=\"lead\" *ngIf=\"disableDemo\">Maximum Demo Limit of 3 per month reached</span>\r\n  </mat-toolbar>\r\n  <div class=\"card min-card\">\r\n    <div class=\"card-header bg-white\">\r\n      <form [formGroup]=\"searchForm\" (submit)=\"filterItem()\">\r\n        <div class=\"d-flex justify-content-between flex-wrap flex-lg-nowrap\">\r\n          <mat-form-field>\r\n            <mat-label>Area</mat-label>\r\n            <input matInput placeholder=\"Area\" formControlName=\"location\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>place</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n          <mat-form-field >\r\n            <mat-label>Subjects, Grades, etc.</mat-label>\r\n            <input matInput placeholder=\"Subjects, Grades, etc.\" formControlName=\"subject\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>school</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Tutor</mat-label>\r\n            <input matInput placeholder=\"Tutor\" formControlName=\"tutor\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>person_outline</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n          <div class=\"w-100\">\r\n            <!-- <mat-radio-group formControlName=\"indicator\">\r\n              <mat-radio-button value=\"online\">Online</mat-radio-button>\r\n              <mat-radio-button value=\"offline\">Offline</mat-radio-button>\r\n              <mat-radio-button value=\"both\">Both</mat-radio-button>\r\n            </mat-radio-group> -->\r\n            <button mat-raised-button type=\"submit\" color=\"primary\">\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <!-- <div class=\"row w-100\">\r\n        <div class=\"col-md-3\">\r\n          <mat-form-field>\r\n            <mat-label>Area</mat-label>\r\n            <input matInput placeholder=\"Area\" >\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>place</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n          <mat-form-field>\r\n            <mat-label>Subjects, Grades, etc.</mat-label>\r\n            <input matInput placeholder=\"Subjects, Grades, etc.\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>school</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <mat-form-field>\r\n            <mat-label>Tutor</mat-label>\r\n            <input matInput placeholder=\"Tutor\" [(ngModel)]=\"query\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>person_outline</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n          <a mat-icon-button>\r\n            <mat-icon>search</mat-icon>\r\n          </a>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div *ngIf=\"!slicedTutors || slicedTutors?.length === 0\" class=\"d-flex flex-column\">\r\n        <h2 class=\"search-text\">Searching...</h2>\r\n        <h2 class=\"search-text\">Best suitable Tutor(s) for you</h2>\r\n        <img src=\"assets/tutor.png\" class=\"tutor-img\" />\r\n      </div>\r\n      <div class=\"card mb-3\"\r\n        *ngFor=\"let tutor of slicedTutors\">\r\n        <div class=\"row text-vs-center no-gutters\">\r\n          <div class=\"col-md-2\">\r\n            <!-- <img  [src]=\"tutor.profilePic\"> -->\r\n            <img [src]=\"tutor.accountDetails?.profilePic || 'assets/profile-pic.svg'\" class=\"img-thumbnail p-2 mx-auto d-block\">\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <h5 class=\"card-title text-dark\">\r\n                    <a class=\"tutor-name\">{{tutor.name | uppercase}}\r\n                    </a>\r\n                  </h5>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star_half</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star_border</mat-icon>\r\n                  <ul class=\"list-group list-group-horizontal justify-vs-center\">\r\n                    <li class=\"list-group-item border-0 p-2\">\r\n                      <span class=\"review\">Teaching</span>\r\n                      <span class=\"review-val\">70%</span>\r\n                      <mat-progress-spinner class=\"example-margin\" diameter=\"30\" [color]=\"'primary'\"\r\n                        [mode]=\"'determinate'\" [value]=\"70\">\r\n                      </mat-progress-spinner>\r\n                    </li>\r\n                    <li class=\"list-group-item border-0 p-2\">\r\n                      <span class=\"review\">Knowledge</span>\r\n                      <span class=\"review-val\">80%</span>\r\n                      <mat-progress-spinner class=\"example-margin\" diameter=\"30\" [color]=\"'warn'\" [mode]=\"'determinate'\"\r\n                        [value]=\"80\">\r\n                      </mat-progress-spinner>\r\n                    </li>\r\n                    <li class=\"list-group-item border-0 p-2\">\r\n                      <span class=\"review\">Freiendly</span>\r\n                      <span class=\"review-val\">90%</span>\r\n                      <mat-progress-spinner class=\"example-margin\" diameter=\"30\" [color]=\"'secondary'\"\r\n                        [mode]=\"'determinate'\" [value]=\"90\">\r\n                      </mat-progress-spinner>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <mat-divider [vertical]=\"true\">\r\n                </mat-divider>\r\n                <div class=\"col-md-5\">\r\n                  <span>Schedules</span>\r\n                  <div *ngIf=\"!tutor.events || tutor.events.length === 0\"\r\n                    class=\"alert alert-info\">\r\n                    No Schedule is Available\r\n                  </div>\r\n                  <ul class=\"list-group text-list list-height\">\r\n                    <li class=\"list-group-item p-1 border-0 d-flex justify-content-between align-items-center\"\r\n                      *ngFor=\"let assignment of tutor.events\">\r\n                      {{assignment.startDate | date:'mediumDate'}}\r\n                      <span class=\"badge badge-pill\"\r\n                        [ngClass]=\"assignment.isDemo ? 'badge-primary' : 'badge-warning'\"\r\n                        matTooltip=\"{{assignment.title}}\">{{assignment.startTime}} :\r\n                        {{assignment.endTime}}</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <!-- <div class=\"d-flex justify-content-center\">\r\n                    <button mat-icon-button class=\"btn-icons\">\r\n                      <mat-icon>email</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-icons\">\r\n                      <mat-icon>call</mat-icon>\r\n                    </button>\r\n                  </div> -->\r\n                  <mat-chip-list class=\"mat-chip-list-stacked\">\r\n                    <mat-chip class=\"book\" [disabled]=\"getDisabled(tutor, false)\"\r\n                      (click)=\"bookClass($event, tutor, false)\">Book</mat-chip>\r\n                    <mat-chip class=\"demo\" [disabled]=\"getDisabled(tutor, true)\"\r\n                      (click)=\"selectDemo($event,tutor, true)\">Schedule A Demo</mat-chip>\r\n                  </mat-chip-list>\r\n                  <!-- <mat-chip-list>\r\n                        <mat-chip class=\"book\">Book</mat-chip>\r\n                        <mat-chip class=\"demo\">Schedule A Demo</mat-chip>\r\n                    </mat-chip-list> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <mat-paginator [length]=\"tutors?.length\" [pageSize]=\"4\" [pageSizeOptions]=\"[4, 8, 12, 16]\"\r\n        (page)=\"pagechange($event)\"> </mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NotificationsService } from 'src/app/_services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'app-broadcast',\r\n  templateUrl: './broadcast.component.html',\r\n  styleUrls: ['./broadcast.component.css']\r\n})\r\nexport class BroadcastComponent implements OnInit {\r\n\r\n  broadcastForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n              private notificationService: NotificationsService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.broadcastForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      message: ['', Validators.required],\r\n      url: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  broadcast(){\r\n    console.log(this.broadcastForm.get('url').value);\r\n    this.notificationService.broadcast({\r\n      url: this.broadcastForm.get('url').value,\r\n      message: this.broadcastForm.get('message').value,\r\n      title: this.broadcastForm.get('title').value,\r\n    }).subscribe(() => {\r\n      this.broadcastForm.reset();\r\n    });\r\n  }\r\n}\r\n","<h1>Broadcast messages</h1>\r\n<form [formGroup]=\"broadcastForm\" (ngSubmit)=\"broadcast()\" class=\"form\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label>Title</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"title\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label>Message</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"message\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label>Url</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"url\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Broadcast</button>\r\n        </div>\r\n      </div>\r\n</form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: `https://localhost:44385/api`,\r\n  applicationServerPublicKey: `BK1AabF3PRWyqtFwz8-8NvCdG35Ze5GbRW6YdN1cqSsws2H3nIYNGiYnmTD45XRcul556ZUk2p8oURhVlaC4tWI`,\r\n  mapbox_accessToken: `pk.eyJ1IjoiYWRtaW4yMTkiLCJhIjoiY2tkbjV1bGFoMDdyNjJ1cWp6OW9vYTc2cCJ9.f3iM4kZihwi3_7gKEEsZ8g`,\r\n  mapbox_api: `https://api.mapbox.com/geocoding/v5/`,\r\n  braincert_key: `oAQbTjuSbktWkNvVPHWY`,\r\n  braincert_api: `https://api.braincert.com`,\r\n  cloudinary: {\r\n    url: `https://api.cloudinary.com/v1_1/dfsizfwtr`,\r\n    key: `519897199111461`,\r\n    secret: `sCtuDGDDq_p8tCQuSKMTgJ6slAA`,\r\n    environmet: `CLOUDINARY_URL=cloudinary://519897199111461:sCtuDGDDq_p8tCQuSKMTgJ6slAA@dfsizfwtr`\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AuthserviceService } from './authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Demo } from '../_models/demo';\r\nimport { DemoRequest } from '../_models/demorequest';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DemoService {\r\n\r\n  constructor(private http: HttpClient, private authService: AuthserviceService) { }\r\n\r\n  getAllDemos(){\r\n    return this.http.get<any>(`${environment.apiUrl}/demos/allcourses`);\r\n  }\r\n\r\n  getDemoById(id){\r\n    return this.http.get<any>(`${environment.apiUrl}/vevent`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', id)\r\n    });\r\n  }\r\n\r\n  getAllDemosByUser(userid){\r\n    const options = userid ?\r\n    { params: new HttpParams().set('id', userid)} : {};\r\n    return this.http.get<Demo[]>(`${environment.apiUrl}/vevent/byuser`, options);\r\n  }\r\n\r\n  getAllDemosByloggedUser(){\r\n  }\r\n\r\n  createDemo(demo){\r\n    return this.http.post<any>(`${environment.apiUrl}/vevent`, demo);\r\n  }\r\n\r\n  requestDemo(demo){\r\n    return this.http.post<any>(`${environment.apiUrl}/request`, demo, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getDemoRequests(userId){\r\n    const options = userId ?\r\n    { params: new HttpParams().set('id', userId)} : {};\r\n\r\n    return this.http.get<DemoRequest[]>(`${environment.apiUrl}/request/byuser`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mainlayout',\r\n  templateUrl: './mainlayout.component.html',\r\n  styleUrls: ['./mainlayout.component.css']\r\n})\r\nexport class MainlayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-alerts></app-alerts>\r\n<app-sidenav-bar></app-sidenav-bar>\r\n<app-footer></app-footer>\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function IsMatch(control1: string, control2: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[control1];\r\n        const matchControl = formGroup.controls[control2];\r\n\r\n        if (matchControl.errors && !matchControl.errors.mustMatch) {\r\n            return;\r\n        }\r\n\r\n        if (control.value !== matchControl.value) {\r\n            matchControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchControl.setErrors(null);\r\n        }\r\n    };\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-adminpayments',\n  templateUrl: './adminpayments.component.html',\n  styleUrls: ['./adminpayments.component.css']\n})\nexport class AdminpaymentsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  error;\n\n  constructor(private userService: UserService, private alertService: AlertService) { }\n\n  displayedColumns: string[] = ['sno', 'class', 'tutor', 'amount', 'date'];\n  dataSource: MatTableDataSource<any>;\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource();\n    this.loadStudents();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadStudents(){\n    this.dataSource.data = [\n      {\n        class: 'Maths Session 1',\n        tutor: 'John Doe',\n        amount: 2000,\n        date: new Date(),\n      },\n      {\n        class: 'Physics Session 1',\n        tutor: 'John Doe 1',\n        amount: 5000,\n        date: new Date(),\n      },\n      {\n        class: 'English Session 1',\n        tutor: 'John Doe 2',\n        amount: 6000,\n        date: new Date(),\n      },\n    ];\n    // this.userService.getStudents().subscribe(x => {\n    //   this.dataSource.data = x;\n    // }, (error) => {\n    //   this.alertService.error(error);\n    // });\n  }\n\n  click(event, row){\n\n  }\n\n  applyFilter(eve){\n    const filterValue = (eve.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n}\n","<div class=\"tutor-table\">\n  <h1>Payments</h1>\n  <div class=\"form-group row\">\n    <div class=\"offset-md-8 col-md-4\">\n      <div class=\"input-group mb-2\">\n        <input class=\"form-control input-rounded\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\" #input>\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <mat-icon>search</mat-icon>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"mat-container mat-elevation-z8\">\n    <table mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"sno\" sticky>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No. </th>\n        <td mat-cell *matCellDef=\"let i = index\">\n        {{this.paginator?.pageIndex == 0 ? i + 1 : 1 + i + this.paginator?.pageIndex * this.paginator?.pageSize}}\n      </td>\n      </ng-container>\n      <ng-container matColumnDef=\"class\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Class </th>\n        <td mat-cell *matCellDef=\"let row\"><a href (click)=\"click($event,row)\">{{row.class}}</a> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"tutor\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Tutor </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.tutor}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.amount}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"date\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.date | date}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthserviceService,\n              private router: ActivatedRoute) { }\n\n  isTutor;\n  passwordForm: FormGroup;\n  passwordsubmitted;\n  loadforgot;\n  error;\n  success;\n\n  ngOnInit(): void {\n    const role = this.router.snapshot.queryParams.role;\n    this.isTutor = role === 'tutor';\n    this.passwordForm = this.formBuilder.group({\n      email: ['', Validators.required]\n    });\n  }\n\n  get p(){\n    return this.passwordForm.controls;\n  }\n\n  onpasswordSubmit() {\n    this.passwordsubmitted = true;\n\n    this.loadforgot = true;\n    if (this.passwordForm.valid){\n      this.authService.forgotpassword(this.passwordForm.value).subscribe(x => {\n        this.success = x.message;\n        this.loadforgot = false;\n      }, (error) => {\n        this.loadforgot = false;\n        this.error = error;\n      });\n    }\n  }\n}\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor? '':'main-bg'\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n  </mat-toolbar>\n  <div class=\"equal-container login-side\">\n    <div class=\"equal-col\">\n      <div>\n        <div class=\"card rounded\">\n          <div class=\"card-body\" class=\"log-form-mr bg-white\">\n            <div class=\"card-header text-center bg-transparent border-0\">\n              <h2 class=\"m-2\">Reset Password</h2>\n              <img class=\"h-vs\" src=\"assets/icons/vidhya-sandhhan.svg\">\n            </div>\n            <form [formGroup]=\"passwordForm\" class=\"m-4\" (ngSubmit)=\"onpasswordSubmit()\">\n              <div class=\"form-group loginform\">\n                <mat-label for=\"email\">Provide Email to Reset Password:</mat-label>\n                <mat-form-field appearance=\"outline\">\n                  <mat-label for=\"email\">Email</mat-label>\n                  <span matPrefix>\n                    <mat-icon color=\"primary\">email</mat-icon>\n                    <mat-divider [vertical]=\"true\"></mat-divider>\n                  </span>\n                  <input matInput type=\"email\" formControlName=\"email\"\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.email.errors }\" />\n                  <div *ngIf=\"passwordsubmitted && p.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"p.email.errors.required\">Email is required</div>\n                  </div>\n                </mat-form-field>\n              </div>\n              <div class=\"d-flex justify-content-between text-white\">\n                <a class=\"btn btn-secondary\" type=\"submit\" [routerLink]=\"['/login']\" role=\"button\">Login?</a>\n                <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loadforgot\">\n                  <span *ngIf=\"loadforgot\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                  Submit\n                </button>\n              </div>\n              <div *ngIf=\"passwordsubmitted && success\" class=\"alert alert-success mt-3 mb-0\">{{success}}</div>\n              <div *ngIf=\"passwordsubmitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","export class Alert {\r\n  id: string;\r\n  type: AlertType;\r\n  message: string;\r\n  autoClose: boolean;\r\n  keepAfterRouteChange: boolean;\r\n  fade: boolean;\r\n\r\n  constructor(init?:Partial<Alert>) {\r\n      Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport enum AlertType {\r\n  Success,\r\n  Error,\r\n  Info,\r\n  Warning\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-noassignments',\r\n  templateUrl: './noassignments.component.html',\r\n  styleUrls: ['./noassignments.component.css']\r\n})\r\nexport class NoassignmentsComponent implements OnInit {\r\n\r\n  menuItems = [\r\n    {id: 0, value: 'Assignment', icon: 'assignment_turned_in'},\r\n    {id: 1, value: 'Quiz Assignment', icon: 'batch_prediction'},\r\n    // {id: 2, value: 'Question', icon: 'help'},\r\n    // {id: 3, value: 'Material', icon: 'menu_book'},\r\n    {id: 2, value: 'Topic', icon: 'local_library'},\r\n  ];\r\n\r\n  @Output() assignmentEmitter = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addEvent(item){\r\n    this.assignmentEmitter.emit(item);\r\n  }\r\n\r\n\r\n}\r\n","<!-- <div class=\"card-header bg-primary\">\r\n  <h2 class=\"my-event\">Assignments</h2>\r\n</div> -->\r\n  <h1 class=\"card-title\">\r\n    <p class=\"Start-your-journey-b\">\r\n      You haven't created any Assignments yet,\r\n    </p>\r\n    <p class=\"Start-your-journey-b\">\r\n      Click <span style=\"font-weight: bold;\">'+'</span> icon to create an assignment, Quiz, and Q&A..etc..  \r\n    </p>\r\n\r\n  </h1>\r\n<div class=\"event-img\">\r\n  <img class=\"img img-responsive\" src=\"assets/assignments/assignment_bg1.png\"\r\n  srcset=\"assets/assignments/assignment_bg2.png 2x,\r\n  assets/assignments/assignment_bg3.png 3x\">\r\n</div>\r\n<a class=\"ml-auto m-4 circle-add float-right\" mat-mini-fab [matMenuTriggerFor]=\"menu\">\r\n  <mat-icon>add</mat-icon>\r\n</a>\r\n<mat-menu #menu=\"matMenu\" yPosition=\"above\">\r\n  <a mat-menu-item *ngFor=\"let item of menuItems\" (click)=\"addEvent(item)\">\r\n    <mat-icon>{{item.icon}}</mat-icon>\r\n    <span>{{item.value}}</span>\r\n  </a>\r\n</mat-menu>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport {\r\n  MatTableDataSource\r\n} from '@angular/material/table';\r\nimport {\r\n  DemoService\r\n} from 'src/app/_services/demo.service';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\nimport {\r\n  MatPaginator\r\n} from '@angular/material/paginator';\r\nimport {\r\n  MatSort\r\n} from '@angular/material/sort';\r\nimport {\r\n  CourseService\r\n} from 'src/app/_services/course.service';\r\n\r\n@Component({\r\n  selector: 'app-evaluate',\r\n  templateUrl: './evaluate.component.html',\r\n  styleUrls: ['./evaluate.component.css']\r\n})\r\nexport class EvaluateComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private demoService: DemoService,\r\n              private authService: AuthserviceService,\r\n              private assignments: CourseService) {\r\n    this.getassigments();\r\n  }\r\n\r\n  sortoptions = [{\r\n      id: 0,\r\n      value: 'Most Recent'\r\n    },\r\n    {\r\n      id: 1,\r\n      value: 'Oldest'\r\n    }\r\n  ];\r\n\r\n  doEvaluate = false;\r\n\r\n  resultsLength = 0;\r\n  dataSource: MatTableDataSource < any > ;\r\n  primary = 'primary';\r\n  selectedValue = 0;\r\n  selectedCourse;\r\n  isLoading;\r\n  courses;\r\n  selectedRow;\r\n  displayedColumns: string[] = ['name', 'grade', 'period', 'topic', 'attachment', 'status', 'points', 'action'];\r\n\r\n  @ViewChild(MatPaginator, {\r\n    static: false\r\n  }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {\r\n    static: false\r\n  }) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource();\r\n    this.getassigments();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  displaycourse(course) {\r\n    return course.title;\r\n  }\r\n\r\n  getassigments() {\r\n    this.assignments.getTutorStudentAssignments(this.authService.userValue.id).subscribe((x: []) => {\r\n      this.dataSource.data = x;\r\n      return x;\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue) {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n    this.dataSource.filter = filterValue;\r\n\r\n    if (this.dataSource?.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  actionSelected(row) {\r\n    this.doEvaluate = true;\r\n    this.selectedRow = row;\r\n  }\r\n\r\n  selectValue(event) {\r\n    if (event.isReturn) {\r\n      this.doEvaluate = false;\r\n    }\r\n  }\r\n\r\n  downloadFile(file: string) {\r\n    if (file?.length > 0) {\r\n      window.open(file);\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-container [ngSwitch]=\"!doEvaluate\">\r\n  <div *ngSwitchCase=\"true\">\r\n    <mat-card class=\"min-card\">\r\n      <mat-card-header class=\"header-rad\">\r\n        <mat-card-title class=\"evaluate-tasks\">Evaluate Tasks</mat-card-title>\r\n        <mat-card-subtitle>Total Tasks: {{dataSource.data.length}}</mat-card-subtitle>\r\n        <div class=\"row ml-auto\">\r\n          <div class=\"col-md-6\">\r\n            <mat-form-field>\r\n              <input matInput type=\"text\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\r\n              <button mat-button matSuffix mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <mat-form-field>\r\n              <mat-select [(ngModel)]=\"selectedValue\" name=\"item\">\r\n                <mat-option *ngFor=\"let item of sortoptions\" [value]=\"item.id\">\r\n                  {{item.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <!-- <div class=\"col-md-3\">\r\n                    <mat-chip-list>\r\n                        <mat-chip class=\"bg-primary\" [color]=\"primary\">Print <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-printer\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M11 2H5a1 1 0 0 0-1 1v2H3V3a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2h-1V3a1 1 0 0 0-1-1zm3 4H2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h1v1H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1z\"/>\r\n                            <path fill-rule=\"evenodd\" d=\"M11 9H5a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1zM5 8a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H5z\"/>\r\n                            <path d=\"M3 7.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z\"/>\r\n                          </svg></mat-chip>\r\n                        <mat-chip  class=\"bg-primary\" [color]=\"primary\">Export <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-box-arrow-in-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" d=\"M4.646 8.146a.5.5 0 0 1 .708 0L8 10.793l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                            <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0v-9A.5.5 0 0 1 8 1z\"/>\r\n                            <path fill-rule=\"evenodd\" d=\"M1.5 13.5A1.5 1.5 0 0 0 3 15h10a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 13 4h-1.5a.5.5 0 0 0 0 1H13a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5v-8A.5.5 0 0 1 3 5h1.5a.5.5 0 0 0 0-1H3a1.5 1.5 0 0 0-1.5 1.5v8z\"/>\r\n                          </svg>\r\n                        </mat-chip>\r\n                    </mat-chip-list>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\">Online</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\">Offline</button>\r\n                    </div>\r\n                </div> -->\r\n        </div>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <!-- <div class=\"row\">\r\n                <div class=\"col-md-3 ml-auto\">\r\n                    <mat-form-field>\r\n                        <mat-label for=\"course\">Course</mat-label>\r\n                        <input matInput type=\"text\" id=\"course\"  [matAutocomplete]=\"loc\" placeholder=\"Course\">\r\n                        <mat-autocomplete #loc=\"matAutocomplete\" autoActiveFirstOption=\"true\" [displayWith]=\"displaycourse\" (optionSelected)='getattendance($event.option.value)'>\r\n                          <mat-option *ngFor=\"let course of courses\" [value]=\"course\">\r\n                            {{course.locationName}}\r\n                          </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div> -->\r\n        <div class=\"example-container mat-elevation-z8\">\r\n          <table mat-table #table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Student Name </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <img class=\"rounded-circle\" [src]=\"row.account.accountDetails[0]?.profilePic\" width=\"30\" height=\"30\">\r\n                {{row.account.firstName}} {{row.account.lastName}}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"grade\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Grade </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.grade}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"period\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Assignment Period </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.startDate | date}} -\r\n                {{row.assignment.dueDate | date}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"topic\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Topic </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.topic}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"attachment\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Attachment(s) </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <a (click)=\"downloadFile(row.assignment.assignmentFile)\">\r\n                  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-download\" fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\"\r\n                      d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n                    <path fill-rule=\"evenodd\"\r\n                      d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\" />\r\n                  </svg> Download\r\n                </a>\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <span [ngSwitch]=\"row.isPresent === undefined || row.isPresent === null\">\r\n                  <p *ngSwitchCase=\"true\">\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-slash-circle-fill\" fill=\"#ff0000\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\"\r\n                        d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708l-7 7a.5.5 0 0 0 .708.708l7-7z\" />\r\n                    </svg>\r\n                    Incomplete\r\n                  </p>\r\n                  <p *ngSwitchCase=\"false\">\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill\" fill=\"#039f02\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\"\r\n                        d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n                    </svg>\r\n                    Done\r\n                  </p>\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"points\">\r\n              <th mat-header-cell *matHeaderCellDef> Points </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.points}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef> Action </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <mat-chip color=\"accent\" selected class=\"text-white m-2\" (click)=\"actionSelected(row)\">\r\n                  Evaluate\r\n                </mat-chip>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          </table>\r\n        </div>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[4, 8, 12]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <!-- <button mat-button>Ok</button> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  <div *ngSwitchCase=\"false\">\r\n    <app-evaluation-detail [student]=\"selectedRow\" (onSelectValue)='selectValue($event)'></app-evaluation-detail>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Customvalidators } from 'src/app/_helpers/customvalidators';\nimport { IsMatch } from 'src/app/_helpers/fieldmatcher';\nimport { User } from 'src/app/_models/user';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-promoterregister',\n  templateUrl: './promoterregister.component.html',\n  styleUrls: ['./promoterregister.component.css']\n})\nexport class PromoterregisterComponent implements OnInit {\n\n  constructor( private formBuilder: FormBuilder,\n               private userService: UserService,\n               private alertService: AlertService) { }\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  isAlert = '';\n  error = '';\n  success;\n  options = {\n    autoClose: true,\n    keepAfterRouteChange: true\n  };\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      password: [ null, Validators.compose([\n        Validators.required,\n        Customvalidators.patternValidator(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, { isInvalid: true }),\n        Validators.minLength(8)])\n     ],\n      role: [''],\n      confirmPassword: [''],\n    }, {validator: IsMatch('password', 'confirmPassword') });\n  }\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit(){\n    this.error = null;\n    this.submitted = true;\n    if (this.registerForm.invalid){\n      return;\n    }\n\n    const regUser: User = {\n       firstName : this.f.firstName.value,\n       lastName: this.f.lastName.value,\n       email: this.f.email.value,\n       password: this.f.password.value,\n       phone: this.f.phone.value,\n       username: this.f.email.value,\n       role: 4,\n    };\n\n    this.userService.addUser(regUser)\n    .subscribe(data => {\n      if (data === true){\n        this.alertService.success('Registration Complete. Check your email to confirm!', this.options);\n      }else{\n        this.alertService.error('Unable to Complete Registration', this.options);\n      }\n     }, error => this.alertService.error(error, this.options));\n\n  }\n\n  registered(){\n    this.success = null;\n    this.registerForm.reset();\n  }\n\n}\n","<div class=\"pbg-1\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n  </mat-toolbar>\n  <div class=\"content-fit\">\n    <form [formGroup]=\"registerForm\" class=\"log-form-mr\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"p-4\">\n        <div class=\"card-header bg-img  log-header text-center\">\n          <div class=\"signup-txt\">Register For Free</div>\n          <div class=\"p-2 fillout\"><small>Please fill out the form below to get started.</small></div>\n        </div>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"firstname\">First Name</mat-label>\n          <input matInput type=\"text\" formControlName=\"firstName\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n          <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n          </div>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"lastname\">Last Name</mat-label>\n          <input matInput type=\"text\" formControlName=\"lastName\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n          <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n          </div>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"email\">Email</mat-label>\n          <input matInput type=\"email\" formControlName=\"email\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email Address is required</div>\n            <div *ngIf=\"f.email.errors.email\">Please Provide a Valid Email Address</div>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"password\">Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n          <mat-hint>Minimum 8 characters with atleast one capital letter and a number</mat-hint>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Please Provide a Password</div>\n            <div *ngIf=\"f.password.errors.pattern\">Password should be 8 characters with 1 Upper case letter and a number\n            </div>\n          </div>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"password\">Confirm Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"confirmPassword\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n          <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n            <div *ngIf=\"f.confirmPassword.errors.IsMatch\">Passwords are not matching!</div>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"phone\">Phone</mat-label>\n          <input matInput type=\"tel\" formControlName=\"phone\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\n          <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.phone.errors.required\">Please Provide a Phone number</div>\n            <div *ngIf=\"f.phone.errors.pattern\">Please provide a valid phone number</div>\n          </div>\n        </mat-form-field>\n\n        <mat-card-footer class=\"text-center justify-content-center\">\n          <mat-card-actions class=\"d-flex flex-column p-2 align-items-center\">\n            <button mat-flat-button color=\"accent\" type=\"submit\" [disabled]=\"loading\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Register\n            </button>\n            <!-- <a mat-flat-button color=\"accent\" [routerLink]=\"'/register'\">Sign Up</a> -->\n            <div class=\"mt-2 p-2 login\">Already have an account? <a [routerLink]=\"['/promoter/login']\">Login</a></div>\n          </mat-card-actions>\n          <div class=\"m-1\">\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success\">\n              <strong>{{success}}</strong>\n              <mat-icon (click)=\"registered()\">close</mat-icon>\n            </div>\n            <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"error\">\n              <strong>Unable to Register!</strong>\n              <mat-icon (click)=\"error = null\">close</mat-icon>\n            </div>\n          </div>\n        </mat-card-footer>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitelayout',\r\n  templateUrl: './sitelayout.component.html',\r\n  styleUrls: ['./sitelayout.component.css']\r\n})\r\nexport class SitelayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-sitenav></app-sitenav>\r\n<router-outlet></router-outlet>\r\n<app-sitefooter></app-sitefooter>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'tutorfilter'\r\n})\r\nexport class TutorfilterPipe implements PipeTransform {\r\n\r\n  transform(value, keys: string, arg1: any) {\r\n    console.log(arg1);\r\n    let filterValue = (value || []);\r\n    console.log(filterValue);\r\n    if (arg1[0]){\r\n      filterValue = (filterValue).filter(item => keys.split(',').some(key => item.hasOwnProperty(key)\r\n                                                             && new RegExp(arg1[0], 'gi').test(item[key])));\r\n    }\r\n    if (arg1[1]){\r\n      filterValue = (filterValue).filter(item => keys.split(',').some(key => item.hasOwnProperty(key)\r\n      && new RegExp(arg1[1], 'gi').test(item[key])));\r\n    }\r\n    if (arg1[2]){\r\n      filterValue = (filterValue).filter(item => keys.split(',').some(key => item.hasOwnProperty(key)\r\n      && new RegExp(arg1[2], 'gi').test(item[key])));\r\n    }\r\n    return filterValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.css']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              public authservice: AuthserviceService,\r\n              private router: Router) { }\r\n\r\n  user: {\r\n    userId: '',\r\n    token: ''\r\n  };\r\n  success;\r\n  isResend;\r\n  error;\r\n\r\n  authUser: User;\r\n\r\n  ngOnInit(): void {\r\n    const token = this.route.snapshot.paramMap.get('token');\r\n    console.log(token);\r\n    this.authservice.confirmEmail(token).subscribe(x =>  this.success = true, (error) => this.success = false);\r\n    //this.router.navigate(['/login'];\r\n  }\r\n\r\n  confirmEmail(){\r\n    this.authservice.reConfirm(this.authUser).subscribe(x => this.isResend = x);\r\n  }\r\n\r\n}\r\n","<div class=\"container m-2\">\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-body\">\r\n <div [ngSwitch]=\"success\"> \r\n    <div *ngSwitchCase=\"true\">\r\n       Succesfully Completed Registration. <a [routerLink]=\"['/login']\"></a>Click Here to go back to login.\r\n    </div> \r\n    <div *ngSwitchCase=\"false\">\r\n      <div class=\"authBlock\">\r\n        <h3>Thank You for Registering</h3>\r\n\r\n        <div class=\"formGroup\" *ngIf=\"authUser\">\r\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{authUser.email}}</strong>.</p>\r\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\r\n        </div>\r\n\r\n        <div class=\"formGroup\">\r\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"confirmEmail()\">\r\n            <i class=\"fas fa-redo-alt\"></i>\r\n            Resend Verification Email\r\n          </button>\r\n          <div *ngIf=\"isResend\" class=\"alert alert-info\">Succesfully Resent for Verification</div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"redirectToLogin\">\r\n        <span>Go back to?<a class=\"redirect\" [routerLink]=\"['/login']\"> Sign in</a></span>\r\n      </div>\r\n    </div> \r\n</div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\n\r\n@Component({\r\n  selector: 'app-classroom',\r\n  templateUrl: './classroom.component.html',\r\n  styleUrls: ['./classroom.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ClassroomComponent implements OnInit {\r\n\r\n  constructor(public auth: AuthserviceService) { }\r\n\r\n  colors = {\r\n    background: 'primary',\r\n    font: 'primary'\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    if (this.auth.userValue.role === 0){\r\n      this.colors.background = 'secondary';\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"m-4\">\r\n  <p class=\"bg-tutor-primary m-2 classroom\" [ngClass]=\"{'student-header': auth.userValue.role === 0}\">My Classroom</p>\r\n  <mat-tab-group mat-align-tabs=\"end\" [color]=\"colors.font\" class=\"tabheader\" [ngClass]=\"{'bg-pink': auth.userValue.role === 0}\"\r\n   [backgroundColor]=\"colors.background\">\r\n    <mat-tab label=\"TIMETABLE\">\r\n      <ng-template matTabContent>\r\n        <app-calendar></app-calendar>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"ASSIGNMENT\" *ngIf=\"auth.userValue.role !== 'Student'\">\r\n      <ng-template matTabContent>\r\n        <app-assignments></app-assignments>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"ASSIGNMENT\" *ngIf=\"auth.userValue.role === 'Student'\">\r\n      <ng-template matTabContent>\r\n        <app-student-assignments></app-student-assignments>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Evaluate\" *ngIf=\"auth.userValue.role !== 'Student'\">\r\n      <ng-template matTabContent>\r\n        <app-evaluate></app-evaluate>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"ATTENDANCE SHEET\">\r\n      <ng-template matTabContent>\r\n        <app-attendance></app-attendance>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Demo, Enrollment } from 'src/app/_models/demo';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AlertboxComponent } from '../alertbox/alertbox.component';\r\nimport { DemoRequest } from 'src/app/_models/demorequest';\r\n\r\n@Component({\r\n  selector: 'app-demolist',\r\n  templateUrl: './demolist.component.html',\r\n  styleUrls: ['./demolist.component.css']\r\n})\r\nexport class DemolistComponent implements OnInit {\r\n\r\n  selectedAction ;\r\n  isOnline = false;\r\n  demos: Demo[] = [];\r\n  requests: DemoRequest[] = [];\r\n  filteredRequests: DemoRequest[] = [];\r\n  loadDemo = false;\r\n  checked = false;\r\n  actions = [\r\n    {id: 1, action : 'Accept', icon: 'check_circle', color: 'primary', title: 'List View'},\r\n    {id: 2, action : 'Reject', icon: 'cancel', color: 'warn', title: 'List View'},\r\n    {id: 3, action : 'Re-Schedule', icon: 'alt_route', color: 'accent', title: 'List View'},\r\n  ];\r\n\r\n  actionIcons = [\r\n    {id: 0, action : 'clicklist', icon: 'view_list', title: 'List View'},\r\n    {id: 1, action : 'clickdemo', icon: 'view_module', title: 'Demo View'},\r\n    {id: 2, action : 'clickmap', icon: 'map', title: 'Map View'},\r\n  ];\r\n\r\n  @Input()\r\n  demoId;\r\n\r\n\r\n  constructor(private demoService: DemoService,\r\n              private authService: AuthserviceService,\r\n              private studentService: StudentService,\r\n              private snackBar: MatSnackBar,\r\n              private alertcomponent: AlertboxComponent) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.selectedAction = this.actionIcons[0];\r\n    // this.demoService.getAllDemosByUser(this.authService.userValue.id)\r\n    // .subscribe(x => this.demos = x, (error) => console.log(error));\r\n\r\n    this.demoService.getDemoRequests(this.authService.userValue.id).subscribe(\r\n      x => { this.requests = x;\r\n             this.filteredRequests = x;\r\n             this.loadDemo = true;\r\n      }, (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  getDaywithFormat(day: Demo){\r\n    const setDate = new Date(day.startDate);\r\n    if (setDate){\r\n      return setDate.getDay();\r\n    }\r\n  }\r\n\r\n  changeSelected(e, action, enrollment){\r\n    console.log(enrollment);\r\n    const enrol: Enrollment = {\r\n    eventId: enrollment.event.courseId,\r\n    studentID: enrollment.account.id,\r\n    enrollmentDate: new Date(),\r\n    updateDate: new Date(),\r\n    requestId: enrollment.requestId\r\n    };\r\n    this.updateEnrollment(enrol, action.id);\r\n  }\r\n\r\n  updateEnrollment(enrollment: Enrollment, status){\r\n    enrollment.status = status;\r\n    this.studentService.saveEnrollment(enrollment).subscribe(x => {\r\n  if (x?.id > 0){\r\n    this.openSnackBar('Notified Student', null);\r\n  }\r\n  else{\r\n    this.openSnackBar('Unable to Complete', 1);\r\n  }\r\n}, (error) => {\r\n  this.openSnackBar(error, 1);\r\n});\r\n  }\r\n\r\n  openSnackBar(alert, error) {\r\n    this.snackBar.openFromComponent(AlertboxComponent, {\r\n      duration: 5 * 1000,\r\n      data: { message: alert }\r\n    });\r\n  }\r\n\r\n  filterRequests(event) {\r\n    this.loadDemo = true;\r\n    if (!this.checked){\r\n     this.filteredRequests = this.requests.filter(x => x.event.eventType === 0);\r\n   }\r\n   else{\r\n    this.filteredRequests = this.requests;\r\n   }\r\n  }\r\n  // getAdress(day: Demo){\r\n  //   const address = day.enrollments[0].student.addresses[0];\r\n  //   return address.address1  + ',' + address.address2 + ',' + address.city\r\n  // }\r\n\r\n}\r\n","<!-- <div class=\"container\">\r\n<a mat-raised-button [routerLink]=\"['/demos/create']\">Create</a>\r\n</div> -->\r\n\r\n\r\n<div class=\"card m-2 min-card\">\r\n  <!-- <div class=\"card-header bg-tutor-primary\">\r\n          <div>Demo Requests</div>\r\n        </div> -->\r\n  <div class=\"card-body\">\r\n    <div class=\"d-flex\">\r\n      <!-- <div class=\"lh-40\"> Students List</div> -->\r\n      <div class=\"ml-auto d-flex\">\r\n        <div class=\"mr-1 Layout\">LAYOUT</div>\r\n        <div class=\"mr-1 ml-1\">\r\n          <a mat-icon-button *ngFor=\"let action of actionIcons\" (click)=\"selectedAction = action\">\r\n            <mat-icon>\r\n              {{action.icon}}\r\n            </mat-icon>\r\n          </a>\r\n        </div>\r\n        <div class=\"lh-40\">\r\n          <mat-slide-toggle (toggleChange)=\"filterRequests($event)\" [(ngModel)]=\"checked\" color=\"Primary\">Online\r\n          </mat-slide-toggle>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div [ngClass]=\"{'col' : selectedAction === actionIcons[0],\r\n                  'col-md-12' : selectedAction === actionIcons[1],\r\n                  'col-md-6' : selectedAction === actionIcons[2] }\">\r\n          <div [ngClass]=\"{'card-deck': selectedAction === actionIcons[1]}\">\r\n            <div class=\"card card-chip mb-3\" *ngFor=\"let element of demoRequests\">\r\n              <div class=\"row no-gutters\">\r\n                <div [ngClass]=\"{'col-md-2' : selectedAction === actionIcons[0],\r\n                                  'col-md-12' : selectedAction === actionIcons[1],\r\n                                  'col-md-4' : selectedAction === actionIcons[2] }\">\r\n                  <div class=\"d-flex\" [ngClass]=\"{'justify-content-center' : selectedAction === actionIcons[1]}\">\r\n                    <img [src]=\"element.student.profilePic\" class=\"img-thumbnail m-2\" width=\"200\">\r\n                    <img src=\"assets/demo/group-10-copy-3.png\"\r\n                      srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                      class=\"Group-10-Copy-3\">\r\n                  </div>\r\n                </div>\r\n                <div [ngClass]=\"{'col-md-10' : selectedAction === actionIcons[0],\r\n                                  'col-md-12' : selectedAction === actionIcons[1],\r\n                                  'col-md-8' : selectedAction === actionIcons[2] }\">\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title text-dark\">\r\n                      <a class=\"Student-Name-10th-S\"> {{element.student.firstName}}\r\n                        {{element.student.lastName}}\r\n                      </a>\r\n                    </h5>\r\n                    <div class=\"card-text Requested-Subs-M\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col\">\r\n                          <p>Requested Sub(s) — {{element.subject}}</p>\r\n                          <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                            {{element.date | date: 'shortTime'}} slot</p>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                          <p class=\"address\">Address</p>\r\n                          <p class=\"v-map\">{{element.course?.locationName}} - <a\r\n                              (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                          <mat-chip-list #chipList>\r\n                            <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                              (click)=\"changeSelected($event, action, element)\">\r\n                              <mat-icon>{{action.icon}}</mat-icon>\r\n                              {{action.action}}\r\n                            </mat-chip>\r\n                          </mat-chip-list>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"col-md-6\" *ngIf=\"selectedAction == actionIcons[2]\">\r\n          <google-map height=\"500px\" width=\"100%\"></google-map>\r\n          <app-mapcomponent [markersdata]=\"demoRequests\"></app-mapcomponent>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"demoRequests.length == 0 && loadDemo\" class=\"alert alert-info\">\r\n        There are no new requests at this time.\r\n      </div>\r\n      <div class=\"text-center\">\r\n        <mat-spinner *ngIf=\"!loadDemo\" [diameter]=\"30\"></mat-spinner>\r\n      </div>\r\n    </div> -->\r\n\r\n    <ng-container [ngSwitch]=\"selectedAction\">\r\n      <div class=\"container-fluid\">\r\n        <ng-container *ngSwitchCase=\"actionIcons[0]\">\r\n          <div class=\"card card-chip mb-3\" *ngFor=\"let element of filteredRequests\">\r\n            <div class=\"row no-gutters\">\r\n              <div class=\"col-md-2\">\r\n                <div class=\"card-img\">\r\n                  <img [src]=\"element.account?.accountDetails?.profilePic || 'assets/profile-pic.svg'\"\r\n                    class=\"img-thumbnail m-2\" width=\"200\">\r\n                  <img src=\"assets/demo/group-10-copy-3.png\"\r\n                    srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                    class=\"Group-10-Copy-3\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-10\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title text-dark\">\r\n                    <a class=\"Student-Name-10th-S\"> {{element.account?.name | uppercase}}\r\n                    </a>\r\n                  </h5>\r\n                  <div class=\"card-text Requested-Subs-M\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <p>Requested Sub(s) — {{element.subject}}</p>\r\n                        <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                          {{element.date | date: 'shortTime'}} slot</p>\r\n                      </div>\r\n                      <div class=\"col\">\r\n                        <p class=\"address\">Address</p>\r\n                        <p class=\"v-map\">{{element.event?.locationName}} - <a\r\n                            (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                      </div>\r\n                      <div class=\"col-12\">\r\n                        <mat-chip-list #chipList>\r\n                          <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                            (click)=\"changeSelected($event, action, element)\">\r\n                            <mat-icon>{{action.icon}}</mat-icon>\r\n                            {{action.action}}\r\n                          </mat-chip>\r\n                        </mat-chip-list>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"actionIcons[1]\">\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4\" *ngFor=\"let element of filteredRequests\">\r\n                <div class=\"card card-chip mb-3\">\r\n                  <div class=\"row no-gutters\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"card-img\">\r\n                        <img [src]=\"element.account?.accountDetails?.profilePic || 'assets/profile-pic.svg'\"\r\n                          class=\"img-thumbnail m-2\" width=\"200\">\r\n                        <img src=\"assets/demo/group-10-copy-3.png\"\r\n                          srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                          class=\"Group-10-Copy-3\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"card-body\">\r\n                        <h5 class=\"card-title text-dark\">\r\n                          <a class=\"Student-Name-10th-S\"> {{element.account?.name | uppercase}}\r\n                          </a>\r\n                        </h5>\r\n                        <div class=\"card-text Requested-Subs-M\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col\">\r\n                              <p>Requested Sub(s) — {{element.subject}}</p>\r\n                              <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                                {{element.date | date: 'shortTime'}} slot</p>\r\n                            </div>\r\n                            <div class=\"col text-right\">\r\n                              <p class=\"address\">Address</p>\r\n                              <p class=\"v-map\">{{element.event?.locationName}} - <a\r\n                                  (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                              <mat-chip-list #chipList>\r\n                                <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                                  (click)=\"changeSelected($event, action, element)\">\r\n                                  <mat-icon>{{action.icon}}</mat-icon>\r\n                                  {{action.action}}\r\n                                </mat-chip>\r\n                              </mat-chip-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"actionIcons[2]\">\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-7\">\r\n                <div class=\"card card-chip mb-3\" *ngFor=\"let element of filteredRequests\">\r\n                  <div class=\"row no-gutters\">\r\n                    <div class=\"col-md-2\">\r\n                      <div class=\"card-img\">\r\n                        <img [src]=\"element.account?.accountDetails?.profilePic || 'assets/profile-pic.svg'\"\r\n                          class=\"img-thumbnail m-2\" width=\"200\">\r\n                        <img src=\"assets/demo/group-10-copy-3.png\"\r\n                          srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                          class=\"Group-10-Copy-3\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-10\">\r\n                      <div class=\"card-body\">\r\n                        <h5 class=\"card-title text-dark\">\r\n                          <a class=\"Student-Name-10th-S\"> {{element.account.name | uppercase}}\r\n                          </a>\r\n                        </h5>\r\n                        <div class=\"card-text Requested-Subs-M\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col\">\r\n                              <p>Requested Sub(s) — {{element.subject}}</p>\r\n                              <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                                {{element.date | date: 'shortTime'}} slot</p>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                              <p class=\"address\">Address</p>\r\n                              <p class=\"v-map\">{{element.event?.locationName}} - <a\r\n                                  (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                              <mat-chip-list #chipList>\r\n                                <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                                  (click)=\"changeSelected($event, action, element)\">\r\n                                  <mat-icon>{{action.icon}}</mat-icon>\r\n                                  {{action.action}}\r\n                                </mat-chip>\r\n                              </mat-chip-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-5\">\r\n                <app-mapcomponent [markersdata]=\"filteredRequests\"></app-mapcomponent>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <div *ngIf=\"filteredRequests.length == 0 && loadDemo\" class=\"alert alert-info\">\r\n      There are no new requests.\r\n    </div>\r\n    <div class=\"text-center\">\r\n      <mat-spinner *ngIf=\"!loadDemo\" [diameter]=\"30\"></mat-spinner>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-adminstudents',\n  templateUrl: './adminstudents.component.html',\n  styleUrls: ['./adminstudents.component.css']\n})\nexport class AdminstudentsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  error;\n\n  constructor(private adminService: AdminService, private alertService: AlertService) { }\n\n  displayedColumns: string[] = ['sno', 'name', 'email', 'profilePic', 'phone'];\n  dataSource: MatTableDataSource<any>;\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource();\n    this.loadStudents();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadStudents(){\n    this.adminService.getadminData().subscribe(x => {\n      this.dataSource.data = x.students;\n    }, (error) => {\n      this.alertService.error(error);\n    });\n  }\n\n  click(event, row){\n\n  }\n\n  applyFilter(eve){\n    const filterValue = (eve.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n}\n","<div class=\"tutor-table\">\n  <h1>Students</h1>\n  <div class=\"form-group row\">\n    <div class=\"offset-md-8 col-md-4\">\n      <div class=\"input-group mb-2\">\n        <input class=\"form-control input-rounded\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\" #input>\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <mat-icon>search</mat-icon>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"mat-container mat-elevation-z8\">\n    <table mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"sno\" sticky>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No. </th>\n        <td mat-cell *matCellDef=\"let i = index\">\n        {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\n      </td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n        <td mat-cell *matCellDef=\"let row\"><a href (click)=\"click($event,row)\">{{row.name | uppercase}}</a> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"profilePic\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Profile </th>\n        <td mat-cell *matCellDef=\"let row\"> <img class=\"profile\" [src]=\"row.accountDetails?.profilePic\"> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"phone\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"startdate\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Start Date </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.account.startDate}} </td>\n      </ng-container> -->\n      <!-- <ng-container matColumnDef=\"star\"  stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-icon color=\"primary\" (click)=\"click($event,row)\">visibility</mat-icon>\n        </td>\n      </ng-container> -->\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n\n\n\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {\r\n  ActivatedRoute\r\n} from '@angular/router';\r\nimport {\r\n  DemoService\r\n} from 'src/app/_services/demo.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-demodetail',\r\n  templateUrl: './demodetail.component.html',\r\n  styleUrls: ['./demodetail.component.css']\r\n})\r\nexport class DemodetailComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private demoService: DemoService) {}\r\n\r\n  @Input()\r\n  course;\r\n\r\n  @Output() listView = new EventEmitter<boolean>();\r\n\r\n  demo;\r\n  enrollments: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['name', 'email', 'phone'];\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.course);\r\n    this.demo = this.course;\r\n    const enrollmentarray = [];\r\n    this.demo?.enrollments?.forEach(e => {\r\n        enrollmentarray.push({\r\n          name : e.account.firstName + ' ' + e.account.lastName,\r\n          email: e.account.email,\r\n          phone: e.account.phone\r\n        });\r\n      });\r\n    this.enrollments = new MatTableDataSource(enrollmentarray);\r\n  }\r\n\r\n  returnToList(){\r\n    this.listView.emit(true);\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"demo-header\"> \r\n      <div class=\"d-flex\">\r\n        <a (click)=\"returnToList()\"><mat-icon>west</mat-icon></a>\r\n        <div>\r\n          <div class=\"header-title\">{{demo?.title}}</div>\r\n          <div class=\"header-subtitle\">{{demo?.locationName}}</div>\r\n          <div class=\"header-subtitle\"><a [href]=\"demo?.calendarEvent?.videoLink\">{{demo?.calendarEvent?.videoLink}}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"d-flex flex-column text-center\">\r\n          <p class=\"header-title\">{{demo?.startDate | date}} - {{demo?.endDate | date}}</p>\r\n          <p class=\"header-subtitle\">{{demo?.startTime}} - {{demo?.endTime}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- <div class=\"card-title\">\r\n        Enrolled Students\r\n      </div> -->\r\n    <table mat-table #table [dataSource]=\"enrollments\">\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <img class=\"img-responsive\" src=\"assets/demo/avatar.png\">\r\n          {{row.name}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"email\">\r\n        <th mat-header-cell *matHeaderCellDef> Email </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"phone\">\r\n        <th mat-header-cell *matHeaderCellDef> Phone </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\r\n      </ng-container>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <!-- <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            New Requests\r\n          </mat-expansion-panel-header>\r\n          <app-demolist [demoId]=\"courseId\"></app-demolist>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            Enrolled Students\r\n          </mat-expansion-panel-header>\r\n\r\n        </mat-expansion-panel>\r\n      </mat-accordion> -->\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-siteaboutus',\r\n  templateUrl: './siteaboutus.component.html',\r\n  styleUrls: ['./siteaboutus.component.css']\r\n})\r\nexport class SiteaboutusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/ABOUT US</p>\r\n          <h2 class=\"welove-text\">We provide Great service,\r\n            Professional support.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/website/aboutus/about-1.png\"\r\n            srcset=\"assets/website/aboutus/about-1-1.png 2x,assets/website/aboutus/about-1-2.png 3x\" class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"about-vs\">\r\n  <div class=\"container\">\r\n    <div class=\"about-vs-text\">\r\n      <div class=\"m-2\">\r\n        <img src=\"assets/website/aboutus/about-2.png\"\r\n          srcset=\"assets/website/aboutus/about-2-1.png 2x,assets/website/aboutus/about-2-2.png 3x\" class=\"about-us-1\">\r\n      </div>\r\n      <div class=\"m-2\">\r\n        <h3 class=\"card-title we-love-dev\">About VidhyaSadhan</h3>\r\n        <p class=\"we-love-dev-text about-us-1\">Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown\r\n          printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five\r\n          centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised\r\n          in the 1960s with the release of Letraset sheets containing.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"bg-white\">\r\n  <div class=\"history\">\r\n    <div class=\"text-center\">\r\n      <h2 class=\"history-text\">Our History</h2>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <div class=\"history-card\">\r\n            <h4 class=\"history-head\">May 2020</h4>\r\n            <div>\r\n              Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit,\r\n              at vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper pellentesque orci, nec vestibulum\r\n              nibh.uspendisse\r\n            </div>\r\n          </div>\r\n          <div class=\"history-card\">\r\n            <h4 class=\"history-head\">July 2020</h4>\r\n            <div class=\"\">\r\n              Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit,\r\n              at vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper pellentesque orci, nec vestibulum\r\n              nibh.uspendisse\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"history-line\">\r\n          <div class=\"history-line-bar\" *ngFor=\"let number of [0,1,2,3,4,5,6,7]\">\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div class=\"history-card-right\">\r\n            <h4 class=\"history-head\">June 2020</h4>\r\n            <div>\r\n              Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit,\r\n              at vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper pellentesque orci, nec vestibulum\r\n              nibh.uspendisse\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p class=\"to-be-continue\">To be Continue....</p>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div class=\"team bg-white\">\r\n  <div class=\"team-cards\">\r\n    <h2 class=\"history-text\">Meet the team</h2>\r\n    <div class=\"team-card-parent\">\r\n      <div class=\"child child1\">\r\n      </div>\r\n      <div class=\"child child2\">\r\n      </div>\r\n      <div class=\"child child3\">\r\n        <div class=\"child-text\">\r\n          <h6>CEO</h6>\r\n          <p>Subash Reddy. M</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"child child4\">\r\n      </div>\r\n      <div class=\"child child5\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { LOCALE_ID, Inject, Injectable } from '@angular/core';\r\nimport { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class CustomCalendarFormat extends CalendarEventTitleFormatter {\r\n  constructor(@Inject(LOCALE_ID) private locale: string) {\r\n    super();\r\n  }\r\n\r\n  // you can override any of the methods defined in the parent class\r\n\r\n  month(event: CalendarEvent): string {\r\n    return `<b>${event.startTime} - ${event.endTime}</b> ${event.title}`;\r\n  }\r\n\r\n  week(event: CalendarEvent): string {\r\n    return `<b>${event.startTime} - ${event.endTime}</b> ${event.title}`;\r\n  }\r\n\r\n  day(event: CalendarEvent): string {\r\n    return `<b>${event.startTime} - ${event.endTime}</b> ${event.title}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthserviceService } from '../_services/authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class JwtTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthserviceService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const user = this.authService.userValue;\r\n    const isLoggedIn = user && user.jwtToken;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      const headers = new HttpHeaders({\r\n        Authorization: `Bearer ${user.jwtToken}`,\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': 'true',\r\n      });\r\n      request = request.clone({\r\n          headers\r\n        });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-adminlayout',\r\n  templateUrl: './adminlayout.component.html',\r\n  styleUrls: ['./adminlayout.component.css']\r\n})\r\nexport class AdminlayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-vsnavigation></app-vsnavigation>\r\n","import { Directive, Output,\r\n  Input,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDragndir]'\r\n})\r\nexport class DragndirDirective {\r\n\r\n  @HostBinding('class.fileover') fileOver: boolean;\r\n  @Output() fileDropped = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = true;\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n  }\r\n\r\n  @HostListener('drop', ['$event']) public ondrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n    const files = evt.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      this.fileDropped.emit(files);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.css']\n})\nexport class AddressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\n\r\n@Component({\r\n  selector: 'app-carouselhelper',\r\n  templateUrl: './carouselhelper.component.html',\r\n  styleUrls: ['./carouselhelper.component.css']\r\n})\r\nexport class CarouselhelperComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input()\r\n  slidesStore;\r\n\r\n  @Input()\r\n  sourceType;\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: false,\r\n    touchDrag: false,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      400: {\r\n        items: 2\r\n      },\r\n      740: {\r\n        items: 3\r\n      },\r\n      940: {\r\n        items: 4\r\n      }\r\n    },\r\n    nav: true\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<owl-carousel-o [options]=\"customOptions\">\r\n  <ng-container *ngFor=\"let slide of slidesStore\">\r\n    <ng-template carouselSlide [id]=\"slide.id\">\r\n      <!-- <img [src]=\"slide.src\" [alt]=\"slide.alt\" [title]=\"slide.title\"> -->\r\n      <div class=\"m-2\">\r\n        <iframe id=\"ytplayer\" type=\"text/html\" width=\"100%\" height=\"auto\" [src]=\"slide.video | urlsafe\"\r\n        frameborder=\"0\"></iframe>\r\n      </div>\r\n    </ng-template>\r\n  </ng-container>\r\n</owl-carousel-o>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-evaluation-detail',\r\n  templateUrl: './evaluation-detail.component.html',\r\n  styleUrls: ['./evaluation-detail.component.css']\r\n})\r\nexport class EvaluationDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  selectedValue: number;\r\n  starsarray = [1, 2, 3, 4, 5];\r\n\r\n  ratingList = [\r\n     {id: 1, name: 'Leadership skills', value: 0, data: this.starsarray},\r\n     {id: 2, name: 'English language knowledge', value: 0, data: this.starsarray},\r\n     {id: 3, name: 'Communication skills', value: 0, data: this.starsarray},\r\n     {id: 4, name: 'Problem solving', value: 0, data: this.starsarray},\r\n     {id: 5, name: 'Programming skills', value: 0, data: this.starsarray},\r\n     {id: 6, name: 'Ability to learning', value: 0, data: this.starsarray},\r\n     {id: 7, name: 'Workflow behavior', value: 0, data: this.starsarray},\r\n     {id: 8, name: 'Sence of humor', value: 0, data: this.starsarray}\r\n  ];\r\n\r\n  feedback1;\r\n  feedback2;\r\n\r\n  @Input()\r\n  student;\r\n\r\n  @Output()\r\n  onSelectValue = new EventEmitter<{isReturn}>();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  startCount(star, rating){\r\n    rating.value = star;\r\n    const sum = this.ratingList.map(a => a.value).reduce((a, b) =>\r\n    {\r\n      return a + b;\r\n    });\r\n\r\n    this.selectedValue = sum / 8;\r\n  }\r\n\r\n  gotolist(){\r\n    this.onSelectValue.emit( {isReturn: true});\r\n  }\r\n\r\n  reset(){\r\n    this.selectedValue = 0;\r\n    this.ratingList.forEach(x => x.value = 0);\r\n    this.feedback1 = null;\r\n    this.feedback2 = null;\r\n  }\r\n\r\n  cancel(){\r\n    this.onSelectValue.emit( {isReturn: true});\r\n  }\r\n\r\n  onSubmit(){\r\n  }\r\n\r\n\r\n}\r\n","<mat-card>\r\n  <mat-card-header class=\"header-rad\">\r\n    <mat-card-title>\r\n      <a (click)=\"gotolist()\" mat-icon-button>\r\n        <mat-icon>west</mat-icon>\r\n      </a>\r\n      <img class=\"rounded-circle\" width=\"50\" height=\"50\" [src]=\"student.account.profilePic\">\r\n      {{student.account.firstName}} {{student.account.lastName}}\r\n    </mat-card-title>\r\n    <div class=\"row ml-auto\">\r\n        <div class=\"d-flex flex-column mr-5 mt-2\">\r\n            <mat-card-subtitle>Average Score</mat-card-subtitle>  \r\n            <div>\r\n               <span>{{selectedValue}}</span>\r\n                <ul class=\"list-inline rating-list\" *ngFor=\"let star of starsarray\" style=\"display: inline-block\">\r\n                    <li class=\"p-1\" [ngClass]=\"{'selected': (star <= selectedValue)}\">\r\n                      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-star-fill\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                          d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n                      </svg>\r\n                    </li>\r\n                  </ul>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h4 class=\"skills\">Personal skills and competences</h4>\r\n    <ul class=\"list-group\">\r\n      <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let rating of ratingList\">\r\n        {{rating.name}}\r\n        <span>\r\n          <ul class=\"list-inline rating-list\" *ngFor=\"let star of rating.data\" style=\"display: inline-block\">\r\n            <li (click)=\"startCount(star, rating)\" [ngClass]=\"{'selected': (star <= rating.value)}\">\r\n              <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-star-fill\" fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n              </svg>\r\n            </li>\r\n          </ul>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <h4 class=\"feedback\">Write a Feedback</h4>\r\n    <div class=\"form-group\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"feedback1\">What went well?</mat-label>\r\n        <textarea matInput id=\"feedback1\" [(ngModel)]=\"feedback1\"></textarea>\r\n      </mat-form-field>  \r\n    </div>\r\n    <div class=\"form-group\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"feedback2\">What could be improved?</mat-label>\r\n        <textarea matInput id=\"feedback2\" [(ngModel)]=\"feedback2\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <div class=\"d-flex\">\r\n      <div>\r\n        <button mat-raised-button (click)=\"reset()\">Reset</button>\r\n      </div>\r\n      <div class=\"ml-auto\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"cancel()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\">Submit</button>\r\n      </div>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AuthserviceService } from './authservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient, private authService: AuthserviceService) { }\n\n  getadminData(){\n    return this.http.get<any>(`${environment.apiUrl}/admin`, {\n      withCredentials: true\n    });\n  }\n\n  updateTutor(request){\n    return this.http.post<any>(`${environment.apiUrl}/admin/approve/tutor`, request, {\n      withCredentials: true\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TutorReferralsDetailsComponent } from './tutor-referrals-details/tutor-referrals-details.component';\r\n\r\n@Component({\r\n  selector: 'app-tutor-referrals',\r\n  templateUrl: './tutor-referrals.component.html',\r\n  styleUrls: ['./tutor-referrals.component.css']\r\n})\r\nexport class TutorReferralsComponent implements OnInit {\r\n\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  open() {\r\n    const modalRef = this.modalService.open(TutorReferralsDetailsComponent, { size: 'lg' });\r\n    modalRef.componentInstance.name = 'World';\r\n  }\r\n\r\n}\r\n","<div class=\"card h-100 m-2\">\r\n  <div class=\"card-header card-header-styles\">\r\n    <span class=\"my-refferal\">My Referrals</span>\r\n  </div>\r\n  <div class=\"card-body sub-card\">\r\n    <div class=\"row \">\r\n      <div class=\"col-6\">\r\n        <h2 class=\"card-title refer-friends-earn\">Refer Friends & Earn Credits</h2>\r\n        <h5 class=\"card-text text-left introduce-a-friend-t\">Introduce a friend to VidhyaSadhan and youi’’ be credited $XX to your account.</h5>\r\n      </div>\r\n      <div class=\"col-6 text-right\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"my-credit mb-3 text-center\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-2\">\r\n\r\n                  </div>\r\n                  <div class=\"col-8 mt-4\">\r\n                    <span class=\"text-500 mt-3 text-center\">\r\n                      $ 500\r\n                    </span>\r\n                    <h4 class=\"mt-2\">\r\n                      My Credits\r\n                    </h4>\r\n                      <div class=\"transfer-to-earnings mb-2\">\r\n                        Transfer to Earnings\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"row sub-card-2\">\r\n      <div class=\"col-12 mt-3\">\r\n\r\n        <label for=\"basic-url\" class=\"share-my-referral-li\">Share my referral link with friends</label>\r\n        <div class=\"input-group mb-3 width-65\">\r\n\r\n          <input type=\"text\" class=\"form-control text-box-styles\" id=\"basic-url\"\r\n            placeholder=\"https://...................\" aria-describedby=\"basic-addon3\">\r\n          <div class=\"input-group-append\">\r\n            <button class=\"btn btn-outline-secondary copyLink\" type=\"button\">Copy Link</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <button type=\"button\" class=\"btn btn-fb\"><i class=\"fab fa-facebook-f pr-1\"></i> Facebook</button>\r\n        <!--Twitter-->\r\n        <button type=\"button\" class=\"btn btn-tw\"><i class=\"fab fa-twitter pr-1\"></i> Twitter</button>\r\n        <!--Google +-->\r\n        <button type=\"button\" class=\"btn btn-gplus\"><i class=\"fab fa-google-plus-g pr-1\"></i> Google +</button>\r\n        <!--Linkedin-->\r\n        <button type=\"button\" class=\"btn btn-li\"><i class=\"fab fa-linkedin-in pr-1\"></i> Linkedin</button>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <div class=\"row mt-4\">\r\n          <div class=\"col-6 refferal-card h-100\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4 text-center  my-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-11\">\r\n                    <span class=\"refferal-number\">\r\n                      19\r\n                    </span>\r\n                    <span>\r\n                      <br>\r\n                      <img class=\"my-3\" src=\"assets/referrals/referral-signup.png\" alt=\"referral-signup.png\" />\r\n                      <br>\r\n                      <span class=\"referal-signups\">\r\n                        Referal Signups\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-1 vertical\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4 text-center  my-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-11\">\r\n                    <span class=\"refferal-number\">\r\n                      12\r\n                    </span>\r\n                    <span>\r\n                      <br>\r\n                      <img class=\"my-3\" src=\"assets/referrals/noun-meeting-successful.png\" alt=\"noun-meeting-successful.png\" />\r\n                      <br>\r\n                      <span class=\"referal-signups\">\r\n                        Referal Signups\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-1 vertical\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4 text-center  my-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-11\">\r\n                    <span class=\"refferal-number\">\r\n                      $5\r\n                    </span>\r\n                    <span>\r\n                      <br>\r\n                      <img class=\"my-3\" src=\"assets/referrals/noun-earning.png\" alt=\"noun-earning.png\" />\r\n                      <br>\r\n                      <span class=\"referal-signups\">\r\n                        Referal Signups\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-1\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row text-center mb-3\">\r\n                 <div class=\"col-12\">\r\n                  <button class=\"btn btn-primary view-details\" (click)=\"open()\">\r\n                    View Details\r\n                  </button>\r\n                 </div> \r\n            </div>\r\n          </div>\r\n          <div class=\"col-6 referral-imag-top\">\r\n            <img src=\"assets/referrals/referralsideimage.png\" alt=\"referralsideimage.png\" />\r\n    \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n          <p class=\"please-note-that-som mt-3\">\r\n            Please note that some Terms and Conditions apply <br>\r\nYour friends will need to verify their identiy before any cash rewards are paid to your account.\r\n          </p>\r\n      </div>\r\n    </div>\r\n   \r\n  </div>\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { DatePipe } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  templateUrl: './attendancemodal.component.html',\n  styleUrls: ['./attendancemodal.component.css']\n})\nexport class AttendancemodalComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              public dialogRef: MatDialogRef<AttendancemodalComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private datePipe: DatePipe) { }\n\n  public attendanceForm: FormGroup;\n\n  ngOnInit(): void {\n    console.log(this.data);\n    this.attendanceForm = this.formBuilder.group({\n      id: [this.data.id, Validators.required],\n      userId: [this.data.userId, Validators.required],\n      courseId: [this.data.courseId, Validators.required],\n      eventCourseId: [this.data.eventCourseId, Validators.required],\n      attendanceDate: [this.datePipe.transform(this.data.attendanceDate, 'yyyy-MM-dd') , Validators.required],\n      isPresent: [this.data.isPresent],\n      reason: [this.data.reason],\n      remarks: [this.data.remarks],\n    });\n  }\n\n  get f(){\n    return this.attendanceForm.controls;\n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  submittedAttendance(){\n    this.dialogRef.close(this.attendanceForm.value);\n  }\n\n}\n","\n<h1 mat-dialog-title>{{data.event?.title}} - {{data.user?.firstName}}</h1>\n\n<div mat-dialog-content>\n  <form [formGroup]=\"attendanceForm\" (submit)=\"submittedAttendance()\">\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"date\">Date</label>\n        <input type=\"date\" readonly id=\"date\"  class=\"form-control-plaintext\" formControlName=\"attendanceDate\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"status\">Attendance</label>\n        <select id=\"status\" class=\"form-control\" formControlName=\"isPresent\">\n          <option selected></option>\n          <option value=\"true\">Present</option>\n          <option value=\"false\">Absent</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"reason\">Reason</label>\n        <textarea class=\"form-control\" formControlName=\"reason\" id=\"reason\"  rows=\"3\"></textarea>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"remarks\">Remarks</label>\n        <textarea class=\"form-control\" formControlName=\"remarks\" id=\"remarks\"  rows=\"3\"></textarea>\n      </div>\n    </div>\n    <button type=\"submit\" hidden #submitbutton></button>\n  </form>\n<!--\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n    <input type=\"text\" id=\"name\"  class=\"form-control-plaintext\" [value]=\"data.user?.firstName\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"title\">Course</label>\n    <input type=\"text\" id=\"title\"  class=\"form-control-plaintext\" [value]=\"data.event?.title\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"date\">Date</label>\n    <input type=\"date\" readonly id=\"date\"  class=\"form-control-plaintext\" formControlName=\"attendanceDate\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"status\">Attendance</label>\n    <select id=\"status\" class=\"form-control\" formControlName=\"isPresent\">\n      <option selected></option>\n      <option value=\"true\">Present</option>\n      <option value=\"false\">Absent</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"reason\">Reason</label>\n    <textarea class=\"form-control\" formControlName=\"reason\" id=\"reason\"  rows=\"3\"></textarea>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"remarks\">Remarks</label>\n    <textarea class=\"form-control\" formControlName=\"remarks\" id=\"remarks\"  rows=\"3\"></textarea>\n  </div> -->\n\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button type=\"submit\" (click)=\"submitbutton.click()\"  cdkFocusInitial>Ok</button>\n</div>\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AuthserviceService } from './_services/authservice.service';\r\nimport { NotificationMiddlewareService } from './core/notification-middleware.service';\r\nimport {SwPush, SwUpdate} from '@angular/service-worker';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'vidhyasadhan-ui';\r\n  user: User;\r\n  showFiller = false;\r\n\r\n  constructor(private authService: AuthserviceService){\r\n    this.authService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  ngOnInit(){\r\n    // this.notificationMiddleware.init();\r\n    // this.notificationMiddleware.initialize();\r\n    // if (this.swUpdate.isEnabled){\r\n    //   this.notificationMiddleware.pushNotificationStatus.isSupported = true;\r\n    // }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","<!-- <nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/notifications\">Notifications <span class=\"badge badge-secondary\" *ngIf=\"notificationMiddleware.notifications.length\">{{notificationMiddleware.notifications.length}}</span></a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/broadcast\">Broadcasts</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n  </div>\r\n</nav>  -->\r\n\r\n\r\n<div class=\"app-wide\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- <app-sidenav-bar></app-sidenav-bar> -->\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-vsnavigation',\r\n  templateUrl: './vsnavigation.component.html',\r\n  styleUrls: ['./vsnavigation.component.css']\r\n})\r\nexport class VsnavigationComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"(isHandset$ | async) === false\">\r\n    <mat-toolbar><img class=\"w-100\" src=\"assets/vidhyasadhan-logo.svg\"></mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin']\">Dashboard</a>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin/tutors']\">Tutors</a>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin/students']\">Students</a>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin/payments']\">Payments</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <a\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n    </a>\r\n      <span>\r\n        <img *ngIf=\"!drawer.opened\" class=\"w-100\" src=\"assets/vidhyasadhan-logo.svg\">\r\n      </span>\r\n    </mat-toolbar>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { FileuploaderService } from 'src/app/_services/fileuploader.service';\r\n\r\n@Component({\r\n  selector: 'app-studymaterial',\r\n  templateUrl: './studymaterial.component.html',\r\n  styleUrls: ['./studymaterial.component.css']\r\n})\r\nexport class StudymaterialComponent implements OnInit {\r\n\r\n  constructor(private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private fileUploader: FileuploaderService) { }\r\n\r\n  assignments;\r\n  courses;\r\n  filter;\r\n  error;\r\n  isUploaded;\r\n  uploadedFile;\r\n  isSuccess;\r\n  actions = [\r\n    { id: 1, name: 'Courses'},\r\n    { id: 2, name: 'Materials'}\r\n  ];\r\n  selectedAction;\r\n\r\n  ngOnInit(): void {\r\n    this.courseService.getAllCoursesByUser(this.authService.userValue.id)\r\n    .subscribe(x => this.courses = x, (error) => this.error = error);\r\n    // this.courseService.getStudentAssignments(this.authService.userValue.id)\r\n    // .subscribe(x => {this.assignments = x; console.log(this.assignments); },\r\n    //   (error) => this.error = error);\r\n    this.selectedAction = this.actions[0];\r\n  }\r\n\r\n  downloadFile(data) {\r\n    const blob = new Blob([data]);\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(data);\r\n  }\r\n\r\n  fileBrowse(files){\r\n    this.uploadedFile = files[0];\r\n    this.isUploaded = true;\r\n  }\r\n\r\n  onSubmit(assignment){\r\n    assignment.submissionDate = new Date();\r\n    assignment.status = 1;\r\n    if (this.isUploaded){\r\n      const fileToUpload =  this.uploadedFile as File;\r\n      const formData = new FormData();\r\n      formData.append('file', fileToUpload, fileToUpload.name);\r\n      this.fileUploader.uploadFile(formData).subscribe(x => {\r\n        assignment.submissionFile = x.filepath;\r\n        this.update(assignment);\r\n      });\r\n    }\r\n    else{\r\n      this.update(assignment);\r\n    }\r\n  }\r\n\r\n  update(assignment){\r\n    const assignmentToUpdate = {\r\n      assignmentId: assignment.assignmentId,\r\n      status: 1,\r\n      submissionDate: assignment.submissionDate,\r\n      submissionFile: assignment.submissionFile,\r\n      userId: assignment.userId,\r\n    };\r\n    this.courseService.updateStudentAssignments(assignmentToUpdate).subscribe(x => {if (x >= 0){\r\n      this.isSuccess = true;\r\n    }}, (error) => this.isSuccess = false);\r\n  }\r\n\r\n  onDelete(){\r\n    this.uploadedFile = null;\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n  <div class=\"card m-2 min-card\">\r\n    <div class=\"card-header material-bg\">\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>{{selectedAction.name}}</div>\r\n        <div ngbDropdown class=\"d-inline-block\">\r\n          <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>\r\n            {{selectedAction.name}}\r\n          </button>\r\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n            <button ngbDropdownItem (click)=\"selectedAction = action\"\r\n              *ngFor=\"let action of actions\">{{action.name}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <span [ngSwitch]=\"selectedAction.name\">\r\n      <div class=\"card-body\" *ngSwitchCase=\"actions[0].name\">\r\n        <div class=\"alert alert-primary alert-dismissible fade show\" role=\"alert\" *ngIf=\"error\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            <span class=\"sr-only\">Close</span>\r\n          </button>\r\n          <strong>{{error}}</strong>\r\n        </div>\r\n        <div class=\"row m-2\">\r\n          <div class=\"col-md-6\"\r\n            *ngFor=\"let course of courses | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n            <ng-container>\r\n              <div class=\"card m-1\">\r\n                <div class=\"card-header\">\r\n                  <div class=\"d-flex\">\r\n                    <div>\r\n                      <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                      <span class=\"subject\">{{course.title}}</span>\r\n                    </div>\r\n                    <div class=\"ml-auto\">\r\n                     {{course.startDate | date}} - {{course.endDate | date}}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <h3 class=\"card-title title\">{{course.subject}} - {{course.grade}}</h3>\r\n                  <p class=\"card-sub-title subtitle\">Tutor: {{course?.owner?.firstName | uppercase}} {{course?.owner?.lastName | uppercase}}</p>\r\n                  <div class=\"card-text perfomed\">\r\n                    <div class=\"d-flex\">\r\n                      <span>{{course.locationName}}</span>\r\n                      <span class=\"list-inline\">\r\n                        <!-- <span class=\"list-inline-item\" *ngFor=\"let user of assignment.studentAssignments\">\r\n                          <img [src]=\"user.account.profilePic\" class=\"profimg\">\r\n                        </span> -->\r\n                      </span>\r\n                      <span class=\"ml-auto\">\r\n                        <a class=\"badge badge-warning p-2 text-white\">Join Meeting</a>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"card-body\" *ngSwitchCase=\"actions[1].name\">\r\n        <div class=\"alert alert-primary alert-dismissible fade show\" role=\"alert\" *ngIf=\"error\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            <span class=\"sr-only\">Close</span>\r\n          </button>\r\n          <strong>{{error}}</strong>\r\n        </div>\r\n        <div class=\"row m-2\">\r\n          <div class=\"col-md-6\"\r\n            *ngFor=\"let model of assignments | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n            <ng-container>\r\n              <div class=\"card m-1\">\r\n                <div class=\"card-header\">\r\n                  <div class=\"d-flex\">\r\n                    <div>\r\n                      <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                      <span class=\"subject\">{{model.assignment.title}}</span>\r\n                    </div>\r\n                    <div class=\"ml-auto\">\r\n                      <div class=\"list-inline\">\r\n                        <a mat-mini-fab color=\"secondary\" (click)=\"downloadFile(model.assignment.assignmentFile)\" title=\"download\" class=\"list-inline-item\">\r\n                          <mat-icon>cloud_download</mat-icon>\r\n                        </a>\r\n                        <a mat-mini-fab color=\"secondary\" title=\"upload\" (click)=\"uploader.click()\"  class=\"list-inline-item\">\r\n                          <mat-icon>cloud_upload</mat-icon>\r\n                        </a>\r\n                        <input hidden  type=\"file\" #uploader (change)=\"fileBrowse($event.target.files)\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <h3 class=\"card-title title\">{{model.assignment.subject}}</h3>\r\n                  <p class=\"card-sub-title subtitle\">{{model.assignment.topic}}</p>\r\n                  <div class=\"card-text perfomed\">\r\n                    <div class=\"d-flex flex-column\">\r\n                      <span>Due: {{model.assignment.dueDate | date: 'medium'}}</span>\r\n                      <span class=\"list-inline\" *ngIf=\"uploadedFile\">\r\n                          {{uploadedFile.name}}\r\n                      </span>\r\n                      <span *ngIf=\"uploadedFile\">\r\n                        <a (click)=\"onSubmit(model)\"><span class=\"badge badge-pill badge-primary\" >Submit</span></a>\r\n                        <a (click)=\"onDelete()\"><span class=\"badge badge-pill badge-danger\">Delete</span></a>\r\n                      </span>\r\n                      <span class=\"ml-auto\">\r\n                          <ng-container [ngSwitch]=\"model.status\">\r\n                            <span class=\"badge badge-pill badge-warning\" *ngSwitchCase=\"0\">Pending</span>\r\n                            <span class=\"badge badge-pill badge-success\" *ngSwitchCase=\"1\">Submitted</span>\r\n                            <span class=\"badge badge-pill badge-primary\" *ngSwitchCase=\"2\">Evaluated</span>\r\n                          </ng-container>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n      <div class=\"card-body\" *ngSwitchCase=\"actions[1].name\">\r\n        <app-studentmateriallist></app-studentmateriallist>\r\n      </div>\r\n    </span>\r\n\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Dashboard } from 'src/app/_models/dashboard';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  incomes: Dashboard[] = [\r\n    { id: 0, icon: 'leaderboard', text: 'Total Sales', subtext : 'Events', value : '0', type: '', color: '#345398' },\r\n    { id: 1, icon: 'work', text: 'Total Income', subtext : 'Pending tasks', value : '0', type: '', color: '#ddd374' },\r\n    { id: 2, icon: 'business_center', text: 'Total Revenue', subtext : 'Total Revenue', value : '0', type: '', color: '#e85710' },\r\n    { id: 3, icon: 'attach_money', text: 'Profits', subtext : 'Reward points', value : '0%', type: '', color: '#57c44e' }\r\n  ];\r\n\r\n  schedule = {\r\n    title: 'Scheduled Classes',\r\n    type: 'AreaChart',\r\n    data: [\r\n      ['Monday', 20, 4],\r\n      ['Tuesday', 10, 6],\r\n      ['Wednesday', 20, 10],\r\n      ['Thursday', 10, 5],\r\n      ['Friday', 20, 10],\r\n      ['Saturday', 10, 10],\r\n      ['Sunday', 20, 10]\r\n   ],\r\n   columnNames : ['Day', 'Online', 'Offline'],\r\n   width: '550px',\r\n   height: '400px',\r\n  };\r\n\r\n  users = {\r\n    title: 'Active Users',\r\n    type: 'PieChart',\r\n    data: [\r\n      ['Active', 200],\r\n      ['InActive', 20]\r\n   ],\r\n   columnNames : ['Users', 'Percentage'],\r\n   options : {\r\n    slices: {\r\n       1: {offset: 0.2},\r\n       3: {offset: 0.3}\r\n    },\r\n },\r\n   width: '550px',\r\n   height: '400px',\r\n  };\r\n\r\n  constructor(private adminservice: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminservice.getadminData().subscribe(\r\n      x => {\r\n        this.mapdashboard(x);\r\n      }\r\n    );\r\n  }\r\n\r\n  mapdashboard(data){\r\n    this.incomes.find(x => x.id === 0).value = data.classesOrDemos.length;\r\n    this.incomes.find(x => x.id === 1).value = data.newRequests.length;\r\n    this.incomes.find(x => x.id === 2).value = data.totalRevenue.length;\r\n    this.incomes.find(x => x.id === 3).value = data.classesOrDemos.length;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white\">\r\n    <div class=\"tcontainer\">\r\n        <div class=\"ticker-wrap\">\r\n            <div class=\"ticker-move\">\r\n                <div class=\"ticker-item\" *ngFor=\"let income of incomes\">\r\n                    <div class=\"d-flex border rounded m-2 justify-content-center\"> \r\n                        <div class=\"p-2\" [ngStyle]=\"{'background-color':income.color}\">\r\n                            <div class=\"m-4\"><mat-icon>{{income.icon}}</mat-icon></div>                           \r\n                        </div>\r\n                        <div class=\"p-2 bg-white\">\r\n                            <div class=\"m-2 card-width\">\r\n                                <div class=\"text-muted\">{{income.text}}</div>\r\n                                <h2 class=\"text-dark\">{{income.value}}</h2>\r\n                            </div>\r\n                        </div>                                     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"jumbotron bg-white\">\r\n    <div class=\"card-deck\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <div class=\"card-header-title\">{{schedule.title}}</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <google-chart  [type]=\"schedule.type\" \r\n              [data]=\"schedule.data\" [columns]=\"schedule.columnNames\"></google-chart>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <div class=\"card-header-title\">Active Users</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <google-chart  [type]=\"users.type\" \r\n                [data]=\"users.data\" [columns]=\"users.columnNames\" [options]=\"users.options\">\r\n            </google-chart>                  \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { User } from '../_models/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Profile } from '../_models/profile';\r\nimport { map } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private registerSubject: BehaviorSubject<any>;\r\n\r\n  get(id) {\r\n    return this.http.get<User>(`${environment.apiUrl}/profile/` + id);\r\n  }\r\n\r\n  getStudents() {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/users/students`);\r\n  }\r\n\r\n   getTutors() {\r\n    return this.http.get<any>(`${environment.apiUrl}/instructors`);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/users/allusers`);\r\n  }\r\n\r\n  getUserByRole(role){\r\n    const options = { params: new HttpParams().set('role',  role) };\r\n    return this.http.get<any>(`${environment.apiUrl}/accounts/byrole`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n\r\n  addUser(user: User){\r\n    return this.http.post<boolean>(`${environment.apiUrl}/users/register`, user);\r\n  }\r\n\r\n  register(model) {\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/register`, model, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getProfileData(userid){\r\n    const options = userid ?\r\n    { params: new HttpParams().set('id', userid) } : {};\r\n    return this.http.get<Profile>(`${environment.apiUrl}/profile/` + userid);\r\n  }\r\n\r\n  updateProfileData(profile){\r\n    return this.http.post<any>(`${environment.apiUrl}/profile`, profile, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  updateUser(){\r\n\r\n  }\r\n\r\n  deleteUser(){\r\n  }\r\n\r\n  uploadprofilepic(file){\r\n    return this.http.post<User>(`${environment.cloudinary.url}/upload`, file);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { AttendanceService } from 'src/app/_services/attendance.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { LocationModel } from 'src/app/_models/location';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AttendancemodalComponent } from '../attendancemodal/attendancemodal.component';\r\n\r\n@Component({\r\n  selector: 'app-attendance',\r\n  templateUrl: './attendance.component.html',\r\n  styleUrls: ['./attendance.component.css']\r\n})\r\nexport class AttendanceComponent implements OnInit {\r\n\r\n  sortoptions = [\r\n    {id: 0, value: 'Most Recent'},\r\n    {id: 1, value: 'Oldest'}\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<any>;\r\n  primary = 'primary';\r\n  selectedValue = 0;\r\n  selectedCourse;\r\n  isLoading;\r\n  courses;\r\n  filteredCourses;\r\n\r\n  public attendanceForm: FormGroup;\r\n  displayedColumns: string[] = ['name', 'address', 'attendanceDate', 'isPresent', 'reason', 'edit'];\r\n\r\n  constructor(private attendance: AttendanceService,\r\n              private formBuilder: FormBuilder,\r\n              private courseService: CourseService,\r\n              private demoService: DemoService,\r\n              private authService: AuthserviceService,\r\n              public dialog: MatDialog) { }\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.attendanceForm = this.formBuilder.group({\r\n      id: ['', Validators.required],\r\n      userId: ['', Validators.required],\r\n      courseId: ['', Validators.required],\r\n      attendanceDate: ['', Validators.required],\r\n      isPresent: ['', Validators.required],\r\n      reason: ['', Validators.required],\r\n      remarks: ['', Validators.required],\r\n  });\r\n\r\n    this.loadDemos();\r\n  }\r\n\r\n  private loadDemos() {\r\n    this.demoService.getAllDemosByUser(this.authService.userValue.id).subscribe(x => {\r\n      this.courses = x;\r\n      this.filteredCourses = x;\r\n      if (x.length > 0) {\r\n        this.getattendance(x[0]);\r\n        if (this.dataSource !== undefined) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  displaycourse(course){\r\n      return course.title;\r\n  }\r\n\r\n  getattendance(course){\r\n    this.attendance.getattendances(course.courseId).subscribe(x => { console.log(x); this.dataSource = new MatTableDataSource(x); });\r\n  }\r\n\r\n  applyFilter(event){\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource?.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  updateAttendance(attendance){\r\n    const dialogRef = this.dialog.open(AttendancemodalComponent, {\r\n      width: '450px',\r\n      data: attendance,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result !== null || result !== undefined){\r\n        this.attendance.updateAttendance(result).subscribe(\r\n          x => {\r\n            this.loadDemos();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  filterCourse(isOnline){\r\n    this.filteredCourses = this.courses.filter(x => x.eventType === isOnline);\r\n    if (this.filteredCourses.length > 0){\r\n      this.getattendance(this.filteredCourses[0]);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n}\r\n"," <mat-card>\r\n    <mat-card-header class=\"header-rad\">\r\n        <mat-card-title>Attendance Sheet</mat-card-title>\r\n        <mat-card-subtitle>Total Students</mat-card-subtitle>\r\n        <div class=\"row ml-auto\">\r\n            <div class=\"col-md-4\">\r\n                    <mat-form-field>\r\n                        <input matInput type=\"text\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n                        <button mat-button matSuffix mat-icon-button>\r\n                          <mat-icon>search</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n            </div>\r\n            <!-- <div class=\"col-md-3\">\r\n                <mat-form-field>\r\n                <mat-select  [(ngModel)]=\"selectedValue\" name=\"item\">\r\n                    <mat-option *ngFor=\"let item of sortoptions\" [value]=\"item.id\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n               </mat-form-field>\r\n            </div> -->\r\n            <div class=\"col-md-4\">\r\n                <mat-chip-list>\r\n                    <mat-chip class=\"bg-primary\" [color]=\"primary\">Print <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-printer\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M11 2H5a1 1 0 0 0-1 1v2H3V3a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2h-1V3a1 1 0 0 0-1-1zm3 4H2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h1v1H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1z\"/>\r\n                        <path fill-rule=\"evenodd\" d=\"M11 9H5a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1zM5 8a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H5z\"/>\r\n                        <path d=\"M3 7.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z\"/>\r\n                      </svg></mat-chip>\r\n                    <mat-chip  class=\"bg-primary\" [color]=\"primary\">Export <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-box-arrow-in-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\" d=\"M4.646 8.146a.5.5 0 0 1 .708 0L8 10.793l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                        <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0v-9A.5.5 0 0 1 8 1z\"/>\r\n                        <path fill-rule=\"evenodd\" d=\"M1.5 13.5A1.5 1.5 0 0 0 3 15h10a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 13 4h-1.5a.5.5 0 0 0 0 1H13a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5v-8A.5.5 0 0 1 3 5h1.5a.5.5 0 0 0 0-1H3a1.5 1.5 0 0 0-1.5 1.5v8z\"/>\r\n                      </svg>\r\n                    </mat-chip>\r\n                </mat-chip-list>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                    <button type=\"button\" (click)=\"filterCourse(0)\" class=\"btn btn-secondary\">Online</button>\r\n                    <button type=\"button\" (click)=\"filterCourse(1)\" class=\"btn btn-primary\">Offline</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"card-min-height\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4 ml-auto mt-2 text-right\">\r\n                <mat-form-field>\r\n                    <mat-label for=\"course\">Course</mat-label>\r\n                    <input matInput type=\"text\" id=\"course\"  [matAutocomplete]=\"loc\" placeholder=\"Course\">\r\n                    <mat-autocomplete #loc=\"matAutocomplete\" autoActiveFirstOption=\"true\" [displayWith]=\"displaycourse\" (optionSelected)='getattendance($event.option.value)'>\r\n                      <mat-option *ngFor=\"let course of filteredCourses\" [value]=\"course\">\r\n                       {{course.title}}\r\n                      </mat-option>\r\n                    </mat-autocomplete>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <table mat-table #table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                    <img class=\"img-responsive\" src=\"assets/demo/avatar.png\">\r\n                    {{row.name | uppercase}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"address\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.location}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"attendanceDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.attendanceDate | date:'mediumDate'}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"isPresent\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Attendance </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                    <span [ngSwitch]=\"row.isPresent\">\r\n                    <p *ngSwitchCase=\"true\">\r\n                        <mat-chip class=\"bg-success text-white m-2\">\r\n                            <mat-icon>check_circle</mat-icon> Present\r\n                        </mat-chip>\r\n                    </p>\r\n                    <p *ngSwitchCase=\"false\">\r\n                        <mat-chip class=\"bg-danger text-white m-2\">\r\n                        <mat-icon>block</mat-icon>Absent\r\n                        </mat-chip>\r\n                    </p>\r\n                    </span>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"reason\">\r\n                <th mat-header-cell *matHeaderCellDef> Reason </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.reason}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"edit\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>  </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                <button mat-icon-button (click)=\"updateAttendance(row)\"><mat-icon>edit</mat-icon></button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <!-- <button mat-button>Ok</button> -->\r\n    </mat-card-actions>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule\r\n} from '@angular/material/autocomplete';\r\nimport {\r\n  MatInputModule\r\n} from '@angular/material/input';\r\nimport {\r\n  MatButtonModule\r\n} from '@angular/material/button';\r\nimport {\r\n  MatTableModule\r\n} from '@angular/material/table';\r\nimport {\r\n  MatPaginatorModule\r\n} from '@angular/material/paginator';\r\nimport {\r\n  MatSortModule\r\n} from '@angular/material/sort';\r\nimport {\r\n  MatIconModule\r\n} from '@angular/material/icon';\r\nimport {\r\n  MatMenuModule\r\n} from '@angular/material/menu';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    MatGridListModule,\r\n    MatProgressSpinnerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatBadgeModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatBottomSheetModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatSliderModule,\r\n    MatStepperModule\r\n  ],\r\n  exports: [MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    MatGridListModule,\r\n    MatProgressSpinnerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatBadgeModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatBottomSheetModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatSliderModule,\r\n    MatStepperModule\r\n  ],\r\n  providers: [\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n})\r\nexport class AngmaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AuthserviceService } from './authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n\r\n  constructor(private http: HttpClient, private authService: AuthserviceService) { }\r\n\r\n  saveEnrollment(enrollment){\r\n    return this.http.post<any>(`${environment.apiUrl}/enrollments`, enrollment, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  updateEnrollment(enrollment){\r\n    return this.http.put<any>(`${environment.apiUrl}/enrollments`, enrollment, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getenrollmentsbyTutor(tutorid){\r\n    const options = tutorid ?\r\n    { params: new HttpParams().set('tutorId', tutorid)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/students/bytutor`, options);\r\n  }\r\n\r\n  getEnrollmentsbyStudent(studentId){\r\n    const options = studentId ?\r\n    { params: new HttpParams().set('id', studentId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/enrollments/bystudent`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n\r\n  getRequestsbyStudent(studentId){\r\n    return this.http.get<any>(`${environment.apiUrl}/request/byuser`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', studentId)\r\n    });\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  TemplateRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {\r\n  Calendar\r\n} from 'src/app/_models/calendar';\r\nimport {\r\n  UserService\r\n} from 'src/app/_services/user.service';\r\nimport {\r\n  User\r\n} from 'src/app/_models/user';\r\nimport {\r\n  CourseService\r\n} from 'src/app/_services/course.service';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours,\r\n} from 'date-fns';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView,\r\n  CalendarEventTitleFormatter,\r\n} from 'angular-calendar';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { EventmodelComponent } from '../eventmodel/eventmodel.component';\r\nimport { CustomCalendarFormat } from './custom-calendar-format';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker/datepicker-input-base';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css'],\r\n  providers: [\r\n    {\r\n      provide: CalendarEventTitleFormatter,\r\n      useClass: CustomCalendarFormat,\r\n    },\r\n  ],\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n  isChecked = false;\r\n\r\n  viewDate: Date = new Date();\r\n  public calendarformForm: FormGroup;\r\n  public submitted = false;\r\n  users: User[] = [];\r\n  selectedDate;\r\n  courses;\r\n  logUser: User;\r\n  showInfo;\r\n  allChecked = true;\r\n  dayName;\r\n  refresh: Subject<any> = new Subject();\r\n  events: CalendarEvent[] = [];\r\n  selectedView = '1';\r\n  activeDayIsOpen = false;\r\n  modalData: {\r\n    action: string;\r\n    event: CalendarEvent;\r\n  };\r\n\r\n  filterActions = [\r\n    {id: 0 , name: 'Confirmed', checked: false},\r\n    {id: 1 , name: 'Pending', checked: false},\r\n    {id: 2 , name: 'Cancelled', checked: false}\r\n  ];\r\n\r\n  actions: CalendarEventAction[] = [\r\n    {\r\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\r\n      a11yLabel: 'Edit',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Edited', event);\r\n      },\r\n    },\r\n    {\r\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\r\n      a11yLabel: 'Delete',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.events = this.events.filter((iEvent) => iEvent !== event);\r\n        this.handleEvent('Deleted', event);\r\n      },\r\n    },\r\n  ];\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private userService: UserService,\r\n              private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private modal: NgbModal,\r\n              public dialog: MatDialog) {}\r\n\r\n  get f() {\r\n    return this.calendarformForm.controls;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.logUser = this.authService.userValue;\r\n    this.selectedDate = new Date();\r\n    console.log(this.logUser.email);\r\n    this.calendarformForm = this.formBuilder.group({\r\n      summary: ['', Validators.required],\r\n      location: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      timeZone: ['Asia/Calcutta', Validators.required],\r\n      start: ['', Validators.required],\r\n      end: ['', Validators.required],\r\n      recurrence: ['', Validators.required],\r\n      attendees: ['', Validators.required],\r\n      organizer: [''],\r\n      count: ['']\r\n    });\r\n\r\n    this.userService.getAll().subscribe(x => this.users = x);\r\n   // this.getCoursesByUser();\r\n    this.getEvents(null);\r\n  }\r\n\r\n  getToday(){\r\n    return new Date();\r\n  }\r\n\r\n  getCoursesByUser() {\r\n    this.courseService.getAllCoursesByUser(this.logUser.id).\r\n    subscribe(x => {\r\n      if (x.length > 0){\r\n        this.courses = x;\r\n      }\r\n    });\r\n  }\r\n\r\n  getEvents(status){\r\n    this.courseService.getAllCoursesByUser(this.logUser.id).\r\n    subscribe((x) => {\r\n      this.courses = x;\r\n      this.events = [];\r\n      console.log(x);\r\n      x.forEach(element => {\r\n        this.events.push(\r\n          {\r\n            start: new Date(element.startDate),\r\n            end: new Date(element.endDate),\r\n            title: element.title,\r\n            color: element.isDemo ? colors.blue : colors.yellow,\r\n            actions: this.actions,\r\n            meta: element,\r\n            startTime: element.startTime,\r\n            endTime: element.endTime,\r\n          },\r\n        );\r\n      });\r\n      if (status?.length > 0){\r\n        this.courses = this.courses.filter(a => status.some(b => a.status === b));\r\n        this.events = this.events.filter(a => status.some(b => a.meta.status === b));\r\n      }\r\n      this.refresh.next();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.calendarformForm.invalid) {\r\n      return;\r\n    }\r\n    const calendar: Calendar = {\r\n      summary: this.f.summary.value,\r\n      location: this.f.location.value,\r\n      description: this.f.description.value,\r\n      timeZone: this.f.timeZone.value,\r\n      start: this.f.start.value,\r\n      end: this.f.end.value,\r\n      recurrence: [{\r\n        frequency: this.f.recurrence.value,\r\n        count: this.f.count.value,\r\n      }],\r\n      attendees: [\r\n        this.f.attendees.value,\r\n        this.logUser.email\r\n      ],\r\n      organizer: null\r\n    };\r\n\r\n    this.courseService.createCalendar(calendar).subscribe(x => {\r\n      this.getCoursesByUser();\r\n    });\r\n\r\n  }\r\n  changeSelected($event, action) {\r\n    action.checked = !action.checked;\r\n    if (action.checked === true){\r\n      this.allChecked = false;\r\n    }\r\n    const statuses = [];\r\n    this.filterActions.forEach(x => {\r\n    if (x.checked){\r\n          statuses.push(x.id);\r\n        }\r\n      });\r\n    this.getEvents(statuses);\r\n  }\r\n\r\n  changeAllSelected($event){\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked === true){\r\n      this.filterActions.forEach(x => x.checked = false);\r\n      this.getEvents(null);\r\n    }\r\n  }\r\n\r\n  addEvent(event: MatDatepickerInputEvent<Date>){\r\n    this.selectedDate = event.value;\r\n  }\r\n\r\n  setView(view: CalendarView) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    this.modalData = { event, action };\r\n    console.log(this.modalData);\r\n   // this.modal.open(this.modalContent, { size: 'md' });\r\n    const dialogRef = this.dialog.open(EventmodelComponent, {\r\n      width: '350px',\r\n      data: this.modalData,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd,\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    this.events = this.events.map((iEvent) => {\r\n      if (iEvent === event) {\r\n        return {\r\n          ...event,\r\n          start: newStart,\r\n          end: newEnd,\r\n        };\r\n      }\r\n      return iEvent;\r\n    });\r\n    this.handleEvent('Dropped or resized', event);\r\n  }\r\n\r\n  changedFilter(event){\r\n    if (event.checked){\r\n      this.courses  = this.courses.filter(x => new Date(x.startDate).getDate() === new Date().getDate());\r\n    }\r\n    else\r\n    {\r\n      this.getCoursesByUser();\r\n    }\r\n  }\r\n}\r\n","<!-- <div class=\"container\">\r\n  <div class=\"card text-center bg-white\">\r\n      <div class=\"card-header\">\r\n          Calendar\r\n      </div>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"calendarformForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"summary\">Summary</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"summary\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.summary.errors }\" />\r\n                <div *ngIf=\"submitted && f.summary.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.summary.errors.required\">Summary is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"location\">Location</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"location\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\r\n                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.location.errors.required\">Locatio is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"description\">Description</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"description\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n                  <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"timeZone\">Timezone</mat-label>\r\n                <input readonly matInput type=\"text\" formControlName=\"timeZone\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.timeZone.errors }\" />\r\n                <div *ngIf=\"submitted && f.timeZone.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.timeZone.errors.required\">TimeZone is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"start\">Start Date</mat-label>\r\n                <input matInput type=\"datetime-local\" formControlName=\"start\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.start.errors }\" />\r\n                <div *ngIf=\"submitted && f.start.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.start.errors.required\">Start Date is Required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"description\">End Date</mat-label>\r\n                  <input matInput type=\"datetime-local\" formControlName=\"end\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.end.errors }\" />\r\n                  <div *ngIf=\"submitted && f.end.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.end.errors.required\">End Date is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"recurrence\">Recurrence</mat-label>\r\n                <mat-select id=\"recurrence\" formControlName=\"recurrence\">\r\n                    <mat-option value=\"None\">None</mat-option>\r\n                    <mat-option value=\"DAILY\">DAILY</mat-option>\r\n                    <mat-option value=\"WEEKLY\">WEEKLY</mat-option>\r\n                    <mat-option value=\"MONTHLY\">MONTHLY</mat-option>\r\n                </mat-select>\r\n                <div *ngIf=\"submitted && f.recurrence.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.recurrence.errors.required\">Recurrence is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"count\">Frequency</mat-label>\r\n                  <mat-select id=\"count\" formControlName=\"count\">\r\n                    <mat-option value=\"1\">1</mat-option>\r\n                    <mat-option value=\"2\">2</mat-option>\r\n                    <mat-option value=\"3\">3</mat-option>\r\n                    <mat-option value=\"4\">4</mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"submitted && f.count.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.count.errors.required\">Locatio is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"attendees\">Location</mat-label>\r\n                <mat-select id=\"attendees\" formControlName=\"attendees\">\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor=\"let user of users\" [value]=\"user.email\">\r\n                      {{user.email}}\r\n                    </mat-option>\r\n                </mat-select>\r\n                <div *ngIf=\"submitted && f.attendees.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.attendees.errors.required\">Locatio is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <button mat-raised-button color=\"warn\" >\r\n              Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <mat-accordion class=\"example-headers-align\" multi>\r\n        <mat-expansion-panel *ngFor=\"let course of courses?.items\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n                {{ course.summary }}\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n                {{ course.description }}\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <mat-nav-list>\r\n            <mat-list-item>\r\n               <div>GMeet</div>\r\n               <a matLine target=\"_blank\" href=\"{{course.hangoutLink}}\">{{ course.hangoutLink }}</a>\r\n            </mat-list-item>\r\n            <mat-list-item>\r\n                <span>StartDate:</span>\r\n                <span>{{ course.start.dateTime | date}}</span>\r\n            </mat-list-item>\r\n            <mat-list-item>\r\n                <span>EndDate:</span>\r\n                <span>{{ course.end.dateTime | date}}</span>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n          </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n</div> -->\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"d-flex\">\r\n      <span class=\"p-2\">Show Only:</span>\r\n      <mat-chip-list>\r\n        <mat-chip selected (click)=\"changeAllSelected($event)\" [ngClass]=\"{'matchip-active' : allChecked}\">\r\n          All\r\n        </mat-chip>\r\n        <mat-chip *ngFor=\"let action of filterActions\" selected (click)=\"changeSelected($event, action)\"\r\n          [ngClass]=\"{'matchip-active' : action.checked}\">\r\n          {{action.name}}\r\n        </mat-chip>\r\n      </mat-chip-list>\r\n      <!-- <div class=\"ml-auto w-25\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label for=\"demoDate\">{{selectedDate | date: 'EEEE'}}</mat-label>\r\n          <input matInput id=\"demoDate\" [value]='selectedDate' (dateChange)=\"addEvent($event)\" [matDatepicker]=\"picker\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"row text-center\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"btn-group\">\r\n              <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Previous\r\n              </div>\r\n              <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\">\r\n                Today\r\n              </div>\r\n              <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Next\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"btn-group\">\r\n              <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month)\"\r\n                [class.active]=\"view === CalendarView.Month\">\r\n                Month\r\n              </div>\r\n              <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Week)\"\r\n                [class.active]=\"view === CalendarView.Week\">\r\n                Week\r\n              </div>\r\n              <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day)\"\r\n                [class.active]=\"view === CalendarView.Day\">\r\n                Day\r\n              </div>\r\n            </div>\r\n            <!-- <mat-button-toggle-group [appearance]=\"'legacy'\" [(value)] =\"selectedView\" #group=\"matButtonToggleGroup\"  name=\"fontStyle\" aria-label=\"Font Style\">\r\n        <mat-button-toggle  value=\"0\">Month</mat-button-toggle>\r\n        <mat-button-toggle value=\"1\">Day</mat-button-toggle>\r\n        <mat-button-toggle value=\"2\">Week</mat-button-toggle>\r\n      </mat-button-toggle-group> -->\r\n\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div [ngSwitch]=\"view\">\r\n          <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n            [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\"\r\n            (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n          </mwl-calendar-month-view>\r\n          <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n            [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\r\n            (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n          </mwl-calendar-week-view>\r\n          <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n            [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\r\n            (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n          </mwl-calendar-day-view>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h2 class=\"meetings\">\r\n              Meetings <div *ngIf=\"courses?.length > 0\">{{courses?.length}}</div>\r\n            </h2>\r\n          </div>\r\n          <div class=\"col text-right\">\r\n               <mat-slide-toggle [ngModel]=\"isChecked\" (change)=\"changedFilter($event)\">Today Only</mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n        <div class=\"course-height\">\r\n          <ng-container *ngFor=\"let course of courses\">\r\n            <!-- <mat-card-header *ngIf=\"course.startDate !== getToday()\">\r\n              {{course.startDate | date}}\r\n            </mat-card-header>     -->\r\n            <mat-card class=\"m-2 card-left\" [ngClass]=\"{'card-left-demo': !course.isDemo}\">\r\n              <mat-card-content>\r\n                <div class=\"row\">\r\n                  <div class=\"col-10\">\r\n                    <mat-card-title class=\"side-header\">{{course.title}}</mat-card-title>\r\n                  </div>\r\n                  <div class=\"col-2 text-right\">\r\n                    <mat-card-subtitle>\r\n                      <span [ngSwitch]=\"course?.enrollments?.length > 1\">\r\n                        <p *ngSwitchCase=\"true\">\r\n                          <img src=\"assets/bitmap.svg\">\r\n                        </p>\r\n                        <p *ngSwitchCase=\"false\">\r\n                          <img src=\"assets/bitmap.svg\">\r\n                        </p>\r\n                        <p *ngSwitchDefault>\r\n                        </p>\r\n                      </span>\r\n                    </mat-card-subtitle>\r\n                  </div>\r\n                </div>\r\n                <p class=\"card-text\">\r\n                  {{course.startTime}} - {{course.endTime}}\r\n                </p>\r\n                <div class=\"card-text d-flex\">\r\n                  <ng-container *ngFor=\"let profimg of course.enrollments\">\r\n                    <img class=\"list-img\" [src]=\"profimg.student?.profilePic ? profimg.student?.profilePic : 'assets/profile-pic.svg'\">\r\n                  </ng-container>\r\n                </div>\r\n\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </ng-container>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitecontactus',\r\n  templateUrl: './sitecontactus.component.html',\r\n  styleUrls: ['./sitecontactus.component.css']\r\n})\r\nexport class SitecontactusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  title = 'Vidhyasadhan';\r\n  lat = 51.678418;\r\n  lng = 7.809007;\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-5 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/CONTACT US</p>\r\n          <h2 class=\"welove-text\">We provide 24/7 Customer support Including weekends.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-5 offset-md-1\">\r\n          <img src=\"assets/website/contact/contact.png\"\r\n            srcset=\"assets/website/contact/contact-1.png 2x,assets/website/contact/contact-2.png 3x\"\r\n            class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bg-white p-2\">\r\n  <div class=\"contact-us\">\r\n    <h2 class=\"welove-devtext\">Conatct  Us VidhyaSadhan</h2>\r\n    <h4 class=\"reply\">Please note that all message will be replied within the next 12hours</h4>\r\n    <form>\r\n      <div class=\"form-row\">\r\n        <div class=\"col\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Name*\">\r\n        </div>\r\n        <div class=\"col\">\r\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email*\">\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col\">\r\n          <textarea placeholder=\"Your Comment\" class=\"form-control\"></textarea>\r\n        </div>\r\n      </div>\r\n      <a class=\"btn btn-primary publish\" href=\"#\" role=\"button\"><span>PUBLISH</span></a>\r\n    </form>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"bg-white p-2\">\r\n  <div class=\"contact-us\">\r\n    <agm-map [latitude]=\"lat\" [longitude]=\"lng\">\r\n      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\">\r\n        <agm-info-window>\r\n          <div class=\"card\">\r\n            <div class=\"card-body text-left\">\r\n              <ul class=\"list-unstyled map-list\">\r\n                <li><span><mat-icon>place</mat-icon></span><span>4602  Austin Avenue Victoria Island Lagos Nigeria</span></li>\r\n                <li><span><mat-icon>phone</mat-icon></span><span>(+91) 912-332-6685</span></li>\r\n                <li><span><mat-icon>email</mat-icon></span><span>support@vidhyasadhan.com</span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </agm-info-window>\r\n      </agm-marker>\r\n    </agm-map>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-profilemodel',\r\n  templateUrl: './profilemodel.component.html',\r\n  styleUrls: ['./profilemodel.component.css']\r\n})\r\nexport class ProfilemodelComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ProfilemodelComponent>) { }\r\n\r\n  files: any[] = [];\r\n  imagepath;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public dropped(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  public fileBrowse(files){\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  prepareFilesList(files: Array<any>) {\r\n    for (const item of files) {\r\n      item.progress = 0;\r\n      this.files.push(item);\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.imagepath = e.target.result;\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n    this.uploadFilesSimulator(0);\r\n  }\r\n\r\n  uploadFilesSimulator(index: number) {\r\n    setTimeout(() => {\r\n      if (index === this.files.length) {\r\n        return;\r\n      } else {\r\n        const progressInterval = setInterval(() => {\r\n          if (this.files[index].progress === 100) {\r\n            clearInterval(progressInterval);\r\n            this.uploadFilesSimulator(index + 1);\r\n          } else {\r\n            this.files[index].progress += 5;\r\n          }\r\n        }, 200);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n    const k = 1024;\r\n    const dm = decimals <= 0 ? 0 : decimals || 2;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  onUpload(file){\r\n      this.dialogRef.close({file: this.files, image: this.imagepath});\r\n  }\r\n\r\n  onCancel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h4 mat-dialog-title class=\"titlec\">Upload Image</h4>\r\n<div mat-dialog-content>\r\n    <div class=\"container\" appDragndir (fileDropped)=\"dropped($event)\" [ngStyle]=\"{'background-image': 'url(' + imagepath + ')'}\">\r\n        <input type=\"file\" #fileDropRef id=\"fileDropRef\" (change)=\"fileBrowse($event.target.files)\" accept=\"image/gif, image/jpeg, image/png\" />\r\n        <h3 class=\"text-light\">Drag a Photo here</h3>\r\n        <h3 class=\"text-dark\">Or</h3>\r\n        <!-- <label class=\"text-light\" for=\"fileDropRef\">Select a Photo</label> -->\r\n        <a class=\"btn btn-md btn-primary\">Select a Photo</a>\r\n    </div>\r\n    <div class=\"info\">\r\n        <h4 class=\"name\">\r\n            {{ files[0]?.name }}\r\n        </h4>\r\n\t\t<p class=\"size\" *ngIf=\"files.length>0\">\r\n            {{files[0]?.progress}}% of {{ formatBytes(files[0]?.size,0) }}\r\n        </p>\r\n        <mat-progress-bar\r\n            mode=\"buffer\"\r\n            [color]=\"'primary'\"\r\n            [value]=\"files[0]?.progress\"\r\n            [bufferValue]=\"files[0]?.progress\">\r\n        </mat-progress-bar>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions class=\"text-center mt-2\">\r\n    <button class=\"m-2\" mat-raised-button color=\"warn\" (click)=\"onCancel()\">Cancel</button>\r\n    <button class=\"m-2\" mat-raised-button [disabled]=\"files.length === 0\"  color=\"accent\" (click)=\"onUpload(files[0])\" cdkFocusInitial>Upload</button>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { appInitializer } from './_helpers/app-initializer';\r\nimport { AuthserviceService } from './_services/authservice.service';\r\nimport { JwtTokenInterceptor } from './_helpers/jwt-token.interceptor';\r\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\r\nimport { NgbModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RegisterComponent } from './_components/register/register.component';\r\nimport { AngmaterialModule } from './angmaterial.module';\r\nimport { NotificationComponent } from './_components/notification/notification.component';\r\nimport { BroadcastComponent } from './_components/broadcast/broadcast.component';\r\nimport { ServiceWorkerModule} from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NavigationBarComponent } from './_components/navigation-bar/navigation-bar.component';\r\nimport { SidenavBarComponent } from './_components/sidenav-bar/sidenav-bar.component';\r\nimport { ProfileComponent } from './_components/profile/profile.component';\r\nimport { CalendarComponent } from './_components/calendar/calendar.component';\r\nimport { DlDateTimeDateModule, DlDateTimePickerModule } from 'angular-bootstrap-datetimepicker';\r\nimport { ConfirmationComponent } from './_components/confirmation/confirmation.component';\r\nimport { DashboardComponent } from './_components/dashboard/dashboard.component';\r\nimport { AdminDashboardComponent } from './_components/admin-dashboard/admin-dashboard.component';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { DemoComponent } from './_components/demo/demo.component';\r\nimport { DemolistComponent } from './_components/demolist/demolist.component';\r\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { MapcomponentComponent } from './_components/mapcomponent/mapcomponent.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AlertboxComponent } from './_components/alertbox/alertbox.component';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { ClassroomComponent } from './_components/classroom/classroom.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { EventmodelComponent } from './_components/eventmodel/eventmodel.component';\r\nimport { AssignmentsComponent } from './_components/assignments/assignments.component';\r\nimport { AttendanceComponent } from './_components/attendance/attendance.component';\r\nimport { OtpComponent } from './_components/otp/otp.component';\r\nimport { ActivatescreenComponent } from './_components/activatescreen/activatescreen.component';\r\nimport { TutorsComponent } from './_components/tutors/tutors.component';\r\nimport { DemomodelComponent } from './_components/demomodel/demomodel.component';\r\nimport { TutorfilterPipe } from './tutorfilter.pipe';\r\nimport { DemodetailComponent } from './_components/demodetail/demodetail.component';\r\nimport { ProfilemodelComponent } from './_components/profilemodel/profilemodel.component';\r\nimport { TutorReferralsComponent } from './_components/tutor-referrals/tutor-referrals.component';\r\nimport { TutorReferralsDetailsComponent } from './_components/tutor-referrals/tutor-referrals-details/tutor-referrals-details.component';\r\nimport { DragndirDirective } from './directives/dragndir.directive';\r\nimport { AssignmentdetailComponent } from './_components/assignmentdetail/assignmentdetail.component';\r\nimport { AssignmentlistComponent } from './_components/assignmentlist/assignmentlist.component';\r\nimport { FieldsfilterPipe } from './_pipes/fieldsfilter.pipe';\r\nimport { EvaluateComponent } from './_components/evaluate/evaluate.component';\r\nimport { EvaluationDetailComponent } from './_components/evaluation-detail/evaluation-detail.component';\r\nimport { EarningsComponent } from './_components/earnings/earnings.component';\r\nimport { FooterComponent } from './_components/footer/footer.component';\r\nimport { VsnavigationComponent } from './_components/vsnavigation/vsnavigation.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MainlayoutComponent } from './_layouts/mainlayout/mainlayout.component';\r\nimport { EventsComponent } from './_components/events/events.component';\r\nimport { EventdetailComponent } from './_components/events/eventdetail/eventdetail.component';\r\nimport { EventslistComponent } from './_components/events/eventslist/eventslist.component';\r\nimport { ReportsComponent } from './_components/student/reports/reports.component';\r\nimport { AllreportsComponent } from './_components/student/allreports/allreports.component';\r\nimport { AdaptivereportsComponent } from './_components/student/adaptivereports/adaptivereports.component';\r\nimport {NgApexchartsModule} from 'ng-apexcharts';\r\nimport { StudymaterialComponent } from './_components/student/studymaterial/studymaterial.component';\r\nimport { StudentAssignmentsComponent } from './_components/student/assignments/assignments.component';\r\nimport { StudentmateriallistComponent } from './_components/student/studymaterial/studentmateriallist/studentmateriallist.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { NoassignmentsComponent } from './_components/assignments/noassignments/noassignments.component';\r\nimport { AssignmentDetailComponent } from './_components/student/assignments/assignment-detail/assignment-detail.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { CarouselhelperComponent } from './_components/carouselhelper/carouselhelper.component';\r\nimport { UrlsafePipe } from './_pipes/urls/urlsafe.pipe';\r\nimport { AlertModule } from './alert/alert.module';\r\nimport { SitenavComponent } from './_components/website/sitenav/sitenav.component';\r\nimport { SitehomeComponent } from './_components/website/sitehome/sitehome.component';\r\nimport { SitelayoutComponent } from './_layouts/sitelayout/sitelayout.component';\r\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SitefooterComponent } from './_components/website/sitefooter/sitefooter.component';\r\nimport { SiteaboutusComponent } from './_components/website/siteaboutus/siteaboutus.component';\r\nimport { SitepricingComponent } from './_components/website/sitepricing/sitepricing.component';\r\nimport { SitecontactusComponent } from './_components/website/sitecontactus/sitecontactus.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { SitefeaturesComponent } from './_components/website/sitefeatures/sitefeatures.component';\r\nimport { SitesubscribeComponent } from './_components/website/sitesubscribe/sitesubscribe.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AdminComponent } from './_components/dashboard/admin/admin.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { AdminlayoutComponent } from './_layouts/adminlayout/adminlayout.component';\r\nimport { AdmintutorsComponent } from './_components/admin-pages/admintutors/admintutors.component';\r\nimport { AdminstudentsComponent } from './_components/admin-pages/adminstudents/adminstudents.component';\r\nimport { AdminpaymentsComponent } from './_components/admin-pages/adminpayments/adminpayments.component';\r\nimport { PromoterlayoutComponent } from './_layouts/promoterlayout/promoterlayout.component';\r\nimport { PromoterregisterComponent } from './_components/promoter/promoterregister/promoterregister.component';\r\nimport { PromoterloginComponent } from './_components/promoter/promoterlogin/promoterlogin.component';\r\nimport { StudentpaymentsComponent } from './_components/student/studentpayments/studentpayments.component';\r\nimport { AddressComponent } from './_components/profile/address/address.component';\r\nimport { ForgotpasswordComponent } from './_components/login/forgotpassword/forgotpassword.component';\r\nimport { ResetpasswordComponent } from './_components/login/resetpassword/resetpassword.component';\r\nimport { AppnotificationsComponent } from './_components/appnotifications/appnotifications.component';\nimport { AttendancemodalComponent } from './_components/attendancemodal/attendancemodal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    NotificationComponent,\r\n    BroadcastComponent,\r\n    NavigationBarComponent,\r\n    SidenavBarComponent,\r\n    ProfileComponent,\r\n    CalendarComponent,\r\n    ConfirmationComponent,\r\n    DashboardComponent,\r\n    AdminDashboardComponent,\r\n    DemoComponent,\r\n    DemolistComponent,\r\n    MapcomponentComponent,\r\n    AlertboxComponent,\r\n    ClassroomComponent,\r\n    EventmodelComponent,\r\n    AssignmentsComponent,\r\n    AttendanceComponent,\r\n    OtpComponent,\r\n    ActivatescreenComponent,\r\n    TutorsComponent,\r\n    DemomodelComponent,\r\n    TutorfilterPipe,\r\n    DemodetailComponent,\r\n    ProfilemodelComponent,\r\n    TutorReferralsComponent,\r\n    TutorReferralsDetailsComponent,\r\n    DragndirDirective,\r\n    AssignmentdetailComponent,\r\n    AssignmentlistComponent,\r\n    FieldsfilterPipe,\r\n    EvaluateComponent,\r\n    EvaluationDetailComponent,\r\n    EarningsComponent,\r\n    FooterComponent,\r\n    VsnavigationComponent,\r\n    MainlayoutComponent,\r\n    EventsComponent,\r\n    EventdetailComponent,\r\n    EventslistComponent,\r\n    ReportsComponent,\r\n    AllreportsComponent,\r\n    AdaptivereportsComponent,\r\n    StudymaterialComponent,\r\n    StudentAssignmentsComponent,\r\n    StudentmateriallistComponent,\r\n    NoassignmentsComponent,\r\n    AssignmentDetailComponent,\r\n    CarouselhelperComponent,\r\n    UrlsafePipe,\r\n    SitenavComponent,\r\n    SitehomeComponent,\r\n    SitelayoutComponent,\r\n    SitefooterComponent,\r\n    SiteaboutusComponent,\r\n    SitepricingComponent,\r\n    SitecontactusComponent,\r\n    SitefeaturesComponent,\r\n    SitesubscribeComponent,\r\n    AdminComponent,\r\n    AdminlayoutComponent,\r\n    AdmintutorsComponent,\r\n    AdminstudentsComponent,\r\n    AdminpaymentsComponent,\r\n    PromoterlayoutComponent,\r\n    PromoterregisterComponent,\r\n    PromoterloginComponent,\r\n    StudentpaymentsComponent,\r\n    AddressComponent,\r\n    ForgotpasswordComponent,\r\n    ResetpasswordComponent,\r\n    AppnotificationsComponent,\r\n    AttendancemodalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModalModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    AngmaterialModule,\r\n    DlDateTimeDateModule,\r\n    DlDateTimePickerModule,\r\n    GoogleChartsModule,\r\n    NgxMatFileInputModule,\r\n    GoogleMapsModule,\r\n    // ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    NgApexchartsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    CarouselModule,\r\n    AlertModule,\r\n    NgbCollapseModule,\r\n    FontAwesomeModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyAtlbePmPUJ_DaeV4z6ZGb2qj_DWC2Ljdk'\r\n    }),\r\n    MatGridListModule,\r\n    MatMenuModule\r\n    // CloudinaryModule.forRoot(Cloudinary, { cloud_name: 'dfsizfwtr', upload_preset: 'ml_default'}),\r\n  ],\r\n  providers: [\r\n    { provide: APP_INITIALIZER, useFactory: appInitializer, multi: true, deps: [AuthserviceService] },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtTokenInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: MAT_SNACK_BAR_DATA, useValue: {} },\r\n    DatePipe,\r\n    AlertboxComponent\r\n  ],\r\n  entryComponents: [AlertboxComponent, ProfilemodelComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthserviceService,\r\n              private demoService: DemoService, public alertService: AlertService) { }\r\n\r\n  create = false;\r\n  tutions;\r\n  demos;\r\n  events;\r\n  isLoading;\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.getDemos();\r\n  }\r\n\r\n  getDemos(){\r\n    this.demoService.getAllDemosByUser(this.authService.userValue.id).subscribe(\r\n      x => {\r\n        this.events = x;\r\n        this.isLoading = false;\r\n        this.tutions = x.filter(y => !y.isDemo);\r\n        this.demos = x.filter(y => y.isDemo);\r\n      }, (error) => {\r\n        this.alertService.error('Error Loading Events');\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  returnClicked(event){\r\n    this.getDemos();\r\n    event === true ? this.create = false : this.create = true;\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"!create\">\r\n  <div class=\"card m-4\">\r\n    <div class=\"spinner-class\" *ngIf=\"isLoading\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n    <ng-container [ngSwitch]=\"events?.length > 0\" *ngIf=\"!isLoading\">\r\n      <ng-container *ngSwitchCase=\"true\">\r\n        <app-eventslist [demos]=\"demos\" [tutions]=\"tutions\" (returnEvent)=\"returnClicked($event)\"></app-eventslist>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"false\">\r\n        <div class=\"card-header bg-primary\">\r\n          <h2 class=\"my-event\">My Events</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h1 class=\"card-title\">\r\n            <p class=\"Start-your-journey-b\">\r\n              You haven't scheduled any Events yet, \r\n            </p>\r\n            <p class=\"Start-your-journey-b\">\r\n              Click <span style=\"font-weight: bold;\">'+'</span> icon to create a Demo / Tuition event \r\n            </p>\r\n\r\n          </h1>\r\n        </div>\r\n        <div class=\"event-img\">\r\n          <img class=\"img img-responsive\" src=\"assets/event.svg\">\r\n        </div>\r\n        <a class=\"ml-auto m-4 circle-add\" mat-mini-fab (click)=\"create = true\">\r\n          <mat-icon>add</mat-icon>\r\n        </a>\r\n      </ng-container>\r\n\r\n    </ng-container>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"create\">\r\n  <app-eventdetail (returnEvent)=\"returnClicked($event)\"></app-eventdetail>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OtpComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthserviceService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private fb: FormBuilder ) { }\r\n\r\n  phone: number;\r\n  phoneForm: FormGroup;\r\n  submitted;\r\n  loading;\r\n  returnUrl;\r\n  useremail;\r\n  error;\r\n  tokenMessage;\r\n  resend = true;\r\n  otpcode = [\r\n    {name: 'key1', value: null},\r\n    {name: 'key2', value: null},\r\n    {name: 'key3', value: null},\r\n    {name: 'key4', value: null},\r\n    {name: 'key5', value: null}\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.useremail = this.route.snapshot.queryParams['email'];\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/vs';\r\n    this.phoneForm = this.fb.group({\r\n      phone: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  entervalue(event){\r\n    const el = event.srcElement;\r\n    console.log(event);\r\n    const tidx = +(el.getAttribute('tabindex')) + 1,\r\n    elements = document.getElementsByTagName('input');\r\n\r\n    for (let i = elements.length; i--;) {\r\n        const tidx2 = elements[i].getAttribute('tabindex');\r\n        if (Number(tidx2) === tidx) { elements[i].focus(); }\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    let finalcode = '';\r\n    this.submitted = true;\r\n    this.otpcode.forEach(x => {finalcode += x.value; } );\r\n    this.authService.verifyotp(this.useremail, finalcode).subscribe(\r\n      x => {\r\n        if (x){\r\n          this.router.navigate([this.returnUrl]);\r\n        }\r\n        else{\r\n          this.error = 'Invalid token code';\r\n        }\r\n        this.submitted = false;\r\n      },\r\n      (error) => {\r\n        this.error = 'Invalid token code';\r\n        this.submitted = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  sendOtp(){\r\n    this.submitted = true;\r\n    if (this.phoneForm.valid){\r\n      this.loading = true;\r\n      this.authService.sendOtp(this.phoneForm.value).pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.resend = false;\r\n          this.submitted = false;\r\n        },\r\n        error: error => {\r\n          this.error = error;\r\n          this.loading = false;\r\n          this.submitted = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  resendcode(){\r\n    this.authService.resendotp(this.authService.userValue.email).subscribe(x => {\r\n      if (x){\r\n          this.tokenMessage = 'Resent Code Succesfully';\r\n      }\r\n    }, (error) => {\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"w-100 p-2 justify-content-center\">\r\n  <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\r\n</mat-toolbar>\r\n<div class=\"equal-container login-side\">\r\n  <div class=\"equal-col\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 offset-md-1\">\r\n        <mat-card class=\"text-center o-card\">\r\n          <mat-card-content>\r\n            <h4 class=\"otp-title\">Please enter the One-Time Password\r\n              to verify your account</h4>\r\n            <img src=\"assets/OTP/locked.svg\" class=\"locked\">\r\n            <h5 class=\"p-4\">\r\n              A One-Time Password will be sent to your number entered: {{phoneForm.get('phone').value}}\r\n            </h5>\r\n\r\n            <div [ngSwitch]=\"resend\">\r\n              <div *ngSwitchCase=\"true\">\r\n                <form class=\"form\" [formGroup]=\"phoneForm\" (submit)=\"sendOtp()\">\r\n                  <div class=\"form-row align-items-center justify-content-center\">\r\n                    <div class=\"col-auto\">\r\n                      <label class=\"sr-only\" for=\"inlineFormInputGroup\">Registered Phone</label>\r\n                      <div class=\"input-group mb-2\">\r\n                        <div class=\"input-group-append\">\r\n                          <div class=\"input-group-text\">\r\n                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-phone\" fill=\"currentColor\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path fill-rule=\"evenodd\"\r\n                                d=\"M11 1H5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H5z\" />\r\n                              <path fill-rule=\"evenodd\" d=\"M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\r\n                            </svg>\r\n                          </div>\r\n                        </div>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"phone\" id=\"phone\"\r\n                          placeholder=\"10 Digit Phone number\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                      <button mat-flat-button type=\"submit\" class=\"mat-button-base\" color=\"accent\" [disabled]=\"loading\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div *ngSwitchCase=\"false\">\r\n                <mat-grid-list cols=\"5\" rowHeight=\"50px\">\r\n                  <mat-grid-tile *ngFor=\"let tile of otpcode; let i = index\" [colspan]=\"1\" [rowspan]=\"1\">\r\n                    <input class=\"rectangle\" [tabindex]=\"i+10\" maxlength=\"1\" autofocus type=\"text\" name=\"{{tile.name}}\"\r\n                      [(ngModel)]=\"tile.value\" (keyup)=\"entervalue($event)\">\r\n                  </mat-grid-tile>\r\n                </mat-grid-list>\r\n                <button class=\"btn btn-primary m-4\" mat-raised-button (click)=\"onSubmit()\">Validate</button>\r\n                <div class=\"d-flex m-4\">\r\n                  <p class=\"wrong-num\">Entered a wrong number?</p>\r\n                  <p class=\"resend ml-auto\"><a (click)=\"resend = true\">Resend One-time Password</a></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"tokenMessage\" class=\"alert alert-success mt-3 mb-0\">{{tokenMessage}}\r\n              <a (click)=\"tokenMessage = null\">\r\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n                </svg>\r\n              </a> </div>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}\r\n              <a (click)=\"error = null\">\r\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n                </svg>\r\n              </a></div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApexNonAxisChartSeries, ApexPlotOptions, ApexChart, ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexDataLabels,\r\n  ApexYAxis,\r\n  ApexLegend,\r\n  ApexStroke,\r\n  ApexXAxis,\r\n  ApexFill,\r\n  ApexTooltip} from 'ng-apexcharts';\r\n\r\nexport type ChartOptionsRad = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n};\r\nexport type ChartOptionsBar = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n  stroke: ApexStroke;\r\n  legend: ApexLegend;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-allreports',\r\n  templateUrl: './allreports.component.html',\r\n  styleUrls: ['./allreports.component.css']\r\n})\r\nexport class AllreportsComponent implements OnInit {\r\n\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptionsRad>;\r\n  public barChart: Partial<ChartOptionsBar>;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [85, 55, 75],\r\n      chart: {\r\n        height: 265,\r\n        type: 'radialBar'\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          dataLabels: {\r\n            name: {\r\n              fontSize: '22px'\r\n            },\r\n            value: {\r\n              fontSize: '16px'\r\n            },\r\n            total: {\r\n              show: true,\r\n              label: 'Average',\r\n              formatter(w) {\r\n                return '50';\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      labels: ['Learn', 'Practice', 'Test']\r\n    };\r\n\r\n    this.barChart = {\r\n      series: [\r\n        {\r\n          name: 'Net Profit',\r\n          data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n        }\r\n      ],\r\n      chart: {\r\n        type: 'bar',\r\n        height: 250\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: '35%',\r\n          endingShape: 'rounded'\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          'Feb',\r\n          'Mar',\r\n          'Apr',\r\n          'May',\r\n          'Jun',\r\n          'Jul',\r\n          'Aug',\r\n          'Sep',\r\n          'Oct'\r\n        ]\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: '(hours)'\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter(val) {\r\n            return '$ ' + val + ' hours';\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card text-center\">\r\n  <div class=\"card-header card-header-main\">\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n        <input matInput placeholder=\"Subject\">\r\n        <mat-icon matPrefix>subject</mat-icon>  \r\n    </mat-form-field>\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n        <input matInput placeholder=\"Chapter\">\r\n        <mat-icon matPrefix>topic</mat-icon>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4  align-items-stretch\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <div>Report</div>\r\n                        <div>\r\n                            <mat-icon>settings</mat-icon>\r\n                            <mat-icon>drag_indicator</mat-icon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <apx-chart  [series]=\"chartOptions.series\"\r\n                    [chart]=\"chartOptions.chart\" [plotOptions]=\"chartOptions.plotOptions\"\r\n                    [labels]=\"chartOptions.labels\"></apx-chart>\r\n                </div>\r\n                <div class=\"card-footer text-muted\">\r\n                    <ul class=\"list-inline\">\r\n                        <li class=\"list-inline-item\">Learn</li>\r\n                        <li class=\"list-inline-item\">Practice</li>\r\n                        <li class=\"list-inline-item\">Test</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-8  align-items-stretch\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <div>Report</div>\r\n                        <div>\r\n                            <mat-icon>settings</mat-icon>\r\n                            <mat-icon>drag_indicator</mat-icon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <apx-chart\r\n                    [series]=\"barChart.series\"\r\n                    [chart]=\"barChart.chart\"\r\n                    [dataLabels]=\"barChart.dataLabels\"\r\n                    [plotOptions]=\"barChart.plotOptions\"\r\n                    [yaxis]=\"barChart.yaxis\"\r\n                    [legend]=\"barChart.legend\"\r\n                    [fill]=\"barChart.fill\"\r\n                    [stroke]=\"barChart.stroke\"\r\n                    [tooltip]=\"barChart.tooltip\"\r\n                    [xaxis]=\"barChart.xaxis\"\r\n                  ></apx-chart>\r\n                </div>\r\n                <div class=\"card-footer text-muted\">\r\n                    <ul class=\"list-inline\">\r\n                        <li class=\"list-inline-item\">Weekly</li>\r\n                        <li class=\"list-inline-item\">Quarterly</li>\r\n                        <li class=\"list-inline-item\">Yearly</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.css']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n    <mat-tab label=\"All Reports\">\r\n        <app-allreports></app-allreports>\r\n    </mat-tab>\r\n    <mat-tab label=\"Adaptive Test Reports\">\r\n        <app-adaptivereports></app-adaptivereports>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation-bar',\r\n  templateUrl: './navigation-bar.component.html',\r\n  styleUrls: ['./navigation-bar.component.css']\r\n})\r\nexport class NavigationBarComponent implements OnInit {\r\n\r\n  user: User;\r\n  checked = false;\r\n  navClicked = true;\r\n  notifications = [];\r\n  smClicked = false;\r\n  @Output() toggleSidenav = new EventEmitter<void>();\r\n  constructor(public authService: AuthserviceService, private staticService: StaticdataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.authService.userValue;\r\n    if (this.authService.userValue.id){\r\n      this.staticService.getNotifications(this.authService.userValue.id).subscribe(\r\n        x => this.notifications = x\r\n      );\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  menuClicked(){\r\n    this.toggleSidenav.emit();\r\n    this.navClicked = !this.navClicked;\r\n  }\r\n\r\n  smallmenuClicked(){\r\n    this.smClicked = !this.smClicked;\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"bg-white\">\r\n  <mat-toolbar-row>\r\n    <span [ngSwitch]=\"navClicked\">\r\n      <a *ngSwitchCase=\"true\" [routerLink]=\"['dashboard']\">\r\n        <img src=\"assets/icons/vidhya-sandhhan.svg\">\r\n      </a>\r\n      <a *ngSwitchCase=\"false\" [routerLink]=\"['dashboard']\">\r\n        <img src=\"assets/vidhyasadhan-logo.svg\">\r\n      </a>\r\n    </span>\r\n    <a mat-icon-button (click)=\"menuClicked()\" class=\"d-none d-sm-block\">\r\n      <mat-icon>menu</mat-icon>\r\n    </a>\r\n\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <a mat-icon-button [routerLink]=\"['appnotify']\" class=\"d-block d-sm-none\">\r\n      <mat-icon matBadge=\"{{notifications.length}}\" matBadgeColor=\"warn\">notifications</mat-icon>\r\n    </a>\r\n\r\n    <a mat-icon-button [matMenuTriggerFor]=\"auth1\" class=\"d-block d-sm-none\">\r\n      <!-- <mat-icon>account_circle</mat-icon> -->\r\n      <img class=\"rounded-circle\" width=\"25\" height=\"25\" [src]=\"user.profilePic || 'assets/avatar.svg'\" />\r\n    </a>\r\n    <mat-menu #auth1=\"matMenu\">\r\n      <a mat-menu-item (click)=\"logout()\">\r\n        <mat-icon>exit_to_app</mat-icon>\r\n        <span>Sign out</span>\r\n      </a>\r\n    </mat-menu>\r\n    <a mat-icon-button (click)=\"smallmenuClicked()\" class=\"d-block d-sm-none\">\r\n      <mat-icon>menu</mat-icon>\r\n    </a>\r\n\r\n\r\n    <div class=\"d-none d-sm-block\">\r\n      <ul class=\"navbar-nav flex-row\">\r\n        <li fxHide.xs class=\"nav-item active\">\r\n          <a mat-icon-button [routerLink]=\"['appnotify']\" class=\"nav-link\">\r\n            <mat-icon matBadge=\"{{notifications.length}}\" matBadgeColor=\"warn\">notifications</mat-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a mat-icon-button [matMenuTriggerFor]=\"auth\" class=\"nav-link\">\r\n            <!-- <mat-icon>account_circle</mat-icon> -->\r\n            <img class=\"rounded-circle\" width=\"25\" height=\"25\" [src]=\"user.profilePic || 'assets/avatar.svg'\" />\r\n          </a>\r\n          <mat-menu #auth=\"matMenu\">\r\n            <a mat-menu-item (click)=\"logout()\">\r\n              <mat-icon>exit_to_app</mat-icon>\r\n              <span>Sign out</span>\r\n            </a>\r\n          </mat-menu>\r\n        </li>\r\n        <li fxHide.xs class=\"nav-item\">\r\n          <a class=\"nav-link profile-pic\">{{user.firstName}} {{user.lastName}}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row *ngIf=\"smClicked\" class=\"h-100 d-block d-sm-none toolbar\"\r\n    [ngClass]=\"authService.userValue?.role === 0 ? 'student' : 'tutor'\">\r\n    <ng-container [ngSwitch]=\"authService.userValue?.role === 'Student'\">\r\n      <ng-container *ngSwitchCase=\"true\">\r\n        <ul class=\"navbar-nav mt-auto\">\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/classroom']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/noun-teaching-2380320.svg\"> My Classroom <span\r\n                class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/tutors']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/noun-assignment-3202074.svg\">Book Tutor</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/profile']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/path.svg\">My Profile</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/student/assignments']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/my-earnings.svg\">Study Material</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/progress']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/chart-pie-36.svg\">Progress Report</a>\r\n          </li>\r\n          <!-- <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Dropdown link\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n          </li> -->\r\n        </ul>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"false\">\r\n        <ul class=\"navbar-nav mt-auto\">\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/classroom']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/noun-teaching-2380320.svg\">My Classroom <span\r\n                class=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/requests']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/noun-assignment-3202074.svg\">Student Requests</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/profile']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/path.svg\">My Profile</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/events']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/vector.svg\">My Events</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/earnings']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/my-earnings.svg\">My Earnings</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/tutor-referrals']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/my-referrals.svg\">My Referrals</a>\r\n          </li>\r\n        </ul>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import {\r\n  Injectable\r\n} from '@angular/core';\r\nimport {\r\n  Subject,\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  Alert,\r\n  AlertType\r\n} from '../_models/alert';\r\nimport {\r\n  filter\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  private subject = new Subject < Alert > ();\r\n  private defaultId = 'default-alert';\r\n\r\n  constructor() {}\r\n\r\n  onAlert(id = this.defaultId): Observable <Alert> {\r\n    return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n  }\r\n\r\n  success(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Success,\r\n      message\r\n    }));\r\n  }\r\n\r\n  error(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Error,\r\n      message\r\n    }));\r\n  }\r\n\r\n  info(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Info,\r\n      message\r\n    }));\r\n  }\r\n\r\n  warn(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Warning,\r\n      message\r\n    }));\r\n  }\r\n\r\n  alert(alert: Alert) {\r\n    alert.id = alert.id || this.defaultId;\r\n    this.subject.next(alert);\r\n  }\r\n\r\n  clear(id = this.defaultId) {\r\n    this.subject.next(new Alert({\r\n      id\r\n    }));\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { StudentmateriallistDataSource, StudentmateriallistItem } from './studentmateriallist-datasource';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StudymaterialService } from 'src/app/_services/studymaterial.service';\r\n\r\n@Component({\r\n  selector: 'app-studentmateriallist',\r\n  templateUrl: './studentmateriallist.component.html',\r\n  styleUrls: ['./studentmateriallist.component.css']\r\n})\r\nexport class StudentmateriallistComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) table: MatTable<StudentmateriallistItem>;\r\n  dataSource: StudentmateriallistDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'title', 'subject', 'grade', 'topic', 'files'];\r\n  href;\r\n\r\n  slides = [\r\n    // { id: 1, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 1' },\r\n    // { id: 2, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 2'},\r\n    // { id: 3, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 3'},\r\n    // { id: 4, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 4'},\r\n    // { id: 5, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 5'}\r\n  ];\r\n\r\n  constructor(private route: Router, private studyMaterial: StudymaterialService){\r\n    this.href = this.route.url;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new StudentmateriallistDataSource();\r\n    this.studyMaterial.getMaterials().subscribe(x => {\r\n      this.dataSource.data = x;\r\n      x.forEach(a => {\r\n       a.files?.forEach(element => {\r\n          this.slides.push({video: element.filePath, title: element.filePath});\r\n        });\r\n      });\r\n\r\n      this.slides.forEach(x => x.video += window.location.origin);\r\n\r\n    } );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n\r\n  downloadFile(files){\r\n\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.materialId}}</td>\r\n    </ng-container>\r\n\r\n     <!-- Id Column -->\r\n     <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"subject\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Subject</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.subject}}</td>\r\n    </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"grade\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Grade</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.grade}}</td>\r\n      </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"topic\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Topic</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.topic}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"files\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Attachments</th>\r\n      <td mat-cell *matCellDef=\"let row\"><a (click)=\"downloadFile(row.files)\">\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-download\" fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\" />\r\n      </svg> Download\r\n        </a> </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator #paginator\r\n      [length]=\"dataSource?.data.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"5\"\r\n      [pageSizeOptions]=\"[5, 10, 15, 20]\">\r\n  </mat-paginator>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"tcontainer\">\r\n  <div class=\"ticker-wrap\">\r\n      <div class=\"ticker-move\">\r\n          <div class=\"ticker-item\" *ngFor=\"let item of slides\">\r\n              <div class=\"d-flex border rounded m-2 justify-content-center\">\r\n                  <div class=\"p-2 bg-white\">\r\n                      <div class=\"m-2 card-width\">\r\n                        <div class=\"card text-left\">\r\n                          <div class=\"card-body\">\r\n                            <video class=\"video-fluid\" autoplay loop muted>\r\n                              <source [src]=\"item.video\" type=\"video/mp4\" />\r\n                            </video>\r\n                            <h4 class=\"card-title\">Title</h4>\r\n                            <p class=\"card-text\">Body</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"container mt-2\">\r\n  <app-carouselhelper [slidesStore]=\"slides\"></app-carouselhelper>\r\n</div>\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'urlsafe'\r\n})\r\nexport class UrlsafePipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer){\r\n  }\r\n\r\n  transform(value) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { StaticData, State, Country, Statistics } from '../_models/static';\r\nimport { environment } from 'src/environments/environment';\r\nimport { isString, isNullOrUndefined } from 'util';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StaticdataService {\r\n\r\n  staticData: StaticData;\r\n  states: State[] = [];\r\n  country: Country[] = [];\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getStaticData(){\r\n    return this.http.get<StaticData>(`${environment.apiUrl}/resourses/staticdata`);\r\n  }\r\n\r\n  getStates(){\r\n    return this.http.get<State>(`${environment.apiUrl}/resourses/states`);\r\n  }\r\n\r\n  getCountries(){\r\n    return this.http.get<Country>(`${environment.apiUrl}/resourses/countries`);\r\n  }\r\n\r\n  searchLocations(location: string) {\r\n\r\n    if (location?.length > 0){\r\n      const options = { params: new HttpParams().set('access_token', environment.mapbox_accessToken) };\r\n      return this.http.get<any>(environment.mapbox_api + 'mapbox.places/' + location + `.json`, options);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  getNotifications(userId){\r\n    const options = { params: new HttpParams().set('userId', userId) };\r\n    return this.http.get<any>(`${environment.apiUrl}/static/appnotifications`, options);\r\n  }\r\n\r\n  getStaticDataSets(){\r\n    return this.http.get<StaticData>(`${environment.apiUrl}/static/data`);\r\n  }\r\n\r\n  getStatistics(userId){\r\n    const options = { params: new HttpParams().set('userId',  userId) };\r\n    return this.http.get<Statistics>(`${environment.apiUrl}/static/statistics`, options);\r\n  }\r\n\r\n\r\n}\r\n","import { AuthserviceService } from '../_services/authservice.service';\r\n\r\nexport function appInitializer(authenticationService: AuthserviceService) {\r\n    return () => new Promise(resolve => {\r\n        authenticationService.tokenRefresh()\r\n            .subscribe()\r\n            .add(resolve);\r\n    });\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { Demo } from 'src/app/_models/demo';\r\n\r\n@Component({\r\n  selector: 'app-assignments',\r\n  templateUrl: './assignments.component.html',\r\n  styleUrls: ['./assignments.component.css']\r\n})\r\nexport class AssignmentsComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private courseService: CourseService,\r\n              private authService: AuthserviceService) { }\r\n\r\n  displayassignments = true;\r\n  assignmentForm;\r\n  isLoading;\r\n  filteredCourses;\r\n  selectedCourse;\r\n  selectedstudents;\r\n  assignments = [];\r\n  slicedAssignments;\r\n  query;\r\n\r\n  menuItems = [\r\n    {id: 0, value: 'Assignment', icon: 'assignment_turned_in'},\r\n    {id: 1, value: 'Quiz Assignment', icon: 'batch_prediction'},\r\n    // {id: 2, value: 'Question', icon: 'help'},\r\n    // {id: 3, value: 'Material', icon: 'menu_book'},\r\n    {id: 2, value: 'Topic', icon: 'local_library'},\r\n  ];\r\n\r\n  detailsMenu = [\r\n    {id: 0, value: 'Student', icon: 'assignment_turned_in'},\r\n    {id: 1, value: 'Quiz Assignment', icon: 'batch_prediction'},\r\n    // {id: 2, value: 'Question', icon: 'help'},\r\n    // {id: 3, value: 'Material', icon: 'menu_book'},\r\n    {id: 2, value: 'Topic', icon: 'local_library'},\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.updateList();\r\n  }\r\n\r\n  menuClicks(item){\r\n    if (item.id === 0){\r\n      this.displayassignments = false;\r\n    }\r\n  }\r\n\r\n  switchMenus(){\r\n    return this.displayassignments ? this.menuItems : this.detailsMenu;\r\n  }\r\n\r\n  displayCourse(loc: Demo): string {\r\n    return loc ? loc.title : '';\r\n  }\r\n\r\n  updateList(){\r\n    this.courseService.getAssignmentByTutor(this.authService.userValue.id)\r\n    .subscribe(x => {this.assignments = x; this.slicedAssignments = x?.slice(0, 4); this.isLoading = false; },\r\n    (error) => { this.isLoading = false; } );\r\n  }\r\n\r\n  gotolist(){\r\n    this.displayassignments = true;\r\n    this.updateList();\r\n  }\r\n\r\n  pagechange(event){\r\n    const startIndex = event.pageIndex * event.pageSize;\r\n    let endIndex = startIndex + event.pageSize;\r\n\r\n    if (endIndex > this.assignments.length){\r\n      endIndex = this.assignments.length;\r\n    }\r\n\r\n    this.slicedAssignments = this.assignments.slice(startIndex, endIndex);\r\n  }\r\n\r\n  eventClicked(event){\r\n    if (event.id === 0){\r\n      this.displayassignments = false;\r\n    }\r\n  }\r\n\r\n  assignmentCreatedEvent(event){\r\n    this.displayassignments = event;\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav #drawer class=\"sidenav\" position=\"end\" mode=\"over\">\r\n    <h2>Edit Filters <span>Clear Filters</span></h2>\r\n    <nav>\r\n      <h4>Grade/Standard</h4>\r\n      <ul>\r\n        <li>\r\n          <mat-checkbox>\r\n            10th Grade\r\n          </mat-checkbox>\r\n        </li>\r\n        <li>\r\n          <mat-checkbox>\r\n            +2 Grade\r\n          </mat-checkbox>\r\n        </li>\r\n        <li>\r\n          <mat-checkbox>\r\n            7th Grade\r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n      <h4>Assignment Type</h4>\r\n      <div class=\"pl-2 mb-2\">\r\n        <mat-chip-list>\r\n          <mat-chip selected color=\"accent\">Questions</mat-chip>\r\n          <mat-chip selected color=\"warn\">Manual</mat-chip>\r\n        </mat-chip-list>\r\n      </div>\r\n      <h4>Tasks Range</h4>\r\n      <div class=\"pl-4\">\r\n        <span>0<mat-slider [max]=\"100\" [min]=\"0\" [step]=\"10\" [thumbLabel]=\"true\"></mat-slider>100</span>\r\n      </div>\r\n      <!-- <mat-form-field appearance=\"fill\">\r\n        <mat-label>Enter a date range</mat-label>\r\n      </mat-form-field> -->\r\n      <h4>\r\n        Student Type\r\n      </h4>\r\n      <ul>\r\n        <li>\r\n          <mat-slide-toggle>\r\n            Show Only Online\r\n          </mat-slide-toggle>\r\n        </li>\r\n        <li>\r\n          <mat-slide-toggle>\r\n            Toggle State Off!\r\n          </mat-slide-toggle>\r\n        </li>\r\n        <li>\r\n        </li>\r\n      </ul>\r\n      <div class=\"text-center\">\r\n        <button mat-raised-button color=\"accent\">Apply</button>\r\n      </div>\r\n\r\n    </nav>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content class=\"assignments-nav\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header header-rad\" *ngIf=\"assignments?.length > 0\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <div>\r\n            <mat-card-title>\r\n              <ng-container [ngSwitch]=\"displayassignments\">\r\n                <span class=\"student-Assignments\" *ngSwitchCase=\"true\">\r\n                  List of Assignments\r\n                </span>\r\n                <span class=\"student-Assignments\" *ngSwitchCase=\"false\">\r\n                  <a (click)=\"gotolist()\" mat-icon-button>\r\n                    <mat-icon>west</mat-icon>\r\n                  </a>\r\n                  Create Assignments\r\n                </span>\r\n              </ng-container>\r\n            </mat-card-title>\r\n            <mat-card-subtitle *ngIf=\"displayassignments\">Total: {{assignments?.length}}</mat-card-subtitle>\r\n          </div>\r\n          <div class=\"d-flex\" *ngIf=\"displayassignments\">\r\n            <!-- <div class=\"col-md-6\">\r\n                      <mat-form-field appearance=\"fill\" class=\"custom-margin\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input matInput placeholder=\"Search\" [(ngModel)]=\"query\">\r\n                        <button mat-icon-button matSuffix>\r\n                          <mat-icon>search</mat-icon>\r\n                        </button>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                      <div class=\"custom-margin\">\r\n                        <button mat-raised-button color=\"primary\" aria-label=\"Example icon button with a home icon\"\r\n                          (click)=\"drawer.toggle()\">\r\n                          filter <mat-icon>filter_list</mat-icon>\r\n                        </button>\r\n                      </div>\r\n                    </div> -->\r\n            <a class=\"btn btn-primary custom-margin\" [matMenuTriggerFor]=\"menu\">\r\n              <span>New Task</span>\r\n              <mat-icon class=\"align-middle ml-1\">add</mat-icon>\r\n            </a>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n              <a mat-menu-item *ngFor=\"let item of switchMenus()\" (click)=\"menuClicks(item)\">\r\n                <mat-icon>{{item.icon}}</mat-icon>\r\n                <span class=\"menu-font\">{{item.value}}</span>\r\n              </a>\r\n            </mat-menu>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <span [ngSwitch]=\"displayassignments\">\r\n          <p *ngSwitchCase=\"true\">\r\n            <ng-container [ngSwitch]=\"assignments?.length === 0\">\r\n              <ng-container *ngSwitchCase=\"true\">\r\n                <div class=\"spinner-class\" *ngIf=\"isLoading\">\r\n                  <mat-spinner></mat-spinner>\r\n                </div>\r\n                <app-noassignments *ngIf=\"!isLoading\" (assignmentEmitter)=\"eventClicked($event)\"></app-noassignments>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"false\">\r\n                <app-assignmentlist [assignments]=\"assignments\" [filter]=\"query\"></app-assignmentlist>\r\n                <!-- <mat-paginator [length]=\"assignments?.length\" [pageSize]=\"4\" [pageSizeOptions]=\"[4, 8, 12, 16]\"\r\n                  (page)=\"pagechange($event)\"> </mat-paginator> -->\r\n              </ng-container>\r\n            </ng-container>\r\n            <!-- <mat-card *ngIf=\"assignments?.length === 0\">\r\n              <mat-card-header class=\"body-content\">\r\n                <mat-card-title>\r\n                  <div class=\"d-flex\">\r\n                    <div class=\"vsadhan-img\">\r\n                      <img src=\"assets/icons/vidhya-sandhhan.svg\" class=\"img img-responsive vidhya-sandhhan\">\r\n                    </div>\r\n                    <span class=\"p-2\">Assign work to your class here</span>\r\n                  </div>\r\n                </mat-card-title>\r\n              </mat-card-header>\r\n              <mat-card-content class=\"text-center\">\r\n                <mat-action-list>\r\n                  <mat-list-item class=\"profession\">\r\n                    <mat-icon class=\"mat-list-icon\">text_snippet</mat-icon> Create assignments and questions\r\n                  </mat-list-item>\r\n                  <mat-list-item class=\"profession\">\r\n                    <mat-icon class=\"mat-list-icon\">format_list_numbered</mat-icon> Use topic to organise classwork into\r\n                    modules or units\r\n                  </mat-list-item>\r\n                  <mat-list-item class=\"profession\">\r\n                    <mat-icon class=\"mat-list-icon\">format_line_spacing</mat-icon> Order work the way you want students\r\n                    to\r\n                    see it\r\n                  </mat-list-item>\r\n                </mat-action-list>\r\n              </mat-card-content>\r\n            </mat-card> -->\r\n\r\n          </p>\r\n          <p *ngSwitchCase=\"false\">\r\n            <app-assignmentdetail [course]=\"selectedCourse\" [students]=\"selectedstudents\"\r\n              (assignmentCreated)=\"assignmentCreatedEvent($event)\"></app-assignmentdetail>\r\n          </p>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport class Customvalidators {\r\n    static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n        return (control: AbstractControl): { [key: string]: any } => {\r\n          if (!control.value) {\r\n            return null;\r\n          }\r\n\r\n          const valid = regex.test(control.value);\r\n          return valid ? null : error;\r\n        };\r\n      }\r\n\r\n    static passwordMatchValidator(control: AbstractControl) {\r\n        const password: string = control.get('password').value;\r\n        const confirmPassword: string = control.get('confirmPassword').value;\r\n        if (password !== confirmPassword) {\r\n          control.get('confirmPassword').setErrors({ NoPassswordMatch: true });\r\n        }\r\n      }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\n\n@Component({\n  selector: 'app-appnotifications',\n  templateUrl: './appnotifications.component.html',\n  styleUrls: ['./appnotifications.component.css']\n})\nexport class AppnotificationsComponent implements OnInit {\n\n  constructor(public authService: AuthserviceService, private staticService: StaticdataService) { }\n\n  notifications = [];\n\n  ngOnInit(): void {\n    if (this.authService.userValue.id){\n      this.staticService.getNotifications(this.authService.userValue.id).subscribe(\n        x => this.notifications = x\n      );\n    }\n  }\n\n}\n","<div class=\"jumbotron m-2 min-card\">\n  <div class=\"container\">\n    <h1 class=\"display-3\">Notifications</h1>\n    <div class=\"m-auto d-flex align-items-center flex-column\" *ngIf=\"notifications?.length === 0\">\n      <div class=\"m-2\">\n        <svg width=\"20em\" height=\"20em\" viewBox=\"0 0 16 16\" class=\"bi bi-bell\" fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2z\" />\n          <path fill-rule=\"evenodd\"\n            d=\"M8 1.918l-.797.161A4.002 4.002 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4.002 4.002 0 0 0-3.203-3.92L8 1.917zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5.002 5.002 0 0 1 13 6c0 .88.32 4.2 1.22 6z\" />\n        </svg>\n      </div>\n      <h2 class=\"lead\">No New Notifications!</h2>\n    </div>\n    <div class=\"container\">\n\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Category</th>\n            <th scope=\"col\">Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let note of notifications; index as i\">\n            <th scope=\"row\">{{ i + 1 }}</th>\n            <td>\n              {{ note.title }}\n            </td>\n            <td>{{ note.message }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <!-- <div class=\"row\" *ngFor=\"let note of notifications\">\n        <div class=\"col-4\">\n          {{note.title}}\n        </div>\n        <div class=\"col-8\">\n          {{note.message}}\n        </div>\n      </div> -->\n    </div>\n    <!-- <div class=\"list-group\">\n      <a mat-menu-item class=\"list-group-item list-group-item-warning\" *ngFor=\"let note of notifications\">\n        {{note.message}}\n      </a>\n    </div> -->\n  </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-assignmentlist',\r\n  templateUrl: './assignmentlist.component.html',\r\n  styleUrls: ['./assignmentlist.component.css']\r\n})\r\nexport class AssignmentlistComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private courseService: CourseService,\r\n              private authService: AuthserviceService) { }\r\n\r\n  @Input()\r\n  assignments;\r\n\r\n  @Input()\r\n  filter;\r\n\r\n  filteredCourses;\r\n  selectedCourse;\r\n  selectedstudents;\r\n\r\n  success;\r\n  error;\r\n\r\n  displayedColumns: string[] = ['select', 'title', 'grade', 'created', 'subject', 'topic', 'points', 'attachment'];\r\n  dataSource: MatTableDataSource<any>;\r\n  selection = new SelectionModel<any>(true, []);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource(this.assignments);\r\n    this.courseService.getAllCoursesByUser(this.authService.userValue.id)\r\n    .subscribe(x => this.filteredCourses = x);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  pagechange(event){\r\n\r\n  }\r\n\r\n  applyFilter(event: Event){\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: any): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n\r\n  downloadFile(file){\r\n    if (file?.length > 0) {\r\n      window.open(file);\r\n    }\r\n  }\r\n\r\n  addAssignments(){\r\n    if (this.selection.selected.length > 0){\r\n      const saveassignments = [];\r\n      this.selectedstudents.forEach(student => {\r\n        this.selection.selected.forEach(x => {\r\n          saveassignments.push({\r\n            assignmentId: x.assignmentId,\r\n            studentId: student.id,\r\n            courseId: this.selectedCourse.courseId,\r\n            creationDate: new Date(),\r\n          });\r\n        });\r\n      });\r\n      this.courseService.addstudentstoassignment(saveassignments)\r\n      .subscribe(x => {\r\n        this.success = true;\r\n        this.selectedCourse = null;\r\n        this.selectedstudents = null;\r\n      }, (error) => {\r\n        this.error = error;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<!-- <div class=\"col-md-6\" *ngFor=\"let assignment of assignments | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n      <ng-container>\r\n        <div class=\"card m-1\">\r\n          <div class=\"card-header\">\r\n            <div class=\"d-flex\">\r\n              <div>\r\n                <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                <span class=\"subject\">{{assignment.subject}}</span>\r\n              </div>\r\n              <div class=\"ml-auto\">\r\n                <div class=\"list-inline\">\r\n                  <button mat-mini-fab color=\"secondary\" class=\"list-inline-item\">\r\n                    <mat-icon>star_border</mat-icon>\r\n                  </button>\r\n                  <button mat-mini-fab color=\"secondary\" class=\"list-inline-item\">\r\n                    <mat-icon>turned_in_not</mat-icon>\r\n                  </button>\r\n                  <button mat-mini-fab color=\"secondary\" class=\"list-inline-item\">75%</button>\r\n                </div>\r\n                <mat-chip color=\"primary\" class=\"m-2 bg-whieicon\" selected>View Details</mat-chip>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <h3 class=\"card-title title\">{{assignment.title}}</h3>\r\n            <p class=\"card-sub-title subtitle\">{{assignment.topic}}</p>\r\n            <div class=\"card-text perfomed\">\r\n              <div class=\"d-flex\">\r\n                <span>Assignment Performed</span>\r\n                <span class=\"list-inline\">\r\n                  <span class=\"list-inline-item\" *ngFor=\"let user of assignment.studentAssignments\">\r\n                    <img [src]=\"user.account.profilePic\" class=\"profimg\">\r\n                  </span>\r\n                </span>\r\n                <span class=\"ml-auto\">\r\n                  <mat-chip class=\"bg-violet\" selected>Pending with 20</mat-chip>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div> -->\r\n\r\n<div class=\"d-flex justify-content-between\">\r\n  <mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Subject, Grade, Title, Topic\" #input>\r\n  </mat-form-field>\r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label for=\"course\">Course</mat-label>\r\n      <mat-select [(ngModel)]=\"selectedCourse\" name=\"course\">\r\n        <mat-option *ngFor=\"let location of filteredCourses\" [value]=\"location\">\r\n          {{location.title}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"ml-2\">\r\n      <mat-label>Assign To</mat-label>\r\n      <mat-select [(ngModel)]=\"selectedstudents\" multiple>\r\n        <mat-option *ngFor=\"let enrollment of selectedCourse?.enrollments\" [value]=\"enrollment.account\">\r\n          {{enrollment.account?.firstName}} {{enrollment.account?.lastName}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <a class=\"ml-2\" mat-raised-button color=\"accent\" (click)=\"addAssignments()\"\r\n      [disabled]=\"!selectedstudents && selection.selected.length == 0\">Submit</a>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\r\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n          [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- ID Column -->\r\n    <!-- <ng-container matColumnDef=\"id\" hidden>\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.assignmentId}} </td>\r\n      </ng-container> -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <span class=\"img-span\"><img class=\"rounded-circle\" src=\"assets/icons/vidhya-sandhhan.svg\" width=\"24\" height=\"24\"> </span>{{row.title}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"grade\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Grade </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.grade}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Progress Column -->\r\n    <ng-container matColumnDef=\"subject\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Subject </th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.subject}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"created\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Due Date </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.dueDate | date}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"topic\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Topic </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.topic}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"points\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Points </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.points}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"attachment\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Attachment </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> <a (click)=\"downloadFile(row.assignmentFile)\">\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-download\" fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\" />\r\n      </svg> Download\r\n        </a> </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  <div class=\"d-flex text-center justify-content-center\">\r\n    <div class=\"alert alert-success\" *ngIf=\"success\" role=\"alert\">\r\n      <strong>Assigned to Students Successfully</strong> <mat-icon (click)=\"success = !success\">cancel</mat-icon>\r\n    </div>\r\n    <div class=\"alert alert-warning\" *ngIf=\"error\" role=\"alert\">\r\n     <strong>{{error}}</strong> <mat-icon (click)=\"error = null\">cancel</mat-icon>\r\n   </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'fieldsfilter'\r\n})\r\nexport class FieldsfilterPipe implements PipeTransform {\r\n\r\n  transform(value, keys: string, term: string) {\r\n    if (!term) { return value; }\r\n    return (value || []).filter(item => keys.split(',').some(key => item.hasOwnProperty(key) && new RegExp(term, 'gi').test(item[key])));\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-eventslist',\r\n  templateUrl: './eventslist.component.html',\r\n  styleUrls: ['./eventslist.component.css']\r\n})\r\nexport class EventslistComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthserviceService,\r\n              private demoService: DemoService, ) { }\r\n\r\n  @Input() tutions;\r\n  @Input() demos;\r\n  splitTutions;\r\n  splitDemos;\r\n  filter1;\r\n  filter2;\r\n  month = new Date();\r\n  @Output() returnEvent = new EventEmitter<boolean>();\r\n  selectedDemo;\r\n\r\n  ngOnInit(): void {\r\n    this.filterEvents();\r\n  }\r\n\r\n  filterEvents(){\r\n    this.splitTutions =  this.tutions;\r\n    this.splitDemos = this.demos;\r\n    this.splitDemos = this.demos.filter(x => ((new Date(x.startDate).getMonth() === this.month.getMonth())\r\n     && (new Date(x.startDate).getFullYear() === this.month.getFullYear())) || ((new Date(x.endDate).getMonth() === this.month.getMonth())\r\n     && (new Date(x.endDate).getFullYear() === this.month.getFullYear())));\r\n    this.splitTutions = this.tutions.filter(x => ((new Date(x.startDate).getMonth() === this.month.getMonth())\r\n    && (new Date(x.startDate).getFullYear() === this.month.getFullYear())) || ((new Date(x.endDate).getMonth() === this.month.getMonth())\r\n    && (new Date(x.endDate).getFullYear() === this.month.getFullYear())));\r\n  }\r\n\r\n  nextClick(side){\r\n    if (side === 'left'){\r\n      this.month = moment(this.month).subtract('1', 'month').toDate() ;\r\n    }\r\n    else{\r\n      this.month = moment(this.month).add('1', 'month').toDate() ;\r\n    }\r\n    this.filterEvents();\r\n  }\r\n\r\n  addEvent(){\r\n    this.returnEvent.emit(false);\r\n  }\r\n\r\n  accessreturnValue(event){\r\n    this.filterEvents();\r\n    if (event){\r\n      this.selectedDemo = null;\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"!selectedDemo\">\r\n  <mat-tab-group mat-align-tabs=\"center\" [backgroundColor]=\"'primary'\">\r\n    <mat-tab label=\"Demos\">\r\n      <div class=\"card min-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"demo-container\">\r\n            <div>\r\n              <p>Demo Events</p>\r\n              <p>Total: {{demos.length}}</p>\r\n            </div>\r\n            <div>\r\n              <a (click)=\"nextClick('left')\">\r\n                <mat-icon>chevron_left</mat-icon>\r\n              </a>\r\n              <span>{{month | date: 'MMMM , yyyy'}}</span>\r\n              <a (click)=\"nextClick('right')\">\r\n                <mat-icon>chevron_right</mat-icon>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <input matInput [(ngModel)]=\"filter1\" placeholder=\"Search\">\r\n                <mat-icon matSuffix>search</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row m-2\">\r\n            <div class=\"col-md-6\"\r\n              *ngFor=\"let demo of splitDemos | fieldsfilter: 'subject,title,topic,grade,dueDate': filter1\">\r\n              <ng-container>\r\n                <div class=\"card m-1\">\r\n                  <div class=\"card-header\">\r\n                    <div class=\"d-flex\">\r\n                      <div>\r\n                        <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                        <span class=\"subject\">{{demo.title}}</span>\r\n                      </div>\r\n                      <div class=\"ml-auto\">\r\n                        <p class=\"card-sub-title subject\">Class: {{demo.grade}}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <h3 class=\"card-title title\">{{demo.subject}}</h3>\r\n                    <p class=\"card-sub-title subtitle\">{{demo.description}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Demo Date: {{demo.startDate | date}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Time: {{demo.startTime}} - {{demo.endTime}}</p>\r\n                    <div class=\"card-text perfomed\">\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"list-inline\" *ngIf=\"authService.userValue.role === 'Tutor'\">\r\n                          <span  class=\"list-inline-item\" *ngFor=\"let user of demo.enrollments\">\r\n                            <img [src]=\"user.account?.accountDetails[0]?.profilePic\" class=\"profimg\">\r\n                          </span>\r\n                        </span>\r\n                        <span class=\"list-inline\" *ngIf=\"authService.userValue.role === 'Student'\">\r\n                          <span  class=\"list-inline-item\">\r\n                            <img [src]=\"demo.owner?.accountDetails[0]?.profilePic\" class=\"profimg\">\r\n                          </span>\r\n                        </span>\r\n                        <span class=\"ml-auto\">\r\n                          <span class=\"badge badge-pill badge-primary pill-font\" (click)=\"selectedDemo = demo\">View Details</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"ml-auto m-4 circle-add\" mat-mini-fab (click)=\"addEvent()\">\r\n            <mat-icon>add</mat-icon>\r\n        </a>\r\n      </div>\r\n\r\n    </mat-tab>\r\n    <mat-tab label=\"Tutions\">\r\n      <div class=\"card min-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"demo-container\">\r\n            <div>\r\n              <p>Tuition Events</p>\r\n              <p>Total: {{tutions.length}}</p>\r\n            </div>\r\n            <div>\r\n              <a (click)=\"nextClick('left')\">\r\n                <mat-icon>chevron_left</mat-icon>\r\n              </a>\r\n              <span>{{month | date: 'MMMM , yyyy'}}</span>\r\n              <a (click)=\"nextClick('right')\">\r\n                <mat-icon>chevron_right</mat-icon>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <input matInput [(ngModel)]=\"filter2\" placeholder=\"Search\">\r\n                <mat-icon matSuffix>search</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row m-2\">\r\n            <div class=\"col-md-6\"\r\n              *ngFor=\"let tution of splitTutions | fieldsfilter: 'subject,title,topic,grade,startDate': filter2\">\r\n              <ng-container>\r\n                <div class=\"card m-1\">\r\n                  <div class=\"card-header\">\r\n                    <div class=\"d-flex\">\r\n                      <div>\r\n                        <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                        <span class=\"subject\">{{tution.title}}</span>\r\n                      </div>\r\n                      <div class=\"ml-auto\">\r\n                        <p class=\"card-sub-title subject\">Class: {{tution.grade}}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <h3 class=\"card-title title\">{{tution.subject}}</h3>\r\n                    <p class=\"card-sub-title subtitle\">{{tution.description}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Demo Date: {{tution.startDate | date}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Time: {{tution.startTime}} - {{tution.endTime}}</p>\r\n                    <div class=\"card-text perfomed\">\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"list-inline\">\r\n                          <span class=\"list-inline-item\" *ngFor=\"let user of tution.enrollments\">\r\n                            <img [src]=\"user.student?.profilePic\" class=\"profimg\">\r\n                          </span>\r\n                        </span>\r\n                        <span class=\"ml-auto\">\r\n                          <span class=\"badge badge-pill badge-primary pill-font\" (click)=\"selectedDemo = tution\">View Details</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"ml-auto m-4 circle-add\" mat-mini-fab (click)=\"addEvent()\">\r\n            <mat-icon>add</mat-icon>\r\n          </a>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"selectedDemo\">\r\n    <app-demodetail [course]=\"selectedDemo\" (listView)=\"accessreturnValue($event)\"></app-demodetail>\r\n</ng-container>\r\n","import {\r\n  Injectable, OnDestroy\r\n} from '@angular/core';\r\nimport {\r\n  BehaviorSubject,\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  User\r\n} from '../_models/user';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  HttpClient, HttpHeaders, HttpParams\r\n} from '@angular/common/http';\r\nimport {\r\n  environment\r\n} from 'src/environments/environment';\r\nimport {\r\n  map\r\n} from 'rxjs/operators';\r\nimport { JsonPipe } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthserviceService implements OnDestroy {\r\n\r\n  constructor(private router: Router,\r\n              private http: HttpClient) {\r\n    this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n    this.user = this.userSubject.asObservable();\r\n\r\n    this.loginSubject = new BehaviorSubject<string>(localStorage.getItem('logtype'));\r\n    this.loginuser = this.loginSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  public get userType(): string {\r\n    return this.loginSubject.value;\r\n  }\r\n\r\n\r\n  private userSubject: BehaviorSubject < User > ;\r\n  public user: Observable < User > ;\r\n\r\n  private loginSubject: BehaviorSubject < string >;\r\n  public loginuser: Observable < string > ;\r\n\r\n  private refreshTokenTimeout;\r\n\r\n  ngOnDestroy(){\r\n    localStorage.removeItem('logtype');\r\n  }\r\n\r\n  setLoginSubject(type){\r\n    localStorage.setItem('logtype', type);\r\n    this.loginSubject.next(type);\r\n  }\r\n\r\n  login(username: string, password: string, role: number) {\r\n    return this.http.post < any > (`${environment.apiUrl}/accounts/authenticate`, {\r\n       email : username,\r\n       password,\r\n       rememberMe: false,\r\n       role\r\n      }, {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n        withCredentials: true,\r\n      })\r\n      .pipe(map(user => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.userSubject.next(user);\r\n        this.startRefreshTokenTimer();\r\n        return user;\r\n      }));\r\n  }\r\n\r\n  logout() {\r\n    const token = JSON.parse(localStorage.getItem('user'));\r\n    this.http.post<any>(`${environment.apiUrl}/accounts/revoke-token`, {token: token?.refreshToken}, {\r\n      withCredentials: true,\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n    }).subscribe();\r\n    localStorage.removeItem('user');\r\n    this.stopRefreshTokenTimer();\r\n    this.userSubject.next(null);\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  tokenRefresh() {\r\n    const usert: User = JSON.parse(localStorage.getItem('user')) ;\r\n    return this.http.post < any > (`${environment.apiUrl}/accounts/refresh-token`, {\r\n      Token: usert?.refreshToken\r\n    }, {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n        withCredentials: true\r\n      })\r\n      .pipe(map((user) => {\r\n        this.userSubject.next(user);\r\n        this.startRefreshTokenTimer();\r\n        return user;\r\n      }));\r\n  }\r\n\r\n  private startRefreshTokenTimer() {\r\n    console.log('user' + this.userValue);\r\n    const jwtToken = JSON.parse(atob(this.userValue?.jwtToken.split('.')[1]));\r\n\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n    this.refreshTokenTimeout = setTimeout(() => this.tokenRefresh().subscribe(), timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n\r\n  confirmEmail(value: any) {\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/verify-email`, {token: value},\r\n    {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  reConfirm(user: User){\r\n    const options = user ?\r\n    { params: new HttpParams().set('emailid', user.email)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/users/reconfirm`, options);\r\n  }\r\n\r\n  verifyotp(userid, otp: string){\r\n    const options = otp ?\r\n    { params: new HttpParams().set('otp', otp)} : {};\r\n\r\n    return this.http.get<any>(`${environment.apiUrl}/accounts/verifyotp`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    }).pipe(map(user => {\r\n      this.userSubject.next(user);\r\n      this.startRefreshTokenTimer();\r\n      return user;\r\n    }));\r\n  }\r\n\r\n  resendotp(emailId){\r\n    const options = emailId ?\r\n    { params: new HttpParams().set('email', emailId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/users/regeneratecode`, options);\r\n  }\r\n\r\n  sendOtp(phone){\r\n    return this.http.post<any>(`${environment.apiUrl}/accounts/generateotp`, phone);\r\n  }\r\n\r\n  forgotpassword(passwordmodel){\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/forgot-password`, passwordmodel, {\r\n      withCredentials: true\r\n    })\r\n    .pipe(map(user => {\r\n      return user;\r\n    }));\r\n  }\r\n\r\n  resetpassword(passwordmodel){\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/reset-password`, passwordmodel, {\r\n      withCredentials: true\r\n    })\r\n    .pipe(map(user => {\r\n      return user;\r\n    }));\r\n  }\r\n\r\n}\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\nimport { OnInit } from '@angular/core';\r\n// TODO: Replace this with your own data model type\r\nexport interface StudentmateriallistItem {\r\n  subject: string;\r\n  materialId: number;\r\n  topic: string;\r\n  grade: string;\r\n  title: string;\r\n  files: [];\r\n}\r\n\r\nexport class StudentmateriallistDataSource extends DataSource<StudentmateriallistItem> {\r\n  data: StudentmateriallistItem[];\r\n  paginator: MatPaginator;\r\n  sort: MatSort;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<StudentmateriallistItem[]> {\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange\r\n    ];\r\n\r\n    return merge(...dataMutations).pipe(map(() => {\r\n      return this.getPagedData(this.getSortedData([...this.data]));\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: StudentmateriallistItem[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: StudentmateriallistItem[]) {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === 'asc';\r\n      switch (this.sort.active) {\r\n        case 'subject': return compare(a.subject, b.subject, isAsc);\r\n        case 'id': return compare(+a.materialId, +b.materialId, isAsc);\r\n        case 'topic': return compare(a.topic, b.topic, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/subject columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { faGopuram   } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-sitefooter',\r\n  templateUrl: './sitefooter.component.html',\r\n  styleUrls: ['./sitefooter.component.css']\r\n})\r\nexport class SitefooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bg-dark\">\r\n  <div class=\"footer-parent\">\r\n    <div class=\"footer-child\">\r\n      <img src=\"assets/website/vidhyasadhan.svg\"  class=\"img img-fluid site-img\">\r\n      <p class=\"mt-4\">\r\n        Lorem ipsum dolor sit amet, magna habemusius ad, qui minimum voluptaria in. Ad mei modus quodsi complectitur, postea...\r\n      </p>\r\n      <div>\r\n        <ul class=\"list-inline\">\r\n          <li class=\"list-inline-item\">\r\n            <i class=\"fa fa-google-plus\"></i></li>\r\n          <li class=\"list-inline-item\"><i class=\"fa fa-facebook-square\"></i></li>\r\n          <li class=\"list-inline-item\"><i class=\"fa fa-twitter\"></i></li>\r\n          <li class=\"list-inline-item\"><i class=\"fa fa-instagram\"></i></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer-child\">\r\n      <div>\r\n        VidhyaSadhan Links\r\n      </div>\r\n      <ul class=\"list-unstyled mt-4\">\r\n        <li [routerLink]=\"['/']\" class=\"list-item\"><a>Home</a></li>\r\n        <li [routerLink]=\"['/about-us']\" class=\"list-item\">About Us</li>\r\n        <li [routerLink]=\"['/features']\" class=\"list-item\">Features</li>\r\n        <li [routerLink]=\"['/pricing']\" class=\"list-item\">Pricing</li>\r\n        <li [routerLink]=\"['/contact']\" class=\"list-item\">Contact Us</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"footer-child\">\r\n      <div>\r\n        Contact Us\r\n      </div>\r\n      <ul class=\"list-unstyled mt-4\">\r\n        <li class=\"list-item\">(+91) 98846 66785</li>\r\n        <li class=\"list-item\">Vidhyasadhan@gmail.com</li>\r\n        <li class=\"list-item\">Address goes here: Lorem ipsum dolor sit amet, magna habemus.</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"footer-child\">\r\n      <div>\r\n        VidhyaSadhan Instagram\r\n      </div>\r\n      <ul class=\"list-unstyled mt-4\">\r\n        <li class=\"list-item\">\r\n          <ul class=\"list-inline square\">\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <!-- <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n              </svg> -->\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"list-item\">\r\n          <ul class=\"list-inline square\">\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertsComponent } from './alerts/alerts.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AlertsComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [AlertsComponent]\r\n})\r\nexport class AlertModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>© 2020 VidhyaSadhan. All Rights Reserved.</footer>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-admintutors',\n  templateUrl: './admintutors.component.html',\n  styleUrls: ['./admintutors.component.css']\n})\nexport class AdmintutorsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  error;\n\n  constructor(private adminService: AdminService, private alertService: AlertService) { }\n\n  displayedColumns: string[] = ['sno', 'name', 'email', 'profilePic', 'phone'];\n  dataSource: MatTableDataSource<any>;\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource();\n    this.loadTutors();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadTutors(){\n    this.adminService.getadminData().subscribe(x => {\n      console.log(x.tutors);\n      this.dataSource.data = x.tutors;\n    }, (error) => {\n      this.alertService.error(error);\n    });\n  }\n\n  click(event, row){\n\n  }\n\n  applyFilter(eve){\n    const filterValue = (eve.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n","<div class=\"tutor-table\">\n  <h1>Tutors</h1>\n  <div class=\"form-group row\">\n    <div class=\"offset-md-8 col-md-4\">\n      <div class=\"input-group mb-2\">\n        <input class=\"form-control input-rounded\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\" #input>\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <mat-icon>search</mat-icon>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"mat-container mat-elevation-z8\">\n    <table mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"sno\" sticky>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No. </th>\n        <td mat-cell *matCellDef=\"let i = index\">\n        {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\n      </td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n        <td mat-cell *matCellDef=\"let row\"><a href (click)=\"click($event,row)\">{{row.name | uppercase}}</a> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"profilePic\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Profile </th>\n        <td mat-cell *matCellDef=\"let row\"> <img class=\"profile\" [src]=\"row.accountDetails?.profilePic\"> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"phone\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"startdate\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Start Date </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.account.startDate}} </td>\n      </ng-container> -->\n      <!-- <ng-container matColumnDef=\"star\"  stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-icon color=\"primary\" (click)=\"click($event,row)\">visibility</mat-icon>\n        </td>\n      </ng-container> -->\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationMiddlewareService } from 'src/app/core/notification-middleware.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n\r\n  constructor(public notificationMiddleware: NotificationMiddlewareService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleSubscription() {\r\n    this.notificationMiddleware.toggleSubscription();\r\n  }\r\n\r\n  cleanUrl(url) {\r\n    if (url.indexOf(self.location.origin) >= 0) {\r\n      return url.replace(self.location.origin, '');\r\n    }\r\n    return url;\r\n  }\r\n\r\n  removeNotif(notif) {\r\n    const index = this.notificationMiddleware.notifications.indexOf(notif);\r\n    if (index >= 0) {\r\n      this.notificationMiddleware.notifications.splice(index, 1);\r\n    }\r\n  }\r\n\r\n}\r\n","<h1>Notifications</h1>\r\n\r\n<button (click)=\"toggleSubscription()\" class=\"btn btn-primary\" [disabled]=\"notificationMiddleware.pushNotificationStatus.isInProgress || !notificationMiddleware.pushNotificationStatus.isSupported\">\r\n  <span *ngIf=\"!notificationMiddleware.pushNotificationStatus.isSupported\">Push is NOT supported by this device</span>\r\n  <span *ngIf=\"notificationMiddleware.pushNotificationStatus.isSupported && notificationMiddleware.pushNotificationStatus.isSubscribed\">Unsubscribe</span>\r\n  <span *ngIf=\"notificationMiddleware.pushNotificationStatus.isSupported && !notificationMiddleware.pushNotificationStatus.isSubscribed\">Subscribe</span>\r\n</button>\r\n\r\n{{notificationMiddleware.notifications | json}}\r\n<ul class=\"list-group\">\r\n  \r\n  <li class=\"list-group-item\" *ngFor=\"let notif of notificationMiddleware.notifications\">\r\n    <a [routerLink]=\"cleanUrl(notif.Url)\" (click)=\"removeNotif(notif)\">{{notif.Title}}\r\n      <small>{{notif.Message}}</small>\r\n    </a>\r\n  </li>\r\n</ul>","import { Component, ViewChild } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { ApexAxisChartSeries, ApexChart, ApexDataLabels, ApexFill,\r\n  ApexLegend, ApexNonAxisChartSeries, ApexPlotOptions, ApexResponsive, ApexStroke, ApexTooltip, ApexXAxis, ApexYAxis, ChartComponent } from 'ng-apexcharts';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\nexport type ChartOptionsBar = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n  stroke: ApexStroke;\r\n  legend: ApexLegend;\r\n};\r\n\r\nexport type ChartOptionsTutors = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  responsive: ApexResponsive[];\r\n  labels: any;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent {\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public barChart: Partial<ChartOptionsBar>;\r\n  public tutorPie: Partial<ChartOptionsTutors>;\r\n  public eventPie: Partial<ChartOptionsTutors>;\r\n  adminData;\r\n  tutorrequests = [];\r\n\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n    map(({ matches }) => {\r\n      if (matches) {\r\n        return [\r\n          { title: 'Classes', cols: 2, rows: 1 },\r\n          { title: 'Subscribers', cols: 2, rows: 1 },\r\n          { title: 'Requests', cols: 2, rows: 1 },\r\n          { title: 'Events', cols: 2, rows: 1 },\r\n          { title: 'Recent Activity', cols: 2, rows: 1 }\r\n        ];\r\n      }\r\n\r\n      return [\r\n        { title: 'Classes', cols: 2, rows: 1 },\r\n        { title: 'Subscribers', cols: 1, rows: 1 },\r\n        { title: 'Requests', cols: 1, rows: 1 },\r\n        { title: 'Events', cols: 1, rows: 1 },\r\n        { title: 'Recent Activity', cols: 1, rows: 1 }\r\n      ];\r\n    })\r\n  );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private adminService: AdminService) {\r\n    this.mapAdminData();\r\n  }\r\n\r\n  createBarChart(){\r\n    this.barChart = {\r\n      series: [\r\n        {\r\n          name: 'Count',\r\n          data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n        }\r\n      ],\r\n      chart: {\r\n        type: 'bar',\r\n        height: 250\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: '35%',\r\n          endingShape: 'flat'\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          'Feb',\r\n          'Mar',\r\n          'Apr',\r\n          'May',\r\n          'Jun',\r\n          'Jul',\r\n          'Aug',\r\n          'Sep',\r\n          'Oct'\r\n        ]\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: '(Count)'\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter(val) {\r\n            return '# ' + val;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  createTutorPie(){\r\n    this.tutorPie = {\r\n      series: [this.adminData.tutors.length, this.adminData.students.length, this.adminData.parents.length],\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie'\r\n      },\r\n      labels: ['Tutors', 'Students', 'Parents'],\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  createEventsPie(){\r\n    const classes = this.adminData.classesOrDemos?.filter(x => !x.isDemo);\r\n    const demos = this.adminData.classesOrDemos?.filter(x => x.isDemo);\r\n    this.eventPie = {\r\n      series: [classes.length, demos.length],\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie'\r\n      },\r\n      labels: ['Classes', 'Demos'],\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  mapAdminData(){\r\n    this.adminService.getadminData().subscribe(\r\n      x => {\r\n      this.adminData = x;\r\n      this.tutorrequests = x.tutors.filter(a => a.tutorStatus === 0);\r\n      this.createBarChart();\r\n      this.createTutorPie();\r\n      this.createEventsPie();\r\n      }\r\n    );\r\n  }\r\n\r\n  takeAction(tutor, status){\r\n    this.adminService.updateTutor({userId: tutor.id, status}).subscribe(\r\n      x => {\r\n        this.mapAdminData();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"grid-container\">\r\n  <h1 class=\"mat-h1\">Welcome Admin!</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">Classes/Demos</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/event.svg\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.classesOrDemos.length}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">Tutors #</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/admin/tutors.svg\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.tutors.length}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">Total Revenue</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/website/pricing/pricing-1.png\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.totalRevenue}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">New Requests</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/website/aboutus/about-2.png\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.newRequests.length}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\r\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            {{card.title}}\r\n            <!-- <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n              <button mat-menu-item>Expand</button>\r\n              <button mat-menu-item>Remove</button>\r\n            </mat-menu> -->\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\">\r\n          <div *ngIf=\"card.title === 'Classes'\">\r\n            <apx-chart\r\n            [series]=\"barChart.series\"\r\n            [chart]=\"barChart.chart\"\r\n            [dataLabels]=\"barChart.dataLabels\"\r\n            [plotOptions]=\"barChart.plotOptions\"\r\n            [yaxis]=\"barChart.yaxis\"\r\n            [legend]=\"barChart.legend\"\r\n            [fill]=\"barChart.fill\"\r\n            [stroke]=\"barChart.stroke\"\r\n            [tooltip]=\"barChart.tooltip\"\r\n            [xaxis]=\"barChart.xaxis\"></apx-chart>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Subscribers'\">\r\n            <apx-chart\r\n            [series]=\"tutorPie.series\"\r\n            [chart]=\"tutorPie.chart\"\r\n            [labels]=\"tutorPie.labels\"\r\n            [responsive]=\"tutorPie.responsive\"\r\n          ></apx-chart>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Events'\">\r\n            <apx-chart\r\n            [series]=\"eventPie.series\"\r\n            [chart]=\"eventPie.chart\"\r\n            [labels]=\"eventPie.labels\"\r\n            [responsive]=\"eventPie.responsive\"\r\n          ></apx-chart>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Requests'\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let tutor of tutorrequests\">\r\n                New Tutor Request from {{tutor.name}}\r\n                <a mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\r\n                  <mat-icon>more_vert</mat-icon>\r\n                </a>\r\n                <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n                  <a mat-menu-item (click)=\"takeAction(tutor, 1)\">Accept</a>\r\n                  <a mat-menu-item (click)=\"takeAction(tutor, 2)\">Reject</a>\r\n                  <a mat-menu-item (click)=\"takeAction(tutor, 3)\">Respond</a>\r\n                </mat-menu>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Recent Activity'\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n               Class Completed by Tutor 1\r\n                <a mat-icon-button class=\"more-button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </a>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Class Completed By Tutor 2\r\n                <a mat-icon-button class=\"more-button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </a>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Class Completed By Tutor 3\r\n                <a mat-icon-button class=\"more-button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : environment.apiUrl;\r\n    }\r\n\r\n    subscribe(sub: PushSubscription | null): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Notifications/subscribe\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(sub);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processSubscribe(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processSubscribe(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processSubscribe(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    unsubscribe(sub: PushSubscription | null): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Notifications/unsubscribe\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(sub);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUnsubscribe(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUnsubscribe(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUnsubscribe(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    broadcast(message: NotificationModel | null): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Notifications/broadcast\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(message);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processBroadcast(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processBroadcast(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processBroadcast(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\nexport interface PushSubscription {\r\n    endPoint?: string | undefined;\r\n    auth?: string | undefined;\r\n    p256Dh?: string | undefined;\r\n}\r\n\r\nexport interface NotificationModel {\r\n    title?: string | undefined;\r\n    message?: string | undefined;\r\n    url?: string | undefined;\r\n}\r\n\r\nexport class SwaggerException extends Error {\r\n    message: string;\r\n    status: number;\r\n    response: string;\r\n    headers: { [key: string]: any; };\r\n    result: any;\r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isSwaggerException = true;\r\n\r\n    static isSwaggerException(obj: any): obj is SwaggerException {\r\n        return obj.isSwaggerException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader();\r\n            reader.onload = event => {\r\n                observer.next((<any>event.target).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob);\r\n        }\r\n    });\r\n}","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-assignment-detail',\r\n  templateUrl: './assignment-detail.component.html',\r\n  styleUrls: ['./assignment-detail.component.css']\r\n})\r\nexport class AssignmentDetailComponent {\r\n  addressForm = this.fb.group({\r\n    company: null,\r\n    firstName: [null, Validators.required],\r\n    lastName: [null, Validators.required],\r\n    address: [null, Validators.required],\r\n    address2: null,\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    shipping: ['free', Validators.required]\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n\r\n  states = [\r\n    {name: 'Alabama', abbreviation: 'AL'},\r\n    {name: 'Alaska', abbreviation: 'AK'},\r\n    {name: 'American Samoa', abbreviation: 'AS'},\r\n    {name: 'Arizona', abbreviation: 'AZ'},\r\n    {name: 'Arkansas', abbreviation: 'AR'},\r\n    {name: 'California', abbreviation: 'CA'},\r\n    {name: 'Colorado', abbreviation: 'CO'},\r\n    {name: 'Connecticut', abbreviation: 'CT'},\r\n    {name: 'Delaware', abbreviation: 'DE'},\r\n    {name: 'District Of Columbia', abbreviation: 'DC'},\r\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\r\n    {name: 'Florida', abbreviation: 'FL'},\r\n    {name: 'Georgia', abbreviation: 'GA'},\r\n    {name: 'Guam', abbreviation: 'GU'},\r\n    {name: 'Hawaii', abbreviation: 'HI'},\r\n    {name: 'Idaho', abbreviation: 'ID'},\r\n    {name: 'Illinois', abbreviation: 'IL'},\r\n    {name: 'Indiana', abbreviation: 'IN'},\r\n    {name: 'Iowa', abbreviation: 'IA'},\r\n    {name: 'Kansas', abbreviation: 'KS'},\r\n    {name: 'Kentucky', abbreviation: 'KY'},\r\n    {name: 'Louisiana', abbreviation: 'LA'},\r\n    {name: 'Maine', abbreviation: 'ME'},\r\n    {name: 'Marshall Islands', abbreviation: 'MH'},\r\n    {name: 'Maryland', abbreviation: 'MD'},\r\n    {name: 'Massachusetts', abbreviation: 'MA'},\r\n    {name: 'Michigan', abbreviation: 'MI'},\r\n    {name: 'Minnesota', abbreviation: 'MN'},\r\n    {name: 'Mississippi', abbreviation: 'MS'},\r\n    {name: 'Missouri', abbreviation: 'MO'},\r\n    {name: 'Montana', abbreviation: 'MT'},\r\n    {name: 'Nebraska', abbreviation: 'NE'},\r\n    {name: 'Nevada', abbreviation: 'NV'},\r\n    {name: 'New Hampshire', abbreviation: 'NH'},\r\n    {name: 'New Jersey', abbreviation: 'NJ'},\r\n    {name: 'New Mexico', abbreviation: 'NM'},\r\n    {name: 'New York', abbreviation: 'NY'},\r\n    {name: 'North Carolina', abbreviation: 'NC'},\r\n    {name: 'North Dakota', abbreviation: 'ND'},\r\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\r\n    {name: 'Ohio', abbreviation: 'OH'},\r\n    {name: 'Oklahoma', abbreviation: 'OK'},\r\n    {name: 'Oregon', abbreviation: 'OR'},\r\n    {name: 'Palau', abbreviation: 'PW'},\r\n    {name: 'Pennsylvania', abbreviation: 'PA'},\r\n    {name: 'Puerto Rico', abbreviation: 'PR'},\r\n    {name: 'Rhode Island', abbreviation: 'RI'},\r\n    {name: 'South Carolina', abbreviation: 'SC'},\r\n    {name: 'South Dakota', abbreviation: 'SD'},\r\n    {name: 'Tennessee', abbreviation: 'TN'},\r\n    {name: 'Texas', abbreviation: 'TX'},\r\n    {name: 'Utah', abbreviation: 'UT'},\r\n    {name: 'Vermont', abbreviation: 'VT'},\r\n    {name: 'Virgin Islands', abbreviation: 'VI'},\r\n    {name: 'Virginia', abbreviation: 'VA'},\r\n    {name: 'Washington', abbreviation: 'WA'},\r\n    {name: 'West Virginia', abbreviation: 'WV'},\r\n    {name: 'Wisconsin', abbreviation: 'WI'},\r\n    {name: 'Wyoming', abbreviation: 'WY'}\r\n  ];\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  onSubmit() {\r\n    alert('Thanks!');\r\n  }\r\n}\r\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <mat-card class=\"shipping-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>Shipping Information</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\r\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\r\n              First name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\r\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\r\n              Last name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\r\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\r\n              Address is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\r\n            + Add C/O, Apt, Suite, Unit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"City\" formControlName=\"city\">\r\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\r\n              City is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-select placeholder=\"State\" formControlName=\"state\">\r\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\r\n                {{ state.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\r\n              State is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\r\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-radio-group formControlName=\"shipping\">\r\n            <mat-radio-button value=\"free\">Free Shipping</mat-radio-button>\r\n            <mat-radio-button value=\"priority\">Priority Shipping</mat-radio-button>\r\n            <mat-radio-button value=\"nextday\">Next Day Shipping</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthserviceService } from '../_services/authservice.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authenticateService: AuthserviceService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(catchError(err => {\r\n      if ([401, 403].includes(err.status) && this.authenticateService.userValue) {\r\n         // this.authenticateService.logout();\r\n      }\r\n\r\n      const error = (err && err.error && err.error.message) || err.statusText;\r\n      console.error(err);\r\n      return throwError(error);\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Customvalidators } from 'src/app/_helpers/customvalidators';\nimport { IsMatch } from 'src/app/_helpers/fieldmatcher';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthserviceService,\n              private router: ActivatedRoute) { }\n\n  isTutor;\n  passwordForm: FormGroup;\n  passwordsubmitted;\n  loadforgot;\n  error;\n  success;\n  token;\n\n  ngOnInit(): void {\n    this.token = this.router.snapshot.queryParams.token;\n\n    this.passwordForm = this.formBuilder.group({\n      password: ['', Validators.compose([\n        Validators.required,\n        Customvalidators.patternValidator(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, { isInvalid: true }),\n        Validators.minLength(8)])],\n      confirmPassword: ['', Validators.required]\n    }, {validator: IsMatch('password', 'confirmPassword') });\n  }\n\n  get p(){\n    return this.passwordForm.controls;\n  }\n\n  onpasswordSubmit() {\n    this.passwordsubmitted = true;\n\n    this.loadforgot = true;\n    console.log(this.token);\n    if (this.passwordForm.valid){\n      const forgotModel = {\n        token : this.token,\n        password : this.p.password.value,\n        confirmPassword: this.p.confirmPassword.value,\n      };\n      this.authService.resetpassword(forgotModel).subscribe(x => {\n        this.success = x.message;\n        this.loadforgot = false;\n      }, (error) => {\n        this.loadforgot = false;\n        this.error = error;\n      });\n    }\n  }\n}\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor? '':'main-bg'\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n  </mat-toolbar>\n  <div class=\"equal-container login-side\">\n    <div class=\"equal-col\">\n      <div>\n        <div class=\"card rounded\">\n          <div class=\"card-body\" class=\"log-form-mr bg-white\">\n            <div class=\"card-header text-center bg-transparent border-0\">\n              <h2 class=\"m-2\">Reset Password</h2>\n              <img class=\"h-vs\" src=\"assets/icons/vidhya-sandhhan.svg\">\n            </div>\n            <form [formGroup]=\"passwordForm\" class=\"m-4\" (ngSubmit)=\"onpasswordSubmit()\">\n              <div class=\"form-group loginform\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label for=\"password\">New Password</mat-label>\n                  <span matPrefix>\n                    <mat-icon color=\"primary\">lock</mat-icon>\n                    <mat-divider [vertical]=\"true\"></mat-divider>\n                  </span>\n                  <input matInput type=\"password\" formControlName=\"password\"\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\n                  <div *ngIf=\"passwordsubmitted && p.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"p.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"p.password.errors.pattern\">Password should be 8 characters with 1 Upper case letter and a number</div>\n                  </div>\n                </mat-form-field>\n              </div>\n              <div class=\"form-group loginform\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label for=\"confirmPassword\">Confirm Password</mat-label>\n                  <span matPrefix>\n                    <mat-icon color=\"primary\">lock</mat-icon>\n                    <mat-divider [vertical]=\"true\"></mat-divider>\n                  </span>\n                  <input matInput type=\"password\" formControlName=\"confirmPassword\"\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\n                  <div *ngIf=\"passwordsubmitted && p.confirmPassword.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"p.confirmPassword.errors.required\">Confirm Password is required</div>\n                    <div *ngIf=\"p.confirmPassword.errors.IsMatch\">Passwords are not matching!</div>\n                  </div>\n                </mat-form-field>\n              </div>\n              <div class=\"d-flex justify-content-between text-white\">\n                <a class=\"btn btn-secondary\" type=\"submit\" [routerLink]=\"['/login']\" role=\"button\">Login?</a>\n                <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loadforgot\">\n                  <span *ngIf=\"loadforgot\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                  Submit\n                </button>\n              </div>\n              <div *ngIf=\"passwordsubmitted && success\" class=\"alert alert-danger mt-3 mb-0\">{{success}}</div>\n              <div *ngIf=\"passwordsubmitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { IsMatch } from 'src/app/_helpers/fieldmatcher';\r\nimport { User } from 'src/app/_models/user';\r\nimport { handleException } from 'src/app/_helpers/vsexception';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { Customvalidators } from 'src/app/_helpers/customvalidators';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  isAlert = '';\r\n  error = '';\r\n  isTutor = true;\r\n  success;\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 2, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 2, rows: 1, color: 'lightgreen'},\r\n  ];\r\n\r\n  options = {\r\n    autoClose: true,\r\n    keepAfterRouteChange: false\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    public authService: AuthserviceService,\r\n    private alertService: AlertService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const dat = this.route.url.subscribe(\r\n      x => {this.isTutor = x[1].path === 'tutor'; }\r\n    );\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phone: ['', Validators.required],\r\n      password: [ null, Validators.compose([\r\n        Validators.required,\r\n        Customvalidators.patternValidator(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, { isInvalid: true }),\r\n        // Customvalidators.patternValidator(/[A-Z]/, { hasCapitalCase: true }),\r\n        // Customvalidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\r\n        Validators.minLength(8)])\r\n     ],\r\n      role: [''],\r\n      confirmPassword: [''],\r\n    }, {validator: IsMatch('password', 'confirmPassword') });\r\n  }\r\n\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.error = null;\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid){\r\n      return;\r\n    }\r\n\r\n    const regUser: any = {\r\n       firstName : this.f.firstName.value,\r\n       lastName: this.f.lastName.value,\r\n       email: this.f.email.value,\r\n       password: this.f.password.value,\r\n       phone: this.f.phone.value,\r\n       username: this.f.email.value,\r\n       confirmPassword: this.f.confirmPassword.value,\r\n       acceptTerms: true,\r\n       title: this.isTutor ? 'tutor' : 'student',\r\n       role: this.isTutor ? 1 : 2,\r\n    };\r\n\r\n    this.loading = true;\r\n    this.userService.register(regUser)\r\n    .subscribe(data => {\r\n      this.alertService.success(data.message, this.options);\r\n      this.router.navigate(['login']);\r\n      this.loading = false;\r\n     }, error => {this.alertService.error(error, this.options); this.loading = false; });\r\n\r\n  }\r\n\r\n  registered(){\r\n    this.success = null;\r\n    this.registerForm.reset();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor ? '':'main-bg'\">\r\n  <mat-toolbar class=\"w-100 p-2 justify-content-center\">\r\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\r\n  </mat-toolbar>\r\n  <div class=\"equal-container login-side\">\r\n    <div class=\"equal-col\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"registerForm\" class=\"log-form-mr\"  (ngSubmit)=\"onSubmit()\">\r\n            <div>\r\n              <div class=\"card-header bg-img  log-header text-center\">\r\n                <div class=\"signup-txt\">Register For Free</div>\r\n                <div class=\"p-2\"><small >Please fill out the form below to get started.</small></div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"firstname\">First Name</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"firstName\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n                  <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"lastname\">Last Name</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"lastName\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n                  <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n  \r\n              <!-- <div class=\"form-row\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <mat-label for=\"uname\">User Name</mat-label>\r\n                      <input matInput type=\"text\" formControlName=\"uname\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.uname.errors }\" />\r\n                      <div *ngIf=\"submitted && f.uname.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.uname.errors.required\">User Name is required</div>\r\n                      </div>\r\n                    </mat-form-field>\r\n                  </div> -->\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"email\">Email</mat-label>\r\n                  <input matInput type=\"email\" formControlName=\"email\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email Address is required</div>\r\n                    <div *ngIf=\"f.email.errors.email\">Please Provide a Valid Email Address</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">Password</mat-label>\r\n                  <input matInput type=\"password\" formControlName=\"password\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                  <mat-hint>Minimum 8 characters with atleast one capital letter and a number</mat-hint>\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Please Provide a Password</div>\r\n                    <div *ngIf=\"f.password.errors.pattern\">Password should be 8 characters with 1 Upper case letter and a number</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">Confirm Password</mat-label>\r\n                  <input matInput type=\"password\" formControlName=\"confirmPassword\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n                  <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                    <div *ngIf=\"f.confirmPassword.errors.IsMatch\">Passwords are not matching!</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"phone\">Phone</mat-label>\r\n                  <input matInput type=\"tel\" formControlName=\"phone\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n                  <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.phone.errors.required\">Please Provide a Phone number</div>\r\n                    <div *ngIf=\"f.phone.errors.pattern\">Please provide a valid phone number</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <mat-card-footer class=\"text-center justify-content-center\">\r\n                <mat-card-actions>\r\n                  <button mat-flat-button color=\"accent\" type=\"submit\" [disabled]=\"loading\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Register\r\n                  </button>\r\n                  <!-- <a mat-flat-button color=\"accent\" [routerLink]=\"'/register'\">Sign Up</a> -->\r\n                  <div class=\"mt-2 p-2\">Already have an account? <a [routerLink]=\"'/login'\">Sign In</a></div>\r\n                </mat-card-actions>\r\n                <div class=\"m-1\">\r\n                  <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success\">\r\n                    <strong>{{success}}</strong>\r\n                    <mat-icon (click)=\"registered()\">close</mat-icon>\r\n                  </div>\r\n                  <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"error\">\r\n                    <strong>Unable to Register!</strong>\r\n                    <mat-icon (click)=\"error = null\">close</mat-icon>\r\n                  </div>\r\n                </div>\r\n              </mat-card-footer>\r\n            </div>         \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexXAxis,\r\n  ApexDataLabels,\r\n  ApexStroke,\r\n  ApexMarkers,\r\n  ApexYAxis,\r\n  ApexGrid,\r\n  ApexTitleSubtitle,\r\n  ApexLegend,\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexFill\r\n} from 'ng-apexcharts';\r\nimport { months } from 'moment';\r\n\r\nexport type LineChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  stroke: ApexStroke;\r\n  dataLabels: ApexDataLabels;\r\n  markers: ApexMarkers;\r\n  colors: string[];\r\n  yaxis: ApexYAxis;\r\n  grid: ApexGrid;\r\n  legend: ApexLegend;\r\n  title: ApexTitleSubtitle;\r\n};\r\n\r\nexport type RadialChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n  fill: ApexFill;\r\n  stroke: ApexStroke;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-adaptivereports',\r\n  templateUrl: './adaptivereports.component.html',\r\n  styleUrls: ['./adaptivereports.component.css']\r\n})\r\nexport class AdaptivereportsComponent implements OnInit {\r\n\r\n\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<LineChartOptions>;\r\n  public radialChartOptions: Partial<RadialChartOptions>;\r\n\r\n  radialCharts = [];\r\n\r\n  constructor() {\r\n    this.lineChartData();\r\n    this.getradialCharts();\r\n\r\n  }\r\n\r\n  reportDate = new Date();\r\n\r\n  lineChartData(){\r\n    const dayArray = [];\r\n    for (let index = 1; index < 31; index++) {\r\n      dayArray.push(index);\r\n    }\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: 'Chapters Completed',\r\n          data: [8, 9, 3, 12, 15, 4 , 15, 3, 8, 9, 6, 2, 8, 9, 12, 2, 15, 4 , 3, 8, 9, 3, 6, 12, 15, 4 , 3, 2, 3]\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: 'line',\r\n        dropShadow: {\r\n          enabled: true,\r\n          color: '#000',\r\n          top: 18,\r\n          left: 7,\r\n          blur: 10,\r\n          opacity: 0.2\r\n        },\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      colors: ['#77B6EA', '#545454'],\r\n      dataLabels: {\r\n        enabled: true\r\n      },\r\n      stroke: {\r\n        curve: 'smooth'\r\n      },\r\n      // title: {\r\n      //   text: 'Average Chapter Completions',\r\n      //   align: 'left',\r\n      // },\r\n      grid: {\r\n        borderColor: '#e7e7e7',\r\n        row: {\r\n          colors: ['#f3f3f3', 'transparent'],\r\n          opacity: 0.5\r\n        }\r\n      },\r\n      markers: {\r\n        size: 1\r\n      },\r\n      xaxis: {\r\n        categories: dayArray,\r\n        title: {\r\n          text: 'Days'\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: 'Chapters'\r\n        },\r\n        min: 1,\r\n        max: 20\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'right',\r\n        floating: true,\r\n        offsetY: -25,\r\n        offsetX: -5\r\n      }\r\n    };\r\n  }\r\n\r\n  getradialCharts(){\r\n    this.radialChartOptions = {\r\n      series: [75],\r\n      chart: {\r\n        height: 250,\r\n        type: 'radialBar',\r\n        toolbar: {\r\n          show: true\r\n        }\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          startAngle: -135,\r\n          endAngle: 225,\r\n          hollow: {\r\n            margin: 0,\r\n            size: '40%',\r\n            background: '#fff',\r\n            image: undefined,\r\n            position: 'front',\r\n            dropShadow: {\r\n              enabled: true,\r\n              top: 3,\r\n              left: 0,\r\n              blur: 4,\r\n              opacity: 0.24\r\n            }\r\n          },\r\n          track: {\r\n            background: '#fff',\r\n            strokeWidth: '5%',\r\n            margin: 0,\r\n            dropShadow: {\r\n              enabled: true,\r\n              top: -3,\r\n              left: 0,\r\n              blur: 4,\r\n              opacity: 0.35\r\n            }\r\n          },\r\n\r\n          dataLabels: {\r\n            show: true,\r\n            name: {\r\n              offsetY: -10,\r\n              show: true,\r\n              color: '#888',\r\n              fontSize: '12px'\r\n            },\r\n            value: {\r\n              formatter: (val) => {\r\n                return parseInt(val.toString(), 10).toString();\r\n              },\r\n              color: '#111',\r\n              fontSize: '14px',\r\n              show: true\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          type: 'horizontal',\r\n          shadeIntensity: 0.5,\r\n          gradientToColors: ['#ff5e3a'],\r\n          inverseColors: true,\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100]\r\n        }\r\n      },\r\n      stroke: {\r\n        lineCap: 'round'\r\n      },\r\n      labels: ['Percent']\r\n    };\r\n\r\n    for (let index = 0; index < 4; index++) {\r\n      this.radialCharts.push(this.radialChartOptions);\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card text-center\">\r\n  <div class=\"card-header card-header-main\">\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n      <input matInput placeholder=\"Subject\">\r\n      <mat-icon matPrefix>subject</mat-icon>\r\n    </mat-form-field>\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n      <input matInput placeholder=\"Chapter\">\r\n      <mat-icon matPrefix>topic</mat-icon>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header card-header-main text-left\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <div class=\"d-flex flex-column\">\r\n            <span class=\"chapters\">\r\n              Chapters Completed and Point Gained per Day\r\n            </span>\r\n            <span class=\"chaper-date\">\r\n              {{reportDate | date}}\r\n            </span>\r\n          </div>\r\n          <div class=\"d-flex\">\r\n            <div class=\"d-flex flex-column mr-1\">\r\n              <span class=\"completed\">Completed ({{reportDate | date: 'MMM'}})</span>\r\n              <span class=\"chaper-date\">Total :25</span>\r\n            </div>\r\n            <div class=\"d-flex flex-column mr-1\">\r\n              <span class=\"completed\">Gained Point ({{reportDate | date: 'MMM'}})</span>\r\n              <span class=\"chaper-date\">Total : 282</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [xaxis]=\"chartOptions.xaxis\"\r\n          [stroke]=\"chartOptions.stroke\" [colors]=\"chartOptions.colors\" [dataLabels]=\"chartOptions.dataLabels\"\r\n          [legend]=\"chartOptions.legend\" [markers]=\"chartOptions.markers\" [grid]=\"chartOptions.grid\"\r\n          [yaxis]=\"chartOptions.yaxis\" [title]=\"chartOptions.title\"></apx-chart>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"card m-2 text-left\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title register\">Registered Tutions Progress</h4>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-3\" *ngFor=\"let chart of radialCharts\">\r\n                      <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                          <div class=\"d-flex justify-content-between\">\r\n                            <div>Maths</div>\r\n                            <div>\r\n                              <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\">\r\n                                <mat-icon>drag_indicator</mat-icon>\r\n                              </button>\r\n                              <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n                                <button mat-menu-item>\r\n                                  <span>Announcement</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                  <span>Activity</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                  <span>Ask</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                  <span>Quiz</span>\r\n                                </button>\r\n                              </mat-menu>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                          <apx-chart [series]=\"chart.series\" [chart]=\"chart.chart\" [plotOptions]=\"chart.plotOptions\"\r\n                            [labels]=\"chart.labels\" [stroke]=\"chart.stroke\" [fill]=\"chart.fill\"></apx-chart>\r\n                        </div>\r\n                        <div class=\"card-footer text-center\">\r\n                           <div class=\"d-flex justify-content-between\">\r\n                               <div class=\"d-flex flex-column\">\r\n                                   <span class=\"chart-left\">15</span>\r\n                                   <span class=\"chart-text\">Chapters Completed</span>\r\n                                </div>\r\n                               <mat-divider\r\n                                   [vertical]=\"true\">\r\n                               </mat-divider>\r\n                               <div class=\"d-flex flex-column\">\r\n                                   <span class=\"chart-right\">7</span>\r\n                                   <span class=\"chart-text\">Chapters Left</span>\r\n                                </div>\r\n                           </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthserviceService } from '../_services/authservice.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router,\r\n              private authenticationService: AuthserviceService){\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n               const user = this.authenticationService.userValue;\r\n               if (user) {\r\n                    return true;\r\n                } else {\r\n                    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n                    return false;\r\n                }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitefeatures',\r\n  templateUrl: './sitefeatures.component.html',\r\n  styleUrls: ['./sitefeatures.component.css']\r\n})\r\nexport class SitefeaturesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/FEATURES</p>\r\n          <h2 class=\"welove-text\">We provide Role-based access control.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/website/features/feature.png\"\r\n            srcset=\"assets/website/features/feature-1.png 2x,assets/website/features/feature-2.png 3x\"\r\n            class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bg-white\">\r\n  <div class=\"contact-us\">\r\n    <h2 class=\"welove-devtext\">Role-based access control</h2>\r\n    <div class=\"line\"></div>\r\n  </div>\r\n  <div class=\"role\">\r\n    <div class=\"role-container\">\r\n      <img src=\"assets/website/features/role.png\" srcset=\"assets/website/features/role-1.png 2x,\r\n      assets/website/features/role-2.png 3x\" class=\"role-1\">\r\n      <div class=\"card bg-transparent border-0\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title student-header\">Students\r\n            Without Limits</h2>\r\n          <p class=\"card-text student-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem.\r\n            Curabitur aliquam tellus eu nisl suscipit, at vestibulum ex rutrum. Nulla facilisi.\r\n            Cras ullamcorper pellentesque orci, nec vestibulum nibh.uspendisseUt enim mi, mattis at\r\n            sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit, at\r\n            vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper</p>\r\n            <a class=\"btn startnow rounded\" role=\"button\">Get started now!</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"role-container-2\">\r\n      <div class=\"card bg-transparent border-0\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title student-header\">Tutors\r\n            Global Community</h2>\r\n          <p class=\"card-text student-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem.\r\n            Curabitur aliquam tellus eu nisl suscipit, at vestibulum ex rutrum. Nulla facilisi.\r\n            Cras ullamcorper pellentesque orci, nec vestibulum nibh.uspendisse</p>\r\n            <a class=\"btn startnow rounded\" role=\"button\">Get started now!</a>\r\n        </div>\r\n      </div>\r\n      <img src=\"assets/website/features/global.png\" srcset=\"assets/website/features/global-1.png 2x,\r\n      assets/website/features/global-2.png 3x\" class=\"role-1\">\r\n    </div>\r\n    <div class=\"role-container\">\r\n      <img src=\"assets/website/features/parent.png\" srcset=\"assets/website/features/parent-1.png 2x,\r\n      assets/website/features/parent-2.png 3x\" class=\"role-1\">\r\n      <div class=\"card bg-transparent border-0\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title student-header\">Parents Monitoring\r\n            from Anywhere</h2>\r\n          <p class=\"card-text student-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem.\r\n            Curabitur aliquam tellus eu nisl suscipit, at vestibulum ex rutrum. Nulla facilisi.\r\n            Cras ullamcorper pellentesque orci, nec vestibulum nibh.uspendisse</p>\r\n            <a class=\"btn startnow rounded\" role=\"button\">Get started now!</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudymaterialService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMaterials(){\r\n    return this.http.get<any>(`${environment.apiUrl}/material`);\r\n  }\r\n}\r\n","import {\n  WeekDay\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  Observable\n} from 'rxjs';\nimport {\n  StaticData\n} from 'src/app/_models/static';\nimport {\n  StaticdataService\n} from 'src/app/_services/staticdata.service';\nimport {\n  UserService\n} from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-studentpayments',\n  templateUrl: './studentpayments.component.html',\n  styleUrls: ['./studentpayments.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class StudentpaymentsComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private userservice: UserService,\n              private staticdataService: StaticdataService) {}\n\n  detailsForm: FormGroup;\n  form2: FormGroup;\n  cardForm: FormGroup;\n  submitted = false;\n  tutors;\n  staticData;\n  subjects;\n  allChecked = false;\n  days = [{\n      day: 'Monday',\n      selected: false\n    },\n    {\n      day: 'Tuesday',\n      selected: false\n    },\n    {\n      day: 'Wednesday',\n      selected: false\n    },\n    {\n      day: 'Thursday',\n      selected: false\n    },\n    {\n      day: 'Friday',\n      selected: false\n    },\n    {\n      day: 'Saturday',\n      selected: false\n    },\n    {\n      day: 'Sunday',\n      selected: false\n    }\n  ];\n\n  ngOnInit(): void {\n    this.detailsForm = this.formBuilder.group({\n      tutor: ['', Validators.required],\n      subjects: ['', Validators.required],\n      teachingstyle: ['', Validators.required],\n      days: ['', Validators.required],\n      price: ['', Validators.required],\n      currency: ['INR', Validators.required],\n    });\n\n    this.form2 = this.formBuilder.group({\n      options: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      hours: ['', Validators.required],\n      time: ['', Validators.required]\n    });\n\n    this.cardForm = this.formBuilder.group({\n      option: ['', Validators.required],\n      promo: [''],\n      cardNumber: ['', Validators.required],\n      expDate: ['', Validators.required],\n      holderName: ['', Validators.required],\n      cvv: ['', Validators.required]\n    });\n\n    this.tutors = this.userservice.getTutors();\n    this.getSubjects();\n  }\n\n  displayFn(user: any) {\n    return user && user.name ? user.name : '';\n  }\n\n\n  getSubjects() {\n    this.staticdataService.getStaticDataSets().subscribe(\n      data => {\n        this.subjects = data.subjects.map(e => {\n          return {\n            ...e\n          };\n        });\n      }\n    );\n  }\n\n  get f() {\n    return this.detailsForm.controls;\n  }\n\n  get secondForm(){\n    return this.form2.controls;\n  }\n\n  get getGrandTotal(){\n    return this.f.price.value * this.secondForm.hours.value;\n  }\n\n  getSelectedSubjects(){\n    const subjects = [];\n    Array.from(this.f.subjects.value)\n    .forEach((element: any) => {\n      subjects.push(element.group.groupName + '-' + element.name);\n    });\n    return subjects.join(',');\n  }\n\n  getFrequency(){\n    const days = [];\n    Array.from(this.days)\n    .forEach((element: any) => {\n      if (element.selected){\n        days.push(element.day);\n      }\n    });\n    return days.join(',');\n  }\n\n  changeDays(checker, day) {\n    day.selected = checker;\n    this.allChecked = this.days.filter(t => t.selected).length > 0 ? false : this.allChecked;\n  }\n\n  changeAll(completed: boolean) {\n    this.allChecked = completed;\n    if (this.days == null) {\n      return;\n    }\n    this.days.forEach(t => {\n      if (completed === true) {\n        t.selected = true;\n      }\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.detailsForm.valid) {\n\n    }\n  }\n\n}\n","<div class=\"container-fluid mt-2\">\n  <div class=\"card min-card\">\n    <div class=\"card-header payment-header\">\n      <span class=\"payment\">Payment</span>\n    </div>\n    <div class=\"card-body\">\n      <mat-horizontal-stepper color=\"secondary\" labelPosition=\"bottom\" #stepper>\n        <mat-step [stepControl]=\"detailsForm\">\n          <div class=\"verify\">Verify Tutor details</div>\n          <div class=\"container\">\n            <form [formGroup]=\"detailsForm\">\n              <ng-template class=\"header-label\" matStepLabel>Verify Tutor Details</ng-template>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Tutor Name</mat-label>\n                    <input matInput placeholder=\"Sample Name\" required formControlName=\"tutor\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                      <mat-option *ngFor=\"let tutor of tutors | async\" [value]=\"tutor\">\n                        {{tutor.name}}\n                      </mat-option>\n                    </mat-autocomplete>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Subjects</mat-label>\n                    <mat-select formControlName=\"subjects\" multiple>\n                      <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject\">\n                        {{subject.group.groupName}} - {{subject.name}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <mat-label>Teaching Style</mat-label>\n                  <section>\n                    <mat-radio-group formControlName=\"teachingstyle\">\n                      <mat-radio-button class=\"day-margin\" value=\"Online\">Online</mat-radio-button>\n                      <mat-radio-button class=\"day-margin\" value=\"Offline\">Offline</mat-radio-button>\n                      <mat-radio-button class=\"day-margin\" value=\"Both\">Both</mat-radio-button>\n                    </mat-radio-group>\n                  </section>\n                </div>\n                <div class=\"col-md-6\">\n                  <mat-label>Available Days to Tutor</mat-label>\n                  <section>\n                    <mat-checkbox class=\"day-margin\" [checked]=\"allChecked\" (change)=\"changeAll($event.checked)\">All\n                    </mat-checkbox>\n                    <mat-checkbox class=\"day-margin\" [checked]=\"day.selected\" (change)=\"changeDays($event.checked, day)\"\n                      *ngFor=\"let day of days\">{{day.day | slice:0:3}}</mat-checkbox>\n                  </section>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Hourly Rate</mat-label>\n                    <input matInput formControlName=\"price\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Currency</mat-label>\n                    <input matInput readonly formControlName=\"currency\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <button #previousButton mat-button hidden matStepperPrevious>Previous</button>\n              <button #nextButton mat-button hidden matStepperNext>Next</button>\n            </form>\n          </div>\n        </mat-step>\n        <mat-step [stepControl]=\"form2\">\n          <div class=\"verify\">Select tution duration</div>\n          <form [formGroup]=\"form2\">\n            <ng-template class=\"header-label\" matStepLabel>Select tution duration</ng-template>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Payment options</mat-label>\n                    <section>\n                      <mat-radio-group formControlName=\"options\">\n                        <mat-radio-button class=\"m-2\" value=\"week\">Weekdays (Mon - Fri)</mat-radio-button>\n                        <mat-radio-button class=\"m-2\" value=\"weekend\">Weekends (Sat - Sun)</mat-radio-button>\n                      </mat-radio-group>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Schedule from</mat-label>\n                    <section>\n                      <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter a date range</mat-label>\n                        <span matPrefix>\n                          <mat-icon>calendar_today</mat-icon>\n                        </span>\n                        <mat-date-range-input [rangePicker]=\"picker\">\n                          <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\">\n                          <input matEndDate formControlName=\"endDate\" placeholder=\"End date\">\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n                      </mat-form-field>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>No. of hours per day</mat-label>\n                    <mat-form-field appearance=\"outline\">\n                      <mat-label>No. of hours per day</mat-label>\n                      <input matInput formControlName=\"hours\">\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Time slot</mat-label>\n                    <mat-form-field appearance=\"outline\">\n                      <mat-label>Time slot</mat-label>\n                      <span matPrefix>\n                        <mat-icon>alarm</mat-icon>\n                      </span>\n                      <input matInput formControlName=\"time\">\n                    </mat-form-field>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6 sidecard\">\n                <div class=\"p-4\">\n                  <h3>Booking Summary</h3>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Tutor name:</div>\n                      <div class=\"col\">{{f.tutor.value.name}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Subjects:</div>\n                      <div class=\"col\"> {{getSelectedSubjects()}} </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Teaching style:</div>\n                      <div class=\"col\">{{f.teachingstyle.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Hourly rate:</div>\n                      <div class=\"col\">{{f.price.value}} {{f.currency.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Frequency of classes:</div>\n                      <div class=\"col\">{{getFrequency()}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Starting from:</div>\n                      <div class=\"col\">{{secondForm.startDate.value | date}} - {{secondForm.endDate.value | date}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">No. of hours per day:</div>\n                      <div class=\"col\">{{secondForm.hours.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Time slot:</div>\n                      <div class=\"col\">{{secondForm.time.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Grand total:</div>\n                      <div class=\"col\">{{getGrandTotal}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <div class=\"verify\">Complete payment</div>\n          <form [formGroup]=\"cardForm\">\n            <ng-template class=\"header-label\" matStepLabel>Complete payment</ng-template>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-checkbox>Apply promo code</mat-checkbox>\n                    <section class=\"m-2\">\n                      <mat-label>Promo code</mat-label>\n                      <mat-form-field appearance=\"outline\">\n                        <mat-label>Promo code</mat-label>\n                        <input matInput formControlName=\"promo\">\n                      </mat-form-field>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Payment Options</mat-label>\n                    <section>\n                      <mat-radio-group formControlName=\"option\">\n                        <mat-radio-button class=\"m-2\" value=\"credit\">Credit Card</mat-radio-button>\n                        <mat-radio-button class=\"m-2\" value=\"online\">Online Banking</mat-radio-button>\n                        <mat-radio-button class=\"m-2\" value=\"payment\">Payment Partners</mat-radio-button>\n                      </mat-radio-group>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <mat-label>Card Number</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>Card Number</mat-label>\n                      <span matPrefix><mat-icon>credit_card</mat-icon></span>\n                      <input matInput formControlName=\"cardNumber\">\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-4\">\n                    <mat-label>Exp. Date</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>Choose a date</mat-label>\n                      <input matInput [matDatepicker]=\"exppicker\" formControlName=\"expDate\">\n                      <mat-datepicker-toggle matSuffix [for]=\"exppicker\"></mat-datepicker-toggle>\n                      <mat-datepicker #exppicker></mat-datepicker>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-10\">\n                    <mat-label>Cardholder name</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>Name</mat-label>\n                      <input matInput formControlName=\"holderName\">\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-2\">\n                    <mat-label>CVV</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>CVV</mat-label>\n                      <span matPrefix><mat-icon>credit_card</mat-icon></span>\n                      <input matInput formControlName=\"cvv\">\n                    </mat-form-field>\n                  </div>\n                </div>\n                <mat-checkbox>I accept the terms & conditions</mat-checkbox>\n              </div>\n              <div class=\"col-md-6 sidecard\">\n                <div class=\"p-4\">\n                  <h3>Booking Summary</h3>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Tutor name:</div>\n                      <div class=\"col\">{{f.tutor.value.name}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Subjects:</div>\n                      <div class=\"col\"> {{getSelectedSubjects()}} </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Teaching style:</div>\n                      <div class=\"col\">{{f.teachingstyle.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Hourly rate:</div>\n                      <div class=\"col\">{{f.price.value}} {{f.currency.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Frequency of classes:</div>\n                      <div class=\"col\">{{getFrequency()}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Starting from:</div>\n                      <div class=\"col\">{{secondForm.startDate.value | date}} - {{secondForm.endDate.value | date}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">No. of hours per day:</div>\n                      <div class=\"col\">{{secondForm.hours.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Time slot:</div>\n                      <div class=\"col\">{{secondForm.time.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Grand total:</div>\n                      <div class=\"col\">{{getGrandTotal}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n    </div>\n    <div class=\"card-footer bg-white text-muted\">\n      <div class=\"d-flex justify-content-between\">\n        <a class=\"btn btn-light m-2\" (click)=\"previousButton._elementRef.nativeElement.click()\" role=\"button\">Back</a>\n        <div>\n          <a class=\"btn btn-primary m-2\" role=\"button\">Cancel</a>\n          <a class=\"btn btn-primary m-2\" (click)=\"nextButton._elementRef.nativeElement.click()\"\n            type=\"submit\">Continue</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-promoterlayout',\n  templateUrl: './promoterlayout.component.html',\n  styleUrls: ['./promoterlayout.component.css']\n})\nexport class PromoterlayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { RegisterComponent } from './_components/register/register.component';\r\nimport { NotificationComponent } from './_components/notification/notification.component';\r\nimport { BroadcastComponent } from './_components/broadcast/broadcast.component';\r\nimport { NavigationBarComponent } from './_components/navigation-bar/navigation-bar.component';\r\nimport { SidenavBarComponent } from './_components/sidenav-bar/sidenav-bar.component';\r\nimport { ProfileComponent } from './_components/profile/profile.component';\r\nimport { CalendarComponent } from './_components/calendar/calendar.component';\r\nimport { ConfirmationComponent } from './_components/confirmation/confirmation.component';\r\nimport { DashboardComponent } from './_components/dashboard/dashboard.component';\r\nimport { AdminDashboardComponent } from './_components/admin-dashboard/admin-dashboard.component';\r\nimport { DemolistComponent } from './_components/demolist/demolist.component';\r\nimport { DemoComponent } from './_components/demo/demo.component';\r\nimport { ClassroomComponent } from './_components/classroom/classroom.component';\r\nimport { OtpComponent } from './_components/otp/otp.component';\r\nimport { ActivatescreenComponent } from './_components/activatescreen/activatescreen.component';\r\nimport { TutorsComponent } from './_components/tutors/tutors.component';\r\nimport { DemodetailComponent } from './_components/demodetail/demodetail.component';\r\nimport { TutorReferralsComponent } from './_components/tutor-referrals/tutor-referrals.component';\r\nimport { EarningsComponent } from './_components/earnings/earnings.component';\r\nimport { MainlayoutComponent } from './_layouts/mainlayout/mainlayout.component';\r\nimport { EventsComponent } from './_components/events/events.component';\r\nimport { ReportsComponent } from './_components/student/reports/reports.component';\r\nimport { StudymaterialComponent } from './_components/student/studymaterial/studymaterial.component';\r\nimport { SitelayoutComponent } from './_layouts/sitelayout/sitelayout.component';\r\nimport { SitehomeComponent } from './_components/website/sitehome/sitehome.component';\r\nimport { SitenavComponent } from './_components/website/sitenav/sitenav.component';\r\nimport { SiteaboutusComponent } from './_components/website/siteaboutus/siteaboutus.component';\r\nimport { SitepricingComponent } from './_components/website/sitepricing/sitepricing.component';\r\nimport { SitecontactusComponent } from './_components/website/sitecontactus/sitecontactus.component';\r\nimport { SitefeaturesComponent } from './_components/website/sitefeatures/sitefeatures.component';\r\nimport { AdminlayoutComponent } from './_layouts/adminlayout/adminlayout.component';\r\nimport { AdminComponent } from './_components/dashboard/admin/admin.component';\r\nimport { AdmintutorsComponent } from './_components/admin-pages/admintutors/admintutors.component';\r\nimport { AdminstudentsComponent } from './_components/admin-pages/adminstudents/adminstudents.component';\r\nimport { AdminpaymentsComponent } from './_components/admin-pages/adminpayments/adminpayments.component';\r\nimport { PromoterregisterComponent } from './_components/promoter/promoterregister/promoterregister.component';\r\nimport { PromoterlayoutComponent } from './_layouts/promoterlayout/promoterlayout.component';\r\nimport { PromoterloginComponent } from './_components/promoter/promoterlogin/promoterlogin.component';\r\nimport { StudentpaymentsComponent } from './_components/student/studentpayments/studentpayments.component';\r\nimport { ForgotpasswordComponent } from './_components/login/forgotpassword/forgotpassword.component';\r\nimport { ResetpasswordComponent } from './_components/login/resetpassword/resetpassword.component';\r\nimport { AppnotificationsComponent } from './_components/appnotifications/appnotifications.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'vs', component: MainlayoutComponent, canActivate: [AuthGuard],\r\n  children: [\r\n  { path: '', component: HomeComponent, pathMatch: 'full'},\r\n  { path: 'navbar', component: NavigationBarComponent},\r\n  { path: 'sidenav', component: SidenavBarComponent},\r\n  { path: 'tutors', component: TutorsComponent},\r\n  { path: 'earnings', component: EarningsComponent},\r\n  { path: 'notifications', component: NotificationComponent},\r\n  { path: 'broadcast', component: BroadcastComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'calendar', component: CalendarComponent},\r\n  { path: 'dashboard', component: DashboardComponent},\r\n  { path: 'admin', component: AdminDashboardComponent},\r\n  { path: 'demos', component: DemoComponent},\r\n  { path: 'events', component: EventsComponent},\r\n  { path: 'requests', component: DemolistComponent},\r\n  { path: 'demos/create', component: DemoComponent},\r\n  { path: 'demodetail/:id', component: DemodetailComponent},\r\n  { path: 'classroom', component: ClassroomComponent},\r\n  { path: 'tutor-referrals', component: TutorReferralsComponent},\r\n  { path: 'student/assignments', component: StudymaterialComponent},\r\n  { path: 'progress', component: ReportsComponent},\r\n  { path: 'student/payments', component: StudentpaymentsComponent},\r\n  { path: 'appnotify', component: AppnotificationsComponent},\r\n  ] },\r\n  {\r\n    path: '', component: SitelayoutComponent,\r\n    children: [\r\n      { path: '', component: SitehomeComponent, pathMatch: 'full'},\r\n      { path: 'about-us', component: SiteaboutusComponent},\r\n      { path: 'pricing', component: SitepricingComponent},\r\n      { path: 'contact', component: SitecontactusComponent},\r\n      { path: 'features', component: SitefeaturesComponent},\r\n      { path: 'navbar', component: SitenavComponent},\r\n    ]\r\n  },\r\n  {\r\n    path: 'admin', component: AdminlayoutComponent,\r\n    children: [\r\n      { path: '', component: AdminComponent, pathMatch: 'full'},\r\n      { path: 'tutors', component: AdmintutorsComponent},\r\n      { path: 'students', component: AdminstudentsComponent},\r\n      { path: 'payments', component: AdminpaymentsComponent}\r\n    ]\r\n  },\r\n  {\r\n    path: 'promoter', component: PromoterlayoutComponent,\r\n    children: [\r\n      { path: '', component: AdminComponent, pathMatch: 'full'},\r\n      { path: 'register', component: PromoterregisterComponent},\r\n      { path: 'login', component: PromoterloginComponent},\r\n      { path: 'students', component: AdminstudentsComponent},\r\n      { path: 'payments', component: AdminpaymentsComponent}\r\n    ]\r\n  },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register/:id', component: RegisterComponent},\r\n  { path: 'authenticate', component: OtpComponent},\r\n  { path: 'account/forgot-password', component: ForgotpasswordComponent},\r\n  { path: 'account/reset-password', component: ResetpasswordComponent},\r\n  { path: 'welcome', component: ActivatescreenComponent},\r\n  { path: 'verify-email/:token', component: ConfirmationComponent},\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { Dashboard } from 'src/app/_models/dashboard';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { Statistics } from 'src/app/_models/static';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  greetmessage;\r\n  user: User;\r\n  cards: Dashboard[];\r\n  istutor: boolean;\r\n  statistics: Statistics;\r\n  profile;\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: false,\r\n    touchDrag: false,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      400: {\r\n        items: 2\r\n      },\r\n      740: {\r\n        items: 3\r\n      },\r\n      940: {\r\n        items: 5\r\n      }\r\n    },\r\n    nav: true\r\n  };\r\n\r\n  tutorcards: Dashboard[] = [\r\n    {id: 0, icon: 'assets/dashboard/noun-teaching-2380320.svg', text: 'My Classroom', subtext : 'Events',\r\n                                                          value : '0', type: '', class: 'opac-5', path: '/vs/classroom'},\r\n    {id: 1, icon: 'assets/dashboard/noun-assignment-3202074.svg', text: 'Requests',\r\n    subtext : 'Pending tasks', value : '0', type: '', class: 'opac-5', path: '/vs/requests' },\r\n    {id: 2, icon: 'assets/dashboard/path.svg', text: 'My Profile', subtext : 'Completed',\r\n    value : '0%', type: '', class: 'opac-5',\r\n    path: '/vs/profile' },\r\n    {id: 3, icon: 'assets/dashboard/vector.svg', text: 'My Events', subtext : 'Completed',\r\n    value : '0', type: '', class: 'opac-5', path: '/vs/events' },\r\n    {id: 4, icon: 'assets/dashboard/my-earnings.svg', text: 'My Earnings',\r\n    subtext : 'Completed', value : '0', type: '', class: 'opac-5', path: '/vs/earnings' },\r\n    {id: 5, icon: 'assets/dashboard/my-referrals.svg', text: 'My Referrals',\r\n    subtext : 'Rewards', value : '0', type: '', class: 'opac-5', path: '/vs/tutor-referrals' }\r\n  ];\r\n\r\n  studentcards: Dashboard[] = [\r\n    {id: 0, icon: 'assets/Student/noun-teaching-2380320.svg', text: 'My Classroom',\r\n    subtext : 'Events', value : '0',\r\n                                                        type: '', class: 'opac-5', path: '/vs/classroom' },\r\n    {id: 1, icon: 'assets/Student/noun-assignment-3202074.svg', text: 'Book Tutor', subtext : 'Pending tasks', value : '8', type: '', class: 'opac-5', path: '/vs/tutors' },\r\n    {id: 2, icon: 'assets/Student/path.svg', text: 'My Profile',\r\n                                                      subtext : 'Completed', value : '0%', type: '', class: 'student-profile', path: '/vs/profile' },\r\n    {id: 3, icon: 'assets/Student/my-earnings.svg',\r\n                                  text: 'Study Material', subtext : 'Resources', value : '0', type: '', class: 'opac-5', path: '/vs/student/assignments' },\r\n    {id: 4, icon: 'assets/Student/chart-pie-36.svg', text: 'Progress Reports',\r\n                                  subtext : 'Credits', value : '0', type: '', class: 'opac-5', path: '/vs/progress' }\r\n  ];\r\n\r\n  constructor(private authService: AuthserviceService, private userService: UserService,\r\n              private staticService: StaticdataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.CreateWishes();\r\n    this.user = this.authService.userValue;\r\n    this.userService.getProfileData(this.user.id).subscribe(x => {this.profile = x; });\r\n    this.istutor = this.user.role === 'Tutor';\r\n    this.staticService.getStatistics(this.authService.userValue.id).subscribe(x => {\r\n      this.statistics = x;\r\n      if (this.istutor){\r\n        this.tutorcards[0].value = this.statistics?.events.total.toString();\r\n        this.tutorcards[1].value = this.statistics?.events.total.toString();\r\n        this.tutorcards[2].value = this.statistics?.profiles.total.toString() + '%';\r\n        this.tutorcards[3].value = this.statistics?.events.total.toString();\r\n        this.tutorcards[4].value = this.statistics?.earnings.total.toString();\r\n        this.tutorcards[5].value = this.statistics?.progress.total.toString();\r\n      }\r\n      else{\r\n        this.studentcards[0].value = this.statistics?.events.total.toString();\r\n        this.studentcards[1].value = this.statistics?.events.total.toString();\r\n        this.studentcards[2].value = this.statistics?.profiles.total.toString() + '%';\r\n        this.studentcards[3].value = this.statistics?.materials.total.toString();\r\n        this.studentcards[4].value = this.statistics?.progress.total.toString();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private CreateWishes() {\r\n    const today = new Date();\r\n    const hours = today.getHours();\r\n\r\n    if (hours < 12) {\r\n      this.greetmessage = 'Good Morning';\r\n    }\r\n    else if (hours >= 12 && hours <= 17) {\r\n      this.greetmessage = 'Good Afternoon';\r\n    }\r\n    else if (hours >= 17 && hours <= 24) {\r\n      this.greetmessage = 'Good Evening';\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"align-items-center\">\r\n  <div class=\"jumbotron bg-white m-2 j-minheight\">\r\n    <div class=\"dash1-board\">\r\n      <div class=\"card-deck\">\r\n        <div class=\"card col-md-6 border-0 rounded\">\r\n          <div class=\"greet\">\r\n            <h4>Hi {{greetmessage}},</h4>\r\n            <h2 [ngClass]=\"{'first-nm': istutor === false}\">{{user.firstName | uppercase}}\r\n              {{user.lastName | uppercase}}</h2>\r\n            <div class=\"text-container\">\r\n              <p>\r\n                Start your journey by clicking on one of these icons\r\n              </p>\r\n              <img class=\"path-2 d-none d-md-block\" src=\"assets/dashboard/path-2.svg\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card col-md-6 border-0 rounded d-none d-md-block\">\r\n          <img class=\"w-100\" src=\"assets/dashboard/dashboard-1.png\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"icon-cards\">\r\n      <div [ngSwitch]=\"istutor\">\r\n        <div *ngSwitchCase=\"true\">\r\n          <div class=\"row t-card\">\r\n            <div class=\"col-md-4 col-lg-2 col-xl-4 mb-2\" *ngFor=\"let item of tutorcards\">\r\n              <div class=\"card dash-card text-center clearfix\"\r\n                [routerLink]=\"profile?.address?.addressId === 0 && item.text !== 'My Profile' ? '' : item.path\"\r\n                [ngClass]=\"{'opac-blue': profile?.address?.addressId == 0, 'prof-blue': item.text === 'My Profile'}\">\r\n                <div class=\"card-body spl-padding\">\r\n                  <img class=\"img img-responsive\" [src]=\"item.icon\">\r\n                  <h5 class=\"card-title title-text\"><a>{{item.text}}</a></h5>\r\n                  <p class=\"card-text title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                    <span>{{item.value}}</span>{{item.subtext}}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngSwitchCase=\"false\">\r\n          <div class=\"row t-card\">\r\n            <div class=\"col-md-4 col-lg-2 col-xl-4 mb-1\" *ngFor=\"let item of studentcards\">\r\n              <div class=\"card dash-card text-center clearfix\"\r\n                [routerLink]=\"profile?.address?.addressId === 0 && item.text !== 'My Profile' ? '' : item.path\"\r\n                [ngClass]=\"{'opac-pink': profile?.address?.addressId == 0, 'prof-pink': item.text === 'My Profile'}\">\r\n                <div class=\"card-body spl-padding\">\r\n                  <img class=\"img img-responsive\" [src]=\"item.icon\">\r\n                  <h5 class=\"card-title text-dark title-text\"><a>{{item.text}}</a></h5>\r\n                  <p class=\"card-text text-dark title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                    <span>{{item.value}}</span>{{item.subtext}}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <div [ngSwitch]=\"istutor\">\r\n      <div *ngSwitchCase=\"true\">\r\n        <owl-carousel-o [options]=\"customOptions\">\r\n          <ng-container *ngFor=\"let slide of tutorcards\">\r\n            <ng-template carouselSlide [id]=\"slide.id\">\r\n              <div class=\"card dash-card text-center clearfix m-2\"\r\n                [routerLink]=\"profile?.address?.addressId === 0 && slide.text !== 'My Profile' ? '' : slide.path\"\r\n                [ngClass]=\"{'opac-blue': profile?.address?.addressId == 0, 'prof-blue': slide.text === 'My Profile'}\">\r\n                <div class=\"card-body spl-padding\">\r\n                  <img class=\"img img-responsive\" [src]=\"slide.icon\">\r\n                  <h5 class=\"card-title title-text\"><a>{{slide.text}}</a></h5>\r\n                  <p class=\"card-text title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                    <span>{{slide.value}}</span>{{slide.subtext}}</p>\r\n                </div>\r\n                <div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </ng-container>\r\n        </owl-carousel-o>\r\n      </div>\r\n      <div *ngSwitchCase=\"false\">\r\n        <owl-carousel-o [options]=\"customOptions\">\r\n          <ng-container *ngFor=\"let item of studentcards\">\r\n            <ng-template carouselSlide [id]=\"item.id\">\r\n              <div class=\"card dash-card-student text-center clearfix m-2\"\r\n              [routerLink]=\"profile?.address?.addressId === 0 && item.text !== 'My Profile' ? '' : item.path\"\r\n              [ngClass]=\"{'opac-pink': profile?.address?.addressId == 0, 'prof-pink': item.text === 'My Profile'}\">\r\n              <div class=\"card-body spl-padding\">\r\n                <img class=\"img img-responsive\" [src]=\"item.icon\">\r\n                <h5 class=\"card-title text-dark title-text\"><a>{{item.text}}</a></h5>\r\n                <p class=\"card-text text-dark title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                  <span>{{item.value}}</span>{{item.subtext}}</p>\r\n              </div>\r\n            </div>\r\n            </ng-template>\r\n          </ng-container>\r\n        </owl-carousel-o>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { FileuploaderService } from 'src/app/_services/fileuploader.service';\r\nimport * as moment from 'moment';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-assignments',\r\n  templateUrl: './assignments.component.html',\r\n  styleUrls: ['./assignments.component.css']\r\n})\r\nexport class StudentAssignmentsComponent implements OnInit {\r\n\r\n  assignments;\r\n  courses;\r\n  filter;\r\n  error;\r\n  isUploaded;\r\n  uploadedFile;\r\n  isSuccess;\r\n  selectdetail = false;\r\n  splitAssignments;\r\n  month = new Date();\r\n  public assignmentFormForm: FormGroup;\r\n  public submitted = false;\r\n  files = [];\r\n  uploadedFilePath;\r\n\r\n  constructor(private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private fileUploader: FileuploaderService,\r\n              private studentService: StudentService,\r\n              private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.filterassignments();\r\n    this.assignmentForm();\r\n  }\r\n\r\n  assignmentForm(){\r\n    this.assignmentFormForm = this.fb.group({\r\n      id: [{\r\n        value: 0,\r\n        disabled: true\r\n      }],\r\n      assignmentId : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      courseId : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      status : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      dueDate: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      submissionDate : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      submissionFile : [''],\r\n      assignmentFile: [''],\r\n      userId : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      subject: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      title: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      topic: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      grade: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      tutor: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      points: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      instructions: [{\r\n        value: '',\r\n        disabled: true\r\n      }]\r\n      });\r\n  }\r\n\r\n  filterassignments(){\r\n    this.courseService.getStudentAssignments(this.authService.userValue.id)\r\n    .subscribe(x => {this.assignments = x;\r\n                     this.splitAssignments = x?.filter(y => new Date(y.assignment.dueDate).getMonth() === this.month.getMonth() &&\r\n                     new Date(y.assignment.dueDate).getFullYear() === this.month.getFullYear()); },\r\n      (error) => this.error = error);\r\n  }\r\n\r\n  downloadFile() {\r\n   // const blob = new Blob([data]);\r\n   // const url = window.URL.createObjectURL(blob);\r\n    window.open(this.f.assignmentFile.value);\r\n  }\r\n\r\n  get f() { return this.assignmentFormForm.controls; }\r\n\r\n  fileBrowse(files){\r\n    this.uploadedFile = files[0];\r\n    this.isUploaded = true;\r\n  }\r\n\r\n  viewDetails(assignment){\r\n    this.selectdetail = !this.selectdetail;\r\n    this.assignmentFormForm.patchValue({\r\n      id: assignment.id,\r\n      assignmentId : assignment.assignmentId,\r\n      dueDate: assignment.assignment.dueDate,\r\n      courseId: assignment.courseId,\r\n      submissionDate : new Date(),\r\n      assignmentFile : assignment.assignment.assignmentFile,\r\n      userId : this.authService.userValue.id,\r\n      subject: assignment.assignment.subject,\r\n      title: assignment.assignment.title,\r\n      topic: assignment.assignment.topic,\r\n      grade: assignment.assignment.grade,\r\n      tutor: assignment.assignment.account?.firstName + ' ' + assignment.assignment.account?.lastName,\r\n      points: assignment.assignment.points,\r\n      instructions: assignment.assignment.instructions\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if (this.files.length > 0){\r\n      const fileToUpload =  this.files[0] as File;\r\n      const formData = new FormData();\r\n      formData.append('file', fileToUpload, fileToUpload.name);\r\n      this.fileUploader.uploadFile(formData).subscribe(x => {\r\n        this.update(x.filepath);\r\n        this.filterassignments();\r\n      });\r\n    }\r\n  }\r\n\r\n  update(filePath){\r\n    const assignmentToUpdate = {\r\n      id: this.f.id.value,\r\n      assignmentId: this.f.assignmentId.value,\r\n      status: 1,\r\n      submissionDate: new Date(),\r\n      submissionFile: filePath,\r\n      studentId: this.f.userId.value,\r\n      courseId: this.f.courseId.value\r\n    };\r\n    this.courseService.updateStudentAssignments(assignmentToUpdate).subscribe(x => {if (x.id > 0){\r\n      this.isSuccess = true;\r\n    }}, (error) => this.isSuccess = false);\r\n  }\r\n\r\n  onDelete(){\r\n    this.uploadedFile = null;\r\n  }\r\n\r\n  nextClick(side){\r\n    if (side === 'left'){\r\n      this.month = moment(this.month).subtract('1', 'month').toDate() ;\r\n    }\r\n    else{\r\n      this.month = moment(this.month).add('1', 'month').toDate() ;\r\n    }\r\n    this.filterassignments();\r\n  }\r\n\r\n  dropped(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  prepareFilesList(files: Array<any>) {\r\n    for (const item of files) {\r\n      item.progress = 0;\r\n      this.files.push(item);\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.uploadedFilePath = e.target.result;\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n    this.uploadFilesSimulator(0);\r\n  }\r\n\r\n  uploadFilesSimulator(index: number) {\r\n    setTimeout(() => {\r\n      if (index === this.files.length) {\r\n        return;\r\n      } else {\r\n        const progressInterval = setInterval(() => {\r\n          if (this.files[index].progress === 100) {\r\n            clearInterval(progressInterval);\r\n            this.uploadFilesSimulator(index + 1);\r\n          } else {\r\n            this.files[index].progress += 5;\r\n          }\r\n        }, 200);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n    const k = 1024;\r\n    const dm = decimals <= 0 ? 0 : decimals || 2;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  filesBrowse(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  deletefiles(){\r\n    this.files = [];\r\n    this.assignmentFormForm.controls.submissionFile.patchValue('');\r\n  }\r\n\r\n\r\n}\r\n","<ng-container>\r\n  <div class=\"card card-min-height\">\r\n    <div class=\"card-header material-bg\">\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <a *ngIf=\"selectdetail\" (click)=\"selectdetail = !selectdetail\">\r\n            <mat-icon>west</mat-icon>\r\n          </a> Assignments\r\n        </div>\r\n        <div *ngIf=\"!selectdetail\">\r\n          <a (click)=\"nextClick('left')\">\r\n            <mat-icon>chevron_left</mat-icon>\r\n          </a>\r\n          <span>{{month | date: 'MMMM , yyyy'}}</span>\r\n          <a (click)=\"nextClick('right')\">\r\n            <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n    <span [ngSwitch]=\"selectdetail\">\r\n      <form [formGroup]=\"assignmentFormForm\" novalidate (ngSubmit)=\"onSubmit()\" *ngSwitchCase=\"true\">\r\n        <div class=\"card-body\">\r\n          <div class=\"container\">\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"subject\" formControlName=\"subject\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"title\" formControlName=\"title\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"grade\" formControlName=\"grade\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"Due Date\" formControlName=\"dueDate\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"Tutor\" formControlName=\"tutor\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"Points\" formControlName=\"points\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-8\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <textarea matInput placeholder=\"Instructions\" formControlName=\"instructions\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                assignment file <button mat-icon-button color=\"accent\" (click)=\"downloadFile()\">\r\n                  <mat-icon>cloud_download</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"file-container\" appDragndir (fileDropped)=\"dropped($event)\">\r\n                <input type=\"file\" class=\"fileinput\" #fileDropRef id=\"fileDropRef\" formControlName=\"submissionFile\"\r\n                  (change)=\"filesBrowse($event.target.files)\" />\r\n                <h3 class=\"text-dark\">Drag and Drop the file</h3>\r\n              </div>\r\n              <div class=\"info\" *ngIf=\"files.length>0\">\r\n                <h4 class=\"name\">\r\n                  {{ files[0]?.name }} <button mat-icon-button (click)=\"deletefiles()\" color=\"warn\">\r\n                    <mat-icon>delete_forever</mat-icon>\r\n                  </button>\r\n                </h4>\r\n                <p class=\"size\">\r\n                  {{files[0]?.progress}}% of {{ formatBytes(files[0]?.size,0) }}\r\n                </p>\r\n                <mat-progress-bar mode=\"buffer\" [color]=\"'primary'\" [value]=\"files[0]?.progress\"\r\n                  [bufferValue]=\"files[0]?.progress\">\r\n                </mat-progress-bar>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <div class=\"d-flex justify-content-end m-2\">\r\n            <button mat-raised-button color=\"accent\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"card-body\" *ngSwitchCase=\"false\">\r\n        <div class=\"alert alert-primary alert-dismissible fade show\" role=\"alert\" *ngIf=\"error\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            <span class=\"sr-only\">Close</span>\r\n          </button>\r\n          <strong>{{error}}</strong>\r\n        </div>\r\n        <div class=\"row m-2\">\r\n          <div class=\"col-md-6\"\r\n            *ngFor=\"let model of splitAssignments | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n            <ng-container>\r\n              <div class=\"card m-1\">\r\n                <div class=\"card-header\">\r\n                  <div class=\"d-flex\">\r\n                    <div>\r\n                      <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                      <span class=\"subject\">{{model.assignment.title}}</span>\r\n                    </div>\r\n                    <div class=\"ml-auto\">\r\n                      <a (click)=\"viewDetails(model)\"><span class=\"badge badge-pill badge-primary\">View\r\n                          Details</span></a>\r\n                      <!-- <div class=\"list-inline\">\r\n                          <a mat-mini-fab color=\"secondary\" (click)=\"downloadFile(model.assignment.assignmentFile)\" title=\"download\" class=\"list-inline-item\">\r\n                            <mat-icon>cloud_download</mat-icon>\r\n                          </a>\r\n                          <a mat-mini-fab color=\"secondary\" title=\"upload\" (click)=\"uploader.click()\"  class=\"list-inline-item\">\r\n                            <mat-icon>cloud_upload</mat-icon>\r\n                          </a>\r\n                          <input hidden  type=\"file\" #uploader (change)=\"fileBrowse($event.target.files)\" />\r\n                        </div> -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <h3 class=\"card-title title\">{{model.assignment.subject}}</h3>\r\n                  <p class=\"card-sub-title subtitle\">{{model.assignment.topic}}</p>\r\n                  <div class=\"card-text perfomed\">\r\n                    <div class=\"d-flex flex-column\">\r\n                      <span>Due: {{model.assignment.dueDate | date: 'mediumDate'}}</span>\r\n                      <span class=\"list-inline\" *ngIf=\"uploadedFile\">\r\n                        {{uploadedFile.name}}\r\n                      </span>\r\n                      <!-- <span *ngIf=\"uploadedFile\">\r\n                          <a (click)=\"onSubmit(model)\"><span class=\"badge badge-pill badge-primary\" >Submit</span></a>\r\n                          <a (click)=\"onDelete()\"><span class=\"badge badge-pill badge-danger\">Delete</span></a>\r\n                        </span> -->\r\n                      <span class=\"ml-auto\">\r\n                        <ng-container [ngSwitch]=\"model.status\">\r\n                          <span class=\"badge badge-pill badge-warning\" *ngSwitchCase=\"0\">Pending</span>\r\n                          <span class=\"badge badge-pill badge-success\" *ngSwitchCase=\"1\">Submitted</span>\r\n                          <span class=\"badge badge-pill badge-primary\" *ngSwitchCase=\"2\">Evaluated</span>\r\n                        </ng-container>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </span>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { AttendanceService } from 'src/app/_services/attendance.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-earnings',\r\n  templateUrl: './earnings.component.html',\r\n  styleUrls: ['./earnings.component.css']\r\n})\r\nexport class EarningsComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private student: StudentService,\r\n              private authService: AuthserviceService) { }\r\n\r\n  sortoptions = [\r\n    {id: 0, value: 'Most Recent'},\r\n    {id: 1, value: 'Oldest'}\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['name', 'course', 'coursedate', 'sessions', 'status', 'amount'];\r\n  selectedValue = 0;\r\n\r\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource();\r\n    this.getenrollements();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    }\r\n\r\n  getenrollements(){\r\n    this.student.getenrollmentsbyTutor(this.authService.userValue.id)\r\n    .subscribe(x => { console.log(x); this.dataSource.data = x; return x; });\r\n  }\r\n\r\n  applyFilter(event){\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource?.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  actionSelected(row){\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n  <mat-card class=\"earningcard\">\r\n    <mat-card-header class=\"earnings-header\">\r\n      <mat-card-title>My Earnings</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-card class=\"min-card\">\r\n        <mat-card-header class=\"header-rad\">\r\n          <mat-card-title>Students List</mat-card-title>\r\n          <mat-card-subtitle>Total Students: {{dataSource.data.length}}</mat-card-subtitle>\r\n          <div class=\"row ml-auto\">\r\n            <div class=\"col-md-5\">\r\n              <mat-form-field>\r\n                <input matInput type=\"text\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n                <button mat-button matSuffix mat-icon-button>\r\n                  <mat-icon>search</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <mat-form-field>\r\n                <mat-select [(ngModel)]=\"selectedValue\" name=\"item\">\r\n                  <mat-option *ngFor=\"let item of sortoptions\" [value]=\"item.id\">\r\n                    {{item.value}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 text-right\">\r\n               <button class=\"rounded bg-primary\" color=\"accent\" mat-button>Withdraw</button>\r\n            </div>\r\n          </div>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div class=\"example-container mat-elevation-z8\">\r\n            <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n              <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Student Name </mat-header-cell>\r\n                <mat-cell  *matCellDef=\"let row\" data-label=\"Name\">\r\n                  <img class=\"rounded-circle\" [src]=\"row.student.profilePic\" width=\"30\" height=\"30\">\r\n                  {{row.name}}\r\n                </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"course\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Course </mat-header-cell>\r\n                <mat-cell  *matCellDef=\"let row\" data-label=\"Course\"> {{row.course.title}} </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"coursedate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Course Period </mat-header-cell>\r\n                <mat-cell  *matCellDef=\"let row\" data-label=\"Duration\"> {{row.course.startDate | date}} - {{row.course.endDate | date}}\r\n                </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"sessions\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> No of Classes </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\" data-label=\"No of Classes\"> {{row.classCount}} </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"status\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\" data-label=\"Status\">\r\n                  <span\r\n                    [ngSwitch]=\"row.paymentStatus === undefined || row.paymentStatus === null || row.paymentStatus === 'Pending'\">\r\n                    <p *ngSwitchCase=\"true\">\r\n                      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-slash-circle-fill\" fill=\"#ff0000\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\"\r\n                          d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708l-7 7a.5.5 0 0 0 .708.708l7-7z\" />\r\n                      </svg>\r\n                      Pending\r\n                    </p>\r\n                    <p *ngSwitchCase=\"false\">\r\n                      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill\" fill=\"#039f02\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\"\r\n                          d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n                      </svg>\r\n                      Paid\r\n                    </p>\r\n                  </span>\r\n                </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"amount\">\r\n                <mat-header-cell *matHeaderCellDef> Amount </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\" data-label=\"Amount\"> {{row.paymentAmount | currency: 'INR'}} </mat-cell>\r\n              </ng-container>\r\n              <!-- <ng-container matColumnDef=\"action\">\r\n                              <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                              <td mat-cell *matCellDef=\"let row\">\r\n                                <mat-chip color=\"accent\" selected class=\"text-white m-2\" (click)=\"actionSelected(row)\">\r\n                                  Evaluate\r\n                                </mat-chip>\r\n                              </td>\r\n                            </ng-container> -->\r\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n              <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            </mat-table>\r\n            <mat-paginator [pageSizeOptions]=\"[6, 12, 20]\" showFirstLastButtons></mat-paginator>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <!-- <button mat-button>Ok</button> -->\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Demo } from 'src/app/_models/demo';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { LocationModel } from 'src/app/_models/location';\r\nimport * as moment from 'moment';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-demo',\r\n  templateUrl: './demo.component.html',\r\n  styleUrls: ['./demo.component.css']\r\n})\r\nexport class DemoComponent implements OnInit {\r\n\r\npublic demoForm: FormGroup;\r\npublic submitted = false;\r\nisLoading;\r\nlocations: LocationModel[] = [];\r\ntimestamps;\r\nisSuccess;\r\ndemos;\r\nmessage;\r\n\r\neventcolors = [\r\n  {color: 'Red', code: ''},\r\n  {color: 'Yellow', code: ''},\r\n  {color: 'Blue', code: ''},\r\n  {color: 'Blue', code: ''}\r\n];\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: AuthserviceService,\r\n              private demoService: DemoService,\r\n              private staticData: StaticdataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getDemos();\r\n  }\r\n\r\n  getDemos(){\r\n    this.demoService.getAllDemosByUser(this.authService.userValue.id).subscribe(\r\n      x => (this.demos = x), (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  getTimeLabels(){\r\n    const times = (desiredStartTime, interval, period) => {\r\n      const periodsInADay = moment.duration(1, 'day').as(period);\r\n      const timeLabels = [];\r\n      const startTimeMoment = moment(desiredStartTime, 'hh:mm');\r\n      for (let i = 0; i <= periodsInADay; i += interval) {\r\n        startTimeMoment.add(i === 0 ? 0 : interval, period);\r\n        timeLabels.push(startTimeMoment.format('hh:mm A'));\r\n      }\r\n      return timeLabels;\r\n    };\r\n    this.timestamps = times('00:00', 15, 'minutes');\r\n  }\r\n\r\n  displayLoc(loc): string {\r\n    return loc ? loc.locationName : '';\r\n  }\r\n\r\n  get demoFormControls() { return this.demoForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n}\r\n","\r\n<div class=\"alert alert-info\" *ngIf=\"message\">{{message}}</div>\r\n<!-- <div class=\"mt-2 text-center\"><a href  [routerLink]=\"['/demodetail', demo.courseId]\" class=\"btn btn-primary\">View Demo</a></div> -->","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-eventmodel',\r\n  templateUrl: './eventmodel.component.html',\r\n  styleUrls: ['./eventmodel.component.css']\r\n})\r\nexport class EventmodelComponent implements OnInit {\r\n\r\n  submitted;\r\n  calendarformForm: FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<EventmodelComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.calendarformForm = this.formBuilder.group({\r\n      summary: [this.data.event.title, Validators.required],\r\n      location: [this.data.event?.meta?.locationName, Validators.required],\r\n      description: [this.data.event?.meta?.courseDescription, Validators.required],\r\n      timeZone: ['Asia/Calcutta', Validators.required],\r\n      start: [this.data.event.start, Validators.required],\r\n      end: [this.data.event.end, Validators.required],\r\n      recurrence: ['', Validators.required],\r\n      attendees: ['', Validators.required],\r\n      organizer: [''],\r\n      count: ['']\r\n    });\r\n    this.calendarformForm.disable();\r\n  }\r\n\r\n  get f() {\r\n    return this.calendarformForm.controls;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.dialogRef.close(this.f);\r\n  }\r\n\r\n  onNoClick(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Hi {{data.event.title}}</h2>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"calendarformForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"container\">\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"summary\">Summary</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"summary\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.summary.errors }\" />\r\n        <div *ngIf=\"submitted && f.summary.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.summary.errors.required\">Summary is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"location\">Location</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"location\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\r\n        <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.location.errors.required\">Locatio is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"description\">Description</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"description\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n        <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"start\">Start Date</mat-label>\r\n        <input matInput formControlName=\"start\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.start.errors }\" [matDatepicker]=\"picker\"/>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        <div *ngIf=\"submitted && f.start.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.start.errors.required\">Start Date is Required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"description\">End Date</mat-label>\r\n        <input matInput formControlName=\"end\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.end.errors }\" [matDatepicker]=\"picker2\"/>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker2></mat-datepicker>\r\n        <div *ngIf=\"submitted && f.end.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.end.errors.required\">End Date is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <div class=\"d-flex\">\r\n    <button mat-raised-button hidden  color=\"warn\" (click)=\"onNoClick()\">No Thanks</button>  \r\n    <button mat-raised-button  class=\"ml-auto\" color=\"primary\" (click)=\"onSubmit()\" cdkFocusInitial>Ok</button>\r\n  </div>\r\n\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Attendance } from '../_models/attendance';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AttendanceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getattendances(courseid){\r\n    const options = courseid ?\r\n    { params: new HttpParams().set('id', courseid)} : {};\r\n    return this.http.get<any[]>(environment.apiUrl + `/attendance/bycourse`, options);\r\n  }\r\n\r\n  getattendanceByTutor(courseid){\r\n    const options = courseid ?\r\n    { params: new HttpParams().set('id', courseid)} : {};\r\n    return this.http.get<any[]>(environment.apiUrl + `/attendance/bytutor`, options);\r\n  }\r\n\r\n  saveattendance(attendances: Attendance[]){\r\n    return this.http.post(environment.apiUrl + `/attendance`, attendances);\r\n  }\r\n\r\n  updateAttendance(attendance){\r\n    return this.http.put(environment.apiUrl + `/attendance`, attendance, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sidenav-bar',\r\n  templateUrl: './sidenav-bar.component.html',\r\n  styleUrls: ['./sidenav-bar.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SidenavBarComponent implements OnInit {\r\n  user;\r\n  IsOpened;\r\n  loginType;\r\n\r\n  @ViewChild('drawer', { static: false })\r\n  drawer: MatSidenav;\r\n  isExpanded;\r\n\r\n  constructor(public authService: AuthserviceService, private route: ActivatedRoute, private router: Router) {\r\n    this.authService.user.subscribe(x => this.user = x);\r\n    this.authService.loginuser.subscribe(x => {this.loginType = x; console.log(this.loginType); } );\r\n   }\r\n\r\n  studentnavs = [\r\n    {route : 'classroom', icon: 'class', title: 'My Classrom'},\r\n    {route : 'tutors', icon: 'assignment', title: 'Tutors'},\r\n    {route : 'profile', icon: 'person_outline', title: 'My Profile'},\r\n    {route : 'earnings', icon: 'account_balance', title: 'My Earnings'},\r\n    {route : 'credits', icon: 'connect_without_contact', title: 'My Referrals'},\r\n  ];\r\n\r\n  tutornavs = [\r\n    {route : 'classroom', icon: 'class', title: 'My Classrom'},\r\n    {route : 'demos', icon: 'assignment', title: 'Demo Requests'},\r\n    {route : 'profile', icon: 'person_outline', title: 'My Profile'},\r\n    {route : 'earnings', icon: 'account_balance', title: 'My Earnings'},\r\n    {route :  'credits', icon: 'connect_without_contact', title: 'My Referrals'},\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this.IsOpened = this.isAuthenticated ? true : false;\r\n  }\r\n\r\n  isAuthenticated(){\r\n    return this.user;\r\n  }\r\n\r\n  navigate(card, sidenav){\r\n    sidenav.close();\r\n    console.log(card);\r\n    console.log(this.route);\r\n    this.router.navigate(['..', card.route], { relativeTo: this.route });\r\n  }\r\n\r\n\r\n}\r\n","<app-navigation-bar *ngIf=\"isAuthenticated()\" (toggleSidenav)=\"sidenav.toggle()\">\r\n</app-navigation-bar>\r\n<mat-sidenav-container class=\"example-container mat-typography\"  autosize>\r\n  <mat-sidenav  #sidenav class=\"main-container\" mode=\"side\" [ngClass]=\"{'mat-side-pink' : authService.userValue?.role === 'Student'}\">\r\n    <!-- <img class=\"img img-responsive sidenav-img\" src=\"assets/sidenav-1.png\"\r\n        srcset=\"assets/sidenav-2.png 2x, disableClose=\"true\"\r\n        assets/sidenav-3.png 3x\" > -->\r\n    <!-- <button mat-mini-fab (click)=\"isExpanded = !isExpanded\" color=\"warn\" style=\"margin: 10px;\">\r\n      <mat-icon aria-label=\"Menu\">menu</mat-icon>\r\n    </button> -->\r\n    <!-- <mat-toolbar class=\"logo-toolbar\">\r\n      <mat-toolbar-row [routerLink]=\"['/dashboard']\">\r\n        <img src=\"assets/vidhyasadhan-logo.svg\">\r\n      </mat-toolbar-row>\r\n    </mat-toolbar> -->\r\n    <mat-nav-list>\r\n      <ng-container [ngSwitch]=\"authService.userValue?.role === 'Student'\">\r\n      <ng-container *ngSwitchCase=\"true\">\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/classroom']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > class </mat-icon>\r\n          <h4 mat-line>My Classroom</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/tutors']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon  > assignment </mat-icon>\r\n          <h4 mat-line>Book Tutor</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/profile']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > person_outline </mat-icon>\r\n          <h4 mat-line>My Profile</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/student/assignments']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon> article </mat-icon>\r\n          <h4 mat-line>Study Material</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/progress']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > pie_chart </mat-icon>\r\n          <h4 mat-line>Progress Report</h4>\r\n        </a>\r\n      </ng-container>\r\n      <ng-container class=\"blueside-nav\" *ngSwitchCase=\"false\">\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/classroom']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > class </mat-icon>\r\n          <h4 mat-line>My Classroom</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/requests']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > assignment </mat-icon>\r\n          <h4 mat-line>Student Requests</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/profile']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > person_outline </mat-icon>\r\n          <h4 mat-line>My Profile</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/events']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > event </mat-icon>\r\n          <h4 mat-line>My Events</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/earnings']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > account_balance </mat-icon>\r\n          <h4 mat-line>My Earnings</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/tutor-referrals']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > connect_without_contact </mat-icon>\r\n          <h4 mat-line>My Referrals</h4>\r\n        </a>\r\n      </ng-container>\r\n      </ng-container>\r\n\r\n      <mat-divider></mat-divider>\r\n      <div class=\"d-flex m-2 align-items-center justify-content-center\" *ngIf=\"sidenav.opened\">\r\n        <div class=\"crown text-center\">\r\n          <img class= \"p-2\" src=\"assets/sidenav/crown.jpg\">\r\n          <h5 class=\"Upgrade-to-Pro\">Upgrade to Pro</h5>\r\n          <p class=\"Make-the-most-of-you\">Make the most of your app with premium</p>\r\n        </div>\r\n      </div>\r\n      <img class=\"side-bg-pic img img-responsive\" src=\"assets/sidenav/group-19.png\" srcset=\"assets/sidenav/group-19@2x.png 2x,assets/sidenav/group-19@3x.png 3x\">\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content class=\"example-sidenav-content\" [ngClass]=\"authService.userValue?.role === 'Student' ? 'sidenav-bg-pink':'sidenav-bg-blue'\">\r\n    <div>\r\n      <img class=\"oval-copy-left-1\" src=\"assets/registration/oval-copy-2.svg\">\r\n      <img class=\"oval-copy-left-2\" src=\"assets/registration/oval-copy-3.svg\">\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n    <div>\r\n      <img class=\"oval-copy-right-1\" src=\"assets/registration/oval.svg\">\r\n      <img class=\"oval-copy-right-2\" src=\"assets/registration/oval-copy-4.svg\">\r\n    </div>\r\n\r\n    <div class=\"bottom-icon\">\r\n      <img class=\"oval-copy-right-3\" src=\"assets/combined-shape.svg\">\r\n      <img class=\"oval-copy-left-3\" src=\"assets/registration/oval-copy.svg\">\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitepricing',\r\n  templateUrl: './sitepricing.component.html',\r\n  styleUrls: ['./sitepricing.component.css']\r\n})\r\nexport class SitepricingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/PRICING</p>\r\n          <h2 class=\"welove-text\">We provide Great service,\r\n            Professional support.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/website/pricing/pricing-1.png\"\r\n            srcset=\"assets/website/pricing/pricing-1-1.png 2x,assets/website/pricing/pricing-1-2.png 3x\"\r\n            class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bg-white p-2\">\r\n  <div class=\"justify-content-center text-center\">\r\n    <div class=\"pricing-dev\">\r\n      <h2 class=\"welove-devtext\">VidhyaSadhan Pricing</h2>\r\n      <div class=\"line\"></div>\r\n    </div>\r\n    <div class=\"parallelogram\">\r\n      <div class=\"pricing-parent\">\r\n        <div class=\"pricing-child pricing-child-1\">\r\n          <h2 class=\"basic\">Basic</h2>\r\n          <p class=\"basic-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus\r\n            eu nisl suscipit</p>\r\n          <h4 class=\"basic-price\">$15/mo</h4>\r\n        </div>\r\n        <div class=\"pricing-child pricing-child-2\">\r\n          <h1 class=\"pro\">Pro</h1>\r\n          <div class=\"d-flex flex-column align-items-center\">\r\n            <img class=\"original\" src=\"assets/website/pricing/crown.png\"\r\n              srcset=\"assets/website/pricing/crown-1.png 2x,assets/website/pricing/crown-2.png 3x\">\r\n            <img class=\"reflection\" src=\"assets/website/pricing/crown.png\"\r\n              srcset=\"assets/website/pricing/crown-1.png 2x,assets/website/pricing/crown-2.png 3x\">\r\n          </div>\r\n          <p class=\"basic-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus\r\n            eu nisl suscipit</p>\r\n          <h2 class=\"basic-price m-2\">$20/mo</h2>\r\n          <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill price-svg\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill-rule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n          </svg>\r\n        </div>\r\n        <div class=\"pricing-child pricing-child-3\">\r\n          <h2 class=\"basic\">Business</h2>\r\n          <p class=\"basic-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus\r\n            eu nisl suscipit</p>\r\n          <h4 class=\"basic-price\">$45/mo</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"list-parent\">\r\n        <div class=\"d-flex flex-column\">\r\n          <p>Dummy text</p>\r\n          <p>Dummy text Dummy text</p>\r\n          <p>Sample</p>\r\n        </div>\r\n        <div class=\"d-flex flex-column\">\r\n          <p>100 dummy tutors</p>\r\n          <p>100,000 monthly visits</p>\r\n          <p>1,000 form submissions</p>\r\n        </div>\r\n        <div class=\"d-flex flex-column\">\r\n          <p>2000 Sample items</p>\r\n          <p>Material access</p>\r\n          <p>3 content editors</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DemoRequest } from 'src/app/_models/demorequest';\r\n\r\n@Component({\r\n  selector: 'app-demomodel',\r\n  templateUrl: './demomodel.component.html',\r\n  styleUrls: ['./demomodel.component.css']\r\n})\r\nexport class DemomodelComponent implements OnInit {\r\n\r\n  availableslots = ['10:00 AM to 11:00 AM', '11:00 AM to 12:00 PM', '4:00 PM to 5:00 PM'];\r\n  selectedValue;\r\n  selectedDate;\r\n  viewDate;\r\n  events = [];\r\n  demomodelForm: FormGroup;\r\n  public submitted = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<DemomodelComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewDate = new Date();\r\n\r\n    this.demomodelForm = this.formBuilder.group({\r\n      demo: [null, Validators.required],\r\n      subject: ['', Validators.required],\r\n      message: [''],\r\n      });\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted = true;\r\n    if (this.demomodelForm.valid) {\r\n      const demoreq: DemoRequest = {\r\n         tutorId: this.data.tutorinfo.id,\r\n         date: this.f.demo.value.startDate,\r\n         studentId:  this.data.student.id,\r\n         slot: this.f.demo.value.courseId,\r\n         subject : this.f.subject.value,\r\n         message : this.f.message.value\r\n      };\r\n      this.dialogRef.close(demoreq);\r\n     }\r\n  }\r\n\r\n  get f() { return this.demomodelForm.controls; }\r\n\r\n  onClose(){\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>\r\n  <span [ngSwitch]=\"data.type\">\r\n  <p *ngSwitchCase=\"true\">\r\n    Scedule a Demo\r\n  </p>\r\n  <p *ngSwitchCase=\"false\">\r\n    Book a Class\r\n  </p>\r\n  </span></h1>\r\n<div mat-dialog-content>\r\n    <form [formGroup]=\"demomodelForm\" (submit)=\"onSubmit()\">\r\n  <ul class=\"list-group\">\r\n      <li class=\"list-group-item\">\r\n          Tutor:\r\n          <span>{{data.tutorinfo.name | uppercase}}</span>\r\n      </li>\r\n    <li  class=\"list-group-item\">\r\n      <mat-form-field class=\"w-100\">\r\n          <mat-label>Select a Session</mat-label>\r\n          <mat-select id=\"national\" formControlName=\"demo\">\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let assignment of data.courses\" [value]=\"assignment\">\r\n              {{assignment.title}} - {{assignment.startDate | date:'mediumDate'}} - {{assignment.startTime}} : {{assignment.endTime}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <!-- <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" name=\"date\"  placeholder=\"Preferred Date\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n          <mat-error *ngIf=\"f.date.invalid\">Date Value is Required</mat-error> -->\r\n      </mat-form-field>\r\n    </li>\r\n    <!-- <li>\r\n        <mwl-calendar-month-view  [viewDate]=\"viewDate\"\r\n        [events]=\"events\" ></mwl-calendar-month-view>\r\n    </li> -->\r\n    <!-- <li class=\"list-group-item\">\r\n        <mat-form-field class=\"w-100\">\r\n        <mat-select placeholder=\"Slot\" formControlName=\"time\" name=\"item\">\r\n            <mat-option *ngFor=\"let item of availableslots\" [value]=\"item\">\r\n                {{item}}\r\n            </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"f.time.invalid\">Time Slot is Required</mat-error>\r\n    </mat-form-field>\r\n    </li> -->\r\n    <li class=\"list-group-item\">\r\n        <mat-form-field class=\"w-100\">\r\n            <mat-label>Subject</mat-label>\r\n            <input matInput placeholder=\"subject\" formControlName=\"subject\">\r\n        </mat-form-field>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n        <mat-form-field class=\"w-100\">\r\n            <mat-label>Additional Details</mat-label>\r\n            <textarea matInput placeholder=\"Additional Details\" formControlName=\"message\"> </textarea>\r\n        </mat-form-field>\r\n    </li>\r\n  </ul>\r\n  <div mat-dialog-actions>\r\n    <div class=\"m-2 text-center justify-content-center\">\r\n      <button mat-button class=\"btn btn-md btn-primary m-2\" type=\"submit\" (click)=\"onSubmit()\">Ok</button>\r\n      <button mat-button class=\"btn btn-md btn-primary m-2\" (click)=\"onClose()\" cdkFocusInitial>Cancel</button>\r\n    </div>\r\n</div>\r\n</form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\n\n@Component({\n  selector: 'app-promoterlogin',\n  templateUrl: './promoterlogin.component.html',\n  styleUrls: ['../promoterregister/promoterregister.component.css']\n})\nexport class PromoterloginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute,\n              private router: Router, private authService: AuthserviceService) {\n                if (this.authService.userValue) {\n                  this.router.navigate(['/vs']);\n                }\n              }\n\n  loginForm: FormGroup;\n  submitted;\n  loading;\n  success;\n  returnUrl: string;\n  error;\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/vs';\n  }\n\n  get f(){\n    return this.loginForm.controls;\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authService.login(this.f.username.value, this.f.password.value, 4)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.router.navigate(['authenticate'], {queryParams: { returnUrl : this.returnUrl, email: this.f.username.value}});\n        },\n        error: error => {\n          this.error = 'Please Check your Password or Email to Confirm';\n          this.loading = false;\n        }\n      });\n  }\n\n  forgotClick(event){\n\n  }\n\n}\n","<div class=\"pbg-1\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n\n  </mat-toolbar>\n  <div class=\"content-fit\">\n    <form [formGroup]=\"loginForm\" class=\"log-form-mr\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"p-4\">\n        <div class=\"card-header bg-img border-0  log-header text-center\">\n          <div class=\"signup-txt\">Login to Promoter Account</div>\n          <img class=\"promoter-login\" src=\"assets/registration/promoter-login.svg\">\n        </div>\n\n        <h4 class=\"text-center h-promoter\">Hello Promoter</h4>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"email\">Email</mat-label>\n          <span matPrefix>\n            <mat-icon color=\"primary\">email</mat-icon>\n            <mat-divider [vertical]=\"true\"></mat-divider>\n          </span>\n          <input matInput type=\"email\" formControlName=\"username\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Email Address is required</div>\n            <div *ngIf=\"f.username.errors.email\">Please Provide a Valid Email Address</div>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"password\">Password</mat-label>\n          <span matPrefix>\n            <mat-icon color=\"primary\">lock</mat-icon>\n            <mat-divider [vertical]=\"true\"></mat-divider>\n          </span>\n          <input matInput type=\"password\" formControlName=\"password\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n          <span matSuffix><a href (click)=\"forgotClick($event)\">Forgot?</a></span>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Please Provide a Password</div>\n          </div>\n        </mat-form-field>\n\n        <mat-card-footer class=\"text-center justify-content-center\">\n          <mat-card-actions class=\"d-flex justify-content-between align-items-center\">\n            <div class=\"account\">No account? <a [routerLink]=\"['/promoter/register']\">Register</a></div>\n            <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loading\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Login\n            </button>\n          </mat-card-actions>\n          <div class=\"promoter-log m-2\">Login as <a [routerLink]=\"['/login']\">Student / Promoter</a> </div>\n          <div *ngIf=\"submitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n        </mat-card-footer>\n      </div>\n    </form>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}