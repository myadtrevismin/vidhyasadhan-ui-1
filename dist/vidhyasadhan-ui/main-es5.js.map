{"version":3,"sources":["webpack:///src/app/_components/website/sitesubscribe/sitesubscribe.component.ts","webpack:///src/app/_components/website/sitesubscribe/sitesubscribe.component.html","webpack:///src/app/_components/website/sitehome/sitehome.component.ts","webpack:///src/app/_components/website/sitehome/sitehome.component.html","webpack:///src/app/_components/alertbox/alertbox.component.ts","webpack:///src/app/_components/alertbox/alertbox.component.html","webpack:///src/app/_components/activatescreen/activatescreen.component.ts","webpack:///src/app/_components/activatescreen/activatescreen.component.html","webpack:///src/app/_components/home/home.component.ts","webpack:///src/app/_components/home/home.component.html","webpack:///src/app/core/notification-middleware.service.ts","webpack:///src/app/_components/website/sitenav/sitenav.component.ts","webpack:///src/app/_components/website/sitenav/sitenav.component.html","webpack:///src/app/_components/tutor-referrals/tutor-referrals-details/tutor-referrals-details.component.ts","webpack:///src/app/_components/tutor-referrals/tutor-referrals-details/tutor-referrals-details.component.html","webpack:///src/app/_components/login/login.component.ts","webpack:///src/app/_components/login/login.component.html","webpack:///src/app/_components/mapcomponent/mapcomponent.component.ts","webpack:///src/app/_components/mapcomponent/mapcomponent.component.html","webpack:///src/app/_components/events/eventdetail/eventdetail.component.ts","webpack:///src/app/_components/events/eventdetail/eventdetail.component.html","webpack:///src/app/_services/fileuploader.service.ts","webpack:///src/app/_components/assignmentdetail/assignmentdetail.component.ts","webpack:///src/app/_components/assignmentdetail/assignmentdetail.component.html","webpack:///src/app/_services/course.service.ts","webpack:///src/app/_components/profile/profile.component.ts","webpack:///src/app/_components/profile/profile.component.html","webpack:///src/app/alert/alerts/alerts.component.ts","webpack:///src/app/alert/alerts/alerts.component.html","webpack:///src/app/_components/tutors/tutors.component.ts","webpack:///src/app/_components/tutors/tutors.component.html","webpack:///src/app/_components/broadcast/broadcast.component.ts","webpack:///src/app/_components/broadcast/broadcast.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/_services/demo.service.ts","webpack:///src/app/_layouts/mainlayout/mainlayout.component.ts","webpack:///src/app/_layouts/mainlayout/mainlayout.component.html","webpack:///src/app/_helpers/fieldmatcher.ts","webpack:///src/app/_components/admin-pages/adminpayments/adminpayments.component.ts","webpack:///src/app/_components/admin-pages/adminpayments/adminpayments.component.html","webpack:///src/app/_components/login/forgotpassword/forgotpassword.component.ts","webpack:///src/app/_components/login/forgotpassword/forgotpassword.component.html","webpack:///src/app/_models/alert.ts","webpack:///src/app/_components/assignments/noassignments/noassignments.component.ts","webpack:///src/app/_components/assignments/noassignments/noassignments.component.html","webpack:///src/app/_components/evaluate/evaluate.component.ts","webpack:///src/app/_components/evaluate/evaluate.component.html","webpack:///src/app/_components/promoter/promoterregister/promoterregister.component.ts","webpack:///src/app/_components/promoter/promoterregister/promoterregister.component.html","webpack:///src/app/_layouts/sitelayout/sitelayout.component.ts","webpack:///src/app/_layouts/sitelayout/sitelayout.component.html","webpack:///src/app/tutorfilter.pipe.ts","webpack:///src/app/_components/confirmation/confirmation.component.ts","webpack:///src/app/_components/confirmation/confirmation.component.html","webpack:///src/app/_components/classroom/classroom.component.ts","webpack:///src/app/_components/classroom/classroom.component.html","webpack:///src/app/_components/demolist/demolist.component.ts","webpack:///src/app/_components/demolist/demolist.component.html","webpack:///src/app/_components/admin-pages/adminstudents/adminstudents.component.ts","webpack:///src/app/_components/admin-pages/adminstudents/adminstudents.component.html","webpack:///src/app/_components/demodetail/demodetail.component.ts","webpack:///src/app/_components/demodetail/demodetail.component.html","webpack:///src/app/_components/website/siteaboutus/siteaboutus.component.ts","webpack:///src/app/_components/website/siteaboutus/siteaboutus.component.html","webpack:///src/app/_components/calendar/custom-calendar-format.ts","webpack:///src/app/_helpers/jwt-token.interceptor.ts","webpack:///src/app/_layouts/adminlayout/adminlayout.component.ts","webpack:///src/app/_layouts/adminlayout/adminlayout.component.html","webpack:///src/app/directives/dragndir.directive.ts","webpack:///src/app/_components/profile/address/address.component.ts","webpack:///src/app/_components/carouselhelper/carouselhelper.component.ts","webpack:///src/app/_components/carouselhelper/carouselhelper.component.html","webpack:///src/app/_components/evaluation-detail/evaluation-detail.component.ts","webpack:///src/app/_components/evaluation-detail/evaluation-detail.component.html","webpack:///src/app/_services/admin.service.ts","webpack:///src/app/_components/tutor-referrals/tutor-referrals.component.ts","webpack:///src/app/_components/tutor-referrals/tutor-referrals.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/_components/attendancemodal/attendancemodal.component.ts","webpack:///src/app/_components/attendancemodal/attendancemodal.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/_components/vsnavigation/vsnavigation.component.ts","webpack:///src/app/_components/vsnavigation/vsnavigation.component.html","webpack:///src/app/_components/student/studymaterial/studymaterial.component.ts","webpack:///src/app/_components/student/studymaterial/studymaterial.component.html","webpack:///src/app/_components/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/_components/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/_services/user.service.ts","webpack:///src/app/_components/attendance/attendance.component.ts","webpack:///src/app/_components/attendance/attendance.component.html","webpack:///src/app/angmaterial.module.ts","webpack:///src/app/_services/student.service.ts","webpack:///src/app/_components/calendar/calendar.component.ts","webpack:///src/app/_components/calendar/calendar.component.html","webpack:///src/app/_components/website/sitecontactus/sitecontactus.component.ts","webpack:///src/app/_components/website/sitecontactus/sitecontactus.component.html","webpack:///src/app/_components/profilemodel/profilemodel.component.ts","webpack:///src/app/_components/profilemodel/profilemodel.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/_components/events/events.component.ts","webpack:///src/app/_components/events/events.component.html","webpack:///src/app/_components/otp/otp.component.ts","webpack:///src/app/_components/otp/otp.component.html","webpack:///src/app/_components/student/allreports/allreports.component.ts","webpack:///src/app/_components/student/allreports/allreports.component.html","webpack:///src/app/_components/student/reports/reports.component.ts","webpack:///src/app/_components/student/reports/reports.component.html","webpack:///src/app/_components/navigation-bar/navigation-bar.component.ts","webpack:///src/app/_components/navigation-bar/navigation-bar.component.html","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_components/student/studymaterial/studentmateriallist/studentmateriallist.component.ts","webpack:///src/app/_components/student/studymaterial/studentmateriallist/studentmateriallist.component.html","webpack:///src/app/_pipes/urls/urlsafe.pipe.ts","webpack:///src/app/_services/staticdata.service.ts","webpack:///src/app/_helpers/app-initializer.ts","webpack:///src/app/_components/assignments/assignments.component.ts","webpack:///src/app/_components/assignments/assignments.component.html","webpack:///src/app/_helpers/customvalidators.ts","webpack:///src/app/_components/appnotifications/appnotifications.component.ts","webpack:///src/app/_components/appnotifications/appnotifications.component.html","webpack:///src/app/_components/assignmentlist/assignmentlist.component.ts","webpack:///src/app/_components/assignmentlist/assignmentlist.component.html","webpack:///src/app/_pipes/fieldsfilter.pipe.ts","webpack:///src/app/_components/events/eventslist/eventslist.component.ts","webpack:///src/app/_components/events/eventslist/eventslist.component.html","webpack:///src/app/_services/authservice.service.ts","webpack:///src/app/_components/student/studymaterial/studentmateriallist/studentmateriallist-datasource.ts","webpack:///src/app/_components/website/sitefooter/sitefooter.component.ts","webpack:///src/app/_components/website/sitefooter/sitefooter.component.html","webpack:///src/app/alert/alert.module.ts","webpack:///src/app/_components/footer/footer.component.ts","webpack:///src/app/_components/footer/footer.component.html","webpack:///src/app/_components/admin-pages/admintutors/admintutors.component.ts","webpack:///src/app/_components/admin-pages/admintutors/admintutors.component.html","webpack:///src/app/_components/notification/notification.component.ts","webpack:///src/app/_components/notification/notification.component.html","webpack:///src/app/_components/dashboard/admin/admin.component.ts","webpack:///src/app/_components/dashboard/admin/admin.component.html","webpack:///src/app/_services/notifications.service.ts","webpack:///src/app/_components/student/assignments/assignment-detail/assignment-detail.component.ts","webpack:///src/app/_components/student/assignments/assignment-detail/assignment-detail.component.html","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_components/login/resetpassword/resetpassword.component.ts","webpack:///src/app/_components/login/resetpassword/resetpassword.component.html","webpack:///src/app/_components/register/register.component.ts","webpack:///src/app/_components/register/register.component.html","webpack:///src/app/_components/student/adaptivereports/adaptivereports.component.ts","webpack:///src/app/_components/student/adaptivereports/adaptivereports.component.html","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_components/website/sitefeatures/sitefeatures.component.ts","webpack:///src/app/_components/website/sitefeatures/sitefeatures.component.html","webpack:///src/app/_services/studymaterial.service.ts","webpack:///src/app/_components/student/studentpayments/studentpayments.component.ts","webpack:///src/app/_components/student/studentpayments/studentpayments.component.html","webpack:///src/app/_layouts/promoterlayout/promoterlayout.component.ts","webpack:///src/app/_layouts/promoterlayout/promoterlayout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_components/dashboard/dashboard.component.ts","webpack:///src/app/_components/dashboard/dashboard.component.html","webpack:///src/app/_components/student/assignments/assignments.component.ts","webpack:///src/app/_components/student/assignments/assignments.component.html","webpack:///src/app/_components/earnings/earnings.component.ts","webpack:///src/app/_components/earnings/earnings.component.html","webpack:///src/app/_components/demo/demo.component.ts","webpack:///src/app/_components/demo/demo.component.html","webpack:///src/app/_components/eventmodel/eventmodel.component.ts","webpack:///src/app/_components/eventmodel/eventmodel.component.html","webpack:///src/main.ts","webpack:///src/app/_services/attendance.service.ts","webpack:///src/app/_components/sidenav-bar/sidenav-bar.component.ts","webpack:///src/app/_components/sidenav-bar/sidenav-bar.component.html","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/website/sitepricing/sitepricing.component.ts","webpack:///src/app/_components/website/sitepricing/sitepricing.component.html","webpack:///src/app/_components/demomodel/demomodel.component.ts","webpack:///src/app/_components/demomodel/demomodel.component.html","webpack:///src/app/_components/promoter/promoterlogin/promoterlogin.component.ts","webpack:///src/app/_components/promoter/promoterlogin/promoterlogin.component.html"],"names":["SitesubscribeComponent","selector","templateUrl","styleUrls","SitehomeComponent","images","date","Date","loadImages","index","element","id","image1","image2","image3","style","push","AlertboxComponent","data","ActivatescreenComponent","HomeComponent","userService","authService","loading","user","subscribe","x","getAll","pipe","users","NotificationMiddlewareService","notificationService","swPush","swUpdate","matSnackBar","pushNotificationStatus","isSubscribed","isSupported","isInProgress","swRegistration","notifications","navigator","window","serviceWorker","register","then","swReg","console","log","checkSubscription","error","pushManager","getSubscription","subscription","JSON","stringify","applicationServerKey","urlB64ToUint8Array","applicationServerPublicKey","userVisibleOnly","parse","err","addEventListener","event","subject","auth","keys","p256Dh","p256dh","endPoint","endpoint","s","unsubscribe","sub","publicKey","padding","repeat","length","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","unsubscribeNotifications","subscribeToNotifications","isEnabled","available","confirm","location","reload","requestSubscription","serverPublicKey","snackBarRef","open","duration","snackBarDuration","providedIn","SitenavComponent","isCollapsed","isSelected","menunav","name","isActive","path","item","forEach","TutorReferralsDetailsComponent","activeModal","LoginComponent","formBuilder","route","router","loadforgot","submitted","passwordsubmitted","isAlert","isTutor","isForgot","userValue","navigate","loginForm","group","username","required","password","passwordForm","f","value","confirmPassword","returnUrl","snapshot","queryParams","invalid","login","next","valid","forgotModel","email","p","forgotpassword","forgotMessage","e","preventDefault","controls","MapcomponentComponent","lat","lng","geolocation","getCurrentPosition","position","coords","latitude","longitude","map","container","zoom","center","accessToken","mapbox_accessToken","markersdata","addControl","langitude","marker","setLngLat","Number","addTo","EventdetailComponent","demoService","staticData","alertService","locations","levels","days","day","selected","code","allChecked","returnEvent","demoForm","courseId","title","courseDescription","startDate","endDate","startTime","endTime","credits","grade","departmentID","courseAssignments","enrollments","video","calendar","eventType","notificationtype","remaindertime","timer","locationSearch","subjectSearch","getTimeLabels","get","valueChanges","isLoading","searchLocations","locs","features","locationId","locationName","place_name","geometry","coordinates","getStaticDataSets","staticDataSet","subjects","y","level","times","desiredStartTime","interval","period","periodsInADay","as","timeLabels","startTimeMoment","add","format","timestamps","loc","demoFormControls","demodata","ownerId","parseInt","isDemo","isOnline","selectedDays","filter","join","createDemo","undefined","success","alertOptions","gotoList","time","Year","getFullYear","Month","getMonth","Day","getDate","paseddate","parseDaytime","convertedDate","d1","d2","diff","Math","abs","getTime","diffDays","ceil","converttime","dtime","split","hours","minutes","includes","reset","emit","check","t","setErrors","lesserdate","count","dayDiff","frequency","result","byday","concat","onSubmit","changeAll","resetForm","cancelForm","FileuploaderService","http","file","header","set","put","apiUrl","headers","filename","AssignmentdetailComponent","courseService","fileUploader","staticdataService","files","students","assignmentCreated","menuItems","icon","assignmentForm","topic","points","dueDate","instructions","assignmentFile","groups","thing","arr","findIndex","prepareFilesList","assignment","instructorId","questionSetId","course","studentAssignments","uploadFile","filepath","createAssignment","assignmentId","assignmentCancelled","studentsList","userId","progress","reader","FileReader","onload","imagepath","target","readAsDataURL","uploadFilesSimulator","setTimeout","progressInterval","setInterval","clearInterval","bytes","decimals","k","dm","sizes","floor","parseFloat","pow","toFixed","fileToUpload","formData","FormData","append","toPromise","dropped","fileBrowse","CourseService","userid","options","params","post","withCredentials","assignments","ProfileComponent","dialog","successmessage","qualifications","nacategories","subcategories","nasubcategories","agegroups","userForm","firstname","disabled","lastname","profilemail","profilephone","gender","birthdate","profilePic","streetAddress1","streetAddress2","inputCity","stateCode","inputPin","national","backgroundtype","medium","board","standard","qualification","isteacher","tutorexp","tutorpreference","dayselection","distance","timing","rate","currency","proof","proofDoc","demo","interests","nacategory","nasubcategory","agegroup","certification","getUser","currentUser","updateFormValus","callback","userValues","profile","firstName","lastName","phone","address","addressType","addressId","address1","address2","city","pinCode","stateCd","countryCd","accountDetails","sex","dateOfBirth","enrollmentDate","naCategory","naSubCategory","ageGroup","academyTypeId","isTutorBefore","professionalDescription","highestEducation","preference","availableDays","preferredDistance","preferredTimeSlot","hourlyRate","idType","idDoc","demoLink","intersets","updateProfileData","a","some","patchValue","toString","type","uploadedFile","setValue","proofdocument","fileInput","nativeElement","onchange","click","checker","completed","dialogRef","width","afterClosed","image","openDialog","AlertsComponent","fade","alerts","alertSubscription","onAlert","alert","message","keepAfterRouteChange","autoClose","removeAlert","routeSubscription","events","clear","find","classes","alertTypeClass","Success","Error","Info","Warning","TutorsComponent","userservice","_snackBar","studentService","weekArray","disableDemo","demoDisabled","classDisabled","createForm","getUserByRole","tutors","sliceTutors","getEnrollmentsbyStudent","demos","loadRequests","weekarrays","getRequestsbyStudent","today","demoCount","requestDate","slicedTutors","slice","searchForm","tutor","indicator","selectDemo","tutordialog","tutorinfo","student","courses","requestDemo","openFromComponent","requestId","startIndex","pageIndex","pageSize","endIndex","filteredItems","toLowerCase","pincode","filterItem","pagechange","BroadcastComponent","broadcastForm","url","broadcast","environment","production","mapbox_api","braincert_key","braincert_api","cloudinary","key","secret","environmet","DemoService","MainlayoutComponent","IsMatch","control1","control2","formGroup","control","matchControl","errors","mustMatch","AdminpaymentsComponent","displayedColumns","dataSource","loadStudents","paginator","sort","amount","row","eve","filterValue","trim","firstPage","applyFilter","ForgotpasswordComponent","role","onpasswordSubmit","Alert","init","Object","assign","AlertType","NoassignmentsComponent","assignmentEmitter","EvaluateComponent","sortoptions","doEvaluate","resultsLength","primary","selectedValue","getassigments","getTutorStudentAssignments","selectedRow","isReturn","PromoterregisterComponent","registerForm","compose","patternValidator","isInvalid","minLength","validator","regUser","addUser","SitelayoutComponent","TutorfilterPipe","arg1","hasOwnProperty","RegExp","test","ConfirmationComponent","authservice","token","paramMap","confirmEmail","reConfirm","authUser","isResend","ClassroomComponent","colors","background","font","encapsulation","None","DemolistComponent","snackBar","alertcomponent","requests","filteredRequests","loadDemo","checked","actions","action","color","actionIcons","selectedAction","getDemoRequests","setDate","getDay","enrollment","enrol","eventId","studentID","account","updateDate","updateEnrollment","status","saveEnrollment","openSnackBar","filterRequests","demoId","AdminstudentsComponent","adminService","getadminData","DemodetailComponent","listView","enrollmentarray","returnToList","SiteaboutusComponent","CustomCalendarFormat","locale","JwtTokenInterceptor","request","isLoggedIn","jwtToken","isApiUrl","startsWith","Authorization","clone","handle","AdminlayoutComponent","DragndirDirective","fileDropped","evt","stopPropagation","fileOver","dataTransfer","onDragOver","onDragLeave","ondrop","AddressComponent","CarouselhelperComponent","customOptions","loop","mouseDrag","touchDrag","pullDrag","dots","navSpeed","navText","responsive","items","nav","slidesStore","sourceType","EvaluationDetailComponent","starsarray","ratingList","onSelectValue","star","rating","sum","reduce","b","feedback1","feedback2","gotolist","cancel","AdminService","TutorReferralsComponent","modalService","modalRef","size","componentInstance","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackContextKeys","resolve","module","exports","AttendancemodalComponent","datePipe","attendanceForm","eventCourseId","attendanceDate","transform","isPresent","reason","remarks","close","submittedAttendance","onNoClick","AppComponent","showFiller","logout","VsnavigationComponent","breakpointObserver","isHandset$","observe","Handset","matches","StudymaterialComponent","getAllCoursesByUser","blob","Blob","URL","createObjectURL","isUploaded","submissionDate","submissionFile","update","assignmentToUpdate","updateStudentAssignments","isSuccess","AdminDashboardComponent","adminservice","incomes","text","subtext","schedule","columnNames","height","slices","offset","mapdashboard","classesOrDemos","newRequests","totalRevenue","UserService","model","AttendanceComponent","attendance","loadDemos","getAllDemosByUser","filteredCourses","getattendance","getattendances","updateAttendance","filterCourse","AngmaterialModule","declarations","imports","providers","StudentService","tutorid","studentId","$event","red","secondary","blue","yellow","CalendarComponent","modal","view","CalendarView","isChecked","viewDate","refresh","selectedView","activeDayIsOpen","filterActions","label","a11yLabel","onClick","handleEvent","iEvent","logUser","selectedDate","calendarformForm","summary","description","timeZone","start","end","recurrence","attendees","organizer","getEvents","meta","createCalendar","getCoursesByUser","statuses","modalData","newStart","newEnd","provide","useClass","changeAllSelected","closeOpenMonthViewDay","setView","changedFilter","modalContent","SitecontactusComponent","ProfilemodelComponent","onCancel","onUpload","AppModule","useFactory","multi","deps","useValue","forRoot","apiKey","entryComponents","bootstrap","EventsComponent","create","getDemos","tutions","OtpComponent","fb","resend","otpcode","useremail","phoneForm","el","srcElement","tidx","getAttribute","elements","document","getElementsByTagName","tidx2","focus","finalcode","verifyotp","sendOtp","resendotp","tokenMessage","AllreportsComponent","chartOptions","series","chart","plotOptions","radialBar","dataLabels","fontSize","total","show","formatter","w","labels","barChart","bar","horizontal","columnWidth","endingShape","enabled","stroke","xaxis","categories","yaxis","fill","opacity","tooltip","val","ReportsComponent","NavigationBarComponent","staticService","navClicked","smClicked","toggleSidenav","getNotifications","menuClicked","smallmenuClicked","AlertService","defaultId","asObservable","StudentmateriallistComponent","studyMaterial","slides","href","getMaterials","filePath","origin","table","UrlsafePipe","sanitizer","bypassSecurityTrustResourceUrl","StaticdataService","states","country","appInitializer","authenticationService","Promise","tokenRefresh","AssignmentsComponent","displayassignments","detailsMenu","updateList","getAssignmentByTutor","slicedAssignments","Customvalidators","regex","NoPassswordMatch","AppnotificationsComponent","selection","AssignmentlistComponent","numSelected","numRows","isAllSelected","select","saveassignments","selectedstudents","selectedCourse","creationDate","addstudentstoassignment","addAssignments","FieldsfilterPipe","term","EventslistComponent","month","filterEvents","splitTutions","splitDemos","side","subtract","toDate","selectedDemo","AuthserviceService","userSubject","localStorage","getItem","loginSubject","loginuser","removeItem","setItem","rememberMe","startRefreshTokenTimer","refreshToken","stopRefreshTokenTimer","usert","Token","expires","exp","timeout","now","refreshTokenTimeout","clearTimeout","otp","emailId","passwordmodel","StudentmateriallistDataSource","dataMutations","page","sortChange","getPagedData","getSortedData","splice","active","direction","isAsc","compare","materialId","SitefooterComponent","AlertModule","FooterComponent","AdmintutorsComponent","loadTutors","NotificationComponent","notificationMiddleware","toggleSubscription","indexOf","self","notif","AdminComponent","tutorrequests","cards","cols","rows","mapAdminData","tutorPie","adminData","parents","breakpoint","legend","eventPie","tutorStatus","createBarChart","createTutorPie","createEventsPie","updateTutor","API_BASE_URL","NotificationsService","baseUrl","jsonParseReviver","url_","content_","options_","body","responseType","response_","processSubscribe","response","responseBlob","_headers","blobToText","_responseText","throwException","processUnsubscribe","processBroadcast","SwaggerException","isSwaggerException","obj","observer","complete","readAsText","AssignmentDetailComponent","addressForm","company","state","postalCode","maxLength","shipping","hasUnitNumber","abbreviation","ErrorInterceptor","authenticateService","statusText","ResetpasswordComponent","resetpassword","RegisterComponent","tiles","dat","acceptTerms","AdaptivereportsComponent","radialCharts","reportDate","lineChartData","getradialCharts","dayArray","dropShadow","top","left","blur","toolbar","curve","grid","borderColor","markers","min","max","horizontalAlign","floating","offsetY","offsetX","radialChartOptions","startAngle","endAngle","hollow","margin","track","strokeWidth","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","lineCap","AuthGuard","SitefeaturesComponent","StudymaterialService","StudentpaymentsComponent","detailsForm","teachingstyle","price","form2","cardForm","option","promo","cardNumber","expDate","holderName","cvv","getTutors","getSubjects","Array","from","groupName","secondForm","PromoterlayoutComponent","routes","component","canActivate","children","pathMatch","redirectTo","AppRoutingModule","DashboardComponent","tutorcards","studentcards","CreateWishes","getProfileData","istutor","getStatistics","statistics","profiles","earnings","materials","getHours","greetmessage","StudentAssignmentsComponent","selectdetail","filterassignments","assignmentFormForm","getStudentAssignments","splitAssignments","uploadedFilePath","EarningsComponent","getenrollements","getenrollmentsbyTutor","DemoComponent","eventcolors","EventmodelComponent","disable","bootstrapModule","AttendanceService","courseid","attendances","SidenavBarComponent","studentnavs","tutornavs","loginType","IsOpened","isAuthenticated","card","sidenav","relativeTo","drawer","webpackEmptyAsyncContext","SitepricingComponent","DemomodelComponent","availableslots","demomodelForm","demoreq","tutorId","slot","onClose","PromoterloginComponent","forgotClick"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaA,sB;AAEX,0CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,0C;AAAA,iB;AAAA,e;AAAA,iZ;AAAA;AAAA;ACPnC;;AACE;;AACA;;AAAyB;;AAAwB;;AACjD;;AACE;;AAA0B;;AAAiF;;AAC3G;;AACE;;AACE;;AAA4C;;AAAK;;AACjD;;AACF;;AACA;;AAAgE;;AAAQ;;AAC1E;;AACF;;AACF;;;;;;;;;wEDNaA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTC,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmOM;;;;;;AAAK,sJAAkB,SAAlB,EAAkB,YAAlB;;;;;;AACL;;;;;;AAAK,sJAAkB,SAAlB,EAAkB,YAAlB;;;;UD7NEC,iB;AAEX,qCAAc;AAAA;;AAEd,eAAAC,MAAA,GAAS,EAAT;AAFiB;;;;qCAIT;AACN,iBAAKC,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACA,iBAAKC,UAAL;AACD;;;uCAES;AACR,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAA5B,EAA+BA,KAAK,EAApC,EAAwC;AACtC,kBAAMC,OAAO,GAAG;AACdC,kBAAE,EAAEF,KADU;AAEdG,sBAAM,EAAE,+BAA+BH,KAAK,GAAG,CAAvC,IAA4C,MAFtC;AAGdI,sBAAM,EAAE,+BAA+BJ,KAAK,GAAG,CAAvC,IAA4C,YAA5C,GAA2D,2BAA3D,IAA0FA,KAAK,GAAG,CAAlG,IAAuG,WAHjG;AAIdK,sBAAM,EAAE,+BAA+BL,KAAK,GAAG,CAAvC,IAA4C,IAJtC;AAKdM,qBAAK,EAAE,SAASN;AALF,eAAhB;AAOA,mBAAKJ,MAAL,CAAYW,IAAZ,CAAiBN,OAAjB;AACD;AACF;;;;;;;yBAtBUN,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,kB;AAAA,gB;AAAA,imG;AAAA;AAAA;ACP9B;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAyB;;AAAiC;;AAAG;;AAAW;;AAAI;;AAAC;;AAC7E;;AAAoB;;AAAiE;;AACrF;;AAA4D;;AAAM;;AAAW;;AAAO;;AACtF;;AACA;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAiBE;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AACE;;AAKF;;AACA;;AAA+C;;AAAQ;;AACzD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAME;;AACE;;AACE;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAE;;AAC3B;;AAEA;;AAAuB;;AAAqB;;AAC5C;;AAAqB;;AAA2D;;AAChF;;AAA8D;;AAAqB;;AACrF;;AACF;;AACA;;AACE;;AACE;;AAGA;;AACE;;AAAyB;;AAAE;;AAC3B;;AAEA;;AAAuB;;AAAoB;;AAC3C;;AAAqB;;AAAsE;;AAC3F;;AAA8D;;AAAqB;;AACrF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAE;;AAI3B;;AAEA;;AAAuB;;AAAgB;;AACvC;;AAAqB;;AAA8D;;AACnF;;AAA8D;;AAAkB;;AAClF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAiC;;AAAkC;;AACnE;;AACA;;AAAgC;;AAEX;;AACrB;;AAA+C;;AAAQ;;AACzD;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAuB;;AAAyB;;AAChD;;AACA;;AACE;;AACE;;AACA;;AAAG;;AAAK;;AACV;;AACA;;AACE;;AACA;;AAAG;;AAAO;;AACZ;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAmB;;;;AAAe;;AAClC;;AAA+B;;AAAuC;;AACxE;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAAsC;;AAAS;;AACjD;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAmB;;;;AAAe;;AAClC;;AAAiC;;AACR;;AAC3B;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAAsC;;AAAS;;AACjD;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAmB;;;;AAAe;;AAClC;;AAA+B;;AAA2C;;AAC5E;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAAsC;;AAAS;;AACjD;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAEF;;AACA;;AAAG;;AAC6G;;AAChH;;AACE;;AACA;;AAWF;;AACF;;AAEF;;AACA;;AACE;;AACE;;AAAuB;;AAAgB;;AACvC;;AACA;;AAAyB;;AACD;;AACxB;;AAIF;;AACF;;AACA;;AACA;;AACE;;AAIA;;AAIF;;AACA;;AAiBA;;;;AAjH6B;;AAAA;;AAgBA;;AAAA;;AAiBA;;AAAA;;AAwBC;;AAAA;;AACA;;AAAA;;;;;;;;;;wED7NjBA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTH,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQac,iB;AAEX,mCAA+CC,IAA/C,EAA0D;AAAA;;AAAX,eAAAA,IAAA,GAAAA,IAAA;AAAc;;;;qCAErD,CACP;;;;;;;yBALUD,iB,EAAiB,gEAER,8EAFQ,C;AAEU,O;;;cAF3BA,iB;AAAiB,qC;AAAA,gB;AAAA,e;AAAA,4C;AAAA;AAAA;ACR9B;;AACI;;AACJ;;;;AADI;;AAAA;;;;;;;;wEDOSA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACThB,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;oBAEf,oD;qBAAO,8E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;UAOagB,uB;AAEX,2CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,uB;AAAuB,O;;;cAAvBA,uB;AAAuB,2C;AAAA,iB;AAAA,e;AAAA,28B;AAAA;AAAA;ACPpC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAoB;;AAAwB;;AAC5C;;AACI;;AAEJ;;AACA;;AACE;;AAEF;;AACA;;AACE;;AAA4D;;AAAK;;AACnE;;AACF;;AACF;;AACA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAqB;;AAAqB;;AAC1C;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAqB;;AAAqB;;AAC1C;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AAIA;;AACA;;AAAqB;;AAA8B;;AACvD;;AACJ;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAG;;AAAwE;;AAC1E;;AAAG;;AAAyD;;AAC/D;;AACF;;;;AA5CgD;;AAAA;;AA8B5B;;AAAA;;;;;;;;;wEDxCPA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTlB,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;AEPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaiB,a;AAMX,+BAAoBC,WAApB,EAAsDC,WAAtD,EAAuF;AAAA;;AAAA;;AAAnE,eAAAD,WAAA,GAAAA,WAAA;AAAkC,eAAAC,WAAA,GAAAA,WAAA;AAJtD,eAAAC,OAAA,GAAU,KAAV;AAKE,eAAKD,WAAL,CAAiBE,IAAjB,CAAsBC,SAAtB,CAAgC,UAAAC,CAAC;AAAA,mBAAI,KAAI,CAACF,IAAL,GAAYE,CAAhB;AAAA,WAAjC;AACD;;;;qCAEO;AAAA;;AACN,iBAAKH,OAAL,GAAe,IAAf;AACA,iBAAKF,WAAL,CAAiBM,MAAjB,GAA0BC,IAA1B,CAA+B,8DAA/B,EAAwCH,SAAxC,CAAkD,UAAAI,KAAK,EAAI;AACvD,oBAAI,CAACN,OAAL,GAAe,KAAf;AACA,oBAAI,CAACM,KAAL,GAAaA,KAAb;AACH,aAHD;AAIH;;;mCAEK,CACL;;;;;;;yBAnBYT,a,EAAa,0I,EAAA,wJ;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACZ1B;;;;;;;;;wEDYaA,a,EAAa;gBALzB,uDAKyB;iBALf;AACTnB,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAkBa2B,6B;AAWX,+CAAoBC,mBAApB,EACoBC,MADpB,EAEmBC,QAFnB,EAGoBC,WAHpB,EAG8C;AAAA;;AAH1B,eAAAH,mBAAA,GAAAA,mBAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACD,eAAAC,QAAA,GAAAA,QAAA;AACC,eAAAC,WAAA,GAAAA,WAAA;AAZb,eAAAC,sBAAA,GAAyB;AAC9BC,wBAAY,EAAE,KADgB;AAE9BC,uBAAW,EAAE,KAFiB;AAG9BC,wBAAY,EAAE;AAHgB,WAAzB;AAMP,eAAAC,cAAA,GAAiB,IAAjB;AACO,eAAAC,aAAA,GAAgB,EAAhB;AAKyC;;;;iCAGzC;AAAA;;AACL,gBAAI,mBAAmBC,SAAnB,IAAgC,iBAAiBC,MAArD,EAA6D;AAC3DD,uBAAS,CAACE,aAAV,CAAwBC,QAAxB,CAAiC,eAAjC,EACGC,IADH,CACQ,UAAAC,KAAK,EAAI;AACbC,uBAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAA5C;AACA,sBAAI,CAACP,cAAL,GAAsBO,KAAtB;;AACA,sBAAI,CAACG,iBAAL;AACD,eALH,WAMS,UAAAC,KAAK,EAAI;AACdH,uBAAO,CAACG,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,eARH;AASA,mBAAKf,sBAAL,CAA4BE,WAA5B,GAA0C,IAA1C;AACD,aAXD,MAWO;AACL,mBAAKF,sBAAL,CAA4BE,WAA5B,GAA0C,KAA1C;AACD;AACF;;;8CAEmB;AAAA;;AAClB,iBAAKE,cAAL,CAAoBY,WAApB,CAAgCC,eAAhC,GACGP,IADH,CACQ,UAAAQ,YAAY,EAAI;AACpBN,qBAAO,CAACC,GAAR,CAAYK,YAAZ;AACAN,qBAAO,CAACC,GAAR,CAAYM,IAAI,CAACC,SAAL,CAAeF,YAAf,CAAZ;AACA,oBAAI,CAAClB,sBAAL,CAA4BC,YAA5B,GAA2C,EAAEiB,YAAY,KAAK,IAAnB,CAA3C;AACD,aALH;AAMD;;;sCAEW;AAAA;;AACV,iBAAKlB,sBAAL,CAA4BG,YAA5B,GAA2C,IAA3C;AACA,gBAAMkB,oBAAoB,GAAG,KAAKC,kBAAL,CAAwB,yEAAYC,0BAApC,CAA7B;AACA,iBAAKnB,cAAL,CAAoBY,WAApB,CAAgC1B,SAAhC,CAA0C;AACtCkC,6BAAe,EAAE,IADqB;AAEtCH,kCAAoB,EAApBA;AAFsC,aAA1C,EAIGX,IAJH,CAIQ,UAAAQ,YAAY,EAAI;AACpBN,qBAAO,CAACC,GAAR,CAAYM,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,SAAL,CAAeF,YAAf,CAAX,CAAZ;AACA,oBAAI,CAAClB,sBAAL,CAA4BC,YAA5B,GAA2C,IAA3C;AACD,aAPH,WAQS,UAAAyB,GAAG,EAAI;AACZd,qBAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8Ca,GAA9C;AACD,aAVH,EAWGhB,IAXH,CAWQ,YAAM;AACV,oBAAI,CAACV,sBAAL,CAA4BG,YAA5B,GAA2C,KAA3C;AACD,aAbH;AAeAG,qBAAS,CAACE,aAAV,CAAwBmB,gBAAxB,CAAyC,SAAzC,EAAoD,UAACC,KAAD,EAAW;AAC3DhB,qBAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,oBAAI,CAACR,aAAL,CAAmBxB,IAAnB,CAAwB+C,KAAK,CAAC7C,IAA9B;AACC,aAHL;AAID;;;0CAEe;AAAA;;AACd,iBAAKiB,sBAAL,CAA4BG,YAA5B,GAA2C,IAA3C;AACA,gBAAMkB,oBAAoB,GAAG,KAAKC,kBAAL,CAAwB,yEAAYC,0BAApC,CAA7B;AACA,iBAAKnB,cAAL,CAAoBY,WAApB,CAAgC1B,SAAhC,CAA0C;AACtCkC,6BAAe,EAAE,IADqB;AAEtCH,kCAAoB,EAApBA;AAFsC,aAA1C,EAIGX,IAJH,CAIQ,UAAAQ,YAAY,EAAI;AACpB,kBAAMW,OAAO,GAAGV,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,SAAL,CAAeF,YAAf,CAAX,CAAhB;;AACA,oBAAI,CAACtB,mBAAL,CAAyBN,SAAzB,CAAmC;AACjCwC,oBAAI,EAAED,OAAO,CAACE,IAAR,CAAaD,IADc;AAEjCE,sBAAM,EAAEH,OAAO,CAACE,IAAR,CAAaE,MAFY;AAGjCC,wBAAQ,EAAEL,OAAO,CAACM;AAHe,eAAnC,EAIG7C,SAJH,CAIa,UAAA8C,CAAC,EAAI;AAChB,sBAAI,CAACpC,sBAAL,CAA4BC,YAA5B,GAA2C,IAA3C;AACD,eAND;AAOD,aAbH,WAcS,UAAAyB,GAAG,EAAI;AACZd,qBAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8Ca,GAA9C;AACD,aAhBH,EAiBGhB,IAjBH,CAiBQ,YAAM;AACV,oBAAI,CAACV,sBAAL,CAA4BG,YAA5B,GAA2C,KAA3C;AACD,aAnBH;AAqBAG,qBAAS,CAACE,aAAV,CAAwBmB,gBAAxB,CAAyC,SAAzC,EAAoD,UAACC,KAAD,EAAW;AAC3DhB,qBAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,oBAAI,CAACR,aAAL,CAAmBxB,IAAnB,CAAwB+C,KAAK,CAAC7C,IAA9B;AACC,aAHL;AAID;;;wCAEa;AAAA;;AACZ,iBAAKiB,sBAAL,CAA4BG,YAA5B,GAA2C,IAA3C;AACA,iBAAKC,cAAL,CAAoBY,WAApB,CAAgCC,eAAhC,GACGP,IADH,CACQ,UAACQ,YAAD,EAAkB;AACtB,kBAAIA,YAAJ,EAAkB;AAChB,uBAAOA,YAAY,CAACmB,WAAb,EAAP;AACD;AACF,aALH,WAMS,UAACtB,KAAD,EAAW;AAChBH,qBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,aARH,EASGL,IATH,CASQ,YAAM;AACV,oBAAI,CAACV,sBAAL,CAA4BC,YAA5B,GAA2C,KAA3C;AACA,oBAAI,CAACD,sBAAL,CAA4BG,YAA5B,GAA2C,KAA3C;AACD,aAZH;AAaD;;;4CAEiB;AAAA;;AAChB,iBAAKH,sBAAL,CAA4BG,YAA5B,GAA2C,IAA3C;AACA,gBAAImC,GAAJ;AACA,iBAAKlC,cAAL,CAAoBY,WAApB,CAAgCC,eAAhC,GACGP,IADH,CACQ,UAACQ,YAAD,EAAkB;AACtB,kBAAIA,YAAJ,EAAkB;AAChBoB,mBAAG,GAAGnB,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,SAAL,CAAeF,YAAf,CAAX,CAAN;AACA,uBAAOA,YAAY,CAACmB,WAAb,EAAP;AACD;AACF,aANH,WAOS,UAACtB,KAAD,EAAW;AAChBH,qBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACD,aATH,EAUGL,IAVH,CAUQ,YAAM;AACV,oBAAI,CAACd,mBAAL,CAAyByC,WAAzB,CAAqC;AACnCP,oBAAI,EAAEQ,GAAG,CAACP,IAAJ,CAASD,IADoB;AAEnCE,sBAAM,EAAEM,GAAG,CAACP,IAAJ,CAASE,MAFkB;AAGnCC,wBAAQ,EAAEI,GAAG,CAACH;AAHqB,eAArC,EAIG7C,SAJH,CAIa,YAAM;AACjB,sBAAI,CAACU,sBAAL,CAA4BC,YAA5B,GAA2C,KAA3C;AACA,sBAAI,CAACD,sBAAL,CAA4BG,YAA5B,GAA2C,KAA3C;AACD,eAPD;AAQD,aAnBH;AAoBD;;;6CAEkBoC,S,EAAW;AAC5B,gBAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,CAAC,IAAIF,SAAS,CAACG,MAAV,GAAmB,CAAxB,IAA6B,CAAxC,CAAhB;AACA,gBAAMC,MAAM,GAAG,CAACJ,SAAS,GAAGC,OAAb,EACZI,OADY,CACJ,KADI,EACG,GADH,EAEZA,OAFY,CAEJ,IAFI,EAEE,GAFF,CAAf;AAIA,gBAAMC,OAAO,GAAGtC,MAAM,CAACuC,IAAP,CAAYH,MAAZ,CAAhB;AACA,gBAAMI,WAAW,GAAG,IAAIC,UAAJ,CAAeH,OAAO,CAACH,MAAvB,CAApB;;AAEA,iBAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACH,MAA5B,EAAoC,EAAEO,CAAtC,EAAyC;AACvCF,yBAAW,CAACE,CAAD,CAAX,GAAiBJ,OAAO,CAACK,UAAR,CAAmBD,CAAnB,CAAjB;AACD;;AACD,mBAAOF,WAAP;AACD;;;+CAEoB;AACnB,gBAAI,KAAK/C,sBAAL,CAA4BC,YAAhC,EAA8C;AAC7C;AACA,mBAAKkD,wBAAL;AACA,aAHD,MAGO;AACN;AACA,mBAAKC,wBAAL;AACA;AACF;;;uCAES;AACR,gBAAI,KAAKtD,QAAL,CAAcuD,SAAlB,EAA6B;AAC3B,mBAAKrD,sBAAL,CAA4BE,WAA5B,GAA0C,IAA1C;AACA,mBAAKJ,QAAL,CAAcwD,SAAd,CAAwBhE,SAAxB,CAAkC,YAAM;AACpC,oBAAIiE,OAAO,4CAAX,EAAyD;AACrDhD,wBAAM,CAACiD,QAAP,CAAgBC,MAAhB;AACH;AACJ,eAJD;AAKD;;AAED,gBAAI,KAAK5D,MAAL,CAAYwD,SAAhB,EAA0B;AACxB,mBAAKrD,sBAAL,CAA4BE,WAA5B,GAA0C,IAA1C;AACD;;AAEDU,mBAAO,CAACC,GAAR,CAAY,KAAKf,QAAL,CAAcuD,SAA1B;AACAzC,mBAAO,CAACC,GAAR,CAAY,KAAKb,sBAAL,CAA4BE,WAAxC;AACA,iBAAKF,sBAAL,CAA4BC,YAA5B,GAA2C,EAAE,KAAKJ,MAAL,CAAYqB,YAAZ,KAA6B,IAA/B,CAA3C;AACD;;;qDAE0B;AAAA;;AACzB,iBAAKlB,sBAAL,CAA4BG,YAA5B,GAA2C,IAA3C;AACA,iBAAKN,MAAL,CAAY6D,mBAAZ,CAAgC;AAC5BC,6BAAe,EAAE,yEAAYpC;AADD,aAAhC,EAGCb,IAHD,CAGM,UAAA4B,GAAG,EAAI;AACX,kBAAMT,OAAO,GAAGV,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,SAAL,CAAekB,GAAf,CAAX,CAAhB;;AACA,oBAAI,CAAC1C,mBAAL,CAAyBN,SAAzB,CAAmC;AACjCwC,oBAAI,EAAED,OAAO,CAACE,IAAR,CAAaD,IADc;AAEjCE,sBAAM,EAAEH,OAAO,CAACE,IAAR,CAAaE,MAFY;AAGjCC,wBAAQ,EAAEL,OAAO,CAACM;AAHe,eAAnC,EAIG7C,SAJH,CAIa,UAAA8C,CAAC,EAAI;AAChB,sBAAI,CAACpC,sBAAL,CAA4BC,YAA5B,GAA2C,IAA3C;;AACA,oBAAM2D,WAAW,GAAG,MAAI,CAAC7D,WAAL,CAAiB8D,IAAjB,CAAsB,wBAAtB,EAAgD,IAAhD,EAAsD;AACxEC,0BAAQ,EAAE,MAAI,CAACC;AADyD,iBAAtD,CAApB;AAGD,eATD;AAUD,aAfD,WAeS,UAAArC,GAAG;AAAA,qBAAId,OAAO,CAACG,KAAR,CAAc,sCAAd,EAAsDW,GAAtD,CAAJ;AAAA,aAfZ,EAgBChB,IAhBD,CAgBM,YAAM;AACV,oBAAI,CAACV,sBAAL,CAA4BG,YAA5B,GAA2C,KAA3C;AACD,aAlBD;AAmBD;;;qDAEuB;AAAA;;AACtB,iBAAKH,sBAAL,CAA4BG,YAA5B,GAA2C,IAA3C;AACA,gBAAMmC,GAAG,GAAGnB,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACC,SAAL,CAAe,KAAKvB,MAAL,CAAYqB,YAA3B,CAAX,CAAZ;AACAN,mBAAO,CAACC,GAAR,CAAY,MAAZ;AACA,iBAAKhB,MAAL,CAAYwC,WAAZ;AACA,iBAAKzC,mBAAL,CAAyByC,WAAzB,CAAqC;AACnCP,kBAAI,EAAEQ,GAAG,CAACP,IAAJ,CAASD,IADoB;AAEnCE,oBAAM,EAAEM,GAAG,CAACP,IAAJ,CAASC,MAFkB;AAGnCE,sBAAQ,EAAEI,GAAG,CAACH;AAHqB,aAArC,EAIG7C,SAJH,CAIa,YAAM;AACjB,qBAAI,CAACU,sBAAL,CAA4BC,YAA5B,GAA2C,KAA3C;AACA,qBAAI,CAACD,sBAAL,CAA4BG,YAA5B,GAA2C,KAA3C;AACD,aAPD;AAQD;;;;;;;yBA3NUR,6B,EAA6B,4I,EAAA,sH,EAAA,wH,EAAA,+H;AAAA,O;;;eAA7BA,6B;AAA6B,iBAA7BA,6BAA6B,K;AAAA,oBAF5B;;;;;wEAEDA,6B,EAA6B;gBAHzC,wDAGyC;iBAH9B;AACVqE,sBAAU,EAAE;AADF,W;AAG8B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACSQ;;AAAuE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACrE;;AAA+C;;AAAc;;AAC/D;;;;;;AAF4B;;AACN;;AAAA;;AAA2B;;AAAA;;;;;;;;UDH5CC,gB;AAaX,oCAAc;AAAA;;AAXP,eAAAC,WAAA,GAAc,IAAd;AACP,eAAAC,UAAA,GAAa,IAAb;AAEA,eAAAC,OAAA,GAAU,CACR;AAAC5F,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,MAAd;AAAsBC,oBAAQ,EAAE,IAAhC;AAAsCC,gBAAI,EAAE;AAA5C,WADQ,EAER;AAAC/F,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,UAAd;AAA0BC,oBAAQ,EAAE,KAApC;AAA2CC,gBAAI,EAAE;AAAjD,WAFQ,EAGR;AAAC/F,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,UAAd;AAA0BC,oBAAQ,EAAE,KAApC;AAA2CC,gBAAI,EAAE;AAAjD,WAHQ,EAIR;AAAC/F,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,SAAd;AAAyBC,oBAAQ,EAAE,KAAnC;AAA0CC,gBAAI,EAAE;AAAhD,WAJQ,EAKR;AAAC/F,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,YAAd;AAA4BC,oBAAQ,EAAE,KAAtC;AAA6CC,gBAAI,EAAE;AAAnD,WALQ,CAAV;AAQiB;;;;qCAET,CACP;;;sCAEWC,I,EAAI;AACd,iBAAKJ,OAAL,CAAaK,OAAb,CAAqB,UAAAlF,CAAC;AAAA,qBAAIA,CAAC,CAAC+E,QAAF,GAAa,KAAjB;AAAA,aAAtB;AACAE,gBAAI,CAACF,QAAL,GAAiB,IAAjB;AACD;;;;;;;yBArBUL,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,oC;AAAA,iB;AAAA,e;AAAA,sjC;AAAA;AAAA;ACP7B;;AACI;;AAAiC;;AAAwC;;AACzE;;AACA;AAAA;AAAA;;AAEI;;AAAU;;AAAI;;AAChB;;AACF;;AACE;;AACE;;AAGA;;AACE;;AAA+H;;AAAe;;AAC9I;;AACE;;AAAkC;;AAAQ;;AAC1C;;AAAkC;;AAAQ;;AAC5C;;AACF;;AACF;;AACA;;AACE;;AAAuG;;AAAK;;AAC9G;;AACF;;AACF;;;;AArBuC;;AAAA;;AAIuB;;AAAA;;AAE2C;;AAAA;;AAY3F;;AAAA;;;;;;;;;wEDdHA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTnG,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;UAOa0G,8B;AAIX,gDAAmBC,WAAnB,EAAgD;AAAA;;AAA7B,eAAAA,WAAA,GAAAA,WAAA;AAA+B;;;;qCAEvC,CACV;;;;;;;yBAPUD,8B,EAA8B,0I;AAAA,O;;;cAA9BA,8B;AAA8B,oD;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,ujC;AAAA;AAAA;ACP3C;;AACE;;AAAyC;;AAAgB;;AACzD;;AAAuD;AAAA,qBAAS,IAAAC,WAAA,SAAoB,aAApB,CAAT;AAA2C,aAA3C;;AACrD;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AACI;;AACE;;AACE;;AACE;;AACE;;AAA6C;;AAAI;;AACjD;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACI;;AACE;;AAAmE;;AAAQ;;AAC7E;;AACA;;AACE;;AAA6E;;AAAoB;;AACnG;;AACJ;;AAGF;;AACJ;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAiB;;AAAI;;AACrB;;AAAgB;;AAAa;;AAC7B;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAO;;AACzB;;AACF;;AACA;;AACE;;AACE;;AACE;;AACI;;AACA;;AAAuD;;AAAC;;AAC5D;;AACF;;AACA;;AAAI;;AAAoC;;AACxC;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAG;;AACP;;AAAI;;AAAK;;AACT;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACI;;AACA;;AAAuD;;AAAC;;AAC5D;;AACF;;AACA;;AAAI;;AAAoC;;AACxC;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAG;;AACP;;AAAI;;AAAK;;AACT;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACI;;AACA;;AAAuD;;AAAC;;AAC5D;;AACF;;AACA;;AAAI;;AAAoC;;AACxC;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAG;;AACP;;AAAI;;AAAK;;AACT;;AACE;;AACF;;AACF;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAkBE;;AAKF;;AACF;;AACF;;;;AAPqB;;AAAA,kFAAY,UAAZ,EAAY,CAAZ,EAAY,iBAAZ,EAAY,qEAAZ;;;;;;;;;wEDnHRD,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACT5G,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,yCAAD;AAHF,W;AAKgC,U;;;;;AAEhCqG,cAAI;kBAAZ;AAAY;;;;;;;;;;;;;;;;;;;AETf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBoB;;AAAgF;;AAChF;;;;;;AAMA;;AAAmF;;AACnF;;;;;;AAeA;;AAAwC;;AAAiB;;;;;;AAD3D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAYL;;AAAwC;;AAAoB;;;;;;AAD9D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAQL;;;;;;AAOJ;;AAAqE;;AAAS;;;;;;AAAT;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3D3E;;AACE;;AAA8B;AAAA;;AAAA;;AAAA;AAAA;;AAC5B;;AACE;;AAAI;;AAAmB;;AACvB;;AACE;;AACE;AAAA;;AAAA;;AAAA,qCAAmB,IAAnB;AAAuB,WAAvB;;AACA;;AACA;;AAAG;;AAAK;;AACR;;AAEF;;AACA;;AACE;AAAA;;AAAA;;AAAA,qCAAmB,KAAnB;AAAwB,WAAxB;;AACA;;AACA;;AAAG;;AAAO;;AACV;;AAEF;;AACF;;AACF;;AACA;;AACE;;AAAwB;;AAAuC;;AAC/D;;AACE;;AAA0B;;AAAK;;AAC/B;;AACE;;AAA0B;;AAAK;;AAC/B;;AACF;;AACA;;AAEA;;AAGF;;AACA;;AACE;;AAA0B;;AAAQ;;AAClC;;AACE;;AAA0B;;AAAI;;AAC9B;;AACF;;AACA;;AAEA;;AAGA;;AAAgB;;AAAoG;;AAAO;;AAAI;;AACjI;;AACA;;AACE;;AAAqB;;AAAY;;AAC6B;;AAAQ;;AAAI;;AAC1E;;AACE;;AACA;;AACF;;AACF;;AACA;;AAA0B;;AAAS;;AAAsC;;AAAQ;;AAAK;;AAAO;;AACxD;;AAAG;;AAAK;;AAE7C;;AACF;;AACF;;AACF;;;;;;AA7DQ;;AAAA;;AAIqB;;AAAA;;AAIT;;AAAA;;AAGS;;AAAA;;AAIT;;AAAA;;AAMU;;AAAA;;AAKP;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAQU;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAGc;;AAAA,yJAA2C,aAA3C,EAA2C,4GAA3C;;AAIf;;AAAA;;AAC2D;;AAAA;;AACvD;;AAAA;;AAI4B;;AAAA;;AAClC;;AAAA;;AAEC;;AAAA;;;;;;AAmBD;;AAAwC;;AAAiB;;;;;;AAD3D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAcL;;AAAwC;;AAAoB;;;;;;AAD9D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAcL;;AAA+C;;AAA4B;;;;;;AAD7E;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAOP;;;;;;;;AAIJ;;AACE;;AAAQ;;AAA2C;;AAAS;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAC1C;;AAAK;;AAC5B;;;;;;AACA;;AAAqE;;AAAS;;;;;;AAAT;;AAAA;;;;;;;;AA1DzE;;AACE;;AACE;;AAAgB;;AAAc;;AAChC;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACE;;AACE;;AAA0B;;AAAK;;AAC/B;;AACE;;AAA0B;;AAAK;;AAC/B;;AACF;;AACA;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAY;;AACtC;;AACE;;AAA0B;;AAAI;;AAC9B;;AACF;;AACA;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAiC;;AAAgB;;AACjD;;AACE;;AAA0B;;AAAI;;AAC9B;;AACF;;AACA;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA6C;;AAAM;;AAC9F;;AACE;;AACA;;AACF;;AACF;;AACA;;AAIA;;AACF;;AACF;;;;;;AAxDQ;;AAAA;;AAMe;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAUU;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAUU;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAOwD;;AAAA;;AACvD;;AAAA;;AAIuB;;AAAA;;AAI5B;;AAAA;;;;UDxGNO,c;AAeX,gCACUC,WADV,EAEUC,KAFV,EAGUC,MAHV,EAIU5F,WAJV,EAIyC;AAAA;;AAH/B,eAAA0F,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAA5F,WAAA,GAAAA,WAAA;AAhBV,eAAAC,OAAA,GAAU,KAAV;AACA,eAAA4F,UAAA,GAAa,KAAb;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,iBAAA,GAAoB,KAApB;AAEA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAApE,KAAA,GAAQ,EAAR;AACA,eAAAqE,OAAA,GAAU,IAAV;AAEA,eAAAC,QAAA,GAAW,KAAX;AASEzE,iBAAO,CAACC,GAAR,CAAY,KAAK1B,WAAL,CAAiBmG,SAA7B;;AACA,cAAI,KAAKnG,WAAL,CAAiBmG,SAArB,EAAgC;AAC9B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,KAAD,CAArB;AACD;AACF;;;;qCAEU;AACT,iBAAKC,SAAL,GAAiB,KAAKX,WAAL,CAAiBY,KAAjB,CAAuB;AACtCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAD4B;AAEtCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAF4B,aAAvB,CAAjB;AAKA,iBAAKE,YAAL,GAAoB,KAAKhB,WAAL,CAAiBY,KAAjB,CAAuB;AACzCC,sBAAQ,EAAE,CAAC,KAAKI,CAAL,CAAOJ,QAAP,CAAgBK,KAAjB,EAAwB,0DAAWJ,QAAnC,CAD+B;AAEzCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAF+B;AAGzCK,6BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB;AAHwB,aAAvB,CAApB,CANS,CAYT;;AACA,iBAAKM,SAAL,GAAiB,KAAKnB,KAAL,CAAWoB,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,KAAjE;AACD;;;qCAWU;AAAA;;AACT,iBAAKlB,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKO,SAAL,CAAeY,OAAnB,EAA4B;AAC1B;AACD;;AAED,iBAAKhH,OAAL,GAAe,IAAf;AACA,iBAAKD,WAAL,CAAiBkH,KAAjB,CAAuB,KAAKP,CAAL,CAAOJ,QAAP,CAAgBK,KAAvC,EAA8C,KAAKD,CAAL,CAAOF,QAAP,CAAgBG,KAA9D,EAAqE,KAAKX,OAAL,GAAe,CAAf,GAAmB,CAAxF,EACG3F,IADH,CACQ,8DADR,EAEGH,SAFH,CAEa;AACTgH,kBAAI,EAAE,gBAAM;AACV,uBAAI,CAACvB,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,OAAI,CAACU,SAAN,CAArB;AACD,eAHQ;AAITlF,mBAAK,EAAE,eAAAA,MAAK,EAAI;AACd,uBAAI,CAACA,KAAL,GAAa,gDAAb;AACA,uBAAI,CAAC3B,OAAL,GAAe,KAAf;AACD;AAPQ,aAFb;AAWD;;;6CAEe;AAAA;;AACd,iBAAK8F,iBAAL,GAAyB,IAAzB;AAEA,iBAAKF,UAAL,GAAkB,IAAlB;;AACA,gBAAI,KAAKa,YAAL,CAAkBU,KAAtB,EAA4B;AAC1B,kBAAMC,WAAW,GAAG;AAClBC,qBAAK,EAAG,KAAKC,CAAL,CAAOhB,QAAP,CAAgBK,KADN;AAElBH,wBAAQ,EAAG,KAAKc,CAAL,CAAOd,QAAP,CAAgBG,KAFT;AAGlBC,+BAAe,EAAE,KAAKU,CAAL,CAAOV,eAAP,CAAuBD;AAHtB,eAApB;AAKA,mBAAK5G,WAAL,CAAiBwH,cAAjB,CAAgCH,WAAhC,EAA6ClH,SAA7C,CAAuD,UAAAC,CAAC,EAAI;AAC1D,oBAAIA,CAAJ,EAAM;AACJ,yBAAI,CAACqH,aAAL,GAAqB,IAArB;AACD,iBAFD,MAGI;AACF,yBAAI,CAAC7F,KAAL,GAAa,0BAAb;AACD;;AACD,uBAAI,CAACiE,UAAL,GAAkB,KAAlB;AACD,eARD,EAQG,UAACjE,KAAD,EAAW;AACZ,uBAAI,CAACiE,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACjE,KAAL,GAAaA,KAAb;AACD,eAXD;AAYD;AAEF;;;sCAEW8F,C,EAAC;AACXA,aAAC,CAACC,cAAF;AACA,iBAAKzB,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACD;;;8BA1DO;AACN,mBAAO,KAAKG,SAAL,CAAeuB,QAAtB;AACD;;;8BAEO;AACN,mBAAO,KAAKlB,YAAL,CAAkBkB,QAAzB;AACD;;;;;;;yBAjDUnC,c,EAAc,2H,EAAA,+H,EAAA,uH,EAAA,wJ;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,gB;AAAA,e;AAAA,61E;AAAA;AAAA;ACzB3B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AA+DA;;AA6DF;;AACF;;AACF;;AACF;;AACF;;;;AAxImC;;AAQF;;AAAA;;AA+D6B;;AAAA;;;;;;;;;wED9CjDA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT9G,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUagJ,qB;AAUX,yCAAc;AAAA;;AAPd,eAAApI,KAAA,GAAQ,oCAAR;AACA,eAAAqI,GAAA,GAAM,QAAN;AACA,eAAAC,GAAA,GAAM,QAAN;AAKiB;;;;qCAET;AAAA;;AACN5G,qBAAS,CAAC6G,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACnD,qBAAI,CAACJ,GAAL,GAAWI,QAAQ,CAACC,MAAT,CAAgBC,QAA3B;AACA,qBAAI,CAACL,GAAL,GAAWG,QAAQ,CAACC,MAAT,CAAgBE,SAA3B;AACD,aAHD;AAIA,iBAAKC,GAAL,GAAW,IAAI,6CAAJ,CAAiB;AAC1BC,uBAAS,EAAE,KADe;AAE1B9I,mBAAK,EAAE,KAAKA,KAFc;AAG1B+I,kBAAI,EAAE,EAHoB;AAI1BC,oBAAM,EAAE,CAAC,KAAKV,GAAN,EAAW,KAAKD,GAAhB,CAJkB;AAK1BY,yBAAW,EAAE,yEAAYC;AALC,aAAjB,CAAX;AAQAlH,mBAAO,CAACC,GAAR,CAAY,KAAKkH,WAAjB,EAbM,CAcR;;AACE,iBAAKN,GAAL,CAASO,UAAT,CAAoB,IAAI,2DAAJ,EAApB;AACA,iBAAKD,WAAL,CAAiBtD,OAAjB,CAAyB,UAAAlF,CAAC,EAAI;;;AAC5B,kBAAI,OAAAA,CAAC,CAACqC,KAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAEqG,SAAT,IAAqB,CAArB,IAA0B,OAAA1I,CAAC,CAACqC,KAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAE2F,QAAT,IAAoB,CAAlD,EAAqD;AACnD,oBAAMW,MAAM,GAAG,IAAI,gDAAJ,GAAsBC,SAAtB,CAAgC,CAACC,MAAM,CAAC,CAAD,KAAC7I,CAAC,CAACqC,KAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAEqG,SAAV,CAAP,EAA6BG,MAAM,CAAC,CAAD,KAAC7I,CAAC,CAACqC,KAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAE2F,QAAV,CAAnC,CAAhC,EAAyFc,KAAzF,CAA+F,OAAI,CAACZ,GAApG,CAAf;AACD;AACF,aAJD;AAKD;;;;;;;yBAjCUT,qB;AAAqB,O;;;cAArBA,qB;AAAqB,yC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,kD;AAAA;AAAA;ACVlC;;;;;;;;wEDUaA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTlJ,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;AAQhC+J,qBAAW,EAAE,CAAF;kBADV;AACU,WAAE;;;;;;;;;;;;;;;;;;;AElBf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBc;;AAAoD;;AAAiB;;;;;;AADvE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAWH;;AACE;;AACF;;;;;;AAFyD;;AACvD;;AAAA;;;;;;AAIJ;;AAAoD;;AAAmB;;;;;;AADzE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAsBL;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;;;AAIF;;AAAwD;;AAAsB;;;;;;AADhF;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAOL;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;;;AAIF;;AAAsD;;AAAoB;;;;;;AAD5E;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAiBD;;AACE;;AACF;;;;;;AAF+C;;AAC7C;;AAAA;;;;;;AAIF;;AAAuD;;AAAoB;;;;;;AAD7E;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;;;AASL;;AAA0D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;;;AAAuB;;;;;;AADjB;;AACN;;AAAA;;;;;;AAoB3B;;AACE;;AACF;;;;;;AAFwC;;AACtC;;AAAA;;;;;;;;;;UD/GPO,oB;AAEX,sCAAoBzD,WAApB,EACoB1F,WADpB,EAEoBoJ,WAFpB,EAGoBC,UAHpB,EAImBC,YAJnB,EAI+C;AAAA;;AAJ3B,eAAA5D,WAAA,GAAAA,WAAA;AACA,eAAA1F,WAAA,GAAAA,WAAA;AACA,eAAAoJ,WAAA,GAAAA,WAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACD,eAAAC,YAAA,GAAAA,YAAA;AAGZ,eAAAxD,SAAA,GAAY,KAAZ;AAEP,eAAAyD,SAAA,GAA6B,EAA7B;AAIA,eAAAC,MAAA,GAAS,EAAT;AAKA,eAAAC,IAAA,GAAO,CACL;AAACC,eAAG,EAAE,QAAN;AAAgBC,oBAAQ,EAAE,KAA1B;AAAiCC,gBAAI,EAAE;AAAvC,WADK,EAEL;AAACF,eAAG,EAAE,SAAN;AAAiBC,oBAAQ,EAAE,KAA3B;AAAkCC,gBAAI,EAAE;AAAxC,WAFK,EAGL;AAACF,eAAG,EAAE,WAAN;AAAmBC,oBAAQ,EAAE,KAA7B;AAAoCC,gBAAI,EAAE;AAA1C,WAHK,EAIL;AAACF,eAAG,EAAE,UAAN;AAAkBC,oBAAQ,EAAE,KAA5B;AAAmCC,gBAAI,EAAE;AAAzC,WAJK,EAKL;AAACF,eAAG,EAAE,QAAN;AAAgBC,oBAAQ,EAAE,KAA1B;AAAiCC,gBAAI,EAAE;AAAvC,WALK,EAML;AAACF,eAAG,EAAE,UAAN;AAAkBC,oBAAQ,EAAE,KAA5B;AAAmCC,gBAAI,EAAE;AAAzC,WANK,EAOL;AAACF,eAAG,EAAE,QAAN;AAAgBC,oBAAQ,EAAE,KAA1B;AAAiCC,gBAAI,EAAE;AAAvC,WAPK,CAAP;AASA,eAAAC,UAAA,GAAa,KAAb;AAEU,eAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AAzBwC;;;;qCA2B1C;AACN,iBAAKC,QAAL,GAAgB,KAAKrE,WAAL,CAAiBY,KAAjB,CAAuB;AACrC0D,sBAAQ,EAAG,CAAC,EAAD,CAD0B;AAErCC,mBAAK,EAAG,CAAC,EAAD,EAAK,0DAAWzD,QAAhB,CAF6B;AAGrC9D,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW8D,QAAhB,CAH4B;AAIrC0D,+BAAiB,EAAG,CAAC,EAAD,EAAK,0DAAW1D,QAAhB,CAJiB;AAKrC2D,uBAAS,EAAG,CAAC,IAAIlL,IAAJ,EAAD,EAAa,0DAAWuH,QAAxB,CALyB;AAMrC4D,qBAAO,EAAG,CAAC,IAAInL,IAAJ,EAAD,EAAa,0DAAWuH,QAAxB,CAN2B;AAOrC6D,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW7D,QAAhB,CAP0B;AAQrC8D,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW9D,QAAhB,CAR4B;AASrC+D,qBAAO,EAAG,CAAC,EAAD,CAT2B;AAUrCC,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWhE,QAAhB,CAV8B;AAWrCiE,0BAAY,EAAG,CAAC,EAAD,CAXsB;AAYrCC,+BAAiB,EAAG,CAAC,EAAD,CAZiB;AAarCC,yBAAW,EAAG,CAAC,EAAD,CAbuB;AAcrCtG,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWmC,QAAhB,CAd2B;AAerCoE,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWpE,QAAhB,CAf8B;AAgBrCqE,sBAAQ,EAAE,CAAC,EAAD,CAhB2B;AAiBrCC,uBAAS,EAAE,CAAC,EAAD,CAjB0B;AAkBrCC,8BAAgB,EAAE,CAAC,OAAD,EAAU,0DAAWvE,QAArB,CAlBmB;AAmBrCwE,2BAAa,EAAE,CAAC,IAAD,EAAO,0DAAWxE,QAAlB,CAnBsB;AAoBrCyE,mBAAK,EAAE,CAAC,SAAD,EAAY,0DAAWzE,QAAvB;AApB8B,aAAvB,CAAhB;AAuBA,iBAAK0E,cAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,aAAL;AACD;;;2CAGwB;AAAA;;AACvB,iBAAKrB,QAAL,CACGsB,GADH,CACO,UADP,EAEGC,YAFH,CAGGhL,IAHH,CAII,oEAAa,GAAb,CAJJ,EAKI,2DAAI;AAAA,qBAAM,OAAI,CAACiL,SAAL,GAAiB,IAAvB;AAAA,aAAJ,CALJ,EAMI,iEAAU,UAAA3E,KAAK;AAAA,qBAAI,OAAI,CAACyC,UAAL,CAAgBmC,eAAhB,CAAgC5E,KAAhC,EAChBtG,IADgB,CAEf,gEAAS;AAAA,uBAAM,OAAI,CAACiL,SAAL,GAAiB,KAAvB;AAAA,eAAT,CAFe,CAAJ;AAAA,aAAf,CANJ,EAWGpL,SAXH,CAWa,UAACsL,IAAD,EAAU;;;AACnB,qBAAI,CAAClC,SAAL,GAAiB,EAAjB;AACA,oBAAAkC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEC,QAAN,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEpG,OAAF,CAAU,UAAAlG,OAAO,EAAI;;;AACjC,oBAAMiF,QAAQ,GAAkB;AAC9BsH,4BAAU,EAAEvM,OAAO,CAACC,EADU;AAE9BuM,8BAAY,EAAExM,OAAO,CAACyM,UAFQ;AAG9B/C,2BAAS,EAAE,CAAF,KAAE1J,OAAO,CAAC0M,QAAR,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEC,WAAF,CAAc,CAAd,CAHG;AAI9B3D,0BAAQ,EAAE,CAAF,KAAEhJ,OAAO,CAAC0M,QAAR,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEC,WAAF,CAAc,CAAd;AAJI,iBAAhC;;AAMA,uBAAI,CAACxC,SAAL,CAAe7J,IAAf,CAAoB2E,QAApB;AACD,eARa,CAAd;AASD,aAtBH;AAuBD;;;0CAEuB;AAAA;;AACtB,iBAAKgF,UAAL,CAAgB2C,iBAAhB,GAAoC7L,SAApC,CAA8C,UAAAC,CAAC,EAAI;AAAE,qBAAI,CAAC6L,aAAL,GAAqB7L,CAArB;AACAA,eAAC,CAAC8L,QAAF,CAAW5G,OAAX,CAAmB,UAAA6G,CAAC,EAAI;AACxB,uBAAI,CAAC3C,MAAL,CAAY9J,IAAZ,CAAiByM,CAAC,CAACC,KAAnB;AAClD,eAFkD;AAGnD,aAJF;AAKD;;;0CAEY;AACX,gBAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,gBAAD,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAwC;AACpD,kBAAMC,aAAa,GAAG,gDAAgB,CAAhB,EAAmB,KAAnB,EAA0BC,EAA1B,CAA6BF,MAA7B,CAAtB;AACA,kBAAMG,UAAU,GAAG,EAAnB;AACA,kBAAMC,eAAe,GAAG,mCAAM,CAACN,gBAAD,EAAmB,OAAnB,CAA9B;;AACA,mBAAK,IAAIxI,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI2I,aAArB,EAAoC3I,CAAC,IAAIyI,QAAzC,EAAmD;AACjDK,+BAAe,CAACC,GAAhB,CAAoB/I,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcyI,QAAlC,EAA4CC,MAA5C;AACAG,0BAAU,CAACjN,IAAX,CAAgBkN,eAAe,CAACE,MAAhB,CAAuB,SAAvB,CAAhB;AACD;;AACD,qBAAOH,UAAP;AACD,aATD;;AAUA,iBAAKI,UAAL,GAAkBV,KAAK,CAAC,OAAD,EAAU,EAAV,EAAc,SAAd,CAAvB;AACD;;;qCAEUW,G,EAAG;AACZ,mBAAOA,GAAG,GAAGA,GAAG,CAACpB,YAAP,GAAsB,EAAhC;AACD;;;qCAIU;AAAA;;AACT,iBAAK9F,SAAL,GAAiB,IAAjB;AAEArE,mBAAO,CAACC,GAAR,CAAY,KAAKuL,gBAAL,CAAsB5I,QAAtB,CAA+BuC,KAA3C;;AACA,gBAAI,KAAKmD,QAAL,CAAc3C,KAAlB,EACA;AACE,kBAAM8F,QAAQ,GAAS;AACrBjD,qBAAK,EAAE,KAAKgD,gBAAL,CAAsBhD,KAAtB,CAA4BrD,KADd;AAErBoD,wBAAQ,EAAE,IAFW;AAGrBO,uBAAO,EAAE,CAHY;AAIrBE,4BAAY,EAAE,IAJO;AAKrB/H,uBAAO,EAAE,KAAKuK,gBAAL,CAAsBvK,OAAtB,CAA8BkE,KALlB;AAMrB4D,qBAAK,EAAE,KAAKyC,gBAAL,CAAsBzC,KAAtB,CAA4B5D,KANd;AAOrBsD,iCAAiB,EAAE,KAAK+C,gBAAL,CAAsB/C,iBAAtB,CAAwCtD,KAPtC;AAQrBuD,yBAAS,EAAE,KAAK8C,gBAAL,CAAsB9C,SAAtB,CAAgCvD,KARtB;AASrBwD,uBAAO,EAAE,KAAK6C,gBAAL,CAAsB7C,OAAtB,CAA8BxD,KATlB;AAUrByD,yBAAS,EAAE,KAAK4C,gBAAL,CAAsB5C,SAAtB,CAAgCzD,KAVtB;AAWrB0D,uBAAO,EAAE,KAAK2C,gBAAL,CAAsB3C,OAAtB,CAA8B1D,KAXlB;AAYrBuG,uBAAO,EAAElE,MAAM,CAACmE,QAAP,CAAgB,KAAKpN,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA3C,EAA+C,EAA/C,CAZY;AAarB;AACA;AACA;AACA;AACAsL,2BAAW,EAAE,EAjBQ;AAkBrBiB,4BAAY,EAAE,KAAKqB,gBAAL,CAAsB5I,QAAtB,CAA+BuC,KAA/B,CAAqCgF,YAlB9B;AAmBrBD,0BAAU,EAAE,KAAKsB,gBAAL,CAAsB5I,QAAtB,CAA+BuC,KAA/B,CAAqC+E,UAnB5B;AAoBrB7C,yBAAS,EAAE,KAAKmE,gBAAL,CAAsB5I,QAAtB,CAA+BuC,KAA/B,CAAqCkC,SApB3B;AAqBrBV,wBAAQ,EAAE,KAAK6E,gBAAL,CAAsB5I,QAAtB,CAA+BuC,KAA/B,CAAqCwB,QArB1B;AAsBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAiF,sBAAM,EAAE,KAAKJ,gBAAL,CAAsBnC,SAAtB,CAAgClE,KAAhC,KAA0C,MAnC7B;AAoCrB0G,wBAAQ,EAAE,KAAKL,gBAAL,CAAsBrC,KAAtB,CAA4BhE,KApCjB;AAqCrB2G,4BAAY,EAAE,KAAK9D,IAAL,CAAU+D,MAAV,CAAiB,UAAApN,CAAC;AAAA,yBAAIA,CAAC,CAACuJ,QAAN;AAAA,iBAAlB,EAAkCrB,GAAlC,CAAsC,UAAAlI,CAAC;AAAA,yBAAIA,CAAC,CAACsJ,GAAN;AAAA,iBAAvC,EAAkD+D,IAAlD,CAAuD,GAAvD;AArCO,eAAvB;AAwCA,mBAAKrE,WAAL,CAAiBsE,UAAjB,CAA4BR,QAA5B,EAAsC/M,SAAtC,CAAgD,UAACC,CAAD,EAAa;AAC3D,oBAAI,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAE4J,QAAH,OAAiB,SAAQ2D,SAAzB,CAAJ,EAAwC;AACtC,yBAAI,CAACrE,YAAL,CAAkBsE,OAAlB,CAA0B,2BAA1B,EAAuD,OAAI,CAACC,YAA5D;;AACA,yBAAI,CAACC,QAAL;AACD,iBAHD,MAII;AACF,yBAAI,CAACxE,YAAL,CAAkB1H,KAAlB,CAAwB,wBAAxB,EAAkD,OAAI,CAACiM,YAAvD;AACD;AACF,eARD,EASD,UAACjM,KAAD;AAAA,uBAAW,OAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwBA,KAAxB,EAA+B,OAAI,CAACiM,YAApC,CAAX;AAAA,eATC;AAUD;AACF;;;0CAEe7O,I,EAAY+O,I,EAAI;AAC9B,gBAAMC,IAAI,GAAG/E,MAAM,CAACjK,IAAI,CAACiP,WAAL,EAAD,CAAnB;AACA,gBAAMC,KAAK,GAAGjF,MAAM,CAACjK,IAAI,CAACmP,QAAL,EAAD,CAApB;AACA,gBAAMC,GAAG,GAAGnF,MAAM,CAACjK,IAAI,CAACqP,OAAL,EAAD,CAAlB;AAEA,gBAAMC,SAAS,GAAK,KAAKC,YAAL,CAAkBR,IAAlB,CAApB;AACA,gBAAMS,aAAa,GAAG,IAAIvP,IAAJ,CAAS+O,IAAT,EAAeE,KAAf,EAAsBE,GAAtB,EAA2BE,SAAS,CAAC,CAAD,CAApC,EAAyCA,SAAS,CAAC,CAAD,CAAlD,CAAtB;AACA7M,mBAAO,CAACC,GAAR,CAAY8M,aAAZ;AACA,mBAAOA,aAAP;AACD;;;kCAEOC,E,EAAUC,E,EAAQ;AAExB,gBAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASJ,EAAE,CAACK,OAAH,KAAeJ,EAAE,CAACI,OAAH,EAAxB,CAAb;AACA,gBAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAL,CAAUL,IAAI,IAAI,OAAO,IAAP,GAAc,EAAlB,CAAd,CAAjB;AACA,mBAAOI,QAAP;AACD;;;uCAEaE,W,EAAa;AACzB,gBAAMC,KAAK,GAAGD,WAAW,CAACE,KAAZ,CAAkB,GAAlB,CAAd;AACA,gBAAIC,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAjB;AACA,gBAAMG,OAAO,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAhB;;AACA,gBAAIF,WAAW,CAACK,QAAZ,CAAqB,IAArB,KAA8BF,KAAK,KAAK,EAA5C,EAAgD;AAAEA,mBAAK,IAAI,EAAT;AAAc;;AAChE,mBAAO,CAACA,KAAD,EAAQC,OAAR,CAAP;AACD;;;sCAEQ;AACP,iBAAKtF,QAAL,CAAcwF,KAAd;AACA,iBAAKzJ,SAAL,GAAiB,KAAjB;AACD;;;uCAES;AACR,iBAAKiE,QAAL,CAAcwF,KAAd;AACA,iBAAKzJ,SAAL,GAAiB,IAAjB;AACD;;;qCAEO;AACN,iBAAKgE,WAAL,CAAiB0F,IAAjB,CAAsB,IAAtB;AACD;;;oCAESC,K,EAAK;AACb,iBAAK5F,UAAL,GAAkB4F,KAAlB;;AACA,gBAAI,KAAKhG,IAAL,IAAa,IAAjB,EAAuB;AACrB;AACD;;AACD,iBAAKA,IAAL,CAAUnE,OAAV,CAAkB,UAAAoK,CAAC,EAAI;AACrB,kBAAID,KAAK,KAAK,IAAd,EAAmB;AACjBC,iBAAC,CAAC/F,QAAF,GAAa,IAAb;AACD;AACF,aAJD;AAKD;;;qCAEU8F,K,EAAO/F,G,EAAG;AACnBA,eAAG,CAACC,QAAJ,GAAe8F,KAAf;AACA,iBAAK5F,UAAL,GAAkB,KAAKJ,IAAL,CAAU+D,MAAV,CAAiB,UAAAkC,CAAC;AAAA,qBAAIA,CAAC,CAAC/F,QAAN;AAAA,aAAlB,EAAkCpG,MAAlC,GAA2C,CAA3C,GAA+C,KAA/C,GAAuD,KAAKsG,UAA9E;AACD;;;wCAEU;AACT,gBAAI,KAAKoD,gBAAL,CAAsB9C,SAAtB,CAAgC/C,KAAhC,IAAyC,KAAK6F,gBAAL,CAAsB7C,OAAtB,CAA8BhD,KAA3E,EAAiF;AAC/E,kBAAMuH,IAAI,GAAG,KAAK1B,gBAAL,CAAsB7C,OAAtB,CAA8BxD,KAA9B,CAAoCkI,OAApC,KAAgD,KAAK7B,gBAAL,CAAsB9C,SAAtB,CAAgCvD,KAAhC,CAAsCkI,OAAtC,EAA7D;AACArN,qBAAO,CAACC,GAAR,CAAYiN,IAAZ;;AACA,kBAAIA,IAAI,GAAG,CAAX,EAAa;AACX,qBAAK1B,gBAAL,CAAsB7C,OAAtB,CAA8BuF,SAA9B,CAAwC;AAACC,4BAAU,EAAE;AAAb,iBAAxC;AACD;AACF;AACF;;;6CAEe;AACd,gBAAMC,KAAK,GAAG,KAAKC,OAAL,CAAa,KAAK7C,gBAAL,CAAsB9C,SAAtB,CAAgCvD,KAA7C,EACZ,KAAKqG,gBAAL,CAAsB7C,OAAtB,CAA8BxD,KADlB,CAAd;AAEA,gBAAMmJ,SAAS,GAAG,QAAlB;AACA,gBAAIC,MAAM,GAAG,EAAb;AACA,gBAAMC,KAAK,GAAG,KAAKpG,UAAL,GAAkB,KAAKJ,IAAL,CAAUnE,OAAV,CAAkB,UAAAlF,CAAC,EAAI;AACrD4P,oBAAM,GAAGA,MAAM,CAACE,MAAP,CAAc9P,CAAC,CAACwJ,IAAhB,CAAT;AACD,aAF+B,CAAlB,GAER,KAAKH,IAAL,CAAU+D,MAAV,CAAiB,UAAApN,CAAC;AAAA,qBAAIA,CAAC,CAACuJ,QAAN;AAAA,aAAlB,EAAkCrE,OAAlC,CAA0C,UAAAlF,CAAC,EAAI;AACnD4P,oBAAM,GAAGA,MAAM,CAACE,MAAP,CAAc9P,CAAC,CAACwJ,IAAhB,CAAT;AACD,aAFK,CAFN;AAMA,mBAAOoG,MAAM,CAACzM,MAAP,GAAgB,CAAhB,GAAoB,CAAC,6BAA6BsM,KAA7B,GAAqC,SAArC,GAAiDG,MAAM,CAACvC,IAAP,CAAY,GAAZ,CAAlD,CAApB,GAA0F,CAAC,6BAA6BoC,KAA9B,CAAjG;AACD;;;8BA5IsB;AAAE,mBAAO,KAAK9F,QAAL,CAAcnC,QAArB;AAAgC;;;;;;;yBAnH9CuB,oB,EAAoB,2H,EAAA,wJ,EAAA,0I,EAAA,sJ,EAAA,4I;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA;AAAA;AAAA,S;AAAA,kB;AAAA,gB;AAAA,ksF;AAAA;AAAA;ACjBjC;;AAAsD;AAAA,qBAAU,IAAAgH,QAAA,EAAV;AAAoB,aAApB;;AACpD;;AACE;;AACI;;AACI;;AAAG;AAAA,qBAAS,IAAArC,QAAA,EAAT;AAAmB,aAAnB;;AACC;;AAAU;;AAAI;;AAChB;;AACA;;AACE;;AACF;;AACN;;AACJ;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAK;;AAC5B;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAO;;AAG9B;;AAEE;;AAGF;;AACF;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AACA;;AACF;;AACA;;AACA;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAU;;AACrC;;AAEE;;AAGF;;AACA;;AAGF;;AACA;;AACE;;AAAyB;;AAAQ;;AACjC;;AAEE;;AAGF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA0B;;AAAK;;AAC/B;;AAEA;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AACA;;AACI;;AAAW;;AAAiC;;AAC5C;;AACE;;AAAwD;AAAA,qBAAU,IAAAsC,SAAA,gBAAV;AAAmC,aAAnC;;AAAqC;;AAC7F;;AACA;;AAEF;;AAUJ;;AACF;;AACA;;AACE;;AACI;;AACA;;AAAuB;;AAAW;;AAElC;;AAEE;;AAGF;;AACA;;AACA;;AACJ;;AAEE;;AACE;;AAA+B;;AAAI;;AACnC;;AAAiC;;AAAM;;AACzC;;AACF;;AACA;;AACE;;AACE;;AAA+B;;AAAM;;AACrC;;AAAgC;;AAAO;;AACzC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAmC;;AAAW;;AAC9C;;AAEF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACE;;AAA6C;;AAAI;;AACjD;;AAA0B;;AAAK;;AAC/B;;AAA0B;;AAAK;;AACjC;;AACA;;AACE;;AAA0C;;AAAC;;AAC3C;;AAAwB;;AAAG;;AAC3B;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AAC3B;;AACA;;AACE;;AAA6C;;AAAI;;AACjD;;AAA4B;;AAAO;;AACnC;;AAA0B;;AAAK;;AAC/B;;AAAyB;;AAAI;;AAC/B;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0B;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAiE;;AAAK;;AAChG;;AACE;;AAA4C;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAmC;;AAAM;;AACrF;;AAAmE;;AAAW;;AAChF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAnMM;;AAkBQ;;AAAA;;AACG;;AAAA;;AAWH;;AAAA;;AACc;;AAAA;;AAIX;;AAAA;;AAUiB;;AAAA;;AAIW;;AAAA;;AAQ/B;;AAAA;;AACY;;AAAA;;AAIT;;AAAA;;AAOH;;AAAA;;AACY;;AAAA;;AAIT;;AAAA;;AAeoE;;AAAA,6FAAuB,SAAvB,EAAuB,6HAAvB;;AAE5B;;AAAA;;AAC3B;;AAAA;;AAIT;;AAAA;;AAQ8B;;AAAA;;AAG/B;;AAAA;;AAmBJ;;AAAA;;AACc;;AAAA;;;;;;;;;;wED9GjBnH,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTxK,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;AA+BrBiL,qBAAW;kBAApB;AAAoB;;;;;;;;;;;;;;;;;;;AEhDvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CACA;;;UAOayG,mB;AAEX,qCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;qCAE9BC,I,EAAI;AACb,gBAAMC,MAAM,GAAG,IAAI,gEAAJ,EAAf;AACAA,kBAAM,CAACC,GAAP,CAAW,QAAX,EAAqB,kBAArB;AACAD,kBAAM,UAAN,CAAc,cAAd;AACA,mBAAO,KAAKF,IAAL,CAAUI,GAAV,WAAsB,yEAAYC,MAAlC,oBAAyDJ,IAAzD,EAA+D;AAACK,qBAAO,EAAEJ;AAAV,aAA/D,CAAP;AACD;;;uCAEYK,Q,EAAQ;AACnB,mBAAO,KAAKP,IAAL,CAAUnF,GAAV,CAAmB,UAAG,yEAAYwF,MAAf,4BAA8CE,QAAjE,CAAP;AACD;;;sCAEQ;AACP,mBAAO,KAAKP,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,sBAAP;AACD;;;;;;;yBAjBUN,mB,EAAmB,uH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;wEAEDA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACV1L,sBAAU,EAAE;AADF,W;AAGoB,U;;;;;;;;;;;;;;;;;;;;;;ACRhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGM;;AAAwE;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAuBhE;;AACE;;AACF;;;;;;AAF6C;;AAC3C;;AAAA;;;;;;AAWF;;AACE;;AACF;;;;;;AAFyC;;AACvC;;AAAA;;;;;;AAwCR;;AACE;;AACF;;;;;;AADE;;AAAA;;;;UDpDGmM,yB;AAEX,2CAAoBtL,WAApB,EACoBuL,aADpB,EAEoBjR,WAFpB,EAGoBkR,YAHpB,EAIoBC,iBAJpB,EAKmB7H,YALnB,EAK+C;AAAA;;AAL3B,eAAA5D,WAAA,GAAAA,WAAA;AACA,eAAAuL,aAAA,GAAAA,aAAA;AACA,eAAAjR,WAAA,GAAAA,WAAA;AACA,eAAAkR,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACD,eAAA7H,YAAA,GAAAA,YAAA;AAGZ,eAAAxD,SAAA,GAAY,KAAZ;AACP,eAAA8H,OAAA,GAAU,IAAV;AACA,eAAAwD,KAAA,GAAe,EAAf;AAWA,eAAAC,QAAA,GAAkB,EAAlB;AAGA,eAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAGA,eAAAC,SAAA,GAAY,CAAC;AACTlS,cAAE,EAAE,CADK;AAETuH,iBAAK,EAAE,YAFE;AAGT4K,gBAAI,EAAE;AAHG,WAAD,EAKV;AACEnS,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE,iBAFT;AAGE4K,gBAAI,EAAE;AAHR,WALU,EAUV;AACEnS,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE,UAFT;AAGE4K,gBAAI,EAAE;AAHR,WAVU,EAeV;AACEnS,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE,UAFT;AAGE4K,gBAAI,EAAE;AAHR,WAfU,EAoBV;AACEnS,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE,OAFT;AAGE4K,gBAAI,EAAE;AAHR,WApBU,CAAZ;AAtBiD;;;;qCAiDzC;AAAA;;AACN,iBAAKC,cAAL,GAAsB,KAAK/L,WAAL,CAAiBY,KAAjB,CAAuB;AAC3C2D,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWzD,QAAhB,CADoC;AAE3CkL,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWlL,QAAhB,CAFoC;AAG3C9D,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW8D,QAAhB,CAHkC;AAI3CgE,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWhE,QAAhB,CAJoC;AAK3CmL,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWnL,QAAhB,CALmC;AAM3CoL,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWpL,QAAhB,CANkC;AAO3CqL,0BAAY,EAAE,CAAC,EAAD,CAP6B;AAQ3CC,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWtL,QAAhB;AAR2B,aAAvB,CAAtB;AAWA,iBAAK2K,iBAAL,CAAuBnF,iBAAvB,GACG7L,SADH,CACa,UAAAC,CAAC,EAAI;AACd,qBAAI,CAACiJ,UAAL,GAAkBjJ,CAAlB;AACA,qBAAI,CAACoJ,MAAL,GAAc,OAAI,CAACH,UAAL,CAAgB0I,MAA9B;AACA,qBAAI,CAAC7F,QAAL,GAAgB9L,CAAC,CAAC8L,QAAF,CAAWsB,MAAX,CAAkB,UAACwE,KAAD,EAAQlO,CAAR,EAAWmO,GAAX;AAAA,uBAAmBA,GAAG,CAACC,SAAJ,CAAc,UAAAxC,CAAC;AAAA,yBAAIA,CAAC,CAACxK,IAAF,KAAW8M,KAAK,CAAC9M,IAArB;AAAA,iBAAf,MAA8CpB,CAAjE;AAAA,eAAlB,CAAhB;AACD,aALH;AAMD;;;kCAMOsN,K,EAAO;AACb,iBAAKe,gBAAL,CAAsBf,KAAtB;AACD;;;qCAEUA,K,EAAO;AAChB,iBAAKe,gBAAL,CAAsBf,KAAtB;AACD;;;qCAEU;AAAA;;;;AACT,iBAAKtL,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK2L,cAAL,CAAoBrK,KAAxB,EAA+B;AAC7B,kBAAMgL,UAAU,GAAe;AAC7BnI,qBAAK,EAAE,KAAKtD,CAAL,CAAOsD,KAAP,CAAarD,KADS;AAE7B8K,qBAAK,EAAE,KAAK/K,CAAL,CAAO+K,KAAP,CAAa9K,KAFS;AAG7ByL,4BAAY,EAAE,KAAKrS,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAHZ;AAI7BqD,uBAAO,EAAE,KAAKiE,CAAL,CAAOjE,OAAP,CAAekE,KAJK;AAK7B4D,qBAAK,EAAE,KAAK7D,CAAL,CAAO6D,KAAP,CAAa5D,KALS;AAM7B+K,sBAAM,EAAE,KAAKhL,CAAL,CAAOgL,MAAP,CAAc/K,KANO;AAO7BuD,yBAAS,EAAE,IAAIlL,IAAJ,EAPkB;AAQ7B2S,uBAAO,EAAE,KAAKjL,CAAL,CAAOiL,OAAP,CAAehL,KARK;AAS7BiL,4BAAY,EAAE,KAAKlL,CAAL,CAAOkL,YAAP,CAAoBjL,KATL;AAU7BkL,8BAAc,EAAE,IAVa;AAW7BQ,6BAAa,EAAE,CAXc;AAY7BtI,wBAAQ,EAAE,CAAF,KAAE,KAAKuI,MAAL,MAAW,IAAX,IAAW,aAAX,GAAW,MAAX,GAAW,GAAEvI,QAZM;AAa7BwI,kCAAkB,EAAE;AAbS,eAA/B;AAgBA,mBAAKC,UAAL,CAAgB,KAAKrB,KAArB,EAA4B7P,IAA5B,CAAiC,UAAAkB,KAAK,EAAI;AACxC2P,0BAAU,CAACN,cAAX,GAA4BrP,KAAK,CAACiQ,QAAlC;;AACA,uBAAI,CAACzB,aAAL,CAAmB0B,gBAAnB,CAAoCP,UAApC,EAAgDjS,SAAhD,CAA0D,UAAAC,CAAC,EAAI;AAC7D,sBAAIA,CAAC,CAACwS,YAAF,IAAkB,CAAtB,EAAwB;AACtB,2BAAI,CAAChF,OAAL,GAAe,gCAAf;;AACA,2BAAI,CAACiF,mBAAL;AACD,mBAHD,MAII;AACF,2BAAI,CAACjF,OAAL,GAAe,0CAAf;AACD;AACF,iBARD,EAQG,UAAChM,KAAD,EAAW;AACZ,yBAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwB,0CAAxB;AACD,iBAVD;AAWH,eAbC;AAcD;AACF;;;kDAEoB;AACnB,gBAAMkR,YAAY,GAAwB,EAA1C;AACA,iBAAKzB,QAAL,CAAc/L,OAAd,CAAsB,UAAAlF,CAAC,EAAI;AACzB,kBAAIA,CAAC,KAAK,IAAV,EAAe;AACb,oBAAMgS,UAAU,GAAsB;AAAEW,wBAAM,EAAG3S,CAAC,CAACf;AAAb,iBAAtC;AACAyT,4BAAY,CAACpT,IAAb,CAAkB0S,UAAlB;AACD;AACF,aALD;AAMA,mBAAOU,YAAP;AACD;;;2CAEgB1B,K,EAAmB;AAAA;;AAAA,uDACfA,KADe;AAAA;;AAAA;AAClC,kEAA0B;AAAA,oBAAf/L,IAAe;AACxBA,oBAAI,CAAC2N,QAAL,GAAgB,CAAhB;AACA,qBAAK5B,KAAL,CAAW1R,IAAX,CAAgB2F,IAAhB;AACD;AAJiC;AAAA;AAAA;AAAA;AAAA;;AAKlC5D,mBAAO,CAACC,GAAR,CAAY,KAAK0P,KAAL,CAAW,CAAX,CAAZ;AACA,gBAAM6B,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAM,CAACE,MAAP,GAAgB,UAACzL,CAAD,EAAO;AACrB,qBAAI,CAAC0L,SAAL,GAAiB1L,CAAC,CAAC2L,MAAF,CAASrD,MAA1B;AACD,aAFD;;AAGAiD,kBAAM,CAACK,aAAP,CAAqBlC,KAAK,CAAC,CAAD,CAA1B;AACA,iBAAKmC,oBAAL,CAA0B,CAA1B;AACD;;;+CAEoBpU,K,EAAe;AAAA;;AAClCqU,sBAAU,CAAC,YAAM;AACf,kBAAIrU,KAAK,KAAK,OAAI,CAACiS,KAAL,CAAW7N,MAAzB,EAAiC;AAC/B;AACD,eAFD,MAEO;AACL,oBAAMkQ,gBAAgB,GAAGC,WAAW,CAAC,YAAM;AACzC,sBAAI,OAAI,CAACtC,KAAL,CAAWjS,KAAX,EAAkB6T,QAAlB,KAA+B,GAAnC,EAAwC;AACtCW,iCAAa,CAACF,gBAAD,CAAb;;AACA,2BAAI,CAACF,oBAAL,CAA0BpU,KAAK,GAAG,CAAlC;AACD,mBAHD,MAGO;AACL,2BAAI,CAACiS,KAAL,CAAWjS,KAAX,EAAkB6T,QAAlB,IAA8B,CAA9B;AACD;AACF,iBAPmC,EAOjC,GAPiC,CAApC;AAQD;AACF,aAbS,EAaP,IAbO,CAAV;AAcD;;;sCAEWY,K,EAAOC,Q,EAAU;AAC3B,gBAAID,KAAK,KAAK,CAAd,EAAiB;AACf,qBAAO,SAAP;AACD;;AACD,gBAAME,CAAC,GAAG,IAAV;AACA,gBAAMC,EAAE,GAAGF,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoBA,QAAQ,IAAI,CAA3C;AACA,gBAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AACA,gBAAMlQ,CAAC,GAAG8K,IAAI,CAACqF,KAAL,CAAWrF,IAAI,CAAClN,GAAL,CAASkS,KAAT,IAAkBhF,IAAI,CAAClN,GAAL,CAASoS,CAAT,CAA7B,CAAV;AACA,mBAAOI,UAAU,CAAC,CAACN,KAAK,GAAGhF,IAAI,CAACuF,GAAL,CAASL,CAAT,EAAYhQ,CAAZ,CAAT,EAAyBsQ,OAAzB,CAAiCL,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAAClQ,CAAD,CAArE;AACD;;;qCAEUsN,K,EAAO;AAChB,gBAAIA,KAAK,CAAC7N,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD;;AAED,gBAAM8Q,YAAY,GAAIjD,KAAK,CAAC,CAAD,CAA3B;AACA,gBAAMkD,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,oBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,YAAxB,EAAsCA,YAAY,CAACnP,IAAnD;AAEA,mBAAO,KAAKgM,YAAL,CAAkBuB,UAAlB,CAA6B6B,QAA7B,EACJG,SADI,EAAP;AAED;;;gDAEkB;AACjB,iBAAKnD,iBAAL,CAAuB9B,IAAvB,CAA4B,IAA5B;AACD;;;8BApHO;AACN,mBAAO,KAAKiC,cAAL,CAAoB7J,QAA3B;AACD;;;;;;;yBA9EUoJ,yB,EAAyB,2H,EAAA,8I,EAAA,wJ,EAAA,0J,EAAA,sJ,EAAA,4I;AAAA,O;;;cAAzBA,yB;AAAyB,6C;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,0kD;AAAA;AAAA;AC5BtC;;AACE;;AAAmC;AAAA,qBAAU,IAAAb,QAAA,EAAV;AAAoB,aAApB;;AACjC;;AACE;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAAoB;;AAAe;;AACrC;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAAoB;;AAAkB;;AACxC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACA;;AAAoB;;AAAO;;AAC7B;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACA;;AAAoB;;AAAK;;AAC3B;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAAoB;;AAAO;;AAC7B;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AACA;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAuB;;AAClC;;AAEF;;AACF;;AACA;;AAAmC;AAAA,qBAAe,IAAAuE,OAAA,QAAf;AAA8B,aAA9B;;AACjC;;AACE;AAAA,qBAAU,IAAAC,UAAA,qBAAV;AAAyC,aAAzC;;AADF;;AAEA;;AAAsB;;AAAsB;;AAC9C;;AACA;;AACE;;AACE;;AACF;;AACA;;AAGA;;AAGF;;AACF;;AACA;;AACE;;AAA6C;AAAA,qBAAS,IAAAlD,cAAA,QAAT;AAA+B,aAA/B;;AAAmD;;AAAK;;AACrG;;AACE;;AAA6C;AAAA,qBAAS,IAAAoB,mBAAA,EAAT;AAA8B,aAA9B;;AAAkD;;AAAM;;AACrG;;AAA+E;;AAAI;;AACrF;;AACA;;AAEF;;AACF;;AACF;;;;;;AAhGQ;;AAAA;;AAEyC;;AAAA;;AAuBvB;;AAAA;;AAYA;;AAAA;;AAmByC;;AAAA;;AACtB;;AAAA;;AAmBnC;;AAAA;;AAEc;;AAAA;;AAGgB;;AAAA,yFAAmB,OAAnB,EAAmB,mDAAnB,EAAmB,aAAnB,EAAmB,mDAAnB;;;;;;;;;wEDtD3B7B,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTrS,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;AAoBpC0T,gBAAM,EAAE,CAAF;kBADL;AACK,WAAE,C;AAGRlB,kBAAQ,EAAE,CAAF;kBADP;AACO,WAAE,C;AAGVC,2BAAiB;kBADhB;AACgB;;;;;;;;;;;;;;;;;;;AEtDnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUasD,a;AAEX,+BAAoBpE,IAApB,EAA8CxQ,WAA9C,EAA+E;AAAA;;AAA3D,eAAAwQ,IAAA,GAAAA,IAAA;AAA0B,eAAAxQ,WAAA,GAAAA,WAAA;AAC7C;;;;0CAEY;AACX,mBAAO,KAAKwQ,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,yBAAP;AACD;;;8CAEmBgE,M,EAAM;AACtB,gBAAMC,OAAO,GAAGD,MAAM,GAAG;AAAEE,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BkE,MAA3B;AAAV,aAAH,GAAmD,EAAzE;AACA,mBAAO,KAAKrE,IAAL,CAAUnF,GAAV,WAAyB,yEAAYwF,MAArC,qBAA6DiE,OAA7D,CAAP;AACH;;;sDAEwB,CACxB;;;uCAEYvC,M,EAAM;AACjB,mBAAO,KAAK/B,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,4BAA6D0B,MAA7D,CAAP;AACD;;;yCAEW;AACV,mBAAO,KAAK/B,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,eAAP;AACD;;;0CAEekC,M,EAAM;AACpB,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAAmC,yEAAYwF,MAA/C,eAAP;AACD;;;yCAEchG,Q,EAAQ;AACrB,mBAAO,KAAK2F,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,gBAAsDhG,QAAtD,CAAP;AACD;;;2CAEgBuH,U,EAAU;AACzB,mBAAO,KAAK5B,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,kBAAwDuB,UAAxD,EAAoE;AACzE6C,6BAAe,EAAE;AADwD,aAApE,CAAP;AAGD;;;kDAEuBC,W,EAAW;AACjC,mBAAO,KAAK1E,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,0BAAgEqE,WAAhE,EAA6E;AAClFD,6BAAe,EAAE;AADiE,aAA7E,CAAP;AAGD;;;+CAEoBlC,M,EAAM;AACzB,gBAAM+B,OAAO,GAAG/B,MAAM,GACpB;AAAEgC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BoC,MAA3B;AAAV,aADoB,GAC4B,EADlD;AAEA,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,0BAA+D;AACpEoE,6BAAe,EAAE,IADmD;AAEpEF,oBAAM,EAAED,OAAO,CAACC;AAFoD,aAA/D,CAAP;AAID;;;8CAEmBhC,M,EAAM;AACxB,gBAAM+B,OAAO,GAAG/B,MAAM,GACpB;AAAEgC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BoC,MAA3B;AAAV,aADoB,GAC4B,EADlD;AAEA,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,kBAAuDiE,OAAvD,CAAP;AACD;;;gDAEqB/B,M,EAAM;AAC1B,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,oCAAyE;AAC9EoE,6BAAe,EAAE,IAD6D;AAE9EF,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BoC,MAA3B;AAFsE,aAAzE,CAAP;AAID;;;mDAEwBX,U,EAAU;AACjC,mBAAO,KAAK5B,IAAL,CAAUI,GAAV,WAAsB,yEAAYC,MAAlC,0BAA+DuB,UAA/D,EAA2E;AAChF6C,6BAAe,EAAE;AAD+D,aAA3E,CAAP;AAGD;;;qDAE0BlC,M,EAAM;AAC/B,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,kCAAuE;AAC5EoE,6BAAe,EAAE,IAD2D;AAE5EF,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BoC,MAA3B;AAFoE,aAAvE,CAAP;AAID;;;;;;;yBA9EU6B,a,EAAa,uH,EAAA,+H;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACV/P,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;;;ACV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACmDkB;;AAAsC;;AAAkB;;;;;;AAD1D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAQH;;AAAyC;;AAAyB;;;;;;AADpE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAkBH;;AAA8C;;AAAmB;;;;;;AADnE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAkBP;;AAAyC;;AAAgB;;;;;;AAD3D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AASL;;AACE;;AACF;;;;;;AAFqD;;AACnD;;AAAA;;;;;;AAIF;;AAAyC;;AAAiB;;;;;;AAD5D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAWL;;AAAwC;;AAAmB;;;;;;AAD7D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AAF0D;;AACxD;;AAAA;;;;;;AAIF;;AAAwC;;AAAmB;;;;;;AAD7D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AA0BH;;AACE;;AACF;;;;;;AAFuD;;AACrD;;AAAA;;;;;;AAUA;;AACE;;AACF;;;;;;AAF6C;;AAC3C;;AAAA;;;;;;AAYJ;;AACE;;AACF;;;;;;AAFqD;;AACnD;;AAAA;;;;;;AAUF;;AACE;;AACF;;;;;;AAFyC;;AACvC;;AAAA;;;;;;AA3CZ;;AACE;;AACE;;AACE;;AACE;;AAAwB;;AAAmB;;AAC3C;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAiB;;AACxC;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACJ;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAuB;;AAAe;;AACtC;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAW;;AACrC;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACF;;AACF;;AACF;;AACF;;;;;;AA1CsB;;AAAA;;AAWE;;AAAA;;AAaF;;AAAA;;AAWA;;AAAA;;;;;;AAeZ;;AACE;;AACF;;;;;;AAF2D;;AACzD;;AAAA;;;;;;AAUF;;AACE;;AACF;;;;;;AAFoD;;AAClD;;AAAA;;;;;;AAYF;;AACE;;AACF;;;;;;AAF4C;;AAC1C;;AAAA;;;;;;AAPV;;AACE;;AACE;;AACE;;AAA0B;;AAAS;;AACnC;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA+B;;AAAqB;;AACpD;;AACF;;AACF;;AACF;;;;;;AAZoB;;AAAA;;;;;;AA/BtB;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAAyB;;AACrD;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA+B;;AAAY;;AAC3C;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACF;;AACF;;AACF;;AACA;;AAmBF;;;;;;AArCsB;;AAAA;;AAWA;;AAAA;;AAOE;;AAAA;;;;;;AA6Bd;;AAA2E;;AAC3E;;;;;;AADmD;;AAAwB;;AAAA;;;;;;AAJ7E;;AACF;;AACE;;AAA+B;;AAA+B;;AAC9D;;AACE;;AAEF;;AACF;;AACF;;;;;;AAJkB;;AAAA;;;;;;AAKlB;;;;;;AAZJ;;AACI;;AACE;;AACE;;AASJ;;AAGA;;AACA;;AAEF;;AACE;;AAAW;;AAAoC;;AAC/C;;AACE;;AAA+B;;AAAG;;AAClC;;AAAgC;;AAAE;;AACpC;;AACF;;AACF;;;;;;AAvBY;;AAAA;;AACE;;AAAA;;AASJ;;AAAA;;;;;;AAcV;;AACE;;AACE;;AACE;;AAA0B;;AAAkD;;AAC5E;;AACF;;AACF;;AACF;;;;;;AAGJ;;AAAyE;;AAAa;;;;;;;;AAkB1E;;AAA0D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;;;AAAuB;;;;;;AADjB;;AACN;;AAAA;;;;;;;;AAhBnC;;AACE;;AACE;;AACE;;AAAW;;AAAwB;;AACnC;;AACE;;AAAiC;;AAAM;;AACvC;;AAAkC;;AAAO;;AACzC;;AAA+B;;AAAI;;AACrC;;AACF;;AACA;;AACE;;AAAW;;AAAiC;;AAC5C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAC7F;;AACA;;AAEF;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA0B;;AAAkC;;AAC5D;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAwB;;AAA8B;;AACtD;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAsB;;AAAW;;AACjC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAQ;;AAClC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAmB;;AAC1C;;AACE;;AAA6C;;AAAe;;AAC5D;;AAAgC;;AAAW;;AAC3C;;AAA0B;;AAAK;;AACjC;;AACF;;AACA;;AACE;;AAA8F;AAAA;;AAAA;;AAAA;;AAAA,kDAAiC,CAAjC;AAAkC,WAAlC;;AAA9F;;AACA;;AAAgE;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAqB,WAArB;;AAAuB;;AAAM;;AAC7F;;AAAkE;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAqB,WAArB;;AAAuB;;AAAU;;AAAW;;AAAW;;AAG3H;;AACF;;AAEF;;AACA;;AACE;;AACE;;AAAsB;;AAAkB;;AACxC;;AACF;;AACF;;AACF;;AACF;;;;;;AAtEyC;;AAAA;;AAG/B;;AAAA;;;;;;;;;;;;;;;;UDlPTsQ,gB;AA8KX,kCAAoBzP,WAApB,EACoB3F,WADpB,EAEoBoR,iBAFpB,EAGoBD,YAHpB,EAImBlR,WAJnB,EAKmBoV,MALnB,EAMmB9L,YANnB,EAM+C;AAAA;;AAN3B,eAAA5D,WAAA,GAAAA,WAAA;AACA,eAAA3F,WAAA,GAAAA,WAAA;AACA,eAAAoR,iBAAA,GAAAA,iBAAA;AACA,eAAAD,YAAA,GAAAA,YAAA;AACD,eAAAlR,WAAA,GAAAA,WAAA;AACA,eAAAoV,MAAA,GAAAA,MAAA;AACA,eAAA9L,YAAA,GAAAA,YAAA;AA9KZ,eAAAxD,SAAA,GAAY,KAAZ;AAEP,eAAAuP,cAAA,GAAiB,KAAjB;AAMA,eAAA5L,IAAA,GAAO,CAAC;AACJC,eAAG,EAAE,QADD;AAEJC,oBAAQ,EAAE;AAFN,WAAD,EAIL;AACED,eAAG,EAAE,SADP;AAEEC,oBAAQ,EAAE;AAFZ,WAJK,EAQL;AACED,eAAG,EAAE,WADP;AAEEC,oBAAQ,EAAE;AAFZ,WARK,EAYL;AACED,eAAG,EAAE,UADP;AAEEC,oBAAQ,EAAE;AAFZ,WAZK,EAgBL;AACED,eAAG,EAAE,QADP;AAEEC,oBAAQ,EAAE;AAFZ,WAhBK,EAoBL;AACED,eAAG,EAAE,UADP;AAEEC,oBAAQ,EAAE;AAFZ,WApBK,EAwBL;AACED,eAAG,EAAE,QADP;AAEEC,oBAAQ,EAAE;AAFZ,WAxBK,CAAP;AA6BA,eAAAE,UAAA,GAAa,KAAb;AAEA,eAAAyL,cAAA,GAAiB,CAAC;AACdjW,cAAE,EAAE,CADU;AAEduH,iBAAK,EAAE;AAFO,WAAD,EAIf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAJe,EAQf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WARe,EAYf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAZe,EAgBf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAhBe,EAoBf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WApBe,EAwBf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAxBe,EA4Bf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WA5Be,EAgCf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAhCe,EAoCf;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WApCe,CAAjB;AA0CA,eAAA2O,YAAA,GAAe,CAAC;AACZlW,cAAE,EAAE,CADQ;AAEZuH,iBAAK,EAAE,OAFK;AAGZ4O,yBAAa,EAAE,CAAC;AACZnW,gBAAE,EAAE,CADQ;AAEZuH,mBAAK,EAAE;AAFK,aAAD,EAIb;AACEvH,gBAAE,EAAE,CADN;AAEEuH,mBAAK,EAAE;AAFT,aAJa,EAQb;AACEvH,gBAAE,EAAE,CADN;AAEEuH,mBAAK,EAAE;AAFT,aARa;AAHH,WAAD,EAiBb;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE,SAFT;AAGE4O,yBAAa,EAAE,CAAC;AACZnW,gBAAE,EAAE,CADQ;AAEZuH,mBAAK,EAAE;AAFK,aAAD,EAIb;AACEvH,gBAAE,EAAE,CADN;AAEEuH,mBAAK,EAAE;AAFT,aAJa,EAQb;AACEvH,gBAAE,EAAE,CADN;AAEEuH,mBAAK,EAAE;AAFT,aARa;AAHjB,WAjBa,EAkCb;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE,QAFT;AAGE4O,yBAAa,EAAE,CAAC;AACZnW,gBAAE,EAAE,CADQ;AAEZuH,mBAAK,EAAE;AAFK,aAAD,EAIb;AACEvH,gBAAE,EAAE,CADN;AAEEuH,mBAAK,EAAE;AAFT,aAJa,EAQb;AACEvH,gBAAE,EAAE,CADN;AAEEuH,mBAAK,EAAE;AAFT,aARa;AAHjB,WAlCa,CAAf;AAqDA,eAAA6O,eAAA,GAAkB,CAAC;AACfpW,cAAE,EAAE,CADW;AAEfuH,iBAAK,EAAE;AAFQ,WAAD,EAIhB;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAJgB,EAQhB;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WARgB,CAAlB;AAcA,eAAA8O,SAAA,GAAY,CAAC;AACTrW,cAAE,EAAE,CADK;AAETuH,iBAAK,EAAE;AAFE,WAAD,EAIV;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAJU,EAQV;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WARU,CAAZ;AAiBA,eAAAwK,KAAA,GAAQ,EAAR;AASiD;;;;qCAEzC;AAAA;;AACN,iBAAKuE,QAAL,GAAgB,KAAKjQ,WAAL,CAAiBY,KAAjB,CAAuB;AACrCsP,uBAAS,EAAE,CAAC;AACVhP,qBAAK,EAAE,EADG;AAEViP,wBAAQ,EAAE;AAFA,eAAD,EAGR,0DAAWrP,QAHH,CAD0B;AAKrCsP,sBAAQ,EAAE,CAAC;AACTlP,qBAAK,EAAE,EADE;AAETiP,wBAAQ,EAAE;AAFD,eAAD,EAGP,0DAAWrP,QAHJ,CAL2B;AASrCuP,yBAAW,EAAE,CAAC;AACZnP,qBAAK,EAAE,EADK;AAEZiP,wBAAQ,EAAE;AAFE,eAAD,EAGV,0DAAWrP,QAHD,CATwB;AAarCwP,0BAAY,EAAE,CAAC;AACbpP,qBAAK,EAAE,EADM;AAEbiP,wBAAQ,EAAE;AAFG,eAAD,EAGX,0DAAWrP,QAHA,CAbuB;AAiBrCC,sBAAQ,EAAE,CAAC;AACTG,qBAAK,EAAE,EADE;AAETiP,wBAAQ,EAAE;AAFD,eAAD,EAGP,0DAAWrP,QAHJ,CAjB2B;AAqBrCyP,oBAAM,EAAE,CAAC;AACPrP,qBAAK,EAAE,EADA;AAEPiP,wBAAQ,EAAE;AAFH,eAAD,EAGL,0DAAWrP,QAHN,CArB6B;AAyBrC0P,uBAAS,EAAE,CAAC;AACVtP,qBAAK,EAAE,EADG;AAEViP,wBAAQ,EAAE;AAFA,eAAD,EAGR,0DAAWrP,QAHH,CAzB0B;AA6BrC2P,wBAAU,EAAE,0BA7ByB;AA8BrCC,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAW5P,QAAhB,CA9BqB;AA+BrC6P,4BAAc,EAAE,CAAC,EAAD,CA/BqB;AAgCrCC,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW9P,QAAhB,CAhC0B;AAiCrC+P,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW/P,QAAhB,CAjC0B;AAkCrCgQ,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWhQ,QAAhB,CAlC2B;AAmCrCiQ,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWjQ,QAAhB,CAnC2B;AAoCrCkQ,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWlQ,QAAhB,CApCqB;AAqCrCmQ,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWnQ,QAAhB,CArC6B;AAsCrC9D,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW8D,QAAhB,CAtC4B;AAuCrCoQ,mBAAK,EAAE,CAAC,EAAD,CAvC8B;AAwCrCC,sBAAQ,EAAE,CAAC,EAAD,CAxC2B;AAyCrCC,2BAAa,EAAE,CAAC,EAAD,CAzCsB;AA0CrCC,uBAAS,EAAE,CAAC,EAAD,CA1C0B;AA2CrCC,sBAAQ,EAAE,CAAC,EAAD,CA3C2B;AA4CrCC,6BAAe,EAAE,CAAC,EAAD,CA5CoB;AA6CrCC,0BAAY,EAAE,CAAC,EAAD,CA7CuB;AA8CrCC,sBAAQ,EAAE,CAAC,EAAD,CA9C2B;AA+CrCC,oBAAM,EAAE,CAAC,EAAD,CA/C6B;AAgDrCC,kBAAI,EAAE,CAAC,EAAD,CAhD+B;AAiDrCC,sBAAQ,EAAE,CAAC,EAAD,CAjD2B;AAkDrCC,mBAAK,EAAE,CAAC,EAAD,CAlD8B;AAmDrCC,sBAAQ,EAAE,CAAC,EAAD,CAnD2B;AAoDrCC,kBAAI,EAAE,CAAC,EAAD,CApD+B;AAqDrCC,uBAAS,EAAE,CAAC,EAAD,CArD0B;AAsDrCC,wBAAU,EAAE,CAAC,EAAD,CAtDyB;AAuDrCC,2BAAa,EAAE,CAAC,EAAD,CAvDsB;AAwDrCC,sBAAQ,EAAE,CAAC,EAAD,CAxD2B;AAyDrCC,2BAAa,EAAE,CAAC,EAAD;AAzDsB,aAAvB,CAAhB;AA2DA,iBAAKC,OAAL;AACA,iBAAK5G,iBAAL,CAAuBnF,iBAAvB,GACG7L,SADH,CACa,UAAAC,CAAC,EAAI;AACd,qBAAI,CAACiJ,UAAL,GAAkBjJ,CAAlB;AACA,qBAAI,CAACoJ,MAAL,GAAc,OAAI,CAACH,UAAL,CAAgB0I,MAA9B;AACA,qBAAI,CAAC7F,QAAL,GAAgB9L,CAAC,CAAC8L,QAAF,CAAWsB,MAAX,CAAkB,UAACwE,KAAD,EAAQlO,CAAR,EAAWmO,GAAX;AAAA,uBAAmBA,GAAG,CAACC,SAAJ,CAAc,UAAAxC,CAAC;AAAA,yBAAIA,CAAC,CAACxK,IAAF,KAAW8M,KAAK,CAAC9M,IAArB;AAAA,iBAAf,MAA8CpB,CAAjE;AAAA,eAAlB,CAAhB;AACD,aALH;AAMD;;;oCAES;AAAA;;AACR,gBAAMkU,WAAW,GAAS,KAAKhY,WAAL,CAAiBmG,SAA3C;AACA,iBAAKpG,WAAL,CAAiBsL,GAAjB,CAAqB2M,WAAW,CAAC3Y,EAAjC,EAAqCc,SAArC,CAA+C,UAAAP,IAAI,EAAI;AACrD,qBAAI,CAACM,IAAL,GAAYN,IAAZ;;AACA,qBAAI,CAACqY,eAAL,CAAqBrY,IAArB;AACD,aAHD;AAIA,mBAAOoY,WAAP;AACD;;;mCAMQE,Q,EAAU;AACjB,gBAAMzH,IAAI,GAAG,KAAK9J,CAAL,CAAO6Q,QAAP,CAAgB5Q,KAA7B;AACA,gBAAMqM,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,kBAAM,CAACE,MAAP,GAAiB,YAAM;AACrB+E,sBAAQ,CAACjF,MAAM,CAACjD,MAAR,CAAR;AACD,aAFD;;AAIAiD,kBAAM,CAACK,aAAP,CAAqB7C,IAArB;AACD;;;qCAEU;AAAA;;AACT,iBAAK3K,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK6P,QAAL,CAAcvO,KAAlB,EAAyB;AACvB,kBAAM+Q,UAAU,GAAG;AACjB9Y,kBAAE,EAAE,KAAK+Y,OAAL,CAAa/Y,EADA;AAEjBgZ,yBAAS,EAAE,KAAK1R,CAAL,CAAOiP,SAAP,CAAiBhP,KAFX;AAGjB0R,wBAAQ,EAAE,KAAK3R,CAAL,CAAOmP,QAAP,CAAgBlP,KAHT;AAIjBU,qBAAK,EAAE,KAAKX,CAAL,CAAOoP,WAAP,CAAmBnP,KAJT;AAKjB2R,qBAAK,EAAE,KAAK5R,CAAL,CAAOqP,YAAP,CAAoBpP,KALV;AAMjBuP,0BAAU,EAAE,KAAKxP,CAAL,CAAOwP,UAAP,CAAkBvP,KANb;AAOjB4R,uBAAO,EAAE;AACPC,6BAAW,EAAE,GADN;AAEPC,2BAAS,EAAE,KAAKN,OAAL,CAAaI,OAAb,GAAuB,KAAKJ,OAAL,CAAaI,OAAb,CAAqBE,SAA5C,GAAwD,CAF5D;AAGPC,0BAAQ,EAAE,KAAKhS,CAAL,CAAOyP,cAAP,CAAsBxP,KAHzB;AAIPgS,0BAAQ,EAAE,KAAKjS,CAAL,CAAO0P,cAAP,CAAsBzP,KAJzB;AAKPiS,sBAAI,EAAE,KAAKlS,CAAL,CAAO2P,SAAP,CAAiB1P,KALhB;AAMPkS,yBAAO,EAAE,KAAKnS,CAAL,CAAO6P,QAAP,CAAgB5P,KANlB;AAOPmS,yBAAO,EAAE,KAAKpS,CAAL,CAAO4P,SAAP,CAAiB3P,KAPnB;AAQPvH,oBAAE,EAAE,KAAK+Y,OAAL,CAAa/Y,EARV;AASP2Z,2BAAS,EAAE;AATJ,iBAPQ;AAkBjBC,8BAAc,EAAE;AACd5Z,oBAAE,EAAE,KAAK+Y,OAAL,CAAaa,cAAb,GAA8B,KAAKb,OAAL,CAAa/Y,EAA3C,GAAgD,CADtC;AAEd8W,4BAAU,EAAE,KAAKxP,CAAL,CAAOwP,UAAP,CAAkBvP,KAAlB,gCAAuD,IAAvD,GAA8D,KAAKD,CAAL,CAAOwP,UAAP,CAAkBvP,KAF9E;AAGdsS,qBAAG,EAAE,KAAKvS,CAAL,CAAOsP,MAAP,CAAcrP,KAHL;AAIduS,6BAAW,EAAE,KAAKxS,CAAL,CAAOuP,SAAP,CAAiBtP,KAJhB;AAKdwS,gCAAc,EAAE,IAAIna,IAAJ,EALF;AAMdoa,4BAAU,EAAE,KAAK1S,CAAL,CAAOgR,UAAP,CAAkB/Q,KANhB;AAOd0S,+BAAa,EAAE,KAAK3S,CAAL,CAAOiR,aAAP,CAAqBhR,KAPtB;AAQd2S,0BAAQ,EAAE,KAAK5S,CAAL,CAAOkR,QAAP,CAAgBjR,KARZ;AASdkR,+BAAa,EAAE,KAAKnR,CAAL,CAAOmR,aAAP,CAAqBlR,KATtB;AAUdgQ,uBAAK,EAAE,KAAKjQ,CAAL,CAAOiQ,KAAP,CAAahQ,KAAb,CAAmB6G,IAAnB,CAAwB,GAAxB,CAVO;AAWd+L,+BAAa,EAAG,KAAK7S,CAAL,CAAO+P,cAAP,CAAsB9P,KAAtB,KAAgC+G,SAAhC,IAA6C,KAAKhH,CAAL,CAAO+P,cAAP,CAAsB9P,KAAtB,KAAgC,IAA9E,GAC+B,CAD/B,GACmCqC,MAAM,CAACmE,QAAP,CAAgB,KAAKzG,CAAL,CAAO+P,cAAP,CAAsB9P,KAAtC,EAA6C,EAA7C,CAZpC;AAadsF,0BAAQ,EAAE,KAAKvF,CAAL,CAAOjE,OAAP,CAAekE,KAAf,CAAqB6G,IAArB,CAA0B,GAA1B,CAbI;AAcdrB,uBAAK,EAAE,KAAKzF,CAAL,CAAOkQ,QAAP,CAAgBjQ,KAAhB,CAAsB6G,IAAtB,CAA2B,GAA3B,CAdO;AAedgM,+BAAa,EAAE,KAAK9S,CAAL,CAAOoQ,SAAP,CAAiBnQ,KAAjB,KAA2B+G,SAA3B,GAAuC,KAAvC,GAA+C,KAAKhH,CAAL,CAAOoQ,SAAP,CAAiBnQ,KAfjE;AAgBd8S,yCAAuB,EAAE,KAAK/S,CAAL,CAAOqQ,QAAP,CAAgBpQ,KAhB3B;AAiBd+S,kCAAgB,EAAE,KAAKhT,CAAL,CAAOmQ,aAAP,CAAqBlQ,KAjBzB;AAkBdgT,4BAAU,EAAE,KAAKjT,CAAL,CAAOsQ,eAAP,CAAuBrQ,KAlBrB;AAmBdiT,+BAAa,EAAE,KAAKpQ,IAAL,CAAU+D,MAAV,CAAiB,UAAApN,CAAC;AAAA,2BAAIA,CAAC,CAACuJ,QAAF,KAAe,IAAnB;AAAA,mBAAlB,EAA2CrB,GAA3C,CAA+C,UAAAlI,CAAC;AAAA,2BAAIA,CAAC,CAACsJ,GAAN;AAAA,mBAAhD,EAA2D+D,IAA3D,CAAgE,GAAhE,CAnBD;AAoBdqM,mCAAiB,EAAE,KAAKnT,CAAL,CAAOwQ,QAAP,CAAgBvQ,KAAhB,KAA0B+G,SAA1B,IAAuC,KAAKhH,CAAL,CAAOwQ,QAAP,CAAgBvQ,KAAhB,KAA0B,IAAjE,GACuB,CADvB,GAC2BqC,MAAM,CAACmE,QAAP,CAAgB,KAAKzG,CAAL,CAAOwQ,QAAP,CAAgBvQ,KAAhC,EAAuC,EAAvC,CArBhC;AAsBdmT,mCAAiB,EAAE,KAAKpT,CAAL,CAAOyQ,MAAP,CAAcxQ,KAtBnB;AAuBdoT,4BAAU,EAAE,KAAKrT,CAAL,CAAO0Q,IAAP,CAAYzQ,KAAZ,KAAsB+G,SAAtB,IAAmC,KAAKhH,CAAL,CAAO0Q,IAAP,CAAYzQ,KAAZ,KAAsB,IAAzD,GAAgE,CAAhE,GAAqEqC,MAAM,CAACmE,QAAP,CAAgB,KAAKzG,CAAL,CAAO0Q,IAAP,CAAYzQ,KAA5B,EAAmC,EAAnC,CAvBnE;AAwBd0Q,0BAAQ,EAAE,KAAK3Q,CAAL,CAAO2Q,QAAP,CAAgB1Q,KAxBZ;AAyBdqT,wBAAM,EAAE,KAAKtT,CAAL,CAAO4Q,KAAP,CAAa3Q,KAzBP;AA0BdsT,uBAAK,EAAE,KAAKvT,CAAL,CAAO6Q,QAAP,CAAgB5Q,KA1BT;AA2BduT,0BAAQ,EAAE,KAAKxT,CAAL,CAAO8Q,IAAP,CAAY7Q,KA3BR;AA4BdwT,2BAAS,EAAE,KAAKzT,CAAL,CAAO+Q,SAAP,CAAiB9Q,KA5Bd;AA6Bd+P,wBAAM,EAAE,KAAKhQ,CAAL,CAAOgQ,MAAP,CAAc/P,KAAd,CAAoB6G,IAApB,CAAyB,GAAzB;AA7BM;AAlBC,eAAnB;AAkDA,mBAAK1N,WAAL,CAAiBsa,iBAAjB,CAAmClC,UAAnC,EACGhY,SADH,CACa,UAACC,CAAD,EAAa;AACpB,oBAAIA,CAAC,MAAM,SAAQuN,SAAd,CAAL,EAA+B;AAC7B,yBAAI,CAACrE,YAAL,CAAkBsE,OAAlB,CAA0B,6BAA1B;AACD,iBAFD,MAEO;AACL,yBAAI,CAACtE,YAAL,CAAkB1H,KAAlB,CAAwB,wBAAxB;AACD;AACF,eAPL,EAQI,UAACA,KAAD;AAAA,uBAAW,OAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwBA,KAAxB,CAAX;AAAA,eARJ;AASD;AACF;;;uCAEY6O,I,EAAM,CAElB;;;0CAEevQ,I,EAAY;;;AAC1B,iBAAKkY,OAAL,GAAelY,IAAf;AACA,gBAAMiE,SAAS,GAAG,CAAH,WAAGjE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAT,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEY,aAAtB,MAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAE1K,KAAF,CAAQ,GAAR,CAArD;AACA,iBAAK1F,IAAL,CAAUnE,OAAV,CAAkB,UAAAgV,CAAC,EAAI;AACrB,kBAAInW,SAAS,SAAT,IAAAA,SAAS,WAAT,GAAS,MAAT,GAAAA,SAAS,CAAGoW,IAAZ,CAAiB,UAAApO,CAAC;AAAA,uBAAIA,CAAC,KAAKmO,CAAC,CAAC5Q,GAAZ;AAAA,eAAlB,CAAJ,EAAwC;AACtC4Q,iBAAC,CAAC3Q,QAAF,GAAa,IAAb;AACD;AACF,aAJD;AAKA,iBAAKgM,QAAL,CAAc6E,UAAd,CAAyB;AACvB5E,uBAAS,EAAE1V,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEmY,SADM;AAEvBvC,sBAAQ,EAAE5V,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEoY,QAFO;AAGvBvC,yBAAW,EAAE7V,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEoH,KAHI;AAIvB0O,0BAAY,EAAE9V,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEqY,KAJG;AAKvB9R,sBAAQ,EAAE,IALa;AAMvBwP,oBAAM,EAAE,CAAF,KAAE/V,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,GANP;AAOvBhD,uBAAS,EAAE,OAAAhW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEE,WAAtB,IAAoC,mEAAW,CAAD,KAACjZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEE,WAAjC,EAA8C,YAA9C,EAA4D,OAA5D,CAApC,GAA2G,IAP/F;AAQvBhD,wBAAU,EAAE,OAAAjW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAG9C,UAAvB,MAAsC,IAAtC,8BAAwE,CAAD,KAACjW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE9C,UARnF;AASvBC,4BAAc,EAAE,CAAF,KAAElW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEsY,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEG,QATR;AAUvBtC,4BAAc,EAAE,CAAF,KAAEnW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEsY,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEI,QAVR;AAWvBtC,uBAAS,EAAE,CAAF,KAAEpW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEsY,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEK,IAXH;AAYvBtC,uBAAS,EAAE,CAAF,KAAErW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEsY,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEO,OAZH;AAavBvC,sBAAQ,EAAE,CAAF,KAAEtW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEsY,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEM,OAbF;AAcvBrC,sBAAQ,EAAE,CAAF,KAAEvW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEsY,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEQ,SAdF;AAevBtC,4BAAc,EAAE,CAAF,KAAExW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEO,aAAF,CAAgBiB,QAAhB,EAfb;AAgBvB9D,oBAAM,EAAE,CAAF,KAAEzW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEtC,MAAF,CAASxH,KAAT,CAAe,GAAf,CAhBL;AAiBvBzM,qBAAO,EAAE,CAAF,KAAExC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE/M,QAAF,CAAWiD,KAAX,CAAiB,GAAjB,CAjBN;AAkBvByH,mBAAK,EAAE,CAAF,KAAE1W,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAErC,KAAF,CAAQzH,KAAR,CAAc,GAAd,CAlBJ;AAmBvB0H,sBAAQ,EAAE,CAAF,KAAE3W,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE7M,KAAF,CAAQ+C,KAAR,CAAc,GAAd,EAAmB7G,GAAnB,CAAuB,UAAAlI,CAAC;AAAA,uBAAI6I,MAAM,CAACmE,QAAP,CAAgBhN,CAAhB,EAAmB,EAAnB,CAAJ;AAAA,eAAxB,CAnBP;AAoBvB0W,2BAAa,EAAE,CAAF,KAAE5W,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEU,gBApBd;AAqBvB5C,uBAAS,EAAE,CAAC,CAAD,KAAC7W,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEQ,aAAvB,IAAwC,MAAxC,GAAiD,OArBrC;AAsBvBzC,sBAAQ,EAAE,CAAF,KAAE9W,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAES,uBAtBT;AAuBvBzC,6BAAe,EAAE,CAAF,KAAE/W,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEW,UAvBhB;AAwBvB1C,0BAAY,EAAE,CAAF,KAAEhX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEY,aAxBb;AAyBvB1C,sBAAQ,EAAE,CAAF,KAAEjX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEa,iBAzBT;AA0BvB1C,oBAAM,EAAE,CAAF,KAAElX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEc,iBA1BP;AA2BvB1C,kBAAI,EAAE,CAAF,KAAEnX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEe,UA3BL;AA4BvB1C,sBAAQ,EAAE,CAAF,KAAEpX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE3B,QA5BT;AA6BvBC,mBAAK,EAAE,CAAF,KAAErX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEgB,MA7BN;AA8BvBxC,kBAAI,EAAE,CAAF,KAAEvX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEkB,QA9BL;AA+BvBzC,uBAAS,EAAE,CAAF,KAAExX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEmB,SA/BV;AAgCvBvC,sBAAQ,EAAE,CAAF,KAAE3X,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEM,QAhCT;AAiCvBzB,2BAAa,EAAE,CAAF,KAAE5X,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEnB,aAjCd;AAkCvBH,wBAAU,EAAE,CAAF,KAAEzX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEI,UAlCX;AAmCvBzB,2BAAa,EAAE,CAAF,KAAE1X,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+Y,cAAN,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEK;AAnCd,aAAzB;AAqCD;;;4CAEiB7I,I,EAAM,CAAE;;;qCAEfW,K,EAAOsJ,I,EAAM;AAAA;;AACtB,gBAAItJ,KAAK,CAAC7N,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD;;AAED,gBAAM8Q,YAAY,GAAGjD,KAAK,CAAC,CAAD,CAA1B;AACA,gBAAMkD,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,oBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,YAAxB,EAAsCA,YAAY,CAACnP,IAAnD;AAEA,gBAAMwN,QAAQ,GAAG,KAAKxB,YAAL,CAAkBuB,UAAlB,CAA6B6B,QAA7B,EACdnU,SADc,CACJ,UAAAsC,KAAK,EAAI;AAClB,kBAAIiY,IAAI,KAAK,CAAb,EAAgB;AACd,uBAAI,CAACC,YAAL,GAAoBlY,KAAK,CAACiQ,QAA1B;;AACA,uBAAI,CAACiD,QAAL,CAActK,GAAd,CAAkB,YAAlB,EAAgCuP,QAAhC,CAAyC,OAAI,CAACD,YAA9C;AACD,eAHD,MAGO;AACL,uBAAI,CAACE,aAAL,GAAqBpY,KAAK,CAACiQ,QAA3B;;AACA,uBAAI,CAACiD,QAAL,CAActK,GAAd,CAAkB,UAAlB,EAA8BuP,QAA9B,CAAuC,OAAI,CAACC,aAA5C;AACD;AACF,aATc,CAAjB;AAUD;;;oCAES;AACR,gBAAMC,SAAS,GAAG,KAAKA,SAAL,CAAeC,aAAjC;;AACAD,qBAAS,CAACE,QAAV,GAAqB,YAAM,CAAE,CAA7B;;AACAF,qBAAS,CAACG,KAAV;AACD;;;qCAEUC,O,EAASxR,G,EAAK;AACvBA,eAAG,CAACC,QAAJ,GAAeuR,OAAf;AACA,iBAAKrR,UAAL,GAAkB,KAAKJ,IAAL,CAAU+D,MAAV,CAAiB,UAAAkC,CAAC;AAAA,qBAAIA,CAAC,CAAC/F,QAAN;AAAA,aAAlB,EAAkCpG,MAAlC,GAA2C,CAA3C,GAA+C,KAA/C,GAAuD,KAAKsG,UAA9E;AACD;;;oCAESsR,S,EAAoB;AAC5B,iBAAKtR,UAAL,GAAkBsR,SAAlB;;AACA,gBAAI,KAAK1R,IAAL,IAAa,IAAjB,EAAuB;AACrB;AACD;;AACD,iBAAKA,IAAL,CAAUnE,OAAV,CAAkB,UAAAoK,CAAC,EAAI;AACrB,kBAAIyL,SAAS,KAAK,IAAlB,EAAwB;AACtBzL,iBAAC,CAAC/F,QAAF,GAAa,IAAb;AACD;AACF,aAJD;AAKD;;;uCAEY;AAAA;;AACX,gBAAMyR,SAAS,GAAG,KAAKhG,MAAL,CAAY1Q,IAAZ,CAAiB,0FAAjB,EAAwC;AACxD2W,mBAAK,EAAE;AADiD,aAAxC,CAAlB;AAIAD,qBAAS,CAACE,WAAV,GAAwBnb,SAAxB,CAAkC,UAAA6P,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKrC,SAAlC,EAA6C;AAC3C,uBAAI,CAACgI,QAAL,CAActK,GAAd,CAAkB,YAAlB,EAAgCuP,QAAhC,CAAyC5K,MAAM,CAACuL,KAAhD;;AACA,uBAAI,CAAC9I,UAAL,CAAgBzC,MAAM,CAACS,IAAvB,EAA6B,CAA7B;AACD;AACF,aALD;AAMD;;;2CAEgB;AAAA;;;;AACf,mBAAO,CAAP,KAAO,KAAK8E,YAAL,CAAkB/H,MAAlB,CAAyB,UAAApN,CAAC;AAAA,qBAAIA,CAAC,CAACwG,KAAF,KAAY,OAAI,CAAC+O,QAAL,CAActK,GAAd,CAAkB,YAAlB,EAAgCzE,KAAhD;AAAA,aAA1B,EAAiF,CAAjF,OAAmF,IAAnF,IAAmF,aAAnF,GAAmF,MAAnF,GAAmF,GAAG4O,aAA7F;AACD;;;kCAEO;AACN,iBAAKuC,OAAL;AACD;;;8BApMO;AACN,mBAAO,KAAKpC,QAAL,CAAc/N,QAArB;AACD;;;;;;;yBAtQUuN,gB,EAAgB,2H,EAAA,0I,EAAA,sJ,EAAA,0J,EAAA,wJ,EAAA,mI,EAAA,4I;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA;AAAA;;;;;;;;;;;;;;;AChE7B;;AACE;;AACE;;AAA6B;AAAA,qBAAY,IAAAhF,QAAA,EAAZ;AAAsB,aAAtB;;AAC3B;;AACE;;AAAM;;AAAU;;AAClB;;AACA;;AACE;;AACE;;AACE;;AAAiE;AAAA,qBAAS,IAAAqL,UAAA,EAAT;AAAqB,aAArB;;AAAjE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACE;;AAA4B;;AAAI;;AAChC;;AAA4B;;AAAM;;AACpC;;AACA;;AAGF;;AACA;;AACE;;AACE;;AAA2B;;AAAa;;AACxC;;AACA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAAwB;;AAAO;;AAC/B;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAgC;;AAAc;;AAC9C;;AAEE;;AAGJ;;AACF;;AACA;;AACE;;AACE;;AAAgC;;AAAqB;;AACrD;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA2B;;AAAI;;AAC/B;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAK;;AAChC;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA0B;;AAAO;;AACjC;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAA0B;;AAAW;;AACrC;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAAwB;;AAAuB;;AAC/C;;AACE;;AACE;;AAAW;;AAAuB;;AAClC;;AACE;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAY;;AAC1C;;AACF;;AACA;;AACE;;AACA;;AAkDA;;AA6CA;;AAEA;;AA0BA;;AAQF;;AACF;;AACA;;AACA;;AACE;;AACE;;AAoFA;;AACE;;AACE;;AACE;;AAA2B;;AACrB;;AACN;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAA4C;AAAA,qBAAS,IAAAjM,KAAA,EAAT;AAAgB,aAAhB;;AAA8B;;AAAK;;AAC/E;;AACE;;AAAyD;;AAAM;;AAC/D;;AAAmE;;AAAc;;AACnF;;AACF;;AAGF;;AACF;;AACF;;AACF;;AACF;;;;AAhZU;;AAAA;;AACqB;;AAAA;;AAMd;;AAAA;;AAqCyC;;AAAA;;AAIrC;;AAAA;;AAOoE;;AAAA;;AAClE;;AAAA;;AAiBwB;;AAAA;;AACtB;;AAAA;;AAiBgE;;AAAA;;AAClE;;AAAA;;AAQkD;;AAAA;;AAEzC;;AAAA;;AAIT;;AAAA;;AAUyE;;AAAA;;AACzE;;AAAA;;AASgD;;AAAA;;AAEvC;;AAAA;;AAIT;;AAAA;;AAmBL;;AAAA;;AACA;;AAAA;;AAkDA;;AAAA;;AA+CgB;;AAAA;;AA0BA;;AAAA;;AAUF;;AAAA;;AAGf;;AAAA;;;;;;;;;;wEDlOJ4F,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTxW,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;AA0KxBic,mBAAS,EAAE,CAAF;kBAFX,uDAEW;mBAFD,W,EAAa;AACtB,wBAAQ;AADc,a;AAEZ,WAAE;;;;;;;;;;;;;;;;;;;AE1OhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AACE;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAO;;AACrD;;AACF;;;;;;;;AAHkC;;AAE1B;;AAAA;;;;UDuBGW,e;AASX,iCAAoB7V,MAApB,EAA4C0D,YAA5C,EAAwE;AAAA;;AAApD,eAAA1D,MAAA,GAAAA,MAAA;AAAwB,eAAA0D,YAAA,GAAAA,YAAA;AAPnC,eAAAjK,EAAA,GAAK,eAAL;AACA,eAAAqc,IAAA,GAAO,IAAP;AAET,eAAAC,MAAA,GAAkB,EAAlB;AAI0E;;;;qCAElE;AAAA;;AACN,iBAAKC,iBAAL,GAAyB,KAAKtS,YAAL,CAAkBuS,OAAlB,CAA0B,KAAKxc,EAA/B,EACtBc,SADsB,CACZ,UAAA2b,KAAK,EAAI;AAClB,kBAAI,CAACA,KAAK,CAACC,OAAX,EAAoB;AAClB,uBAAI,CAACJ,MAAL,GAAc,OAAI,CAACA,MAAL,CAAYnO,MAAZ,CAAmB,UAAApN,CAAC;AAAA,yBAAIA,CAAC,CAAC4b,oBAAN;AAAA,iBAApB,CAAd;;AACA,uBAAI,CAACL,MAAL,CAAYrW,OAAZ,CAAoB,UAAAlF,CAAC;AAAA,yBAAI,OAAOA,CAAC,CAAC4b,oBAAb;AAAA,iBAArB;;AACA;AACD;;AAED,qBAAI,CAACL,MAAL,CAAYjc,IAAZ,CAAiBoc,KAAjB;;AAEA,kBAAIA,KAAK,CAACG,SAAV,EAAqB;AACnBzI,0BAAU,CAAC;AAAA,yBAAM,OAAI,CAAC0I,WAAL,CAAiBJ,KAAjB,CAAN;AAAA,iBAAD,EAAgC,IAAhC,CAAV;AACD;AACF,aAbsB,CAAzB;AAeA,iBAAKK,iBAAL,GAAyB,KAAKvW,MAAL,CAAYwW,MAAZ,CAAmBjc,SAAnB,CAA6B,UAAAsC,KAAK,EAAI;AAC7D,kBAAIA,KAAK,YAAY,+DAArB,EAAsC;AACpC,uBAAI,CAAC6G,YAAL,CAAkB+S,KAAlB,CAAwB,OAAI,CAAChd,EAA7B;AACD;AACF,aAJwB,CAAzB;AAKD;;;wCAEa;AACZ,iBAAKuc,iBAAL,CAAuB1Y,WAAvB;AACA,iBAAKiZ,iBAAL,CAAuBjZ,WAAvB;AACD;;;sCAEW4Y,K,EAAc;AAAA;;AACxB,gBAAI,CAAC,KAAKH,MAAL,CAAYrM,QAAZ,CAAqBwM,KAArB,CAAL,EAAkC;AAChC;AACD;;AAED,gBAAI,KAAKJ,IAAT,EAAe;AACb,mBAAKC,MAAL,CAAYW,IAAZ,CAAiB,UAAAlc,CAAC;AAAA,uBAAIA,CAAC,KAAK0b,KAAV;AAAA,eAAlB,EAAmCJ,IAAnC,GAA0C,IAA1C;AACAlI,wBAAU,CAAC,YAAM;AACf,uBAAI,CAACmI,MAAL,GAAc,OAAI,CAACA,MAAL,CAAYnO,MAAZ,CAAmB,UAAApN,CAAC;AAAA,yBAAIA,CAAC,KAAK0b,KAAV;AAAA,iBAApB,CAAd;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aALD,MAKO;AACL,mBAAKH,MAAL,GAAc,KAAKA,MAAL,CAAYnO,MAAZ,CAAmB,UAAApN,CAAC;AAAA,uBAAIA,CAAC,KAAK0b,KAAV;AAAA,eAApB,CAAd;AACD;AACF;;;mCAEQA,K,EAAc;AAAA;;AACrB,gBAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,gBAAMS,OAAO,GAAG,CAAC,OAAD,EAAU,mBAAV,CAAhB;AAEA,gBAAMC,cAAc,2DACjB,+DAAUC,OADO,EACG,qBADH,oCAEjB,+DAAUC,KAFO,EAEC,oBAFD,oCAGjB,+DAAUC,IAHO,EAGA,kBAHA,oCAIjB,+DAAUC,OAJO,EAIG,qBAJH,mBAApB;AAOAL,mBAAO,CAAC7c,IAAR,CAAa8c,cAAc,CAACV,KAAK,CAACpB,IAAP,CAA3B;;AAEA,gBAAIoB,KAAK,CAACJ,IAAV,EAAgB;AACda,qBAAO,CAAC7c,IAAR,CAAa,MAAb;AACD;;AAED,mBAAO6c,OAAO,CAAC9O,IAAR,CAAa,GAAb,CAAP;AACD;;;;;;;yBA3EUgO,e,EAAe,uH,EAAA,4I;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,wH;AAAA;AAAA;AC1B5B;;AACE;;AAIF;;;;AAJO;;AAAA;;;;;;;;;wEDyBMA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT9c,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;AAEjBQ,YAAE;kBAAV;AAAU,Y;AACFqc,cAAI;kBAAZ;AAAY;;;;;;;;;;;;;;;;;;;AE7BfuC;;AAAyC;;;;;;AA2E9E;;AACE;;AAAwB;;AAAY;;AACpC;;AAAwB;;AAA8B;;AACtD;;AACF;;;;;;AAiDY;;AAEE;;AACF;;;;;;AAEE;;AAEE;;;;AACA;;AAEoC;;AACZ;;AAC1B;;;;;;AALE;;AAAA;;AAGE;;AAAA;;AADA;;AACkC;;AAAA;;;;;;;;;;;;;;AA1DpD;;AAEE;;AACE;;AAEE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAsB;;;;AACtB;;AACF;;AACA;;AAAyC;;AAAI;;AAC7C;;AAAyC;;AAAI;;AAC7C;;AAAyC;;AAAI;;AAC7C;;AAAyC;;AAAS;;AAClD;;AAAyC;;AAAW;;AACpD;;AACE;;AACE;;AAAqB;;AAAQ;;AAC7B;;AAAyB;;AAAG;;AAC5B;;AAGF;;AACA;;AACE;;AAAqB;;AAAS;;AAC9B;;AAAyB;;AAAG;;AAC5B;;AAGF;;AACA;;AACE;;AAAqB;;AAAS;;AAC9B;;AAAyB;;AAAG;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AAEA;;AACE;;AAAM;;AAAS;;AACf;;AAIA;;AACE;;AAQF;;AACF;;AACA;;AASE;;AACE;;AACE;AAAA;;AAAA;;AAAA;;AAAA,sDAAkC,KAAlC;AAAuC,WAAvC;;AAA0C;;AAAI;;AAChD;;AACE;AAAA;;AAAA;;AAAA;;AAAA,uDAAkC,IAAlC;AAAsC,WAAtC;;AAAyC;;AAAe;;AAC5D;;AAKF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAlFW;;AAAA;;AAOyB;;AAAA;;AAGd;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKqD;;AAAA,uFAAmB,MAAnB,EAAmB,aAAnB,EAAmB,OAAnB,EAAmB,EAAnB;;AAOA;;AAAA,oFAAgB,MAAhB,EAAgB,aAAhB,EAAgB,OAAhB,EAAgB,EAAhB;;AAOA;;AAAA,yFAAqB,MAArB,EAAqB,aAArB,EAAqB,OAArB,EAAqB,EAArB;;AAMpD;;AAAA;;AAIN;;AAAA;;AAMD;;AAAA;;AAmBqB;;AAAA;;AAEA;;AAAA;;;;;;;;UD/H9BmB,e;AAcX,iCAAoBC,WAApB,EACmB1H,MADnB,EAEoBpV,WAFpB,EAGoBoJ,WAHpB,EAIoB2T,SAJpB,EAKoBrX,WALpB,EAMoBsX,cANpB,EAOoB1T,YAPpB,EAOgD;AAAA;;AAP5B,eAAAwT,WAAA,GAAAA,WAAA;AACD,eAAA1H,MAAA,GAAAA,MAAA;AACC,eAAApV,WAAA,GAAAA,WAAA;AACA,eAAAoJ,WAAA,GAAAA,WAAA;AACA,eAAA2T,SAAA,GAAAA,SAAA;AACA,eAAArX,WAAA,GAAAA,WAAA;AACA,eAAAsX,cAAA,GAAAA,cAAA;AACA,eAAA1T,YAAA,GAAAA,YAAA;AAlBpB,eAAA2T,SAAA,GAAsB,EAAtB;AAOA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,aAAA,GAAgB,KAAhB;AASkD;;;;qCAE1C;AAAA;;AACN,iBAAKC,UAAL;AAEA,iBAAKP,WAAL,CAAiBQ,aAAjB,CAA+B,CAA/B,EAAkCnd,SAAlC,CAA4C,UAAAC,CAAC,EAAI;AAC/C,qBAAI,CAACmd,MAAL,GAAcnd,CAAd;;AACA,qBAAI,CAACod,WAAL,CAAiBpd,CAAjB;AACD,aAHD,EAIA,UAACwB,KAAD;AAAA,qBAAW,OAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwBA,KAAxB,CAAX;AAAA,aAJA;AAMA,iBAAKob,cAAL,CAAoBS,uBAApB,CAA4C,KAAKzd,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAAvE,EAA2Ec,SAA3E,CAAqF,UAAAC,CAAC,EAAI;AACxF,qBAAI,CAACsd,KAAL,GAAatd,CAAC,CAACoN,MAAF,CAAS,UAAArB,CAAC;AAAA,uBAAIA,CAAC,CAAC1J,KAAF,CAAQ4K,MAAZ;AAAA,eAAV,CAAb;AACD,aAFD;AAIA,iBAAKsQ,YAAL;AAEA,gBAAMC,UAAU,GAAG,iDAAnB;AACAA,sBAAU,CAACnQ,IAAX,CAAgB,GAAhB;AACA,iBAAKwP,SAAL,CAAevd,IAAf,CAAoB,oBAApB;AACA,iBAAKud,SAAL,CAAevd,IAAf,CAAoB,QAApB;AACA,iBAAKud,SAAL,CAAevd,IAAf,CAAoB,kBAApB;AACD;;;yCAEsB;AAAA;;AACrB,iBAAKsd,cAAL,CAAoBa,oBAApB,CAAyC,KAAK7d,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAApE,EAAwEc,SAAxE,CAAkF,UAAAC,CAAC,EAAI;AACrF,kBAAM0d,KAAK,GAAG,IAAI7e,IAAJ,EAAd;AACA,kBAAI8e,SAAS,GAAG,CAAhB;AACA3d,eAAC,CAACkF,OAAF,CAAU,UAAAlG,OAAO,EAAI;;;AACnB,oBAAM4e,WAAW,GAAG,IAAI/e,IAAJ,CAASG,OAAO,CAACJ,IAAjB,CAApB;;AACA,oBAAI,OAAAI,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEqD,KAAT,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE4K,MAAhB,MAA2B,IAA3B,IAAmC2Q,WAAW,CAAC7P,QAAZ,OAA2B2P,KAAK,CAAC3P,QAAN,EAA9D,IACF6P,WAAW,CAAC/P,WAAZ,OAA8B6P,KAAK,CAAC7P,WAAN,EADhC,EACqD;AACnD8P,2BAAS;AACV;AACF,eAND;AAOA,qBAAI,CAACb,WAAL,GAAmBa,SAAS,GAAG,CAA/B;AACD,aAXD;AAYD;;;sCAIWR,M,EAAM;AAChB,iBAAKU,YAAL,GAAoBV,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEW,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAApB;AACD;;;uCAES;AACR,iBAAKC,UAAL,GAAkB,KAAKzY,WAAL,CAAiBY,KAAjB,CAAuB;AACvCjC,sBAAQ,EAAG,IAD4B;AAEvC3B,qBAAO,EAAG,IAF6B;AAGvC0b,mBAAK,EAAE,IAHgC;AAIvCC,uBAAS,EAAE;AAJ4B,aAAvB,CAAlB;AAMD;;;oCAES3W,C,EAAG0W,K,EAAO1D,I,EAAM;AACxB,iBAAK4D,UAAL,CAAgB5W,CAAhB,EAAmB0W,KAAnB,EAA0B1D,IAA1B;AACD;;;qCAEUhT,C,EAAG0W,K,EAAO1D,I,EAAM;AAAA;;;;AACzB,gBAAKA,IAAI,KAAK,IAAT,IAAiB,KAAKyC,YAAvB,IAAyCzC,IAAI,KAAK,KAAT,IAAkB,KAAK0C,aAApE,EAAmF;AACjF;AACD;;AACD,gBAAMmB,WAAW,GAAK,KAAKnJ,MAAL,CAAY1Q,IAAZ,CAAiB,iFAAjB,EAAqC;AACzD2W,mBAAK,EAAE,OADkD;AAEzDzb,kBAAI,EAAE;AACJ4e,yBAAS,EAAEJ,KADP;AAEJK,uBAAO,EAAG,KAAKze,WAAL,CAAiBmG,SAFvB;AAGJuY,uBAAO,EAAE,CAAF,KAAEN,KAAK,CAAChC,MAAN,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE5O,MAAF,CAAS,UAAApN,CAAC;AAAA,yBAAIA,CAAC,CAACiN,MAAF,KAAaqN,IAAjB;AAAA,iBAAV,CAHjB;AAIJA,oBAAI,EAAJA;AAJI;AAFmD,aAArC,CAAtB;AASA6D,uBAAW,CAACjD,WAAZ,GAA0Bnb,SAA1B,CAAoC,UAAA6P,MAAM,EAAI;AAC5C,kBAAIA,MAAM,KAAK,IAAf,EAAoB;AAClB,uBAAI,CAAC5G,WAAL,CAAiBuV,WAAjB,CAA6B3O,MAA7B,EAAqC7P,SAArC,CACE,UAAAC,CAAC,EAAI;AACH,yBAAI,CAAC2c,SAAL,CAAe6B,iBAAf,CAAiC,8EAAjC,EAAoD;AAClDja,4BAAQ,EAAE,IADwC;AAElD/E,wBAAI,EAAE;AAAEmc,6BAAO,EAAE,CAAA3b,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEye,SAAH,IAAe,CAAf,GAAoB,uBAApB,GAA8C;AAAzD;AAF4C,mBAApD;;AAIA,yBAAI,CAAClB,YAAL;AACD,iBAPH;AAQC;AACF,aAXH;AAYD;;;qCAEUlb,K,EAAgB;AACzB,gBAAMqc,UAAU,GAAGrc,KAAK,CAACsc,SAAN,GAAkBtc,KAAK,CAACuc,QAA3C;AACA,gBAAIC,QAAQ,GAAGH,UAAU,GAAGrc,KAAK,CAACuc,QAAlC;;AAEA,gBAAIC,QAAQ,GAAG,KAAK1B,MAAL,CAAYha,MAA3B,EAAkC;AAChC0b,sBAAQ,GAAG,KAAK1B,MAAL,CAAYha,MAAvB;AACD;;AAED,iBAAK0a,YAAL,GAAoB,KAAKV,MAAL,CAAYW,KAAZ,CAAkBY,UAAlB,EAA8BG,QAA9B,CAApB;AACD;;;uCAES;AAAA;;AACR,gBAAIC,aAAa,GAAG,KAAK3B,MAAzB;;AACA,gBAAI,KAAK5W,CAAL,CAAOtC,QAAP,CAAgBuC,KAAhB,KAA0B,IAA1B,IAAmC,KAAKD,CAAL,CAAOtC,QAAP,CAAgBuC,KAAhB,KAA0B+G,SAAjE,EAA2E;AACzE,kBAAM/K,IAAI,GAAG,uBAAb;AACAsc,2BAAa,GAAGA,aAAa,CAAC1R,MAAd,CAAqB,UAAAnI,IAAI,EAAG;;;AAC1C,8BAAAA,IAAI,CAACmT,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEG,QAAF,CAAWwG,WAAX,GAAyB7P,QAAzB,CAAkC,OAAI,CAAC3I,CAAL,CAAOtC,QAAP,CAAgBuC,KAAhB,CAAsBuY,WAAtB,EAAlC,CAAZ,MAAiF,MAC9E9Z,IAAI,CAACmT,OADyE,MAClE,IADkE,IAClE,aADkE,GAClE,MADkE,GAClE,GAAEK,IAAF,CAAOsG,WAAP,GAAqB7P,QAArB,CAA8B,OAAI,CAAC3I,CAAL,CAAOtC,QAAP,CAAgBuC,KAAhB,CAAsBuY,WAAtB,EAA9B,CADf,M,MAEG9Z,IAAI,CAACmT,O,MAAO,I,IAAA,a,GAAA,M,GAAA,GAAE4G,OAAF,CAAUD,WAAV,GAAwB7P,QAAxB,CAAiC,OAAI,CAAC3I,CAAL,CAAOtC,QAAP,CAAgBuC,KAAhB,CAAsBuY,WAAtB,EAAjC,CAFf;AAEoF,eAHtE,CAAhB;AAID;;AACD,gBAAI,KAAKxY,CAAL,CAAOjE,OAAP,CAAekE,KAAf,KAAyB,IAAzB,IAAiC,KAAKD,CAAL,CAAOjE,OAAP,CAAekE,KAAf,KAAyB+G,SAA9D,EAAwE;AACtE,kBAAM/K,KAAI,GAAG,iBAAb;AACAsc,2BAAa,GAAGA,aAAa,CAAC1R,MAAd,CAAqB,UAAAnI,IAAI;AAAA,uBACvCA,IAAI,CAAC4T,cAAL,CAAoB/M,QAApB,CAA6BiT,WAA7B,GAA2C7P,QAA3C,CAAoD,OAAI,CAAC3I,CAAL,CAAOjE,OAAP,CAAekE,KAAf,CAAqBuY,WAArB,EAApD,KACG9Z,IAAI,CAAC4T,cAAL,CAAoB7M,KAApB,CAA0B+S,WAA1B,GAAwC7P,QAAxC,CAAiD,OAAI,CAAC3I,CAAL,CAAOjE,OAAP,CAAekE,KAAf,CAAqBuY,WAArB,EAAjD,CAFoC;AAAA,eAAzB,CAAhB;AAGD;;AACD,gBAAI,KAAKxY,CAAL,CAAOyX,KAAP,CAAaxX,KAAb,KAAuB,IAAvB,IAA+B,KAAKD,CAAL,CAAOyX,KAAP,CAAaxX,KAAb,KAAuB+G,SAA1D,EAAoE;AAClE,kBAAM/K,MAAI,GAAG,MAAb;AACAsc,2BAAa,GAAGA,aAAa,CAAC1R,MAAd,CAAqB,UAAAnI,IAAI,EAAG;AAAA;;AAAA,6BAC1CA,IAAI,CAACH,IADqC,MACjC,IADiC,IACjC,aADiC,GACjC,MADiC,GACjC,GAAEia,WAAF,GAAgB7P,QAAhB,CAAyB,OAAI,CAAC3I,CAAL,CAAOyX,KAAP,CAAaxX,KAAb,CAAmBuY,WAAnB,EAAzB,CADiC;AACyB,eADrD,CAAhB;AAED;;AACD,iBAAKlB,YAAL,GAAoBiB,aAAa,CAAChB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAApB;AACD;;;sCAEWE,K,EAAO/Y,I,EAAI;;;AACrB,gBAAIA,IAAJ,EAAS;AACP,kBAAMqY,KAAK,GAAG,CAAH,KAAGU,KAAK,CAAChC,MAAN,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE5O,MAAF,CAAS,UAAApN,CAAC;AAAA,uBAAIA,CAAC,CAACiN,MAAF,KAAa,IAAjB;AAAA,eAAV,CAA1B;AACA,mBAAK8P,YAAL,GAAoB,EAAE,CAAAO,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEna,MAAP,IAAgB,CAAhB,IAAqB,CAAC,KAAK2Z,WAA7B,CAApB;AACA,qBAAO,KAAKC,YAAZ;AACD,aAJD,MAKI;AACF,kBAAMZ,OAAO,GAAG,CAAH,KAAG6B,KAAK,CAAChC,MAAN,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE5O,MAAF,CAAS,UAAApN,CAAC;AAAA,uBAAIA,CAAC,CAACiN,MAAF,KAAa,KAAjB;AAAA,eAAV,CAA5B;AACA,mBAAK+P,aAAL,GAAqB,EAAE,CAAAb,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEhZ,MAAT,IAAkB,CAApB,CAArB;AACA,qBAAO,KAAK6Z,aAAZ;AACD;AACF;;;8BA3FO;AAAE,mBAAO,KAAKe,UAAL,CAAgBvW,QAAvB;AAAkC;;;;;;;yBA5DjCiV,e,EAAe,0I,EAAA,mI,EAAA,wJ,EAAA,0I,EAAA,wI,EAAA,2H,EAAA,iJ,EAAA,6I;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,80D;AAAA;AAAA;AC/B5B;;AACE;;AACE;;AAAM;;AAAU;;AAChB;;AACF;;AACA;;AACE;;AACE;;AAA+B;AAAA,qBAAU,IAAAwC,UAAA,EAAV;AAAsB,aAAtB;;AAC7B;;AACE;;AACE;;AAAW;;AAAI;;AACf;;AACA;;AACE;;AAAU;;AAAK;;AACjB;;AACF;;AACA;;AACE;;AAAW;;AAAsB;;AACjC;;AACA;;AACE;;AAAU;;AAAM;;AAClB;;AACF;;AACA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AACE;;AAAU;;AAAc;;AAC1B;;AACF;;AACA;;AAME;;AACE;;AACF;;AACF;;AACF;;AACF;;AAmCF;;AACA;;AACE;;AAKA;;AAwFA;;AACE;AAAA,qBAAQ,IAAAC,UAAA,QAAR;AAA0B,aAA1B;;AAA6B;;AACjC;;AACF;;AACF;;;;AA5KuB;;AAAA;;AAIX;;AAAA;;AAuED;;AAAA;;AAMH;;AAAA;;AAuFa;;AAAA,8HAAyB,UAAzB,EAAyB,CAAzB,EAAyB,iBAAzB,EAAyB,qEAAzB;;;;;;;;;;wED5IRzC,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTle,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/B5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa0gB,kB;AAGX,oCAAoB7Z,WAApB,EACoBjF,mBADpB,EAC+D;AAAA;;AAD3C,eAAAiF,WAAA,GAAAA,WAAA;AACA,eAAAjF,mBAAA,GAAAA,mBAAA;AAA8C;;;;qCAE1D;AAEN,iBAAK+e,aAAL,GAAqB,KAAK9Z,WAAL,CAAiBY,KAAjB,CAAuB;AAC1C2D,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWzD,QAAhB,CADmC;AAE1CuV,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWvV,QAAhB,CAFiC;AAG1CiZ,iBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWjZ,QAAhB;AAHqC,aAAvB,CAArB;AAKD;;;sCAEQ;AAAA;;AACP/E,mBAAO,CAACC,GAAR,CAAY,KAAK8d,aAAL,CAAmBnU,GAAnB,CAAuB,KAAvB,EAA8BzE,KAA1C;AACA,iBAAKnG,mBAAL,CAAyBif,SAAzB,CAAmC;AACjCD,iBAAG,EAAE,KAAKD,aAAL,CAAmBnU,GAAnB,CAAuB,KAAvB,EAA8BzE,KADF;AAEjCmV,qBAAO,EAAE,KAAKyD,aAAL,CAAmBnU,GAAnB,CAAuB,SAAvB,EAAkCzE,KAFV;AAGjCqD,mBAAK,EAAE,KAAKuV,aAAL,CAAmBnU,GAAnB,CAAuB,OAAvB,EAAgCzE;AAHN,aAAnC,EAIGzG,SAJH,CAIa,YAAM;AACjB,qBAAI,CAACqf,aAAL,CAAmBjQ,KAAnB;AACD,aAND;AAOD;;;;;;;yBAxBUgQ,kB,EAAkB,2H,EAAA,4J;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,e;AAAA,uV;AAAA;AAAA;ACT/B;;AAAI;;AAAkB;;AACtB;;AAAkC;AAAA,qBAAY,IAAAG,SAAA,EAAZ;AAAuB,aAAvB;;AAC9B;;AACI;;AACE;;AACE;;AAAO;;AAAK;;AACZ;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAO;;AACd;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAG;;AACV;;AACF;;AACF;;AACA;;AACE;;AAA8C;;AAAS;;AACzD;;AACF;;AACN;;;;AAxBM;;AAAA;;;;;;;;;wEDQOH,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT5gB,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAM8gB,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzB/O,cAAM,+BAFmB;AAGzBzO,kCAA0B,2FAHD;AAIzBuG,0BAAkB,8FAJO;AAKzBkX,kBAAU,wCALe;AAMzBC,qBAAa,wBANY;AAOzBC,qBAAa,6BAPY;AAQzBC,kBAAU,EAAE;AACVP,aAAG,6CADO;AAEVQ,aAAG,mBAFO;AAGVC,gBAAM,+BAHI;AAIVC,oBAAU;AAJA;AARa,OAApB;AAgBP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AC3BA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaC,W;AAEX,6BAAoB5P,IAApB,EAA8CxQ,WAA9C,EAA+E;AAAA;;AAA3D,eAAAwQ,IAAA,GAAAA,IAAA;AAA0B,eAAAxQ,WAAA,GAAAA,WAAA;AAAoC;;;;wCAEvE;AACT,mBAAO,KAAKwQ,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,uBAAP;AACD;;;sCAEWxR,E,EAAE;AACZ,mBAAO,KAAKmR,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,cAAmD;AACxDoE,6BAAe,EAAE,IADuC;AAExDF,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BtR,EAA3B;AAFgD,aAAnD,CAAP;AAID;;;4CAEiBwV,M,EAAM;AACtB,gBAAMC,OAAO,GAAGD,MAAM,GACtB;AAAEE,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BkE,MAA3B;AAAV,aADsB,GAC0B,EADhD;AAEA,mBAAO,KAAKrE,IAAL,CAAUnF,GAAV,WAAyB,yEAAYwF,MAArC,qBAA6DiE,OAA7D,CAAP;AACD;;;oDAEsB,CACtB;;;qCAEU2C,I,EAAI;AACb,mBAAO,KAAKjH,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,cAAoD4G,IAApD,CAAP;AACD;;;sCAEWA,I,EAAI;AACd,mBAAO,KAAKjH,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,eAAqD4G,IAArD,EAA2D;AAChExC,6BAAe,EAAE;AAD+C,aAA3D,CAAP;AAGD;;;0CAEelC,M,EAAM;AACpB,gBAAM+B,OAAO,GAAG/B,MAAM,GACtB;AAAEgC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BoC,MAA3B;AAAV,aADsB,GAC0B,EADhD;AAGA,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAAgC,yEAAYwF,MAA5C,sBAAqE;AAC1EoE,6BAAe,EAAE,IADyD;AAE1EF,oBAAM,EAAED,OAAO,CAACC;AAF0D,aAArE,CAAP;AAID;;;;;;;yBA1CUqL,W,EAAW,uH,EAAA,+H;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVvb,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOawb,mB;AAEX,uCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,uC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPhC;;AACA;;AACA;;;;;;;;;wEDKaA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT1hB,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AELhC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,eAASyhB,OAAT,CAAiBC,QAAjB,EAAmCC,QAAnC,EAAqD;AACxD,eAAO,UAACC,SAAD,EAA0B;AAC7B,cAAMC,OAAO,GAAGD,SAAS,CAAC7Y,QAAV,CAAmB2Y,QAAnB,CAAhB;AACA,cAAMI,YAAY,GAAGF,SAAS,CAAC7Y,QAAV,CAAmB4Y,QAAnB,CAArB;;AAEA,cAAIG,YAAY,CAACC,MAAb,IAAuB,CAACD,YAAY,CAACC,MAAb,CAAoBC,SAAhD,EAA2D;AACvD;AACH;;AAED,cAAIH,OAAO,CAAC9Z,KAAR,KAAkB+Z,YAAY,CAAC/Z,KAAnC,EAA0C;AACtC+Z,wBAAY,CAAChR,SAAb,CAAuB;AAAEkR,uBAAS,EAAE;AAAb,aAAvB;AACH,WAFD,MAEO;AACHF,wBAAY,CAAChR,SAAb,CAAuB,IAAvB;AACH;AACJ,SAbD;AAcH;;;;;;;;;;;;;;;;;ACjBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBQ;;AAAuD;;AAAM;;;;;;AAC7D;;AACA;;AACF;;;;;;;;AADE;;AAAA;;;;;;AAIA;;AAAuD;;AAAM;;;;;;;;AAC7D;;AAAmC;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAa;;AAAK;;;;;;AAAlB;;AAAA;;;;;;AAGvE;;AAAuD;;AAAM;;;;;;AAC7D;;AAAmC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGnC;;AAAuD;;AAAO;;;;;;AAC9D;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAGpC;;AAAuD;;AAAK;;;;;;AAC5D;;AAAoC;;;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAGtC;;;;;;AACA;;;;;;;;UD5BOmR,sB;AAOX,wCAAoB/gB,WAApB,EAAsDuJ,YAAtD,EAAkF;AAAA;;AAA9D,eAAAvJ,WAAA,GAAAA,WAAA;AAAkC,eAAAuJ,YAAA,GAAAA,YAAA;AAEtD,eAAAyX,gBAAA,GAA6B,CAAC,KAAD,EAAQ,OAAR,EAAiB,OAAjB,EAA0B,QAA1B,EAAoC,MAApC,CAA7B;AAFqF;;;;qCAK7E;AACN,iBAAKC,UAAL,GAAkB,IAAI,0EAAJ,EAAlB;AACA,iBAAKC,YAAL;AACD;;;4CAEiB;AAChB,iBAAKD,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;yCAEW;AACV,iBAAKH,UAAL,CAAgBphB,IAAhB,GAAuB,CACrB;AACE,uBAAO,iBADT;AAEEwe,mBAAK,EAAE,UAFT;AAGEgD,oBAAM,EAAE,IAHV;AAIEpiB,kBAAI,EAAE,IAAIC,IAAJ;AAJR,aADqB,EAOrB;AACE,uBAAO,mBADT;AAEEmf,mBAAK,EAAE,YAFT;AAGEgD,oBAAM,EAAE,IAHV;AAIEpiB,kBAAI,EAAE,IAAIC,IAAJ;AAJR,aAPqB,EAarB;AACE,uBAAO,mBADT;AAEEmf,mBAAK,EAAE,YAFT;AAGEgD,oBAAM,EAAE,IAHV;AAIEpiB,kBAAI,EAAE,IAAIC,IAAJ;AAJR,aAbqB,CAAvB,CADU,CAqBV;AACA;AACA;AACA;AACA;AACD;;;gCAEKwD,K,EAAO4e,G,EAAG,CAEf;;;sCAEWC,G,EAAG;AACb,gBAAMC,WAAW,GAAID,GAAG,CAACjO,MAAJ,CAAgCzM,KAArD;AACA,iBAAKoa,UAAL,CAAgBxT,MAAhB,GAAyB+T,WAAW,CAACC,IAAZ,GAAmBrC,WAAnB,EAAzB;;AAEA,gBAAI,KAAK6B,UAAL,CAAgBE,SAApB,EAA+B;AAC7B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BO,SAA1B;AACD;AACF;;;;;;;yBA7DUX,sB,EAAsB,0I,EAAA,4I;AAAA,O;;;cAAtBA,sB;AAAsB,0C;AAAA;AAAA;sEAEtB,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;ACfpB;;AACE;;AAAI;;AAAQ;;AACZ;;AACE;;AACE;;AACE;;AAA0C;AAAA,qBAAS,IAAAY,WAAA,QAAT;AAA4B,aAA5B;;AAA1C;;AACA;;AACE;;AACE;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AACF;;AACA;;AACF;;;;AA7B4B;;AAAA;;AAwBH;;AAAA;;AACP;;AAAA;;AAGD;;AAAA;;;;;;;;;;wED/BJZ,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTniB,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKwB,U;;;;;;;AAERqiB,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyBoB;;AAAqC;;AAAiB;;;;;;AADxD;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAOP;;;;;;AAIJ;;AAAgF;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAChF;;AAA6E;;AAAS;;;;;;AAAT;;AAAA;;;;;;;;;;;;;;UD3B9EQ,uB;AAEX,yCAAoBjc,WAApB,EACoB1F,WADpB,EAEoB4F,MAFpB,EAE4C;AAAA;;AAFxB,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAA1F,WAAA,GAAAA,WAAA;AACA,eAAA4F,MAAA,GAAAA,MAAA;AAA2B;;;;qCASvC;AACN,gBAAMgc,IAAI,GAAG,KAAKhc,MAAL,CAAYmB,QAAZ,CAAqBC,WAArB,CAAiC4a,IAA9C;AACA,iBAAK3b,OAAL,GAAe2b,IAAI,KAAK,OAAxB;AACA,iBAAKlb,YAAL,GAAoB,KAAKhB,WAAL,CAAiBY,KAAjB,CAAuB;AACzCgB,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWd,QAAhB;AADkC,aAAvB,CAApB;AAGD;;;6CAMkB;AAAA;;AACjB,iBAAKT,iBAAL,GAAyB,IAAzB;AAEA,iBAAKF,UAAL,GAAkB,IAAlB;;AACA,gBAAI,KAAKa,YAAL,CAAkBU,KAAtB,EAA4B;AAC1B,mBAAKpH,WAAL,CAAiBwH,cAAjB,CAAgC,KAAKd,YAAL,CAAkBE,KAAlD,EAAyDzG,SAAzD,CAAmE,UAAAC,CAAC,EAAI;AACtE,uBAAI,CAACwN,OAAL,GAAexN,CAAC,CAAC2b,OAAjB;AACA,uBAAI,CAAClW,UAAL,GAAkB,KAAlB;AACD,eAHD,EAGG,UAACjE,KAAD,EAAW;AACZ,uBAAI,CAACiE,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACjE,KAAL,GAAaA,KAAb;AACD,eAND;AAOD;AACF;;;8BAjBI;AACH,mBAAO,KAAK8E,YAAL,CAAkBkB,QAAzB;AACD;;;;;;;yBAvBU+Z,uB,EAAuB,2H,EAAA,wJ,EAAA,+H;AAAA,O;;;cAAvBA,uB;AAAuB,2C;AAAA,iB;AAAA,gB;AAAA,qwC;AAAA;AAAA;ACVpC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAgB;;AAAc;;AAC9B;;AACF;;AACA;;AAA6C;AAAA,qBAAY,IAAAE,gBAAA,EAAZ;AAA8B,aAA9B;;AAC3C;;AACE;;AAAuB;;AAAgC;;AACvD;;AACE;;AAAuB;;AAAK;;AAC5B;;AACE;;AAA0B;;AAAK;;AAC/B;;AACF;;AACA;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AAAmF;;AAAM;;AACzF;;AACE;;AACA;;AACF;;AACF;;AACA;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA5CmC;;AAajB;;AAAA;;AAOe;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAMoC;;AAAA;;AACoB;;AAAA;;AACvD;;AAAA;;AAIL;;AAAA;;AACA;;AAAA;;;;;;;;;wED3BNF,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACThjB,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaijB,K,GAQX,eAAYC,IAAZ,EAAkC;AAAA;;AAC9BC,cAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH,O;;AAGH,UAAYG,SAAZ;;AAAA,iBAAYA,SAAZ,EAAqB;AACnB;AACA;AACA;AACA;AACD,OALD,EAAYA,SAAS,KAATA,SAAS,MAArB;;;;;;;;;;;;;;;;;ACbA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACqBE;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9C;;AAAU;;AAAa;;AACvB;;AAAM;;AAAc;;AACtB;;;;;;AAFY;;AAAA;;AACJ;;AAAA;;;;UDhBGC,sB;AAYX,0CAAc;AAAA;;AAVd,eAAA5Q,SAAA,GAAY,CACV;AAAClS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,YAAf;AAA6B4K,gBAAI,EAAE;AAAnC,WADU,EAEV;AAACnS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,iBAAf;AAAkC4K,gBAAI,EAAE;AAAxC,WAFU,EAGV;AACA;AACA;AAACnS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,OAAf;AAAwB4K,gBAAI,EAAE;AAA9B,WALU,CAAZ;AAQU,eAAA4Q,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAEO;;;;qCAET,CACP;;;mCAEQ/c,I,EAAI;AACX,iBAAK+c,iBAAL,CAAuB5S,IAAvB,CAA4BnK,IAA5B;AACD;;;;;;;yBAnBU8c,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,0C;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,ygB;AAAA;AAAA;ACJjC;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAM;;AAAiC;;AAAG;;AAAQ;;AACpD;;AAEF;;AACF;;AACE;;AAGF;;AACA;;AACE;;AAAU;;AAAG;;AACf;;AACA;;AACE;;AAIF;;;;;;AAR2D;;AAAA;;AAIxC;;AAAA;;;;;;;;;wEDdNA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTxjB,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKwB,U;;;AAUvBujB,2BAAiB;kBAA1B;AAA0B;;;;;;;;;;;;;;;;;;;AEjB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBgB;;AACE;;AACF;;;;;;AAF6C;;AAC3C;;AAAA;;;;;;AA6CJ;;AAAuD;;AAAa;;;;;;AACpE;;AACE;;AACA;;AACF;;;;;;AAF8B;;AAAA;;AAC5B;;AAAA;;;;;;AAIF;;AAAuD;;AAAM;;;;;;AAC7D;;AAAoC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGpC;;AAAuD;;AAAkB;;;;;;AACzE;;AAAoC;;;;;;AACA;;;;;;AADA;;AAAA;;;;;;AAIpC;;AAAuD;;AAAM;;;;;;AAC7D;;AAAoC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGpC;;AAAuD;;AAAc;;;;;;;;AACrE;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAAA;;AAEE;;AAEA;;AAEF;;AAAO;;AACT;;AACF;;;;;;AAGA;;AAAuD;;AAAO;;;;;;AAG1D;;AACE;;AAAA;;AAEE;;AAEF;;AACA;;AACF;;;;;;AACA;;AACE;;AAAA;;AAEE;;AAEF;;AACA;;AACF;;;;;;AAjBJ;;AACE;;AACE;;AAQA;;AAQF;;AACF;;;;;;AAlBQ;;AAAA;;AACD;;AAAA;;AAQA;;AAAA;;;;;;AAYP;;AAAuC;;AAAO;;;;;;AAC9C;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAGpC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AACE;;AAAyD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvD;;AACF;;AACF;;;;;;AAEF;;;;;;AACA;;;;;;;;;;;;AApIV;;AACE;;AACE;;AACE;;AAAuC;;AAAc;;AACrD;;AAAmB;;AAAuC;;AAC1D;;AACE;;AACE;;AACE;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAA5B;;AACA;;AACE;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AACV;;AAGF;;AACF;;AACF;;AAsBF;;AACF;;AACA;;AAcE;;AACE;;AACE;;AACE;;AACA;;AAIF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAWF;;AACA;;AACE;;AACA;;AAoBF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAKF;;AACA;;AACA;;AACF;;AACF;;AAEA;;AACF;;AACA;;AAGF;;AACF;;;;;;AA1IyB;;AAAA;;AAYD;;AAAA;;AACE;;AAAA;;AA4CM;;AAAA;;AAsEH;;AAAA;;AACP;;AAAA;;AAID;;AAAA;;;;;;;;AAOrB;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AACvF;;;;;;AADyB;;AAAA;;;;UDnHdC,iB;AAEX,mCAAoBjZ,WAApB,EACoBpJ,WADpB,EAEoBkV,WAFpB,EAEgD;AAAA;;AAF5B,eAAA9L,WAAA,GAAAA,WAAA;AACA,eAAApJ,WAAA,GAAAA,WAAA;AACA,eAAAkV,WAAA,GAAAA,WAAA;AAIpB,eAAAoN,WAAA,GAAc,CAAC;AACXjjB,cAAE,EAAE,CADO;AAEXuH,iBAAK,EAAE;AAFI,WAAD,EAIZ;AACEvH,cAAE,EAAE,CADN;AAEEuH,iBAAK,EAAE;AAFT,WAJY,CAAd;AAUA,eAAA2b,UAAA,GAAa,KAAb;AAEA,eAAAC,aAAA,GAAgB,CAAhB;AAEA,eAAAC,OAAA,GAAU,SAAV;AACA,eAAAC,aAAA,GAAgB,CAAhB;AAKA,eAAA3B,gBAAA,GAA6B,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,OAA5B,EAAqC,YAArC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,CAA7B;AAvBE,eAAK4B,aAAL;AACD;;;;4CA+BiB;AAChB,iBAAK3B,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;qCAEO;AACN,iBAAKH,UAAL,GAAkB,IAAI,0EAAJ,EAAlB;AACA,iBAAK2B,aAAL;AACA,iBAAK3B,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;wCAEa5O,M,EAAQ;AACpB,mBAAOA,MAAM,CAACtI,KAAd;AACD;;;0CAEe;AAAA;;AACd,iBAAKiL,WAAL,CAAiB0N,0BAAjB,CAA4C,KAAK5iB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAAvE,EAA2Ec,SAA3E,CAAqF,UAACC,CAAD,EAAW;AAC9F,qBAAI,CAAC4gB,UAAL,CAAgBphB,IAAhB,GAAuBQ,CAAvB;AACA,qBAAOA,CAAP;AACD,aAHD;AAID;;;sCAEWmhB,W,EAAa;;;AACvBA,uBAAW,GAAGA,WAAW,CAACC,IAAZ,EAAd;AACAD,uBAAW,GAAGA,WAAW,CAACpC,WAAZ,EAAd;AACA,iBAAK6B,UAAL,CAAgBxT,MAAhB,GAAyB+T,WAAzB;;AAEA,gBAAI,CAAJ,KAAI,KAAKP,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEE,SAArB,EAAgC;AAC9B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BO,SAA1B;AACD;AACF;;;yCAEcJ,G,EAAK;AAClB,iBAAKkB,UAAL,GAAkB,IAAlB;AACA,iBAAKM,WAAL,GAAmBxB,GAAnB;AACD;;;sCAEW5e,K,EAAO;AACjB,gBAAIA,KAAK,CAACqgB,QAAV,EAAoB;AAClB,mBAAKP,UAAL,GAAkB,KAAlB;AACD;AACF;;;uCAEY9R,I,EAAc;AACzB,gBAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAElN,MAAN,IAAe,CAAnB,EAAsB;AACpBnC,oBAAM,CAACsD,IAAP,CAAY+L,IAAZ;AACD;AACF;;;;;;;yBArFU4R,iB,EAAiB,0I,EAAA,wJ,EAAA,8I;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;sEA8BjB,wE,EAAc,I;;sEAGd,8D,EAAS,I;;;;;;;;;;;;;;;AC/DtB;;AACE;;AA+IA;;AAGF;;;;AAnJc;;AACP;;AAAA;;AA+IA;;AAAA;;;;;;;;;;wEDlHMA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT1jB,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;AAgCzBqiB,mBAAS,EAAE,CAAF;kBAFX,uDAEW;mBAFD,wE,EAAc;AACvB,wBAAQ;AADe,a;AAEb,WAAE,C;AAGXC,cAAI,EAAE,CAAF;kBAFN,uDAEM;mBAFI,8D,EAAS;AAClB,wBAAQ;AADU,a;AAEb,WAAE;;;;;;;;;;;;;;;;;;;AEjEX;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBY;;AAAyC;;AAAsB;;;;;;AADjE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAQL;;AAAwC;;AAAqB;;;;;;AAD/D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAQL;;AAAqC;;AAAyB;;;;;;AAC9D;;AAAkC;;AAAoC;;;;;;AAFxE;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAUL;;AAAwC;;AAAyB;;;;;;AACjE;;AAAuC;;AACvC;;;;;;AAHF;;AACE;;AACA;;AAEF;;;;;;AAHO;;AAAA;;AACA;;AAAA;;;;;;AASL;;AAA+C;;AAA4B;;;;;;AAC3E;;AAA8C;;AAA2B;;;;;;AAF3E;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AASL;;AAAqC;;AAA6B;;;;;;AAClE;;AAAoC;;AAAmC;;;;;;AAFzE;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAOH;;;;;;;;AAOF;;AACE;;AAAQ;;AAAW;;AACnB;;AAAU;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAK;;AACxC;;;;;;AAFU;;AAAA;;;;;;;;AAGV;;AACE;;AAAQ;;AAAmB;;AAC3B;;AAAU;AAAA;;AAAA;;AAAA,mCAAiB,IAAjB;AAAqB,WAArB;;AAAuB;;AAAK;;AACxC;;;;;;;;;;;;;;UDzEC4B,yB;AAEX,2CAAqBrd,WAArB,EACqB3F,WADrB,EAEqBuJ,YAFrB,EAEiD;AAAA;;AAF5B,eAAA5D,WAAA,GAAAA,WAAA;AACA,eAAA3F,WAAA,GAAAA,WAAA;AACA,eAAAuJ,YAAA,GAAAA,YAAA;AAGrB,eAAArJ,OAAA,GAAU,KAAV;AACA,eAAA6F,SAAA,GAAY,KAAZ;AACA,eAAAE,OAAA,GAAU,EAAV;AACA,eAAApE,KAAA,GAAQ,EAAR;AAEA,eAAAkT,OAAA,GAAU;AACRmH,qBAAS,EAAE,IADH;AAERD,gCAAoB,EAAE;AAFd,WAAV;AARoD;;;;qCAa5C;AACN,iBAAKgH,YAAL,GAAoB,KAAKtd,WAAL,CAAiBY,KAAjB,CAAuB;AACzC+R,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW7R,QAAhB,CAD8B;AAEzC8R,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW9R,QAAhB,CAF+B;AAGzCc,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWd,QAAZ,EAAsB,0DAAWc,KAAjC,CAAL,CAHkC;AAIzCiR,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW/R,QAAhB,CAJkC;AAKzCC,sBAAQ,EAAE,CAAE,IAAF,EAAQ,0DAAWwc,OAAX,CAAmB,CACnC,0DAAWzc,QADwB,EAEnC,kFAAiB0c,gBAAjB,CAAkC,qDAAlC,EAAyF;AAAEC,yBAAS,EAAE;AAAb,eAAzF,CAFmC,EAGnC,0DAAWC,SAAX,CAAqB,CAArB,CAHmC,CAAnB,CAAR,CAL+B;AAUzCxB,kBAAI,EAAE,CAAC,EAAD,CAVmC;AAWzC/a,6BAAe,EAAE,CAAC,EAAD;AAXwB,aAAvB,EAYjB;AAACwc,uBAAS,EAAE,6EAAQ,UAAR,EAAoB,iBAApB;AAAZ,aAZiB,CAApB;AAaD;;;qCAMO;AAAA;;AACN,iBAAKzhB,KAAL,GAAa,IAAb;AACA,iBAAKkE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKkd,YAAL,CAAkB/b,OAAtB,EAA8B;AAC5B;AACD;;AAED,gBAAMqc,OAAO,GAAS;AACnBjL,uBAAS,EAAG,KAAK1R,CAAL,CAAO0R,SAAP,CAAiBzR,KADV;AAEnB0R,sBAAQ,EAAE,KAAK3R,CAAL,CAAO2R,QAAP,CAAgB1R,KAFP;AAGnBU,mBAAK,EAAE,KAAKX,CAAL,CAAOW,KAAP,CAAaV,KAHD;AAInBH,sBAAQ,EAAE,KAAKE,CAAL,CAAOF,QAAP,CAAgBG,KAJP;AAKnB2R,mBAAK,EAAE,KAAK5R,CAAL,CAAO4R,KAAP,CAAa3R,KALD;AAMnBL,sBAAQ,EAAE,KAAKI,CAAL,CAAOW,KAAP,CAAaV,KANJ;AAOnBgb,kBAAI,EAAE;AAPa,aAAtB;AAUA,iBAAK7hB,WAAL,CAAiBwjB,OAAjB,CAAyBD,OAAzB,EACCnjB,SADD,CACW,UAAAP,IAAI,EAAI;AACjB,kBAAIA,IAAI,KAAK,IAAb,EAAkB;AAChB,uBAAI,CAAC0J,YAAL,CAAkBsE,OAAlB,CAA0B,qDAA1B,EAAiF,OAAI,CAACkH,OAAtF;AACD,eAFD,MAEK;AACH,uBAAI,CAACxL,YAAL,CAAkB1H,KAAlB,CAAwB,iCAAxB,EAA2D,OAAI,CAACkT,OAAhE;AACD;AACD,aAPF,EAOI,UAAAlT,KAAK;AAAA,qBAAI,OAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwBA,KAAxB,EAA+B,OAAI,CAACkT,OAApC,CAAJ;AAAA,aAPT;AASD;;;uCAES;AACR,iBAAKlH,OAAL,GAAe,IAAf;AACA,iBAAKoV,YAAL,CAAkBzT,KAAlB;AACD;;;8BAnCO;AACN,mBAAO,KAAKyT,YAAL,CAAkBpb,QAAzB;AACD;;;;;;;yBAnCUmb,yB,EAAyB,2H,EAAA,0I,EAAA,4I;AAAA,O;;;cAAzBA,yB;AAAyB,6C;AAAA,iB;AAAA,gB;AAAA,kkD;AAAA;AAAA;ACbtC;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAqD;AAAA,qBAAY,IAAA5S,QAAA,EAAZ;AAAsB,aAAtB;;AACnD;;AACE;;AACE;;AAAwB;;AAAiB;;AACzC;;AAAyB;;AAAO;;AAA8C;;AAAQ;;AACxF;;AAEA;;AACE;;AAA2B;;AAAU;;AACrC;;AAEA;;AAGF;;AACA;;AACE;;AAA0B;;AAAS;;AACnC;;AAEA;;AAGF;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAEA;;AAIF;;AAEA;;AACE;;AAA0B;;AAAQ;;AAClC;;AAEA;;AAAU;;AAAiE;;AAC3E;;AAKF;;AACA;;AACE;;AAA0B;;AAAgB;;AAC1C;;AAEA;;AAIF;;AAEA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAEA;;AAIF;;AAEA;;AACE;;AACE;;AACE;;AACA;;AACF;;AAEA;;AAA4B;;AAAyB;;AAAsC;;AAAK;;AAAI;;AACtG;;AACA;;AACE;;AAIA;;AAIF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAvFU;;AAAA;;AAUE;;AAAA;;AACG;;AAAA;;AAOH;;AAAA;;AACG;;AAAA;;AAOH;;AAAA;;AACG;;AAAA;;AASH;;AAAA;;AAEG;;AAAA;;AASH;;AAAA;;AACG;;AAAA;;AASH;;AAAA;;AACG;;AAAA;;AAQkD;;AAAA;;AAC7C;;AAAA;;AAIgD;;AAAA;;AAGV;;AAAA;;AAIA;;AAAA;;;;;;;;;wEDtE7C4S,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTpkB,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEbtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa2kB,mB;AAEX,uCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,uC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPhC;;AACA;;AACA;;;;;;;;;wEDKaA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT7kB,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKa4kB,e;;;;;;;oCAED7c,K,EAAOhE,I,EAAc8gB,I,EAAW;AACxCjiB,mBAAO,CAACC,GAAR,CAAYgiB,IAAZ;AACA,gBAAInC,WAAW,GAAI3a,KAAK,IAAI,EAA5B;AACAnF,mBAAO,CAACC,GAAR,CAAY6f,WAAZ;;AACA,gBAAImC,IAAI,CAAC,CAAD,CAAR,EAAY;AACVnC,yBAAW,GAAIA,WAAD,CAAc/T,MAAd,CAAqB,UAAAnI,IAAI;AAAA,uBAAIzC,IAAI,CAACuM,KAAL,CAAW,GAAX,EAAgBoL,IAAhB,CAAqB,UAAA0F,GAAG;AAAA,yBAAI5a,IAAI,CAACse,cAAL,CAAoB1D,GAApB,KACb,IAAI2D,MAAJ,CAAWF,IAAI,CAAC,CAAD,CAAf,EAAoB,IAApB,EAA0BG,IAA1B,CAA+Bxe,IAAI,CAAC4a,GAAD,CAAnC,CADS;AAAA,iBAAxB,CAAJ;AAAA,eAAzB,CAAd;AAED;;AACD,gBAAIyD,IAAI,CAAC,CAAD,CAAR,EAAY;AACVnC,yBAAW,GAAIA,WAAD,CAAc/T,MAAd,CAAqB,UAAAnI,IAAI;AAAA,uBAAIzC,IAAI,CAACuM,KAAL,CAAW,GAAX,EAAgBoL,IAAhB,CAAqB,UAAA0F,GAAG;AAAA,yBAAI5a,IAAI,CAACse,cAAL,CAAoB1D,GAApB,KACpE,IAAI2D,MAAJ,CAAWF,IAAI,CAAC,CAAD,CAAf,EAAoB,IAApB,EAA0BG,IAA1B,CAA+Bxe,IAAI,CAAC4a,GAAD,CAAnC,CADgE;AAAA,iBAAxB,CAAJ;AAAA,eAAzB,CAAd;AAED;;AACD,gBAAIyD,IAAI,CAAC,CAAD,CAAR,EAAY;AACVnC,yBAAW,GAAIA,WAAD,CAAc/T,MAAd,CAAqB,UAAAnI,IAAI;AAAA,uBAAIzC,IAAI,CAACuM,KAAL,CAAW,GAAX,EAAgBoL,IAAhB,CAAqB,UAAA0F,GAAG;AAAA,yBAAI5a,IAAI,CAACse,cAAL,CAAoB1D,GAApB,KACpE,IAAI2D,MAAJ,CAAWF,IAAI,CAAC,CAAD,CAAf,EAAoB,IAApB,EAA0BG,IAA1B,CAA+Bxe,IAAI,CAAC4a,GAAD,CAAnC,CADgE;AAAA,iBAAxB,CAAJ;AAAA,eAAzB,CAAd;AAED;;AACD,mBAAOsB,WAAP;AACD;;;;;;;yBAnBUkC,e;AAAe,O;;;;cAAfA,e;AAAe;;;;;wEAAfA,e,EAAe;gBAH3B,kDAG2B;iBAHtB;AACJve,gBAAI,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACII;;AACG;;AAAoC;;AAAiC;;AACxE;;;;AAD0C;;AAAA;;;;;;AAMtC;;AACE;;AAAuB;;AAAqC;;AAAQ;;AAAkB;;AAAS;;AAAC;;AAChG;;AAAuB;;AAA2E;;AACpG;;;;;;AAFsE;;AAAA;;;;;;AASpE;;AAA+C;;AAAmC;;;;;;;;AAdxF;;AACE;;AACE;;AAAI;;AAAyB;;AAE7B;;AAKA;;AACE;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACA;;AACF;;AACA;;AACF;;AAEF;;AAEA;;AACE;;AAAM;;AAAW;;AAA+C;;AAAO;;AAAI;;AAC7E;;AACF;;;;;;AAlB2B;;AAAA;;AAUhB;;AAAA;;AAM8B;;AAAA;;;;UDjBhC4e,qB;AAEX,uCAAoBne,KAApB,EACmBoe,WADnB,EAEoBne,MAFpB,EAEoC;AAAA;;AAFhB,eAAAD,KAAA,GAAAA,KAAA;AACD,eAAAoe,WAAA,GAAAA,WAAA;AACC,eAAAne,MAAA,GAAAA,MAAA;AAAmB;;;;qCAY/B;AAAA;;AACN,gBAAMoe,KAAK,GAAG,KAAKre,KAAL,CAAWoB,QAAX,CAAoBkd,QAApB,CAA6B5Y,GAA7B,CAAiC,OAAjC,CAAd;AACA5J,mBAAO,CAACC,GAAR,CAAYsiB,KAAZ;AACA,iBAAKD,WAAL,CAAiBG,YAAjB,CAA8BF,KAA9B,EAAqC7jB,SAArC,CAA+C,UAAAC,CAAC;AAAA,qBAAK,OAAI,CAACwN,OAAL,GAAe,IAApB;AAAA,aAAhD,EAA0E,UAAChM,KAAD;AAAA,qBAAW,OAAI,CAACgM,OAAL,GAAe,KAA1B;AAAA,aAA1E,EAHM,CAIN;AACD;;;yCAEW;AAAA;;AACV,iBAAKmW,WAAL,CAAiBI,SAAjB,CAA2B,KAAKC,QAAhC,EAA0CjkB,SAA1C,CAAoD,UAAAC,CAAC;AAAA,qBAAI,OAAI,CAACikB,QAAL,GAAgBjkB,CAApB;AAAA,aAArD;AACD;;;;;;;yBAzBU0jB,qB,EAAqB,+H,EAAA,wJ,EAAA,uH;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,gB;AAAA,e;AAAA,8b;AAAA;AAAA;ACVlC;;AACE;;AACE;;AACH;;AACG;;AAGA;;AAuBJ;;AAEI;;AACF;;AACF;;;;AA/BM;;AAAA;;AACG;;AAAA;;AAGA;;AAAA;;;;;;;;;wEDGIA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTnlB,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMQ;;;;;;AAKA;;;;;;AAFJ;;AACE;;AAGF;;;;;;AAGI;;;;;;AAFJ;;AACE;;AAGF;;;;;;AAGI;;;;;;AAFJ;;AACE;;AAGF;;;;;;AAGI;;;;;;;;;;;;;;;;UDjBKylB,kB;AAEX,oCAAmB3hB,IAAnB,EAA6C;AAAA;;AAA1B,eAAAA,IAAA,GAAAA,IAAA;AAEnB,eAAA4hB,MAAA,GAAS;AACPC,sBAAU,EAAE,SADL;AAEPC,gBAAI,EAAE;AAFC,WAAT;AAFgD;;;;qCAOxC;AACN,gBAAI,KAAK9hB,IAAL,CAAUwD,SAAV,CAAoByb,IAApB,KAA6B,CAAjC,EAAmC;AACjC,mBAAK2C,MAAL,CAAYC,UAAZ,GAAyB,WAAzB;AACD;AACF;;;;;;;yBAbUF,kB,EAAkB,wJ;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,gB;AAAA,gX;AAAA;AAAA;ACT/B;;AACE;;AAAoG;;AAAY;;AAChH;;AAEE;;AACE;;AAGF;;AACA;;AAKA;;AAKA;;AAKA;;AACE;;AAGF;;AACF;;AACF;;;;AA7B4C;;AAAA;;AACN;;AAAA,+FAAqB,SAArB,EAAqB,oGAArB,EAAqB,iBAArB,EAAqB,qBAArB;;AAON;;AAAA;;AAKA;;AAAA;;AAKF;;AAAA;;;;;;;;;;wEDVjBA,kB,EAAkB;gBAN9B,uDAM8B;iBANpB;AACT3lB,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD,CAHF;AAIT6lB,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMoB,U;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACeU;;AAAsD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpD;;AACE;;AACF;;AACF;;;;;;AAFI;;AAAA;;;;;;;;AAqHY;;AACE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAe;;AACzB;;AACF;;;;;;AAJU;;AAEE;;AAAA;;AACV;;AAAA;;;;;;;;AAlClB;;AACE;;AACE;;AACE;;AACE;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAgC;;;;AAChC;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAG;;AAAsC;;AACzC;;AAAG;;;;;;AACwC;;AAC7C;;AACA;;AACE;;AAAmB;;AAAO;;AAC1B;;AAAiB;;AAAkC;;AAC/C;AAAA;;AAAA;;AAAA,gEAAsC,CAAtC;AAAuC,WAAvC;;AAA0C;;AAAW;;AAAI;;AAC/D;;AACA;;AACE;;AACE;;AAKF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAvCa;;AAAA;;AAU6B;;AAAA;;AAMzB;;AAAA;;AACA;;AAAA;;AAKc;;AAAA;;AAK2B;;AAAA;;;;;;AAhC5D;;AACE;;AA4CF;;;;;;AA5CmC;;AAAA;;;;;;;;AAgFX;;AACE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAe;;AACzB;;AACF;;;;;;AAJU;;AAEE;;AAAA;;AACV;;AAAA;;;;;;;;AAnCpB;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAgC;;;;AAChC;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAG;;AAAsC;;AACzC;;AAAG;;;;;;AACwC;;AAC7C;;AACA;;AACE;;AAAmB;;AAAO;;AAC1B;;AAAiB;;AAAkC;;AAC/C;AAAA;;AAAA;;AAAA,gEAAsC,CAAtC;AAAuC,WAAvC;;AAA0C;;AAAW;;AAAI;;AAC/D;;AACA;;AACE;;AACE;;AAKF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAxCe;;AAAA;;AAU6B;;AAAA;;AAMzB;;AAAA;;AACA;;AAAA;;AAKc;;AAAA;;AAK2B;;AAAA;;;;;;AAnClE;;AACE;;AACE;;AACE;;AA8CF;;AACF;;AACF;;;;;;AAhD4B;;AAAA;;;;;;;;AAoFJ;;AACE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAe;;AACzB;;AACF;;;;;;AAJU;;AAEE;;AAAA;;AACV;;AAAA;;;;;;;;AAlClB;;AACE;;AACE;;AACE;;AACE;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAgC;;;;AAChC;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAG;;AAAsC;;AACzC;;AAAG;;;;;;AACwC;;AAC7C;;AACA;;AACE;;AAAmB;;AAAO;;AAC1B;;AAAiB;;AAAkC;;AAC/C;AAAA;;AAAA;;AAAA,gEAAsC,CAAtC;AAAuC,WAAvC;;AAA0C;;AAAW;;AAAI;;AAC/D;;AACA;;AACE;;AACE;;AAKF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAvCa;;AAAA;;AAU6B;;AAAA;;AAMzB;;AAAA;;AACA;;AAAA;;AAKc;;AAAA;;AAK2B;;AAAA;;;;;;AAnClE;;AACE;;AACE;;AACE;;AACE;;AA4CF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;;;;;AAlDyC;;AAAA;;AA8Cf;;AAAA;;;;;;AAO9B;;AACE;;AACF;;;;;;AAEE;;;;AAA+B;;;;UDvPxBC,iB;AAyBX,mCAAoBxb,WAApB,EACoBpJ,WADpB,EAEoBgd,cAFpB,EAGoB6H,QAHpB,EAIoBC,cAJpB,EAIuD;AAAA;;AAJnC,eAAA1b,WAAA,GAAAA,WAAA;AACA,eAAApJ,WAAA,GAAAA,WAAA;AACA,eAAAgd,cAAA,GAAAA,cAAA;AACA,eAAA6H,QAAA,GAAAA,QAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AA1BpB,eAAAxX,QAAA,GAAW,KAAX;AACA,eAAAoQ,KAAA,GAAgB,EAAhB;AACA,eAAAqH,QAAA,GAA0B,EAA1B;AACA,eAAAC,gBAAA,GAAkC,EAAlC;AACA,eAAAC,QAAA,GAAW,KAAX;AACA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,OAAA,GAAU,CACR;AAAC9lB,cAAE,EAAE,CAAL;AAAQ+lB,kBAAM,EAAG,QAAjB;AAA2B5T,gBAAI,EAAE,cAAjC;AAAiD6T,iBAAK,EAAE,SAAxD;AAAmEpb,iBAAK,EAAE;AAA1E,WADQ,EAER;AAAC5K,cAAE,EAAE,CAAL;AAAQ+lB,kBAAM,EAAG,QAAjB;AAA2B5T,gBAAI,EAAE,QAAjC;AAA2C6T,iBAAK,EAAE,MAAlD;AAA0Dpb,iBAAK,EAAE;AAAjE,WAFQ,EAGR;AAAC5K,cAAE,EAAE,CAAL;AAAQ+lB,kBAAM,EAAG,aAAjB;AAAgC5T,gBAAI,EAAE,WAAtC;AAAmD6T,iBAAK,EAAE,QAA1D;AAAoEpb,iBAAK,EAAE;AAA3E,WAHQ,CAAV;AAMA,eAAAqb,WAAA,GAAc,CACZ;AAACjmB,cAAE,EAAE,CAAL;AAAQ+lB,kBAAM,EAAG,WAAjB;AAA8B5T,gBAAI,EAAE,WAApC;AAAiDvH,iBAAK,EAAE;AAAxD,WADY,EAEZ;AAAC5K,cAAE,EAAE,CAAL;AAAQ+lB,kBAAM,EAAG,WAAjB;AAA8B5T,gBAAI,EAAE,aAApC;AAAmDvH,iBAAK,EAAE;AAA1D,WAFY,EAGZ;AAAC5K,cAAE,EAAE,CAAL;AAAQ+lB,kBAAM,EAAG,UAAjB;AAA6B5T,gBAAI,EAAE,KAAnC;AAA0CvH,iBAAK,EAAE;AAAjD,WAHY,CAAd;AAc0D;;;;qCAGlD;AAAA;;AACN,iBAAKsb,cAAL,GAAsB,KAAKD,WAAL,CAAiB,CAAjB,CAAtB,CADM,CAEN;AACA;;AAEA,iBAAKlc,WAAL,CAAiBoc,eAAjB,CAAiC,KAAKxlB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA5D,EAAgEc,SAAhE,CACE,UAAAC,CAAC,EAAI;AAAE,qBAAI,CAAC2kB,QAAL,GAAgB3kB,CAAhB;AACA,qBAAI,CAAC4kB,gBAAL,GAAwB5kB,CAAxB;AACA,qBAAI,CAAC6kB,QAAL,GAAgB,IAAhB;AACN,aAJH,EAIK,UAACrjB,KAAD;AAAA,qBAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAX;AAAA,aAJL;AAMD;;;2CAEgB8H,G,EAAS;AACxB,gBAAM+b,OAAO,GAAG,IAAIxmB,IAAJ,CAASyK,GAAG,CAACS,SAAb,CAAhB;;AACA,gBAAIsb,OAAJ,EAAY;AACV,qBAAOA,OAAO,CAACC,MAAR,EAAP;AACD;AACF;;;yCAEche,C,EAAG0d,M,EAAQO,U,EAAU;AAClClkB,mBAAO,CAACC,GAAR,CAAYikB,UAAZ;AACA,gBAAMC,KAAK,GAAe;AAC1BC,qBAAO,EAAEF,UAAU,CAACljB,KAAX,CAAiBuH,QADA;AAE1B8b,uBAAS,EAAEH,UAAU,CAACI,OAAX,CAAmB1mB,EAFJ;AAG1B+Z,4BAAc,EAAE,IAAIna,IAAJ,EAHU;AAI1B+mB,wBAAU,EAAE,IAAI/mB,IAAJ,EAJc;AAK1B4f,uBAAS,EAAE8G,UAAU,CAAC9G;AALI,aAA1B;AAOA,iBAAKoH,gBAAL,CAAsBL,KAAtB,EAA6BR,MAAM,CAAC/lB,EAApC;AACD;;;2CAEgBsmB,U,EAAwBO,M,EAAM;AAAA;;AAC7CP,sBAAU,CAACO,MAAX,GAAoBA,MAApB;AACA,iBAAKlJ,cAAL,CAAoBmJ,cAApB,CAAmCR,UAAnC,EAA+CxlB,SAA/C,CAAyD,UAAAC,CAAC,EAAI;AAChE,kBAAI,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEf,EAAH,IAAQ,CAAZ,EAAc;AACZ,uBAAI,CAAC+mB,YAAL,CAAkB,kBAAlB,EAAsC,IAAtC;AACD,eAFD,MAGI;AACF,uBAAI,CAACA,YAAL,CAAkB,oBAAlB,EAAwC,CAAxC;AACD;AACF,aAPG,EAOD,UAACxkB,KAAD,EAAW;AACZ,qBAAI,CAACwkB,YAAL,CAAkBxkB,KAAlB,EAAyB,CAAzB;AACD,aATG;AAUD;;;uCAEYka,K,EAAOla,K,EAAO;AACzB,iBAAKijB,QAAL,CAAcjG,iBAAd,CAAgC,8EAAhC,EAAmD;AACjDja,sBAAQ,EAAE,IAAI,IADmC;AAEjD/E,kBAAI,EAAE;AAAEmc,uBAAO,EAAED;AAAX;AAF2C,aAAnD;AAID;;;yCAEcrZ,K,EAAO;AACpB,iBAAKwiB,QAAL,GAAgB,IAAhB;;AACA,gBAAI,CAAC,KAAKC,OAAV,EAAkB;AACjB,mBAAKF,gBAAL,GAAwB,KAAKD,QAAL,CAAcvX,MAAd,CAAqB,UAAApN,CAAC;AAAA,uBAAIA,CAAC,CAACqC,KAAF,CAAQqI,SAAR,KAAsB,CAA1B;AAAA,eAAtB,CAAxB;AACD,aAFA,MAGG;AACH,mBAAKka,gBAAL,GAAwB,KAAKD,QAA7B;AACA;AACD;;;;;;;yBA7FUH,iB,EAAiB,0I,EAAA,wJ,EAAA,gJ,EAAA,wI,EAAA,+I;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,w1C;AAAA;AAAA;ACT9B;;AAIE;;AACE;;AAEE;;AACE;;AAAyB;;AAAM;;AAC/B;;AACE;;AAKF;;AACA;;AACE;;AAAkB;AAAA,qBAAgB,IAAAyB,cAAA,QAAhB;AAAsC,aAAtC,EAAuC,eAAvC,EAAuC;AAAA;AAAA,aAAvC;;AAA8E;;AAChG;;AACF;;AAEF;;AACF;;AAyEA;;AACE;;AACE;;AA8CA;;AAoDA;;AAuDF;;AACF;;AACA;;AAGA;;AACE;;AACF;;AACF;;AACF;;;;AAzP6B;;AAAA;;AAOuC;;AAAA;;AA8ElD;;AAAA;;AAEI;;AAAA;;AA8CA;;AAAA;;AAoDA;;AAAA;;AAyDb;;AAAA;;AAIU;;AAAA;;;;;;;;;;wEDvPNzB,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTjmB,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;AAsB5BynB,gBAAM;kBADL;AACK;;;;;;;;;;;;;;;;;;;AEpCR;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBQ;;AAAuD;;AAAM;;;;;;AAC7D;;AACA;;AACF;;;;;;;;AADE;;AAAA;;;;;;AAIA;;AAAuD;;AAAK;;;;;;;;AAC5D;;AAAmC;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;;;AAAwB;;AAAK;;;;;;AAA7B;;AAAA;;;;;;AAGvE;;AAAuD;;AAAM;;;;;;AAC7D;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGpC;;AAAuD;;AAAQ;;;;;;AAC/D;;AAAoC;;AAA6D;;;;;;AAAxC;;AAAA;;;;;;AAGzD;;AAAuD;;AAAM;;;;;;AAC7D;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAatC;;;;;;AACA;;;;;;;;UDrCOC,sB;AAOX,wCAAoBC,YAApB,EAAwDld,YAAxD,EAAoF;AAAA;;AAAhE,eAAAkd,YAAA,GAAAA,YAAA;AAAoC,eAAAld,YAAA,GAAAA,YAAA;AAExD,eAAAyX,gBAAA,GAA6B,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,YAAzB,EAAuC,OAAvC,CAA7B;AAFuF;;;;qCAK/E;AACN,iBAAKC,UAAL,GAAkB,IAAI,0EAAJ,EAAlB;AACA,iBAAKC,YAAL;AACD;;;4CAEiB;AAChB,iBAAKD,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;yCAEW;AAAA;;AACV,iBAAKqF,YAAL,CAAkBC,YAAlB,GAAiCtmB,SAAjC,CAA2C,UAAAC,CAAC,EAAI;AAC9C,qBAAI,CAAC4gB,UAAL,CAAgBphB,IAAhB,GAAuBQ,CAAC,CAACiR,QAAzB;AACD,aAFD,EAEG,UAACzP,KAAD,EAAW;AACZ,qBAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwBA,KAAxB;AACD,aAJD;AAKD;;;gCAEKa,K,EAAO4e,G,EAAG,CAEf;;;sCAEWC,G,EAAG;AACb,gBAAMC,WAAW,GAAID,GAAG,CAACjO,MAAJ,CAAgCzM,KAArD;AACA,iBAAKoa,UAAL,CAAgBxT,MAAhB,GAAyB+T,WAAW,CAACC,IAAZ,GAAmBrC,WAAnB,EAAzB;;AAEA,gBAAI,KAAK6B,UAAL,CAAgBE,SAApB,EAA+B;AAC7B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BO,SAA1B;AACD;AACF;;;;;;;yBAzCU8E,sB,EAAsB,4I,EAAA,4I;AAAA,O;;;cAAtBA,sB;AAAsB,0C;AAAA;AAAA;sEAEtB,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;AChBpB;;AACE;;AAAI;;AAAQ;;AACZ;;AACE;;AACE;;AACE;;AAA0C;AAAA,qBAAS,IAAA7E,WAAA,QAAT;AAA4B,aAA5B;;AAA1C;;AACA;;AACE;;AACE;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAYA;;AACA;;AACF;;AACF;;AACA;;AACF;;;;AAvC4B;;AAAA;;AAkCH;;AAAA;;AACP;;AAAA;;AAGD;;AAAA;;;;;;;;;;wEDxCJ6E,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACT5nB,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKwB,U;;;;;;;AAERqiB,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;;;;;;;;;AEhB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2BQ;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AACA;;AACF;;;;;;AADE;;AAAA;;;;;;AAIF;;AAAuC;;AAAM;;;;;;AAC7C;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGpC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAEtC;;;;;;AACA;;;;UDtBOuF,mB;AAEX,qCAAoB/gB,KAApB,EACoByD,WADpB,EAC8C;AAAA;;AAD1B,eAAAzD,KAAA,GAAAA,KAAA;AACA,eAAAyD,WAAA,GAAAA,WAAA;AAKV,eAAAud,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAIV,eAAA5F,gBAAA,GAA6B,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAA7B;AATgD;;;;qCAYxC;;;AACNtf,mBAAO,CAACC,GAAR,CAAY,KAAK6Q,MAAjB;AACA,iBAAKkF,IAAL,GAAY,KAAKlF,MAAjB;AACA,gBAAMqU,eAAe,GAAG,EAAxB;AACA,6BAAKnP,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAE9M,WAAX,MAAsB,IAAtB,IAAsB,aAAtB,GAAsB,MAAtB,GAAsB,GAAErF,OAAF,CAAU,UAAAoC,CAAC,EAAI;AACjCkf,6BAAe,CAAClnB,IAAhB,CAAqB;AACnBwF,oBAAI,EAAGwC,CAAC,CAACqe,OAAF,CAAU1N,SAAV,GAAsB,GAAtB,GAA4B3Q,CAAC,CAACqe,OAAF,CAAUzN,QAD1B;AAEnBhR,qBAAK,EAAEI,CAAC,CAACqe,OAAF,CAAUze,KAFE;AAGnBiR,qBAAK,EAAE7Q,CAAC,CAACqe,OAAF,CAAUxN;AAHE,eAArB;AAKD,aANmB,CAAtB;AAOA,iBAAK5N,WAAL,GAAmB,IAAI,0EAAJ,CAAuBic,eAAvB,CAAnB;AACD;;;yCAEW;AACV,iBAAKD,QAAL,CAAcnX,IAAd,CAAmB,IAAnB;AACD;;;;;;;yBA/BUkX,mB,EAAmB,+H,EAAA,0I;AAAA,O;;;cAAnBA,mB;AAAmB,uC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,gqB;AAAA;AAAA;ACpBhC;;AACE;;AACE;;AACE;;AACE;;AAAG;AAAA,qBAAS,IAAAG,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAU;;AAAI;;AAAW;;AACrD;;AACE;;AAA0B;;AAAe;;AACzC;;AAA6B;;AAAsB;;AACnD;;AAA6B;;AAA2C;;AAAkC;;AAC1G;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAwB;;;;;;AAAqD;;AAC7E;;AAA2B;;AAAuC;;AACpE;;AACF;;AACF;;AAEF;;AACA;;AAIE;;AACE;;AACE;;AACA;;AAIF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACA;;AACF;;AAeF;;AACF;;;;AArDoC;;AAAA;;AACG;;AAAA;;AACG;;AAAA;;AAAwC;;AAAA;;AAMhD;;AAAA;;AACG;;AAAA;;AAUT;;AAAA;;AAgBH;;AAAA;;AACP;;AAAA;;;;;;;;;;wEDtBLH,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT/nB,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;;AAM9B0T,gBAAM;kBADL;AACK,Y;AAEIoU,kBAAQ;kBAAjB;AAAiB;;;;;;;;;;;;;;;;;;;AE5BpB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6DU;;;;;;;;UDtDGG,oB;AAEX,wCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,oB;AAAoB,O;;;cAApBA,oB;AAAoB,wC;AAAA,iB;AAAA,e;AAAA,+tC;AAAA;AAAA;ACPjC;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACjC;;AAAwB;;AACD;;AACvB;;AAAoB;;AAAiE;;AACrF;;AAA4D;;AAAM;;AAAW;;AAAO;;AACtF;;AACA;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AAAmC;;AAAkB;;AACrD;;AAAuC;;AAIuB;;AAChE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAW;;AACpC;;AACE;;AACE;;AACE;;AAAyB;;AAAQ;;AACjC;;AACE;;AAGF;;AACF;;AACA;;AACE;;AAAyB;;AAAS;;AAClC;;AACE;;AAGF;;AACF;;AACF;;AACA;;AACE;;AAEF;;AACA;;AACE;;AACE;;AAAyB;;AAAS;;AAClC;;AACE;;AAGF;;AACF;;AACF;;AACF;;AACA;;AAA0B;;AAAkB;;AAC9C;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAa;;AACtC;;AACE;;AAEA;;AAEA;;AACE;;AACE;;AAAI;;AAAG;;AACP;;AAAG;;AAAe;;AACpB;;AACF;;AACA;;AAEA;;AAEF;;AACF;;AACF;;AACA;;;;AAxCwC;;AAAA;;;;;;;;;wEDtD3BA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTnoB,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKakoB,oB;;;;;AACX,sCAAuCC,MAAvC,EAAuD;AAAA;;AAAA;;AACrD;AADqC,kBAAAA,MAAA,GAAAA,MAAA;AAAgB;AAEtD,S,CAED;;;;;gCAEMvkB,K,EAAoB;AACxB,gCAAaA,KAAK,CAAC4H,SAAnB,gBAAkC5H,KAAK,CAAC6H,OAAxC,kBAAuD7H,KAAK,CAACwH,KAA7D;AACD;;;+BAEIxH,K,EAAoB;AACvB,gCAAaA,KAAK,CAAC4H,SAAnB,gBAAkC5H,KAAK,CAAC6H,OAAxC,kBAAuD7H,KAAK,CAACwH,KAA7D;AACD;;;8BAEGxH,K,EAAoB;AACtB,gCAAaA,KAAK,CAAC4H,SAAnB,gBAAkC5H,KAAK,CAAC6H,OAAxC,kBAAuD7H,KAAK,CAACwH,KAA7D;AACD;;;;QAjBuC,4E;;;yBAA7B8c,oB,EAAoB,uDACX,uDADW,C;AACF,O;;;eADlBA,oB;AAAoB,iBAApBA,oBAAoB;;;;;wEAApBA,oB,EAAoB;gBADhC;AACgC,U;;;;oBAClB,oD;qBAAO,uD;;;;;;;;;;;;;;;;;;;;;ACNtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaE,mB;AAEX,qCAAoBjnB,WAApB,EAAqD;AAAA;;AAAjC,eAAAA,WAAA,GAAAA,WAAA;AAAmC;;;;oCAE7CknB,O,EAA2B/f,I,EAAiB;AACpD,gBAAMjH,IAAI,GAAG,KAAKF,WAAL,CAAiBmG,SAA9B;AACA,gBAAMghB,UAAU,GAAGjnB,IAAI,IAAIA,IAAI,CAACknB,QAAhC;AACA,gBAAMC,QAAQ,GAAGH,OAAO,CAACzH,GAAR,CAAY6H,UAAZ,CAAuB,yEAAYzW,MAAnC,CAAjB;;AACA,gBAAIsW,UAAU,IAAIE,QAAlB,EAA4B;AAC1B,kBAAMvW,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9ByW,6BAAa,mBAAYrnB,IAAI,CAACknB,QAAjB,CADiB;AAE9B,+CAA+B,GAFD;AAG9B,oDAAoC;AAHN,eAAhB,CAAhB;AAKAF,qBAAO,GAAGA,OAAO,CAACM,KAAR,CAAc;AACpB1W,uBAAO,EAAPA;AADoB,eAAd,CAAV;AAGD;;AACD,mBAAO3J,IAAI,CAACsgB,MAAL,CAAYP,OAAZ,CAAP;AACD;;;;;;;yBAnBUD,mB,EAAmB,wI;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB;;;;;wEAAnBA,mB,EAAmB;gBAD/B;AAC+B,U;;;;;;;;;;;;;;;;;;;;;;ACbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaS,oB;AAEX,wCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,oB;AAAoB,O;;;cAApBA,oB;AAAoB,wC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPjC;;;;;;;;;wEDOaA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACT/oB,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa8oB,iB;AAKX,qCAAc;AAAA;;AAFJ,eAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AAEO;;;;qCAEgCC,G,EAAK;AACpDA,eAAG,CAAClgB,cAAJ;AACAkgB,eAAG,CAACC,eAAJ;AACA,iBAAKC,QAAL,GAAgB,IAAhB;AACD;;;sCAEyDF,G,EAAK;AAC7DA,eAAG,CAAClgB,cAAJ;AACAkgB,eAAG,CAACC,eAAJ;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACD;;;iCAE+CF,G,EAAK;AACnDA,eAAG,CAAClgB,cAAJ;AACAkgB,eAAG,CAACC,eAAJ;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACA,gBAAM3W,KAAK,GAAGyW,GAAG,CAACG,YAAJ,CAAiB5W,KAA/B;;AACA,gBAAIA,KAAK,CAAC7N,MAAN,GAAe,CAAnB,EAAsB;AACpB,mBAAKqkB,WAAL,CAAiBpY,IAAjB,CAAsB4B,KAAtB;AACD;AACF;;;;;;;yBA3BUuW,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,4C;AAAA,mB;AAAA;AAAA;;qBAAjB,sB;AAAkB,a,EAAA,W,EAAA;AAAA,qBAAlB,uBAAkB;AAAC,a,EAAA,M,EAAA;AAAA,qBAAnB,kBAAmB;AAAL,a;;;;;;;;;;;;;;wEAAdA,iB,EAAiB;gBAH7B,uDAG6B;iBAHnB;AACThpB,oBAAQ,EAAE;AADD,W;AAGmB,U;;;AAEGopB,kBAAQ,EAAE,CAAF;kBAAtC,yDAAsC;mBAA1B,gB;AAA0B,WAAE,C;AAC/BH,qBAAW;kBAApB;AAAoB,Y;AAIiBK,oBAAU;kBAA/C,0DAA+C;mBAAlC,U,EAAY,CAAC,QAAD,C;AAAsB,Y;AAMFC,qBAAW;kBAAxD,0DAAwD;mBAA3C,W,EAAa,CAAC,QAAD,C;AAA8B,Y;AAMhBC,gBAAM;kBAA9C,0DAA8C;mBAAjC,M,EAAQ,CAAC,QAAD,C;AAAyB;;;;;;;;;;;;;;;;;;;AC5BjD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,gB;AAEX,oCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,oC;AAAA,gB;AAAA,e;AAAA,gE;AAAA;;;;;wEAAhBA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTzpB,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;ACP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIM;;AACE;;;;AAEF;;;;;;AAFoE;;AAAA;;;;;;AAJxE;;AACE;;AAOF;;;;;;AAP6B;;AAAA;;;;UDMlBwpB,uB;AAEX,2CAAc;AAAA;;AAQd,eAAAC,aAAA,GAA4B;AAC1BC,gBAAI,EAAE,IADoB;AAE1BC,qBAAS,EAAE,KAFe;AAG1BC,qBAAS,EAAE,KAHe;AAI1BC,oBAAQ,EAAE,KAJgB;AAK1BC,gBAAI,EAAE,KALoB;AAM1BC,oBAAQ,EAAE,GANgB;AAO1BC,mBAAO,EAAE,CAAC,EAAD,EAAK,EAAL,CAPiB;AAQ1BC,sBAAU,EAAE;AACV,iBAAG;AACDC,qBAAK,EAAE;AADN,eADO;AAIV,mBAAK;AACHA,qBAAK,EAAE;AADJ,eAJK;AAOV,mBAAK;AACHA,qBAAK,EAAE;AADJ,eAPK;AAUV,mBAAK;AACHA,qBAAK,EAAE;AADJ;AAVK,aARc;AAsB1BC,eAAG,EAAE;AAtBqB,WAA5B;AARiB;;;;qCAiCT,CACP;;;;;;;yBApCUX,uB;AAAuB,O;;;cAAvBA,uB;AAAuB,2C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,+M;AAAA;AAAA;ACRpC;;AACE;;AASF;;;;AAVgB;;AACA;;AAAA;;;;;;;;;;wEDOHA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT1pB,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKyB,U;;;AAKlCoqB,qBAAW;kBADV;AACU,Y;AAGXC,oBAAU;kBADT;AACS;;;;;;;;;;;;;;;;;;;AEhBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACcgB;;AACI;;AACE;;AAAA;;AAEE;;AAEF;;AACF;;AACF;;;;;;;;AAPkB;;AAAA;;;;;;;;AAmB1B;;AACE;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AAAA;;AAEE;;AAEF;;AACF;;AACF;;;;;;;;AAPyC;;AAAA;;;;;;AAJ7C;;AACE;;AACA;;AACE;;AASF;;AACF;;;;;;AAZE;;AAAA;;AAEsC;;AAAA;;;;UD3BjCC,yB;AAEX,6CAAc;AAAA;;AAGd,eAAAC,UAAA,GAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAb;AAEA,eAAAC,UAAA,GAAa,CACV;AAAChqB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,mBAAd;AAAmC0B,iBAAK,EAAE,CAA1C;AAA6ChH,gBAAI,EAAE,KAAKwpB;AAAxD,WADU,EAEV;AAAC/pB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,4BAAd;AAA4C0B,iBAAK,EAAE,CAAnD;AAAsDhH,gBAAI,EAAE,KAAKwpB;AAAjE,WAFU,EAGV;AAAC/pB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,sBAAd;AAAsC0B,iBAAK,EAAE,CAA7C;AAAgDhH,gBAAI,EAAE,KAAKwpB;AAA3D,WAHU,EAIV;AAAC/pB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,iBAAd;AAAiC0B,iBAAK,EAAE,CAAxC;AAA2ChH,gBAAI,EAAE,KAAKwpB;AAAtD,WAJU,EAKV;AAAC/pB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,oBAAd;AAAoC0B,iBAAK,EAAE,CAA3C;AAA8ChH,gBAAI,EAAE,KAAKwpB;AAAzD,WALU,EAMV;AAAC/pB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,qBAAd;AAAqC0B,iBAAK,EAAE,CAA5C;AAA+ChH,gBAAI,EAAE,KAAKwpB;AAA1D,WANU,EAOV;AAAC/pB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,mBAAd;AAAmC0B,iBAAK,EAAE,CAA1C;AAA6ChH,gBAAI,EAAE,KAAKwpB;AAAxD,WAPU,EAQV;AAAC/pB,cAAE,EAAE,CAAL;AAAQ6F,gBAAI,EAAE,gBAAd;AAAgC0B,iBAAK,EAAE,CAAvC;AAA0ChH,gBAAI,EAAE,KAAKwpB;AAArD,WARU,CAAb;AAkBA,eAAAE,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAvBiB;;;;qCAyBT,CACP;;;qCAEUC,I,EAAMC,M,EAAM;AACrBA,kBAAM,CAAC5iB,KAAP,GAAe2iB,IAAf;AACA,gBAAME,GAAG,GAAG,KAAKJ,UAAL,CAAgB/gB,GAAhB,CAAoB,UAAAgS,CAAC;AAAA,qBAAIA,CAAC,CAAC1T,KAAN;AAAA,aAArB,EAAkC8iB,MAAlC,CAAyC,UAACpP,CAAD,EAAIqP,CAAJ,EAAS;AAE5D,qBAAOrP,CAAC,GAAGqP,CAAX;AACD,aAHW,CAAZ;AAKA,iBAAKjH,aAAL,GAAqB+G,GAAG,GAAG,CAA3B;AACD;;;qCAEO;AACN,iBAAKH,aAAL,CAAmB9Z,IAAnB,CAAyB;AAACsT,sBAAQ,EAAE;AAAX,aAAzB;AACD;;;kCAEI;AACH,iBAAKJ,aAAL,GAAqB,CAArB;AACA,iBAAK2G,UAAL,CAAgB/jB,OAAhB,CAAwB,UAAAlF,CAAC;AAAA,qBAAIA,CAAC,CAACwG,KAAF,GAAU,CAAd;AAAA,aAAzB;AACA,iBAAKgjB,SAAL,GAAiB,IAAjB;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACD;;;mCAEK;AACJ,iBAAKP,aAAL,CAAmB9Z,IAAnB,CAAyB;AAACsT,sBAAQ,EAAE;AAAX,aAAzB;AACD;;;qCAEO,CACP;;;;;;;yBAxDUqG,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,8C;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,m7C;AAAA;AAAA;ACPtC;;AACE;;AACE;;AACE;;AAAG;AAAA,qBAAS,IAAAW,QAAA,EAAT;AAAmB,aAAnB;;AACD;;AAAU;;AAAI;;AAChB;;AACA;;AACA;;AACF;;AACA;;AACI;;AACI;;AAAmB;;AAAa;;AAChC;;AACG;;AAAM;;AAAiB;;AACtB;;AASJ;;AAEJ;;AACJ;;AACF;;AACA;;AACE;;AAAmB;;AAA+B;;AAClD;;AACE;;AAcF;;AACA;;AAAqB;;AAAgB;;AACrC;;AACE;;AACE;;AAA2B;;AAAe;;AAC1C;;AAAkC;AAAA;AAAA;;AAAwB;;AAC5D;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAuB;;AAClD;;AAAkC;AAAA;AAAA;;AAAwB;;AAC5D;;AACF;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAA0B;AAAA,qBAAS,IAAAva,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAK;;AACnD;;AACA;;AACE;;AAAuC;AAAA,qBAAS,IAAAwa,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAChE;;AAAyC;;AAAM;;AACjD;;AACF;;AACF;;AACF;;;;AAlEyD;;AAAA;;AACnD;;AAAA;;AAMe;;AAAA;;AAC+B;;AAAA;;AAiBgC;;AAAA;;AAmB1C;;AAAA;;AAMA;;AAAA;;;;;;;;;wEDjD7BZ,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTxqB,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK2B,U;;;AAsBpC4f,iBAAO;kBADN;AACM,Y;AAGP6K,uBAAa;kBADZ;AACY;;;;;;;;;;;;;;;;;;;AE/Bf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaU,Y;AAEX,8BAAoBxZ,IAApB,EAA8CxQ,WAA9C,EAA+E;AAAA;;AAA3D,eAAAwQ,IAAA,GAAAA,IAAA;AAA0B,eAAAxQ,WAAA,GAAAA,WAAA;AAAoC;;;;yCAEtE;AACV,mBAAO,KAAKwQ,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,aAAkD;AACvDoE,6BAAe,EAAE;AADsC,aAAlD,CAAP;AAGD;;;sCAEWiS,O,EAAO;AACjB,mBAAO,KAAK1W,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,2BAAiEqW,OAAjE,EAA0E;AAC/EjS,6BAAe,EAAE;AAD8D,aAA1E,CAAP;AAGD;;;;;;;yBAdU+U,Y,EAAY,uH,EAAA,+H;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVnlB,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaolB,uB;AAEX,yCAAoBC,YAApB,EAA4C;AAAA;;AAAxB,eAAAA,YAAA,GAAAA,YAAA;AAA0B;;;;qCAEnC,CACV;;;iCAEM;AACL,gBAAMC,QAAQ,GAAG,KAAKD,YAAL,CAAkBxlB,IAAlB,CAAuB,yHAAvB,EAAuD;AAAE0lB,kBAAI,EAAE;AAAR,aAAvD,CAAjB;AACAD,oBAAQ,CAACE,iBAAT,CAA2BnlB,IAA3B,GAAkC,OAAlC;AACD;;;;;;;yBAVU+kB,uB,EAAuB,oI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,e;AAAA,u2D;AAAA;AAAA;ACTpC;;AACE;;AACE;;AAA0B;;AAAY;;AACxC;;AACA;;AACE;;AACE;;AACE;;AAA0C;;AAA4B;;AACtE;;AAAqD;;AAA8E;;AACrI;;AACA;;AACE;;AACE;;AAGA;;AACE;;AACE;;AACI;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACE;;AACE;;AACF;;AACJ;;AACA;;AAGJ;;AACF;;AACF;;AACF;;AAEF;;AACF;;AACA;;AACE;;AAEE;;AAAoD;;AAAmC;;AACvF;;AAEE;;AAEA;;AACE;;AAAiE;;AAAS;;AAC5E;;AACF;;AACF;;AACA;;AACE;;AAAyC;;AAAuC;;AAAQ;;AAExF;;AAAyC;;AAAoC;;AAAO;;AAEpF;;AAA4C;;AAA0C;;AAAQ;;AAE9F;;AAAyC;;AAAwC;;AAAQ;;AAC3F;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AAEF;;AACF;;AACF;;AACA;;AACK;;AACC;;AAA6C;AAAA,qBAAS,IAAAvlB,IAAA,EAAT;AAAe,aAAf;;AAC3C;;AACF;;AACD;;AACL;;AACF;;AACA;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACI;;AACE;;AAAiD;;AAC7D;;AACU;;AACJ;;AACF;;AAEF;;AACF;;;;;;;;wED5IaulB,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTtrB,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;AETpC,UAAIyJ,GAAG,GAAG;AACT,gBAAQ,MADC;AAET,mBAAW,MAFF;AAGT,gBAAQ,MAHC;AAIT,mBAAW,MAJF;AAKT,sBAAc,MALL;AAMT,mBAAW,MANF;AAOT,sBAAc,MAPL;AAQT,mBAAW,MARF;AAST,sBAAc,MATL;AAUT,mBAAW,MAVF;AAWT,sBAAc,MAXL;AAYT,mBAAW,MAZF;AAaT,sBAAc,MAbL;AAcT,mBAAW,MAdF;AAeT,sBAAc,MAfL;AAgBT,mBAAW,MAhBF;AAiBT,gBAAQ,MAjBC;AAkBT,mBAAW,MAlBF;AAmBT,gBAAQ,MAnBC;AAoBT,mBAAW,MApBF;AAqBT,gBAAQ,MArBC;AAsBT,mBAAW,MAtBF;AAuBT,gBAAQ,MAvBC;AAwBT,mBAAW,MAxBF;AAyBT,gBAAQ,MAzBC;AA0BT,mBAAW,MA1BF;AA2BT,sBAAc,MA3BL;AA4BT,mBAAW,MA5BF;AA6BT,gBAAQ,MA7BC;AA8BT,mBAAW,MA9BF;AA+BT,gBAAQ,MA/BC;AAgCT,mBAAW,MAhCF;AAiCT,gBAAQ,MAjCC;AAkCT,mBAAW,MAlCF;AAmCT,gBAAQ,MAnCC;AAoCT,mBAAW,MApCF;AAqCT,gBAAQ,MArCC;AAsCT,mBAAW,MAtCF;AAuCT,gBAAQ,MAvCC;AAwCT,mBAAW,MAxCF;AAyCT,gBAAQ,MAzCC;AA0CT,mBAAW,MA1CF;AA2CT,gBAAQ,MA3CC;AA4CT,mBAAW,MA5CF;AA6CT,gBAAQ,MA7CC;AA8CT,mBAAW,MA9CF;AA+CT,sBAAc,MA/CL;AAgDT,mBAAW,MAhDF;AAiDT,sBAAc,MAjDL;AAkDT,mBAAW,MAlDF;AAmDT,gBAAQ,MAnDC;AAoDT,mBAAW,MApDF;AAqDT,gBAAQ,MArDC;AAsDT,mBAAW,MAtDF;AAuDT,mBAAW,MAvDF;AAwDT,sBAAc,MAxDL;AAyDT,mBAAW,MAzDF;AA0DT,sBAAc,MA1DL;AA2DT,mBAAW,MA3DF;AA4DT,sBAAc,MA5DL;AA6DT,mBAAW,MA7DF;AA8DT,sBAAc,MA9DL;AA+DT,mBAAW,MA/DF;AAgET,sBAAc,MAhEL;AAiET,mBAAW,MAjEF;AAkET,sBAAc,MAlEL;AAmET,mBAAW,MAnEF;AAoET,sBAAc,MApEL;AAqET,mBAAW,MArEF;AAsET,sBAAc,MAtEL;AAuET,gBAAQ,MAvEC;AAwET,mBAAW,MAxEF;AAyET,gBAAQ,MAzEC;AA0ET,mBAAW,MA1EF;AA2ET,sBAAc,MA3EL;AA4ET,mBAAW,MA5EF;AA6ET,sBAAc,MA7EL;AA8ET,mBAAW,MA9EF;AA+ET,sBAAc,MA/EL;AAgFT,mBAAW,MAhFF;AAiFT,gBAAQ,MAjFC;AAkFT,mBAAW,MAlFF;AAmFT,gBAAQ,MAnFC;AAoFT,mBAAW,MApFF;AAqFT,gBAAQ,MArFC;AAsFT,mBAAW,MAtFF;AAuFT,gBAAQ,MAvFC;AAwFT,mBAAW,MAxFF;AAyFT,iBAAS,MAzFA;AA0FT,oBAAY,MA1FH;AA2FT,gBAAQ,MA3FC;AA4FT,mBAAW,MA5FF;AA6FT,gBAAQ,MA7FC;AA8FT,mBAAW,MA9FF;AA+FT,sBAAc,MA/FL;AAgGT,mBAAW,MAhGF;AAiGT,sBAAc,MAjGL;AAkGT,mBAAW,MAlGF;AAmGT,gBAAQ,MAnGC;AAoGT,mBAAW,MApGF;AAqGT,gBAAQ,MArGC;AAsGT,mBAAW,MAtGF;AAuGT,gBAAQ,MAvGC;AAwGT,mBAAW,MAxGF;AAyGT,gBAAQ,MAzGC;AA0GT,mBAAW,MA1GF;AA2GT,sBAAc,MA3GL;AA4GT,yBAAiB,MA5GR;AA6GT,sBAAc,MA7GL;AA8GT,yBAAiB,MA9GR;AA+GT,gBAAQ,MA/GC;AAgHT,mBAAW,MAhHF;AAiHT,gBAAQ,MAjHC;AAkHT,mBAAW,MAlHF;AAmHT,gBAAQ,MAnHC;AAoHT,mBAAW,MApHF;AAqHT,gBAAQ,MArHC;AAsHT,mBAAW,MAtHF;AAuHT,gBAAQ,MAvHC;AAwHT,mBAAW,MAxHF;AAyHT,mBAAW,MAzHF;AA0HT,sBAAc,MA1HL;AA2HT,gBAAQ,MA3HC;AA4HT,mBAAW,MA5HF;AA6HT,gBAAQ,MA7HC;AA8HT,mBAAW,MA9HF;AA+HT,gBAAQ,MA/HC;AAgIT,mBAAW,MAhIF;AAiIT,sBAAc,MAjIL;AAkIT,mBAAW,MAlIF;AAmIT,gBAAQ,MAnIC;AAoIT,mBAAW,MApIF;AAqIT,gBAAQ,MArIC;AAsIT,mBAAW,MAtIF;AAuIT,gBAAQ,MAvIC;AAwIT,mBAAW,MAxIF;AAyIT,gBAAQ,MAzIC;AA0IT,mBAAW,MA1IF;AA2IT,gBAAQ,MA3IC;AA4IT,mBAAW,MA5IF;AA6IT,gBAAQ,MA7IC;AA8IT,mBAAW,MA9IF;AA+IT,gBAAQ,MA/IC;AAgJT,mBAAW,MAhJF;AAiJT,gBAAQ,MAjJC;AAkJT,mBAAW,MAlJF;AAmJT,gBAAQ,MAnJC;AAoJT,mBAAW,MApJF;AAqJT,gBAAQ,MArJC;AAsJT,mBAAW,MAtJF;AAuJT,gBAAQ,MAvJC;AAwJT,mBAAW,MAxJF;AAyJT,gBAAQ,MAzJC;AA0JT,mBAAW,MA1JF;AA2JT,gBAAQ,MA3JC;AA4JT,mBAAW,MA5JF;AA6JT,gBAAQ,MA7JC;AA8JT,mBAAW,MA9JF;AA+JT,gBAAQ,MA/JC;AAgKT,mBAAW,MAhKF;AAiKT,gBAAQ,MAjKC;AAkKT,mBAAW,MAlKF;AAmKT,gBAAQ,MAnKC;AAoKT,mBAAW,MApKF;AAqKT,gBAAQ,MArKC;AAsKT,mBAAW,MAtKF;AAuKT,gBAAQ,MAvKC;AAwKT,mBAAW,MAxKF;AAyKT,gBAAQ,MAzKC;AA0KT,mBAAW,MA1KF;AA2KT,sBAAc,MA3KL;AA4KT,mBAAW,MA5KF;AA6KT,gBAAQ,MA7KC;AA8KT,mBAAW,MA9KF;AA+KT,gBAAQ,MA/KC;AAgLT,mBAAW,MAhLF;AAiLT,gBAAQ,MAjLC;AAkLT,mBAAW,MAlLF;AAmLT,gBAAQ,MAnLC;AAoLT,mBAAW,MApLF;AAqLT,gBAAQ,MArLC;AAsLT,mBAAW,MAtLF;AAuLT,sBAAc,MAvLL;AAwLT,mBAAW,MAxLF;AAyLT,gBAAQ,MAzLC;AA0LT,mBAAW,MA1LF;AA2LT,oBAAY,MA3LH;AA4LT,uBAAe,MA5LN;AA6LT,mBAAW,MA7LF;AA8LT,sBAAc,MA9LL;AA+LT,gBAAQ,MA/LC;AAgMT,mBAAW,MAhMF;AAiMT,gBAAQ,MAjMC;AAkMT,mBAAW,MAlMF;AAmMT,sBAAc,MAnML;AAoMT,mBAAW,MApMF;AAqMT,gBAAQ,MArMC;AAsMT,mBAAW,MAtMF;AAuMT,gBAAQ,MAvMC;AAwMT,mBAAW,MAxMF;AAyMT,gBAAQ,MAzMC;AA0MT,mBAAW,MA1MF;AA2MT,gBAAQ,MA3MC;AA4MT,mBAAW,MA5MF;AA6MT,gBAAQ,MA7MC;AA8MT,mBAAW,MA9MF;AA+MT,gBAAQ,MA/MC;AAgNT,mBAAW,MAhNF;AAiNT,gBAAQ,MAjNC;AAkNT,mBAAW,MAlNF;AAmNT,gBAAQ,MAnNC;AAoNT,mBAAW,MApNF;AAqNT,gBAAQ,MArNC;AAsNT,qBAAa,MAtNJ;AAuNT,wBAAgB,MAvNP;AAwNT,mBAAW,MAxNF;AAyNT,gBAAQ,MAzNC;AA0NT,mBAAW,MA1NF;AA2NT,gBAAQ,MA3NC;AA4NT,mBAAW,MA5NF;AA6NT,gBAAQ,MA7NC;AA8NT,mBAAW,MA9NF;AA+NT,gBAAQ,MA/NC;AAgOT,mBAAW,MAhOF;AAiOT,gBAAQ,MAjOC;AAkOT,mBAAW,MAlOF;AAmOT,iBAAS,MAnOA;AAoOT,oBAAY,MApOH;AAqOT,gBAAQ,MArOC;AAsOT,mBAAW,MAtOF;AAuOT,gBAAQ,MAvOC;AAwOT,mBAAW,MAxOF;AAyOT,gBAAQ,MAzOC;AA0OT,mBAAW,MA1OF;AA2OT,mBAAW,MA3OF;AA4OT,sBAAc,MA5OL;AA6OT,iBAAS,MA7OA;AA8OT,oBAAY,MA9OH;AA+OT,gBAAQ,MA/OC;AAgPT,mBAAW,MAhPF;AAiPT,iBAAS,MAjPA;AAkPT,oBAAY,MAlPH;AAmPT,iBAAS,MAnPA;AAoPT,sBAAc,MApPL;AAqPT,yBAAiB,MArPR;AAsPT,oBAAY,MAtPH;AAuPT,mBAAW,MAvPF;AAwPT,sBAAc,MAxPL;AAyPT,gBAAQ,MAzPC;AA0PT,mBAAW,MA1PF;AA2PT,gBAAQ,MA3PC;AA4PT,mBAAW,MA5PF;AA6PT,gBAAQ,MA7PC;AA8PT,qBAAa,MA9PJ;AA+PT,wBAAgB,MA/PP;AAgQT,mBAAW,MAhQF;AAiQT,gBAAQ,MAjQC;AAkQT,mBAAW,MAlQF;AAmQT,sBAAc,MAnQL;AAoQT,yBAAiB,MApQR;AAqQT,gBAAQ,MArQC;AAsQT,mBAAW,MAtQF;AAuQT,mBAAW,MAvQF;AAwQT,sBAAc,MAxQL;AAyQT,mBAAW,MAzQF;AA0QT,sBAAc,MA1QL;AA2QT,mBAAW,MA3QF;AA4QT,sBAAc,MA5QL;AA6QT,mBAAW,MA7QF;AA8QT,sBAAc;AA9QL,OAAV;;AAkRA,eAASgiB,cAAT,CAAwBC,GAAxB,EAA6B;AAC5B,YAAIlrB,EAAE,GAAGmrB,qBAAqB,CAACD,GAAD,CAA9B;AACA,eAAOE,mBAAmB,CAACprB,EAAD,CAA1B;AACA;;AACD,eAASmrB,qBAAT,CAA+BD,GAA/B,EAAoC;AACnC,YAAG,CAACE,mBAAmB,CAACC,CAApB,CAAsBpiB,GAAtB,EAA2BiiB,GAA3B,CAAJ,EAAqC;AACpC,cAAI7iB,CAAC,GAAG,IAAIgV,KAAJ,CAAU,yBAAyB6N,GAAzB,GAA+B,GAAzC,CAAR;AACA7iB,WAAC,CAACkC,IAAF,GAAS,kBAAT;AACA,gBAAMlC,CAAN;AACA;;AACD,eAAOY,GAAG,CAACiiB,GAAD,CAAV;AACA;;AACDD,oBAAc,CAAC1nB,IAAf,GAAsB,SAAS+nB,kBAAT,GAA8B;AACnD,eAAO3I,MAAM,CAACpf,IAAP,CAAY0F,GAAZ,CAAP;AACA,OAFD;;AAGAgiB,oBAAc,CAACM,OAAf,GAAyBJ,qBAAzB;AACAK,YAAM,CAACC,OAAP,GAAiBR,cAAjB;AACAA,oBAAc,CAACjrB,EAAf,GAAoB,MAApB;;;;;;;;;;;;;;;;AClSA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa0rB,wB;AAEX,0CAAoBrlB,WAApB,EACmB0V,SADnB,EAE4Cxb,IAF5C,EAGoBorB,QAHpB,EAGwC;AAAA;;AAHpB,eAAAtlB,WAAA,GAAAA,WAAA;AACD,eAAA0V,SAAA,GAAAA,SAAA;AACyB,eAAAxb,IAAA,GAAAA,IAAA;AACxB,eAAAorB,QAAA,GAAAA,QAAA;AAAuB;;;;qCAInC;AACNvpB,mBAAO,CAACC,GAAR,CAAY,KAAK9B,IAAjB;AACA,iBAAKqrB,cAAL,GAAsB,KAAKvlB,WAAL,CAAiBY,KAAjB,CAAuB;AAC3CjH,gBAAE,EAAE,CAAC,KAAKO,IAAL,CAAUP,EAAX,EAAe,0DAAWmH,QAA1B,CADuC;AAE3CuM,oBAAM,EAAE,CAAC,KAAKnT,IAAL,CAAUmT,MAAX,EAAmB,0DAAWvM,QAA9B,CAFmC;AAG3CwD,sBAAQ,EAAE,CAAC,KAAKpK,IAAL,CAAUoK,QAAX,EAAqB,0DAAWxD,QAAhC,CAHiC;AAI3C0kB,2BAAa,EAAE,CAAC,KAAKtrB,IAAL,CAAUsrB,aAAX,EAA0B,0DAAW1kB,QAArC,CAJ4B;AAK3C2kB,4BAAc,EAAE,CAAC,KAAKH,QAAL,CAAcI,SAAd,CAAwB,KAAKxrB,IAAL,CAAUurB,cAAlC,EAAkD,YAAlD,CAAD,EAAmE,0DAAW3kB,QAA9E,CAL2B;AAM3C6kB,uBAAS,EAAE,CAAC,KAAKzrB,IAAL,CAAUyrB,SAAX,CANgC;AAO3CC,oBAAM,EAAE,CAAC,KAAK1rB,IAAL,CAAU0rB,MAAX,CAPmC;AAQ3CC,qBAAO,EAAE,CAAC,KAAK3rB,IAAL,CAAU2rB,OAAX;AARkC,aAAvB,CAAtB;AAUD;;;sCAMQ;AACP,iBAAKnQ,SAAL,CAAeoQ,KAAf;AACD;;;gDAEkB;AACjB,iBAAKpQ,SAAL,CAAeoQ,KAAf,CAAqB,KAAKP,cAAL,CAAoBrkB,KAAzC;AACD;;;8BAVI;AACH,mBAAO,KAAKqkB,cAAL,CAAoBrjB,QAA3B;AACD;;;;;;;yBAzBUmjB,wB,EAAwB,2H,EAAA,sI,EAAA,gEAIf,wEAJe,C,EAIA,yH;AAAA,O;;;cAJxBA,wB;AAAwB,qC;AAAA,iB;AAAA,e;AAAA,uxB;AAAA;AAAA;;;ACRrC;;AAAqB;;AAAgD;;AAErE;;AACE;;AAAmC;AAAA,qBAAU,IAAAU,mBAAA,EAAV;AAA+B,aAA/B;;AACjC;;AACE;;AACE;;AAAkB;;AAAI;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAoB;;AAAU;;AAC9B;;AACE;;AACA;;AAAqB;;AAAO;;AAC5B;;AAAsB;;AAAM;;AAC9B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAoB;;AAAM;;AAC1B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqB;;AAAO;;AAC5B;;AACF;;AACF;;AACA;;AACF;;AAoCF;;AACA;;AACE;;AAAmB;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAsB;;AAAS;;AAClD;;AAAiC;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAA6B,aAA7B;;AAAgD;;AAAE;;AACrF;;;;AAzEqB;;AAAA;;AAGb;;AAAA;;;;;;;;;wEDKKX,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTnsB,uBAAW,EAAE,kCADJ;AAETC,qBAAS,EAAE,CAAC,iCAAD;AAFF,W;AAI0B,U;;;;;;;;oBAItB,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AEbtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYa8sB,Y;AAKX,8BAAoB3rB,WAApB,EAAmD;AAAA;;AAAA;;AAA/B,eAAAA,WAAA,GAAAA,WAAA;AAJpB,eAAAiK,KAAA,GAAQ,iBAAR;AAEA,eAAA2hB,UAAA,GAAa,KAAb;AAGE,eAAK5rB,WAAL,CAAiBE,IAAjB,CAAsBC,SAAtB,CAAgC,UAAAC,CAAC;AAAA,mBAAI,OAAI,CAACF,IAAL,GAAYE,CAAhB;AAAA,WAAjC;AACD;;;;qCAEO,CACN;AACA;AACA;AACA;AACA;AACD;;;mCAEQ;AACP,iBAAKJ,WAAL,CAAiB6rB,MAAjB;AACD;;;;;;;yBAnBUF,Y,EAAY,iJ;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,iC;AAAA;AAAA;ACFzB;;AACE;;AACF;;;;;;;;;wEDAaA,Y,EAAY;gBANxB,uDAMwB;iBANd;AACThtB,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAMc,U;;;;;;;;;;;;;;;;;;;;;;AEZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuBQ;;;;;;;;;;;;;;;;;;;;UDbKitB,qB,GAQX,+BAAoBC,kBAApB,EAA4D;AAAA;;AAAxC,aAAAA,kBAAA,GAAAA,kBAAA;AANpB,aAAAC,UAAA,GAAkC,KAAKD,kBAAL,CAAwBE,OAAxB,CAAgC,gEAAYC,OAA5C,EAC/B5rB,IAD+B,CAE9B,2DAAI,UAAA0P,MAAM;AAAA,iBAAIA,MAAM,CAACmc,OAAX;AAAA,SAAV,CAF8B,EAG9B,oEAH8B,CAAlC;AAM8D,O;;;yBARnDL,qB,EAAqB,uI;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,iB;AAAA,gB;AAAA,ub;AAAA;AAAA;;;ACVlC;;AACE;;;;;;;;AAIE;;AAAa;;AAAsD;;AACnE;;AACE;;AAAiB;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAAuB,aAAvB;;AAAmD;;AAAS;;AAC7E;;AAAiB;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAAuB,aAAvB;;AAA0D;;AAAM;;AACjF;;AAAiB;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAAuB,aAAvB;;AAA4D;;AAAQ;;AACrF;;AAAiB;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAAuB,aAAvB;;AAA4D;;AAAQ;;AACvF;;AACF;;AACA;;AACE;;AACE;;AAIE;AAAA;;AAAA;;AAAA,qBAAS,YAAT;AAAwB,aAAxB;;AACA;;AAA4C;;AAAI;;AACpD;;AACE;;AACE;;AACF;;AACF;;AACA;;AACF;;AACF;;;;;;AAzBM;;AAAA,iLAA+C,QAA/C,EAA+C,0FAA/C;;AADA;;AAK0C;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAanC;;AAAA;;;;;;;;;;wEDbAA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTntB,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUY;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACS;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAOrC;;AACE;;AACE;;AAAyB;;AAAO;;AAChC;;AAAsB;;AAAK;;AAC7B;;AACA;;AAAQ;;AAAS;;AACnB;;;;;;AADU;;AAAA;;;;;;AAGR;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAsB;;AAAgB;;AACxC;;AACA;;AACC;;;;;;AACD;;AACF;;AACF;;AACA;;AACE;;AAA6B;;AAAqC;;AAClE;;AAAmC;;;;;;AAAuF;;AAC1H;;AACE;;AACE;;AAAM;;AAAuB;;AAC7B;;AAKA;;AACE;;AAA8C;;AAAY;;AAC5D;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA1BkC;;AAAA;;AAGvB;;AAAA;;AAK0B;;AAAA;;AACM;;AAAA;;AAGzB;;AAAA;;;;;;AA7BtB;;AACE;;AAOA;;AACE;;;;AAmCF;;AACF;;;;;;AA5C4E;;AAAA;;AAStE;;AAAA;;;;;;AAgGN;;AACE;;AACF;;;;UDnHOutB,sB;AAEX,wCAAoBnb,aAApB,EACoBjR,WADpB,EAEoBkR,YAFpB,EAEuD;AAAA;;AAFnC,eAAAD,aAAA,GAAAA,aAAA;AACA,eAAAjR,WAAA,GAAAA,WAAA;AACA,eAAAkR,YAAA,GAAAA,YAAA;AASpB,eAAAiU,OAAA,GAAU,CACR;AAAE9lB,cAAE,EAAE,CAAN;AAAS6F,gBAAI,EAAE;AAAf,WADQ,EAER;AAAE7F,cAAE,EAAE,CAAN;AAAS6F,gBAAI,EAAE;AAAf,WAFQ,CAAV;AAT0D;;;;qCAelD;AAAA;;AACN,iBAAK+L,aAAL,CAAmBob,mBAAnB,CAAuC,KAAKrsB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAAlE,EACCc,SADD,CACW,UAAAC,CAAC;AAAA,qBAAI,OAAI,CAACse,OAAL,GAAete,CAAnB;AAAA,aADZ,EACkC,UAACwB,KAAD;AAAA,qBAAW,OAAI,CAACA,KAAL,GAAaA,KAAxB;AAAA,aADlC,EADM,CAGN;AACA;AACA;;AACA,iBAAK2jB,cAAL,GAAsB,KAAKJ,OAAL,CAAa,CAAb,CAAtB;AACD;;;uCAEYvlB,I,EAAM;AACjB,gBAAM0sB,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC3sB,IAAD,CAAT,CAAb;AACA,gBAAM6f,GAAG,GAAGre,MAAM,CAACorB,GAAP,CAAWC,eAAX,CAA2BH,IAA3B,CAAZ;AACAlrB,kBAAM,CAACsD,IAAP,CAAY9E,IAAZ;AACD;;;qCAEUwR,K,EAAK;AACd,iBAAKuJ,YAAL,GAAoBvJ,KAAK,CAAC,CAAD,CAAzB;AACA,iBAAKsb,UAAL,GAAkB,IAAlB;AACD;;;mCAEQta,U,EAAU;AAAA;;AACjBA,sBAAU,CAACua,cAAX,GAA4B,IAAI1tB,IAAJ,EAA5B;AACAmT,sBAAU,CAAC8T,MAAX,GAAoB,CAApB;;AACA,gBAAI,KAAKwG,UAAT,EAAoB;AAClB,kBAAMrY,YAAY,GAAI,KAAKsG,YAA3B;AACA,kBAAMrG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,sBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,YAAxB,EAAsCA,YAAY,CAACnP,IAAnD;AACA,mBAAKgM,YAAL,CAAkBuB,UAAlB,CAA6B6B,QAA7B,EAAuCnU,SAAvC,CAAiD,UAAAC,CAAC,EAAI;AACpDgS,0BAAU,CAACwa,cAAX,GAA4BxsB,CAAC,CAACsS,QAA9B;;AACA,uBAAI,CAACma,MAAL,CAAYza,UAAZ;AACD,eAHD;AAID,aARD,MASI;AACF,mBAAKya,MAAL,CAAYza,UAAZ;AACD;AACF;;;iCAEMA,U,EAAU;AAAA;;AACf,gBAAM0a,kBAAkB,GAAG;AACzBla,0BAAY,EAAER,UAAU,CAACQ,YADA;AAEzBsT,oBAAM,EAAE,CAFiB;AAGzByG,4BAAc,EAAEva,UAAU,CAACua,cAHF;AAIzBC,4BAAc,EAAExa,UAAU,CAACwa,cAJF;AAKzB7Z,oBAAM,EAAEX,UAAU,CAACW;AALM,aAA3B;AAOA,iBAAK9B,aAAL,CAAmB8b,wBAAnB,CAA4CD,kBAA5C,EAAgE3sB,SAAhE,CAA0E,UAAAC,CAAC,EAAI;AAAC,kBAAIA,CAAC,IAAI,CAAT,EAAW;AACzF,uBAAI,CAAC4sB,SAAL,GAAiB,IAAjB;AACD;AAAC,aAFF,EAEI,UAACprB,KAAD;AAAA,qBAAW,OAAI,CAACorB,SAAL,GAAiB,KAA5B;AAAA,aAFJ;AAGD;;;qCAEO;AACN,iBAAKrS,YAAL,GAAoB,IAApB;AACD;;;;;;;yBAvEUyR,sB,EAAsB,8I,EAAA,wJ,EAAA,0J;AAAA,O;;;cAAtBA,sB;AAAsB,0C;AAAA,iB;AAAA,e;AAAA,4pC;AAAA;AAAA;ACVnC;;AACE;;AACE;;AACE;;AACE;;AAAK;;AAAuB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AA0GA;;AAGF;;AAEF;;AACF;;;;AA7Ha;;AAAA;;AAGD;;AAAA;;AAIE;;AAAA;;AAKJ;;AAAA;;AACmB;;AAAA;;AA0GA;;AAAA;;;;;;;;;;wEDjHhBA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTztB,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACIgB;;AACI;;AACI;;AACI;;AAAiB;;AAAU;;AAAe;;AAAW;;AACzD;;AACA;;AACI;;AACI;;AAAwB;;AAAe;;AACvC;;AAAsB;;AAAgB;;AAC1C;;AACJ;;AACJ;;AACJ;;;;;;AAVyB;;AAAA;;AACc;;AAAA;;AAIC;;AAAA;;AACF;;AAAA;;;;UDHzCouB,uB;AA4CX,yCAAoBC,YAApB,EAAgD;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AA1CpB,eAAAC,OAAA,GAAuB,CACrB;AAAE9tB,cAAE,EAAE,CAAN;AAASmS,gBAAI,EAAE,aAAf;AAA8B4b,gBAAI,EAAE,aAApC;AAAmDC,mBAAO,EAAG,QAA7D;AAAuEzmB,iBAAK,EAAG,GAA/E;AAAoF8T,gBAAI,EAAE,EAA1F;AAA8F2K,iBAAK,EAAE;AAArG,WADqB,EAErB;AAAEhmB,cAAE,EAAE,CAAN;AAASmS,gBAAI,EAAE,MAAf;AAAuB4b,gBAAI,EAAE,cAA7B;AAA6CC,mBAAO,EAAG,eAAvD;AAAwEzmB,iBAAK,EAAG,GAAhF;AAAqF8T,gBAAI,EAAE,EAA3F;AAA+F2K,iBAAK,EAAE;AAAtG,WAFqB,EAGrB;AAAEhmB,cAAE,EAAE,CAAN;AAASmS,gBAAI,EAAE,iBAAf;AAAkC4b,gBAAI,EAAE,eAAxC;AAAyDC,mBAAO,EAAG,eAAnE;AAAoFzmB,iBAAK,EAAG,GAA5F;AAAiG8T,gBAAI,EAAE,EAAvG;AAA2G2K,iBAAK,EAAE;AAAlH,WAHqB,EAIrB;AAAEhmB,cAAE,EAAE,CAAN;AAASmS,gBAAI,EAAE,cAAf;AAA+B4b,gBAAI,EAAE,SAArC;AAAgDC,mBAAO,EAAG,eAA1D;AAA2EzmB,iBAAK,EAAG,IAAnF;AAAyF8T,gBAAI,EAAE,EAA/F;AAAmG2K,iBAAK,EAAE;AAA1G,WAJqB,CAAvB;AAOA,eAAAiI,QAAA,GAAW;AACTrjB,iBAAK,EAAE,mBADE;AAETyQ,gBAAI,EAAE,WAFG;AAGT9a,gBAAI,EAAE,CACJ,CAAC,QAAD,EAAW,EAAX,EAAe,CAAf,CADI,EAEJ,CAAC,SAAD,EAAY,EAAZ,EAAgB,CAAhB,CAFI,EAGJ,CAAC,WAAD,EAAc,EAAd,EAAkB,EAAlB,CAHI,EAIJ,CAAC,UAAD,EAAa,EAAb,EAAiB,CAAjB,CAJI,EAKJ,CAAC,QAAD,EAAW,EAAX,EAAe,EAAf,CALI,EAMJ,CAAC,UAAD,EAAa,EAAb,EAAiB,EAAjB,CANI,EAOJ,CAAC,QAAD,EAAW,EAAX,EAAe,EAAf,CAPI,CAHG;AAYV2tB,uBAAW,EAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,SAAlB,CAZJ;AAaVlS,iBAAK,EAAE,OAbG;AAcVmS,kBAAM,EAAE;AAdE,WAAX;AAiBA,eAAAjtB,KAAA,GAAQ;AACN0J,iBAAK,EAAE,cADD;AAENyQ,gBAAI,EAAE,UAFA;AAGN9a,gBAAI,EAAE,CACJ,CAAC,QAAD,EAAW,GAAX,CADI,EAEJ,CAAC,UAAD,EAAa,EAAb,CAFI,CAHA;AAOP2tB,uBAAW,EAAG,CAAC,OAAD,EAAU,YAAV,CAPP;AAQPzY,mBAAO,EAAG;AACT2Y,oBAAM,EAAE;AACL,mBAAG;AAACC,wBAAM,EAAE;AAAT,iBADE;AAEL,mBAAG;AAACA,wBAAM,EAAE;AAAT;AAFE;AADC,aARH;AAcPrS,iBAAK,EAAE,OAdA;AAePmS,kBAAM,EAAE;AAfD,WAAR;AAkBmD;;;;qCAE3C;AAAA;;AACN,iBAAKN,YAAL,CAAkBzG,YAAlB,GAAiCtmB,SAAjC,CACE,UAAAC,CAAC,EAAI;AACH,qBAAI,CAACutB,YAAL,CAAkBvtB,CAAlB;AACD,aAHH;AAKD;;;uCAEYR,I,EAAI;AACf,iBAAKutB,OAAL,CAAa7Q,IAAb,CAAkB,UAAAlc,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAF,KAAS,CAAb;AAAA,aAAnB,EAAmCuH,KAAnC,GAA2ChH,IAAI,CAACguB,cAAL,CAAoBrqB,MAA/D;AACA,iBAAK4pB,OAAL,CAAa7Q,IAAb,CAAkB,UAAAlc,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAF,KAAS,CAAb;AAAA,aAAnB,EAAmCuH,KAAnC,GAA2ChH,IAAI,CAACiuB,WAAL,CAAiBtqB,MAA5D;AACA,iBAAK4pB,OAAL,CAAa7Q,IAAb,CAAkB,UAAAlc,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAF,KAAS,CAAb;AAAA,aAAnB,EAAmCuH,KAAnC,GAA2ChH,IAAI,CAACkuB,YAAL,CAAkBvqB,MAA7D;AACA,iBAAK4pB,OAAL,CAAa7Q,IAAb,CAAkB,UAAAlc,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAF,KAAS,CAAb;AAAA,aAAnB,EAAmCuH,KAAnC,GAA2ChH,IAAI,CAACguB,cAAL,CAAoBrqB,MAA/D;AACD;;;;;;;yBA3DU0pB,uB,EAAuB,4I;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,e;AAAA,8jB;AAAA;AAAA;ACTpC;;AACI;;AACI;;AACI;;AACI;;AAaJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA+B;;AAAkB;;AACrD;;AACA;;AACI;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AAA+B;;AAAY;;AAC/C;;AACA;;AACI;;AAGJ;;AACJ;;AACJ;;AACJ;;;;AAvCyC;;AAAA;;AAqBM;;AAAA;;AAGhB;;AAAA,gGAAsB,MAAtB,EAAsB,iBAAtB,EAAsB,SAAtB,EAAsB,wBAAtB;;AASA;;AAAA,6FAAmB,MAAnB,EAAmB,cAAnB,EAAmB,SAAnB,EAAmB,qBAAnB,EAAmB,SAAnB,EAAmB,iBAAnB;;;;;;;;;wED5BlBA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTtuB,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;AETpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWakvB,W;AAEX,6BAAoBvd,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;8BAIrCnR,E,EAAI;AACN,mBAAO,KAAKmR,IAAL,CAAUnF,GAAV,CAAoB,UAAG,yEAAYwF,MAAf,iBAAmCxR,EAAvD,CAAP;AACD;;;wCAEa;AACZ,mBAAO,KAAKmR,IAAL,CAAUnF,GAAV,WAAyB,yEAAYwF,MAArC,qBAAP;AACD;;;sCAEY;AACX,mBAAO,KAAKL,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,kBAAP;AACD;;;mCAEQ;AACP,mBAAO,KAAKL,IAAL,CAAUnF,GAAV,WAAyB,yEAAYwF,MAArC,qBAAP;AACD;;;wCAEa+Q,I,EAAI;AAChB,gBAAM9M,OAAO,GAAG;AAAEC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,MAArB,EAA8BiR,IAA9B;AAAV,aAAhB;AACA,mBAAO,KAAKpR,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,uBAA4D;AACjEoE,6BAAe,EAAE,IADgD;AAEjEF,oBAAM,EAAED,OAAO,CAACC;AAFiD,aAA5D,CAAP;AAID;;;kCAEO7U,I,EAAU;AAChB,mBAAO,KAAKsQ,IAAL,CAAUwE,IAAV,WAA2B,yEAAYnE,MAAvC,sBAAgE3Q,IAAhE,CAAP;AACD;;;mCAEQ8tB,K,EAAO;AACd,mBAAO,KAAKxd,IAAL,CAAUwE,IAAV,WAAwB,yEAAYnE,MAApC,yBAAgEmd,KAAhE,EAAuE;AAC5E/Y,6BAAe,EAAE;AAD2D,aAAvE,CAAP;AAGD;;;yCAEcJ,M,EAAM;AACnB,gBAAMC,OAAO,GAAGD,MAAM,GACtB;AAAEE,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2BkE,MAA3B;AAAV,aADsB,GAC2B,EADjD;AAEA,mBAAO,KAAKrE,IAAL,CAAUnF,GAAV,CAAuB,UAAG,yEAAYwF,MAAf,iBAAmCgE,MAA1D,CAAP;AACD;;;4CAEiBuD,O,EAAO;AACvB,mBAAO,KAAK5H,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,eAAqDuH,OAArD,EAA8D;AACnEnD,6BAAe,EAAE;AADkD,aAA9D,CAAP;AAGD;;;uCAES,CAET;;;uCAES,CACT;;;2CAEgBxE,I,EAAI;AACnB,mBAAO,KAAKD,IAAL,CAAUwE,IAAV,WAAwB,yEAAYgL,UAAZ,CAAuBP,GAA/C,cAA6DhP,IAA7D,CAAP;AACD;;;;;;;yBA7DUsd,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVlpB,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoDsB;;AACC;;AACD;;;;;;AAFmD;;AAClD;;AAAA;;;;;;AAQP;;AAAuD;;AAAK;;;;;;AAC5D;;AACI;;AACA;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIJ;;AAAuD;;AAAQ;;;;;;AAC/D;;AAAoC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAGpC;;AAAuD;;AAAK;;;;;;AAC5D;;AAAoC;;;;AAA2C;;;;;;AAA3C;;AAAA;;;;;;AAGpC;;AAAuD;;AAAW;;;;;;AAG9D;;AACI;;AACI;;AAAU;;AAAY;;AAAY;;AACtC;;AACJ;;;;;;AACA;;AACI;;AACA;;AAAU;;AAAK;;AAAW;;AAC1B;;AACJ;;;;;;AAXJ;;AACI;;AACA;;AAKA;;AAKA;;AACJ;;;;;;AAZU;;AAAA;;AACH;;AAAA;;AAKA;;AAAA;;;;;;AASP;;AAAuC;;AAAO;;;;;;AAC9C;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAIpC;;;;;;;;AACA;;AACA;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAU;;AAAI;;AAAW;;AACjF;;;;;;AAEJ;;;;;;AACA;;;;UDrFCopB,mB;AAkBX,qCAAoBC,UAApB,EACoBxoB,WADpB,EAEoBuL,aAFpB,EAGoB7H,WAHpB,EAIoBpJ,WAJpB,EAKmBoV,MALnB,EAKsC;AAAA;;AALlB,eAAA8Y,UAAA,GAAAA,UAAA;AACA,eAAAxoB,WAAA,GAAAA,WAAA;AACA,eAAAuL,aAAA,GAAAA,aAAA;AACA,eAAA7H,WAAA,GAAAA,WAAA;AACA,eAAApJ,WAAA,GAAAA,WAAA;AACD,eAAAoV,MAAA,GAAAA,MAAA;AArBnB,eAAAkN,WAAA,GAAc,CACZ;AAACjjB,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE;AAAf,WADY,EAEZ;AAACvH,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE;AAAf,WAFY,CAAd;AAMA,eAAA6b,OAAA,GAAU,SAAV;AACA,eAAAC,aAAA,GAAgB,CAAhB;AAOA,eAAA3B,gBAAA,GAA6B,CAAC,MAAD,EAAS,SAAT,EAAoB,gBAApB,EAAsC,WAAtC,EAAmD,QAAnD,EAA6D,MAA7D,CAA7B;AAOyC;;;;qCAKjC;AACN,iBAAKkK,cAAL,GAAsB,KAAKvlB,WAAL,CAAiBY,KAAjB,CAAuB;AAC3CjH,gBAAE,EAAE,CAAC,EAAD,EAAK,0DAAWmH,QAAhB,CADuC;AAE3CuM,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWvM,QAAhB,CAFmC;AAG3CwD,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWxD,QAAhB,CAHiC;AAI3C2kB,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAW3kB,QAAhB,CAJ2B;AAK3C6kB,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW7kB,QAAhB,CALgC;AAM3C8kB,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAW9kB,QAAhB,CANmC;AAO3C+kB,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW/kB,QAAhB;AAPkC,aAAvB,CAAtB;AAUA,iBAAK2nB,SAAL;AACD;;;sCAEmB;AAAA;;AAClB,iBAAK/kB,WAAL,CAAiBglB,iBAAjB,CAAmC,KAAKpuB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA9D,EAAkEc,SAAlE,CAA4E,UAAAC,CAAC,EAAI;AAC/E,qBAAI,CAACse,OAAL,GAAete,CAAf;AACA,qBAAI,CAACiuB,eAAL,GAAuBjuB,CAAvB;;AACA,kBAAIA,CAAC,CAACmD,MAAF,GAAW,CAAf,EAAkB;AAChB,uBAAI,CAAC+qB,aAAL,CAAmBluB,CAAC,CAAC,CAAD,CAApB;;AACA,oBAAI,OAAI,CAAC4gB,UAAL,KAAoBrT,SAAxB,EAAmC;AACjC,yBAAI,CAACqT,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,yBAAI,CAACF,UAAL,CAAgBG,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACD;AACF;AACF,aAVD;AAWD;;;wCAEa5O,M,EAAM;AAChB,mBAAOA,MAAM,CAACtI,KAAd;AACH;;;wCAEasI,M,EAAM;AAAA;;AAClB,iBAAK2b,UAAL,CAAgBK,cAAhB,CAA+Bhc,MAAM,CAACvI,QAAtC,EAAgD7J,SAAhD,CAA0D,UAAAC,CAAC,EAAI;AAAEqB,qBAAO,CAACC,GAAR,CAAYtB,CAAZ;AAAgB,qBAAI,CAAC4gB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB5gB,CAAvB,CAAlB;AAA8C,aAA/H;AACD;;;sCAEWqC,K,EAAK;;;AACf,gBAAM8e,WAAW,GAAI9e,KAAK,CAAC4Q,MAAN,CAAkCzM,KAAvD;AACA,iBAAKoa,UAAL,CAAgBxT,MAAhB,GAAyB+T,WAAW,CAACC,IAAZ,GAAmBrC,WAAnB,EAAzB;;AAEA,gBAAI,CAAJ,KAAI,KAAK6B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEE,SAArB,EAAgC;AAC9B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BO,SAA1B;AACD;AACF;;;2CAEgByM,U,EAAU;AAAA;;AACzB,gBAAM9S,SAAS,GAAG,KAAKhG,MAAL,CAAY1Q,IAAZ,CAAiB,mGAAjB,EAA2C;AAC3D2W,mBAAK,EAAE,OADoD;AAE3Dzb,kBAAI,EAAEsuB;AAFqD,aAA3C,CAAlB;AAKA9S,qBAAS,CAACE,WAAV,GAAwBnb,SAAxB,CAAkC,UAAA6P,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKrC,SAAlC,EAA4C;AAC1C,uBAAI,CAACugB,UAAL,CAAgBM,gBAAhB,CAAiCxe,MAAjC,EAAyC7P,SAAzC,CACE,UAAAC,CAAC,EAAI;AACH,yBAAI,CAAC+tB,SAAL;AACD,iBAHH;AAKD;AACF,aARD;AASD;;;uCAEY7gB,Q,EAAQ;AACnB,iBAAK+gB,eAAL,GAAuB,KAAK3P,OAAL,CAAalR,MAAb,CAAoB,UAAApN,CAAC;AAAA,qBAAIA,CAAC,CAAC0K,SAAF,KAAgBwC,QAApB;AAAA,aAArB,CAAvB;;AACA,gBAAI,KAAK+gB,eAAL,CAAqB9qB,MAArB,GAA8B,CAAlC,EAAoC;AAClC,mBAAK+qB,aAAL,CAAmB,KAAKD,eAAL,CAAqB,CAArB,CAAnB;AACA,mBAAKrN,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,mBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AACF;;;;;;;yBAjGU8M,mB,EAAmB,sJ,EAAA,2H,EAAA,8I,EAAA,0I,EAAA,wJ,EAAA,oI;AAAA,O;;;cAAnBA,mB;AAAmB,uC;AAAA;AAAA;4EAyBnB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;AC7CrB;;AACG;;AACI;;AAAgB;;AAAgB;;AAChC;;AAAmB;;AAAc;;AACjC;;AACI;;AACQ;;AACI;;AAA4B;AAAA,qBAAS,IAAAvM,WAAA,QAAT;AAA4B,aAA5B;;AAA5B;;AACA;;AACE;;AAAU;;AAAM;;AAClB;;AACJ;;AACR;;AAUA;;AACI;;AACI;;AAA+C;;AAAM;;AAAA;;AACjD;;AACA;;AACA;;AACF;;AAAM;;AACR;;AAAA;;AAAgD;;AAAO;;AAAA;;AACnD;;AACA;;AACA;;AACF;;AACF;;AACJ;;AACJ;;AACA;;AAAA;;AACI;;AACI;;AAAsB;AAAA,qBAAS,IAAA+M,YAAA,CAAa,CAAb,CAAT;AAAwB,aAAxB;;AAAoD;;AAAM;;AAChF;;AAAsB;AAAA,qBAAS,IAAAA,YAAA,CAAa,CAAb,CAAT;AAAwB,aAAxB;;AAAkD;;AAAO;;AACnF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAwB;;AAAM;;AAC9B;;AACA;;AAAoG;AAAA,qBAAkB,IAAAH,aAAA,qBAAlB;AAAoD,aAApD;;AAClG;;AAGF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAIJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAcJ;;AACA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AAGJ;;;;;;AAtFiD;;AAAA;;AAKC;;AAAA;;AAqBW;;AAAA;;AAC6B;;AAAA;;AACxD;;AAAA;;AAOF;;AAAA;;AA4CD;;AAAA;;AACP;;AAAA;;;;;;;;;;wEDrFXL,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTtvB,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;AAyBWqiB,mBAAS,EAAE,CAAF;kBAAjD,uDAAiD;mBAAvC,wE,EAAc;AAAC,wBAAQ;AAAT,a;AAAyB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvC,uDAAuC;mBAA7B,8D,EAAS;AAAC,wBAAQ;AAAT,a;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AE7C5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA8HauN,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,mBALjB,CACT,iFADS,EAET,2EAFS,C;AAGV,kBArEQ,CAAC,oFAAD,EACP,sEADO,EAEP,wEAFO,EAGP,sEAHO,EAIP,8EAJO,EAKP,oEALO,EAMP,oEANO,EAOP,oEAPO,EAQP,8EARO,EASP,8EATO,EAUP,qEAVO,EAWP,8EAXO,EAYP,4FAZO,EAaP,iFAbO,EAcP,2EAdO,EAeP,uEAfO,EAgBP,uEAhBO,EAiBP,yEAjBO,EAkBP,2EAlBO,EAmBP,qEAnBO,EAoBP,qEApBO,EAqBP,2EArBO,EAsBP,sFAtBO,EAuBP,oFAvBO,EAwBP,oFAxBO,EAyBP,6EAzBO,EA0BP,2EA1BO,EA2BP,uEA3BO,EA4BP,2EA5BO,EA6BP,oFA7BO,EA8BP,yEA9BO,EA+BP,2EA/BO,CAqER,EApCS,oFAoCT,EAnCC,sEAmCD,EAlCC,wEAkCD,EAjCC,sEAiCD,EAhCC,8EAgCD,EA/BC,oEA+BD,EA9BC,oEA8BD,EA7BC,oEA6BD,EA5BC,8EA4BD,EA3BC,8EA2BD,EA1BC,qEA0BD,EAzBC,8EAyBD,EAxBC,4FAwBD,EAvBC,iFAuBD,EAtBC,2EAsBD,EArBC,uEAqBD,EApBC,uEAoBD,EAnBC,yEAmBD,EAlBC,2EAkBD,EAjBC,qEAiBD,EAhBC,qEAgBD,EAfC,2EAeD,EAdC,sFAcD,EAbC,oFAaD,EAZC,oFAYD,EAXC,6EAWD,EAVC,2EAUD,EATC,uEASD,EARC,2EAQD,EAPC,oFAOD,EANC,yEAMD,EALC,2EAKD;;;;4HAEUA,iB,EAAiB;AAAA,oBAvElB,oFAuEkB,EAtE1B,sEAsE0B,EArE1B,wEAqE0B,EApE1B,sEAoE0B,EAnE1B,8EAmE0B,EAlE1B,oEAkE0B,EAjE1B,oEAiE0B,EAhE1B,oEAgE0B,EA/D1B,8EA+D0B,EA9D1B,8EA8D0B,EA7D1B,qEA6D0B,EA5D1B,8EA4D0B,EA3D1B,4FA2D0B,EA1D1B,iFA0D0B,EAzD1B,2EAyD0B,EAxD1B,uEAwD0B,EAvD1B,uEAuD0B,EAtD1B,yEAsD0B,EArD1B,2EAqD0B,EApD1B,qEAoD0B,EAnD1B,qEAmD0B,EAlD1B,2EAkD0B,EAjD1B,sFAiD0B,EAhD1B,oFAgD0B,EA/C1B,oFA+C0B,EA9C1B,6EA8C0B,EA7C1B,2EA6C0B,EA5C1B,uEA4C0B,EA3C1B,2EA2C0B,EA1C1B,oFA0C0B,EAzC1B,yEAyC0B,EAxC1B,2EAwC0B;AAxCV,oBAER,oFAFQ,EAGhB,sEAHgB,EAIhB,wEAJgB,EAKhB,sEALgB,EAMhB,8EANgB,EAOhB,oEAPgB,EAQhB,oEARgB,EAShB,oEATgB,EAUhB,8EAVgB,EAWhB,8EAXgB,EAYhB,qEAZgB,EAahB,8EAbgB,EAchB,4FAdgB,EAehB,iFAfgB,EAgBhB,2EAhBgB,EAiBhB,uEAjBgB,EAkBhB,uEAlBgB,EAmBhB,yEAnBgB,EAoBhB,2EApBgB,EAqBhB,qEArBgB,EAsBhB,qEAtBgB,EAuBhB,2EAvBgB,EAwBhB,sFAxBgB,EAyBhB,oFAzBgB,EA0BhB,oFA1BgB,EA2BhB,6EA3BgB,EA4BhB,2EA5BgB,EA6BhB,uEA7BgB,EA8BhB,2EA9BgB,EA+BhB,oFA/BgB,EAgChB,yEAhCgB,EAiChB,2EAjCgB;AAwCU,S;AAPV,O;;;;;wEAOPA,iB,EAAiB;gBAzE7B,sDAyE6B;iBAzEpB;AACRC,wBAAY,EAAE,EADN;AAERC,mBAAO,EAAE,CAAC,oFAAD,EACP,sEADO,EAEP,wEAFO,EAGP,sEAHO,EAIP,8EAJO,EAKP,oEALO,EAMP,oEANO,EAOP,oEAPO,EAQP,8EARO,EASP,8EATO,EAUP,qEAVO,EAWP,8EAXO,EAYP,4FAZO,EAaP,iFAbO,EAcP,2EAdO,EAeP,uEAfO,EAgBP,uEAhBO,EAiBP,yEAjBO,EAkBP,2EAlBO,EAmBP,qEAnBO,EAoBP,qEApBO,EAqBP,2EArBO,EAsBP,sFAtBO,EAuBP,oFAvBO,EAwBP,oFAxBO,EAyBP,6EAzBO,EA0BP,2EA1BO,EA2BP,uEA3BO,EA4BP,2EA5BO,EA6BP,oFA7BO,EA8BP,yEA9BO,EA+BP,2EA/BO,CAFD;AAmCR9D,mBAAO,EAAE,CAAC,oFAAD,EACP,sEADO,EAEP,wEAFO,EAGP,sEAHO,EAIP,8EAJO,EAKP,oEALO,EAMP,oEANO,EAOP,oEAPO,EAQP,8EARO,EASP,8EATO,EAUP,qEAVO,EAWP,8EAXO,EAYP,4FAZO,EAaP,iFAbO,EAcP,2EAdO,EAeP,uEAfO,EAgBP,uEAhBO,EAiBP,yEAjBO,EAkBP,2EAlBO,EAmBP,qEAnBO,EAoBP,qEApBO,EAqBP,2EArBO,EAsBP,sFAtBO,EAuBP,oFAvBO,EAwBP,oFAxBO,EAyBP,6EAzBO,EA0BP,2EA1BO,EA2BP,uEA3BO,EA4BP,2EA5BO,EA6BP,oFA7BO,EA8BP,yEA9BO,EA+BP,2EA/BO,CAnCD;AAoER+D,qBAAS,EAAE,CACT,iFADS,EAET,2EAFS;AApEH,W;AAyEoB,U;;;;;;;;;;;;;;;;;;AC9H9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,c;AAEX,gCAAoBte,IAApB,EAA8CxQ,WAA9C,EAA+E;AAAA;;AAA3D,eAAAwQ,IAAA,GAAAA,IAAA;AAA0B,eAAAxQ,WAAA,GAAAA,WAAA;AAAoC;;;;yCAEnE2lB,U,EAAU;AACvB,mBAAO,KAAKnV,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,mBAAyD8U,UAAzD,EAAqE;AAC1E1Q,6BAAe,EAAE;AADyD,aAArE,CAAP;AAGD;;;2CAEgB0Q,U,EAAU;AACzB,mBAAO,KAAKnV,IAAL,CAAUI,GAAV,WAAsB,yEAAYC,MAAlC,mBAAwD8U,UAAxD,EAAoE;AACzE1Q,6BAAe,EAAE;AADwD,aAApE,CAAP;AAGD;;;gDAEqB8Z,O,EAAO;AAC3B,gBAAMja,OAAO,GAAGia,OAAO,GACvB;AAAEha,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,SAArB,EAAgCoe,OAAhC;AAAV,aADuB,GAC+B,EADtD;AAEA,mBAAO,KAAKve,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,wBAA6DiE,OAA7D,CAAP;AACD;;;kDAEuBka,S,EAAS;AAC/B,gBAAMla,OAAO,GAAGka,SAAS,GACzB;AAAEja,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2Bqe,SAA3B;AAAV,aADyB,GAC0B,EADnD;AAEA,mBAAO,KAAKxe,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,6BAAkE;AACvEoE,6BAAe,EAAE,IADsD;AAEvEF,oBAAM,EAAED,OAAO,CAACC;AAFuD,aAAlE,CAAP;AAID;;;+CAEoBia,S,EAAS;AAC5B,mBAAO,KAAKxe,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,sBAA2D;AAChEoE,6BAAe,EAAE,IAD+C;AAEhEF,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2Bqe,SAA3B;AAFwD,aAA3D,CAAP;AAID;;;;;;;yBApCUF,c,EAAc,uH,EAAA,+H;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;wEAEDA,c,EAAc;gBAH1B,wDAG0B;iBAHf;AACVjqB,sBAAU,EAAE;AADF,W;AAGe,U;;;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACmKQ;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEtD;;AACF;;;;;;AAFE;;AACA;;AAAA;;;;;;;;AA4DA;;AAC0D;AAAA;;AAAA;;AAAA;AAAA,aAAqC,cAArC,EAAqC;AAAA;;AAAA;;AAAA,uCACjE,SADiE,EACtDoqB,MAAM,CAACxsB,KAD+C;AACxD,WADmB,EAAqC,mBAArC,EAAqC;AAAA;;AAAA;;AAAA;AAAA,WAArC;;AAE1D;;;;;;AAH4D,gGAAqB,QAArB,EAAqB,aAArB,EAAqB,SAArB,EAAqB,cAArB,EAAqB,iBAArB,EAAqB,sBAArB;;;;;;;;AAI5D;;AACsB;AAAA;;AAAA;;AAAA,uCAA4B,SAA5B,EAAuCwsB,MAAM,CAACxsB,KAA9C;AAAqC,WAArC,EAAqD,mBAArD,EAAqD;AAAA;;AAAA;;AAAA;AAAA,WAArD;;AAEtB;;;;;;AAH0D,gGAAqB,QAArB,EAAqB,aAArB,EAAqB,SAArB,EAAqB,cAArB;;;;;;;;AAI1D;;AACsB;AAAA;;AAAA;;AAAA,uCAA4B,SAA5B,EAAuCwsB,MAAM,CAACxsB,KAA9C;AAAqC,WAArC,EAAqD,mBAArD,EAAqD;AAAA;;AAAA;;AAAA;AAAA,WAArD;;AAEtB;;;;;;AAHwD,gGAAqB,QAArB,EAAqB,aAArB,EAAqB,SAArB,EAAqB,cAArB;;;;;;AAU3C;;AAAiC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAqBhC;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;;;;;AAUN;;AACE;;AACF;;;;;;AADwB;;AAAA;;;;;;;;;;;;AA9BhC;;AAIE;;AACE;;AACE;;AACE;;AACE;;AAAoC;;AAAgB;;AACtD;;AACA;;AACE;;AACE;;AACE;;AAGA;;AAGA;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAGF;;AAEF;;AACF;;AACF;;;;;;AAhCkC;;AAAA;;AAIY;;AAAA;;AAI5B;;AAAA;;AACD;;AAAA;;AAGA;;AAAA;;AAUT;;AAAA;;AAGc;;AAAA;;;;ADrOhC,UAAM8hB,MAAM,GAAQ;AAClB2K,WAAG,EAAE;AACHzM,iBAAO,EAAE,SADN;AAEH0M,mBAAS,EAAE;AAFR,SADa;AAKlBC,YAAI,EAAE;AACJ3M,iBAAO,EAAE,SADL;AAEJ0M,mBAAS,EAAE;AAFP,SALY;AASlBE,cAAM,EAAE;AACN5M,iBAAO,EAAE,SADH;AAEN0M,mBAAS,EAAE;AAFL;AATU,OAApB;;UA0BaG,iB;AAoDX,mCAAoB5pB,WAApB,EACoB3F,WADpB,EAEoBkR,aAFpB,EAGoBjR,WAHpB,EAIoBuvB,KAJpB,EAKmBna,MALnB,EAKsC;AAAA;;AAAA;;AALlB,eAAA1P,WAAA,GAAAA,WAAA;AACA,eAAA3F,WAAA,GAAAA,WAAA;AACA,eAAAkR,aAAA,GAAAA,aAAA;AACA,eAAAjR,WAAA,GAAAA,WAAA;AACA,eAAAuvB,KAAA,GAAAA,KAAA;AACD,eAAAna,MAAA,GAAAA,MAAA;AArDnB,eAAAoa,IAAA,GAAqB,8DAAathB,KAAlC;AAEA,eAAAuhB,YAAA,GAAe,6DAAf;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,QAAA,GAAiB,IAAI1wB,IAAJ,EAAjB;AAEO,eAAA6G,SAAA,GAAY,KAAZ;AACP,eAAAvF,KAAA,GAAgB,EAAhB;AAKA,eAAAsJ,UAAA,GAAa,IAAb;AAEA,eAAA+lB,OAAA,GAAwB,IAAI,4CAAJ,EAAxB;AACA,eAAAxT,MAAA,GAA0B,EAA1B;AACA,eAAAyT,YAAA,GAAe,GAAf;AACA,eAAAC,eAAA,GAAkB,KAAlB;AAMA,eAAAC,aAAA,GAAgB,CACd;AAAC1wB,cAAE,EAAE,CAAL;AAAS6F,gBAAI,EAAE,WAAf;AAA4BggB,mBAAO,EAAE;AAArC,WADc,EAEd;AAAC7lB,cAAE,EAAE,CAAL;AAAS6F,gBAAI,EAAE,SAAf;AAA0BggB,mBAAO,EAAE;AAAnC,WAFc,EAGd;AAAC7lB,cAAE,EAAE,CAAL;AAAS6F,gBAAI,EAAE,WAAf;AAA4BggB,mBAAO,EAAE;AAArC,WAHc,CAAhB;AAMA,eAAAC,OAAA,GAAiC,CAC/B;AACE6K,iBAAK,EAAE,wCADT;AAEEC,qBAAS,EAAE,MAFb;AAGEC,mBAAO,EAAE,uBAA+C;AAAA,kBAA5CztB,KAA4C,QAA5CA,KAA4C;;AACtD,qBAAI,CAAC0tB,WAAL,CAAiB,QAAjB,EAA2B1tB,KAA3B;AACD;AALH,WAD+B,EAQ/B;AACEutB,iBAAK,EAAE,wCADT;AAEEC,qBAAS,EAAE,QAFb;AAGEC,mBAAO,EAAE,wBAA+C;AAAA,kBAA5CztB,KAA4C,SAA5CA,KAA4C;AACtD,qBAAI,CAAC2Z,MAAL,GAAc,OAAI,CAACA,MAAL,CAAY5O,MAAZ,CAAmB,UAAC4iB,MAAD;AAAA,uBAAYA,MAAM,KAAK3tB,KAAvB;AAAA,eAAnB,CAAd;;AACA,qBAAI,CAAC0tB,WAAL,CAAiB,SAAjB,EAA4B1tB,KAA5B;AACD;AANH,WAR+B,CAAjC;AAuBwC;;;;qCAQhC;AAAA;;AACN,iBAAK4tB,OAAL,GAAe,KAAKrwB,WAAL,CAAiBmG,SAAhC;AACA,iBAAKmqB,YAAL,GAAoB,IAAIrxB,IAAJ,EAApB;AACAwC,mBAAO,CAACC,GAAR,CAAY,KAAK2uB,OAAL,CAAa/oB,KAAzB;AACA,iBAAKipB,gBAAL,GAAwB,KAAK7qB,WAAL,CAAiBY,KAAjB,CAAuB;AAC7CkqB,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWhqB,QAAhB,CADoC;AAE7CnC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWmC,QAAhB,CAFmC;AAG7CiqB,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWjqB,QAAhB,CAHgC;AAI7CkqB,sBAAQ,EAAE,CAAC,eAAD,EAAkB,0DAAWlqB,QAA7B,CAJmC;AAK7CmqB,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWnqB,QAAhB,CALsC;AAM7CoqB,iBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWpqB,QAAhB,CANwC;AAO7CqqB,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWrqB,QAAhB,CAPiC;AAQ7CsqB,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWtqB,QAAhB,CARkC;AAS7CuqB,uBAAS,EAAE,CAAC,EAAD,CATkC;AAU7ClhB,mBAAK,EAAE,CAAC,EAAD;AAVsC,aAAvB,CAAxB;AAaA,iBAAK9P,WAAL,CAAiBM,MAAjB,GAA0BF,SAA1B,CAAoC,UAAAC,CAAC;AAAA,qBAAI,OAAI,CAACG,KAAL,GAAaH,CAAjB;AAAA,aAArC,EAjBM,CAkBP;;AACC,iBAAK4wB,SAAL,CAAe,IAAf;AACD;;;qCAEO;AACN,mBAAO,IAAI/xB,IAAJ,EAAP;AACD;;;6CAEkB;AAAA;;AACjB,iBAAKgS,aAAL,CAAmBob,mBAAnB,CAAuC,KAAKgE,OAAL,CAAahxB,EAApD,EACAc,SADA,CACU,UAAAC,CAAC,EAAI;AACb,kBAAIA,CAAC,CAACmD,MAAF,GAAW,CAAf,EAAiB;AACf,uBAAI,CAACmb,OAAL,GAAete,CAAf;AACD;AACF,aALD;AAMD;;;oCAES8lB,M,EAAM;AAAA;;AACd,iBAAKjV,aAAL,CAAmBob,mBAAnB,CAAuC,KAAKgE,OAAL,CAAahxB,EAApD,EACAc,SADA,CACU,UAACC,CAAD,EAAO;AACf,qBAAI,CAACse,OAAL,GAAete,CAAf;AACA,qBAAI,CAACgc,MAAL,GAAc,EAAd;AACA3a,qBAAO,CAACC,GAAR,CAAYtB,CAAZ;AACAA,eAAC,CAACkF,OAAF,CAAU,UAAAlG,OAAO,EAAI;AACnB,uBAAI,CAACgd,MAAL,CAAY1c,IAAZ,CACE;AACEixB,uBAAK,EAAE,IAAI1xB,IAAJ,CAASG,OAAO,CAAC+K,SAAjB,CADT;AAEEymB,qBAAG,EAAE,IAAI3xB,IAAJ,CAASG,OAAO,CAACgL,OAAjB,CAFP;AAGEH,uBAAK,EAAE7K,OAAO,CAAC6K,KAHjB;AAIEob,uBAAK,EAAEjmB,OAAO,CAACiO,MAAR,GAAiBkX,MAAM,CAAC6K,IAAxB,GAA+B7K,MAAM,CAAC8K,MAJ/C;AAKElK,yBAAO,EAAE,OAAI,CAACA,OALhB;AAME8L,sBAAI,EAAE7xB,OANR;AAOEiL,2BAAS,EAAEjL,OAAO,CAACiL,SAPrB;AAQEC,yBAAO,EAAElL,OAAO,CAACkL;AARnB,iBADF;AAYD,eAbD;;AAcA,kBAAI,CAAA4b,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAE3iB,MAAR,IAAiB,CAArB,EAAuB;AACrB,uBAAI,CAACmb,OAAL,GAAe,OAAI,CAACA,OAAL,CAAalR,MAAb,CAAoB,UAAA8M,CAAC;AAAA,yBAAI4L,MAAM,CAAC3L,IAAP,CAAY,UAAAoP,CAAC;AAAA,2BAAIrP,CAAC,CAAC4L,MAAF,KAAayD,CAAjB;AAAA,mBAAb,CAAJ;AAAA,iBAArB,CAAf;AACA,uBAAI,CAACvN,MAAL,GAAc,OAAI,CAACA,MAAL,CAAY5O,MAAZ,CAAmB,UAAA8M,CAAC;AAAA,yBAAI4L,MAAM,CAAC3L,IAAP,CAAY,UAAAoP,CAAC;AAAA,2BAAIrP,CAAC,CAAC2W,IAAF,CAAO/K,MAAP,KAAkByD,CAAtB;AAAA,mBAAb,CAAJ;AAAA,iBAApB,CAAd;AACD;;AACD,qBAAI,CAACiG,OAAL,CAAazoB,IAAb;AACD,aAxBD;AAyBD;;;qCAEU;AAAA;;AACT,iBAAKrB,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKyqB,gBAAL,CAAsBtpB,OAA1B,EAAmC;AACjC;AACD;;AACD,gBAAM4D,QAAQ,GAAa;AACzB2lB,qBAAO,EAAE,KAAK7pB,CAAL,CAAO6pB,OAAP,CAAe5pB,KADC;AAEzBvC,sBAAQ,EAAE,KAAKsC,CAAL,CAAOtC,QAAP,CAAgBuC,KAFD;AAGzB6pB,yBAAW,EAAE,KAAK9pB,CAAL,CAAO8pB,WAAP,CAAmB7pB,KAHP;AAIzB8pB,sBAAQ,EAAE,KAAK/pB,CAAL,CAAO+pB,QAAP,CAAgB9pB,KAJD;AAKzB+pB,mBAAK,EAAE,KAAKhqB,CAAL,CAAOgqB,KAAP,CAAa/pB,KALK;AAMzBgqB,iBAAG,EAAE,KAAKjqB,CAAL,CAAOiqB,GAAP,CAAWhqB,KANS;AAOzBiqB,wBAAU,EAAE,CAAC;AACX9gB,yBAAS,EAAE,KAAKpJ,CAAL,CAAOkqB,UAAP,CAAkBjqB,KADlB;AAEXiJ,qBAAK,EAAE,KAAKlJ,CAAL,CAAOkJ,KAAP,CAAajJ;AAFT,eAAD,CAPa;AAWzBkqB,uBAAS,EAAE,CACT,KAAKnqB,CAAL,CAAOmqB,SAAP,CAAiBlqB,KADR,EAET,KAAKypB,OAAL,CAAa/oB,KAFJ,CAXc;AAezBypB,uBAAS,EAAE;AAfc,aAA3B;AAkBA,iBAAK9f,aAAL,CAAmBigB,cAAnB,CAAkCrmB,QAAlC,EAA4C1K,SAA5C,CAAsD,UAAAC,CAAC,EAAI;AACzD,qBAAI,CAAC+wB,gBAAL;AACD,aAFD;AAID;;;yCACclC,M,EAAQ7J,M,EAAQ;AAC7BA,kBAAM,CAACF,OAAP,GAAiB,CAACE,MAAM,CAACF,OAAzB;;AACA,gBAAIE,MAAM,CAACF,OAAP,KAAmB,IAAvB,EAA4B;AAC1B,mBAAKrb,UAAL,GAAkB,KAAlB;AACD;;AACD,gBAAMunB,QAAQ,GAAG,EAAjB;AACA,iBAAKrB,aAAL,CAAmBzqB,OAAnB,CAA2B,UAAAlF,CAAC,EAAI;AAChC,kBAAIA,CAAC,CAAC8kB,OAAN,EAAc;AACRkM,wBAAQ,CAAC1xB,IAAT,CAAcU,CAAC,CAACf,EAAhB;AACD;AACF,aAJH;AAKA,iBAAK2xB,SAAL,CAAeI,QAAf;AACD;;;4CAEiBnC,M,EAAM;AACtB,iBAAKplB,UAAL,GAAkB,CAAC,KAAKA,UAAxB;;AACA,gBAAI,KAAKA,UAAL,KAAoB,IAAxB,EAA6B;AAC3B,mBAAKkmB,aAAL,CAAmBzqB,OAAnB,CAA2B,UAAAlF,CAAC;AAAA,uBAAIA,CAAC,CAAC8kB,OAAF,GAAY,KAAhB;AAAA,eAA5B;AACA,mBAAK8L,SAAL,CAAe,IAAf;AACD;AACF;;;mCAEQvuB,K,EAAoC;AAC3C,iBAAK6tB,YAAL,GAAoB7tB,KAAK,CAACmE,KAA1B;AACD;;;kCAEO4oB,I,EAAoB;AAC1B,iBAAKA,IAAL,GAAYA,IAAZ;AACD;;;kDAEuB;AACtB,iBAAKM,eAAL,GAAuB,KAAvB;AACD;;;4CAEmE;AAAA,gBAAvD9wB,IAAuD,SAAvDA,IAAuD;AAAA,gBAAjDod,MAAiD,SAAjDA,MAAiD;;AAClE,gBAAI,6DAAYpd,IAAZ,EAAkB,KAAK2wB,QAAvB,CAAJ,EAAsC;AACpC,kBACG,2DAAU,KAAKA,QAAf,EAAyB3wB,IAAzB,KAAkC,KAAK8wB,eAAL,KAAyB,IAA5D,IACA1T,MAAM,CAAC7Y,MAAP,KAAkB,CAFpB,EAGE;AACA,qBAAKusB,eAAL,GAAuB,KAAvB;AACD,eALD,MAKO;AACL,qBAAKA,eAAL,GAAuB,IAAvB;AACD;;AACD,mBAAKH,QAAL,GAAgB3wB,IAAhB;AACD;AACF;;;sCAEWomB,M,EAAgB3iB,K,EAAoB;AAC9C,iBAAK4uB,SAAL,GAAiB;AAAE5uB,mBAAK,EAALA,KAAF;AAAS2iB,oBAAM,EAANA;AAAT,aAAjB;AACA3jB,mBAAO,CAACC,GAAR,CAAY,KAAK2vB,SAAjB,EAF8C,CAG/C;;AACC,gBAAMjW,SAAS,GAAG,KAAKhG,MAAL,CAAY1Q,IAAZ,CAAiB,oFAAjB,EAAsC;AACtD2W,mBAAK,EAAE,OAD+C;AAEtDzb,kBAAI,EAAE,KAAKyxB;AAF2C,aAAtC,CAAlB;AAKAjW,qBAAS,CAACE,WAAV,GAAwBnb,SAAxB,CAAkC,UAAA6P,MAAM,EAAI;AAC1CvO,qBAAO,CAACC,GAAR,CAAYsO,MAAZ;AACD,aAFD;AAGD;;;mDAMgC;AAAA,gBAH/BvN,KAG+B,SAH/BA,KAG+B;AAAA,gBAF/B6uB,QAE+B,SAF/BA,QAE+B;AAAA,gBAD/BC,MAC+B,SAD/BA,MAC+B;AAC/B,iBAAKnV,MAAL,GAAc,KAAKA,MAAL,CAAY9T,GAAZ,CAAgB,UAAC8nB,MAAD,EAAY;AACxC,kBAAIA,MAAM,KAAK3tB,KAAf,EAAsB;AACpB,uBAAO,MAAP,OAAO,CAAP,kBACKA,KADL,CAAO,EACG;AACRkuB,uBAAK,EAAEW,QADC;AAERV,qBAAG,EAAEW;AAFG,iBADH,CAAP;AAKD;;AACD,qBAAOnB,MAAP;AACD,aATa,CAAd;AAUA,iBAAKD,WAAL,CAAiB,oBAAjB,EAAuC1tB,KAAvC;AACD;;;wCAEaA,K,EAAK;AACjB,gBAAIA,KAAK,CAACyiB,OAAV,EAAkB;AAChB,mBAAKxG,OAAL,GAAgB,KAAKA,OAAL,CAAalR,MAAb,CAAoB,UAAApN,CAAC;AAAA,uBAAI,IAAInB,IAAJ,CAASmB,CAAC,CAAC+J,SAAX,EAAsBkE,OAAtB,OAAoC,IAAIpP,IAAJ,GAAWoP,OAAX,EAAxC;AAAA,eAArB,CAAhB;AACD,aAFD,MAIA;AACE,mBAAK8iB,gBAAL;AACD;AACF;;;8BAzLO;AACN,mBAAO,KAAKZ,gBAAL,CAAsB3oB,QAA7B;AACD;;;;;;;yBA7DU0nB,iB,EAAiB,2H,EAAA,0I,EAAA,8I,EAAA,wJ,EAAA,qI,EAAA,oI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;;;;;;;;;;oFAPjB,CACT;AACEkC,iBAAO,EAAE,4EADX;AAEEC,kBAAQ,EAAE;AAFZ,SADS,C;AAKV,iB;AAAA,gB;AAAA,q5C;AAAA;AAAA;ACgFH;;AACE;;AACE;;AACE;;AAAkB;;AAAU;;AAC5B;;AACE;;AAAmB;AAAA,qBAAS,IAAAC,iBAAA,QAAT;AAAkC,aAAlC;;AACjB;;AACF;;AACA;;AAIF;;AASF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAmE;AAAA;AAAA,eAAuB,gBAAvB,EAAuB;AAAA,qBACtE,IAAAC,qBAAA,EADsE;AAC/C,aADwB;;AAEjE;;AACF;;AACA;;AAAwD;AAAA;AAAA;;AACtD;;AACF;;AACA;;AAA+D;AAAA;AAAA,eAAuB,gBAAvB,EAAuB;AAAA,qBAClE,IAAAA,qBAAA,EADkE;AAC3C,aADoB;;AAE7D;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAI;;;;AAAuD;;AAC7D;;AACA;;AACE;;AACE;;AAA6B;AAAA,qBAAS,IAAAC,OAAA,wBAAT;AAAoC,aAApC;;AAE3B;;AACF;;AACA;;AAA6B;AAAA,qBAAS,IAAAA,OAAA,uBAAT;AAAmC,aAAnC;;AAE3B;;AACF;;AACA;;AAA6B;AAAA,qBAAS,IAAAA,OAAA,sBAAT;AAAkC,aAAlC;;AAE3B;;AACF;;AACF;;AAOF;;AACF;;AACA;;AACA;;AACE;;AAIA;;AAIA;;AAIF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAS;;AACX;;AACF;;AACA;;AACK;;AAAwC;AAAA,qBAAU,IAAAC,aAAA,QAAV;AAA+B,aAA/B;;AAAiC;;AAAU;;AACxF;;AACF;;AACA;;AACE;;AAqCF;;AAEF;;AACF;;AAEF;;AAEF;;;;AAvI+D;;AAAA;;AAG7C;;AAAA;;AAqBiD;;AAAA,uFAAa,UAAb,EAAa,YAAb;;AAIG;;AAAA;;AAGP;;AAAA,uFAAa,UAAb,EAAa,YAAb;;AAO/C;;AAAA;;AAKA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAaH;;AAAA;;AACsB;;AAAA;;AAID;;AAAA;;AAID;;AAAA;;AAUL;;AAAA;;AAIK;;AAAA;;AAIT;;AAAA;;;;;;;;;;wED9KXvC,iB,EAAiB;gBAX7B,uDAW6B;iBAXnB;AACT3wB,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD,CAHF;AAITgwB,qBAAS,EAAE,CACT;AACE2C,qBAAO,EAAE,4EADX;AAEEC,sBAAQ,EAAE;AAFZ,aADS;AAJF,W;AAWmB,U;;;;;;;;;;;;;;;AAEiBK,sBAAY,EAAE,CAAF;kBAAxD,uDAAwD;mBAA9C,c,EAAgB;AAAE,wBAAQ;AAAV,a;AAA8B,WAAE;;;;;;;;;;;;;;;;;;;AE/E7D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,sB;AAEX,0CAAc;AAAA;;AACd,eAAA9nB,KAAA,GAAQ,cAAR;AACA,eAAAnC,GAAA,GAAM,SAAN;AACA,eAAAC,GAAA,GAAM,QAAN;AAHiB;;;;qCAKT,CAEP;;;;;;;yBATUgqB,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,0C;AAAA,iB;AAAA,e;AAAA,u4B;AAAA;AAAA;ACPnC;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAe;;AACnC;;AAAwB;;AAAoD;;AAC5E;;AAAoB;;AAAiE;;AACrF;;AAA4D;;AAAM;;AAAW;;AAAO;;AACtF;;AACA;;AACE;;AAGF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAA2B;;AAAwB;;AACnD;;AAAkB;;AAAoE;;AACtF;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AAA0D;;AAAM;;AAAO;;AAAO;;AAChF;;AACF;;AAEF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAM;;AAAU;;AAAK;;AAAW;;AAAO;;AAAM;;AAAiD;;AAAO;;AACzG;;AAAI;;AAAM;;AAAU;;AAAK;;AAAW;;AAAO;;AAAM;;AAAkB;;AAAO;;AAC1E;;AAAI;;AAAM;;AAAU;;AAAK;;AAAW;;AAAO;;AAAM;;AAAwB;;AAAO;;AAClF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAhBa;;AAAA,0FAAgB,WAAhB,EAAgB,OAAhB;;AACK;;AAAA,0FAAgB,WAAhB,EAAgB,OAAhB;;;;;;;;;wEDxCLA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTpzB,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaE;;AACU;;AACJ;;;;;;AADI;;AAAA;;;;;;;;;;UDNCmzB,qB;AAEX,uCAAmB5W,SAAnB,EAAmE;AAAA;;AAAhD,eAAAA,SAAA,GAAAA,SAAA;AAEnB,eAAAhK,KAAA,GAAe,EAAf;AAFsE;;;;qCAK9D,CACP;;;kCAEcA,K,EAAO;AACpB,iBAAKe,gBAAL,CAAsBf,KAAtB;AACD;;;qCAEiBA,K,EAAK;AACrB,iBAAKe,gBAAL,CAAsBf,KAAtB;AACD;;;2CAEgBA,K,EAAmB;AAAA;;AAAA,wDACfA,KADe;AAAA;;AAAA;AAClC,qEAA0B;AAAA,oBAAf/L,IAAe;AACxBA,oBAAI,CAAC2N,QAAL,GAAgB,CAAhB;AACA,qBAAK5B,KAAL,CAAW1R,IAAX,CAAgB2F,IAAhB;AACD;AAJiC;AAAA;AAAA;AAAA;AAAA;;AAKlC,gBAAM4N,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAM,CAACE,MAAP,GAAgB,UAACzL,CAAD,EAAO;AACrB,qBAAI,CAAC0L,SAAL,GAAiB1L,CAAC,CAAC2L,MAAF,CAASrD,MAA1B;AACD,aAFD;;AAGAiD,kBAAM,CAACK,aAAP,CAAqBlC,KAAK,CAAC,CAAD,CAA1B;AACA,iBAAKmC,oBAAL,CAA0B,CAA1B;AACD;;;+CAEoBpU,K,EAAe;AAAA;;AAClCqU,sBAAU,CAAC,YAAM;AACf,kBAAIrU,KAAK,KAAK,OAAI,CAACiS,KAAL,CAAW7N,MAAzB,EAAiC;AAC/B;AACD,eAFD,MAEO;AACL,oBAAMkQ,gBAAgB,GAAGC,WAAW,CAAC,YAAM;AACzC,sBAAI,OAAI,CAACtC,KAAL,CAAWjS,KAAX,EAAkB6T,QAAlB,KAA+B,GAAnC,EAAwC;AACtCW,iCAAa,CAACF,gBAAD,CAAb;;AACA,2BAAI,CAACF,oBAAL,CAA0BpU,KAAK,GAAG,CAAlC;AACD,mBAHD,MAGO;AACL,2BAAI,CAACiS,KAAL,CAAWjS,KAAX,EAAkB6T,QAAlB,IAA8B,CAA9B;AACD;AACF,iBAPmC,EAOjC,GAPiC,CAApC;AAQD;AACF,aAbS,EAaP,IAbO,CAAV;AAcD;;;sCAEWY,K,EAAOC,Q,EAAU;AAC3B,gBAAID,KAAK,KAAK,CAAd,EAAiB;AACf,qBAAO,SAAP;AACD;;AACD,gBAAME,CAAC,GAAG,IAAV;AACA,gBAAMC,EAAE,GAAGF,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoBA,QAAQ,IAAI,CAA3C;AACA,gBAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AACA,gBAAMlQ,CAAC,GAAG8K,IAAI,CAACqF,KAAL,CAAWrF,IAAI,CAAClN,GAAL,CAASkS,KAAT,IAAkBhF,IAAI,CAAClN,GAAL,CAASoS,CAAT,CAA7B,CAAV;AACA,mBAAOI,UAAU,CAAC,CAACN,KAAK,GAAGhF,IAAI,CAACuF,GAAL,CAASL,CAAT,EAAYhQ,CAAZ,CAAT,EAAyBsQ,OAAzB,CAAiCL,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAAClQ,CAAD,CAArE;AACD;;;mCAEQ2M,I,EAAI;AACT,iBAAK2K,SAAL,CAAeoQ,KAAf,CAAqB;AAAC/a,kBAAI,EAAE,KAAKW,KAAZ;AAAmBmK,mBAAK,EAAE,KAAKnI;AAA/B,aAArB;AACH;;;qCAEO;AACN,iBAAKgI,SAAL,CAAeoQ,KAAf;AACD;;;;;;;yBAjEUwG,qB,EAAqB,sI;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,iB;AAAA,e;AAAA,krB;AAAA;AAAA;ACRlC;;AAAoC;;AAAY;;AAChD;;AACI;;AAAmC;AAAA,qBAAe,IAAAtd,OAAA,QAAf;AAA8B,aAA9B;;AAC/B;;AAAiD;AAAA,qBAAU,IAAAC,UAAA,qBAAV;AAAyC,aAAzC;;AAAjD;;AACA;;AAAuB;;AAAiB;;AACxC;;AAAsB;;AAAE;;AAExB;;AAAkC;;AAAc;;AACpD;;AACA;;AACI;;AACI;;AACJ;;AACN;;AAGM;;AAMJ;;AACJ;;AACA;;AACI;;AAAmD;AAAA,qBAAS,IAAAsd,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAM;;AAC9E;;AAAsF;AAAA,qBAAS,IAAAC,QAAA,WAAe,CAAf,EAAT;AAA2B,aAA3B;;AAA6C;;AAAM;;AAC7I;;;;AAzBuE;;AAAA;;AAS3D;;AAAA;;AAEM;;AAAA;;AAKN;;AAAA,yFAAmB,OAAnB,EAAmB,mDAAnB,EAAmB,aAAnB,EAAmB,mDAAnB;;AAQ8B;;AAAA;;;;;;;;;wEDlB7BF,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTrzB,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;AERlaszB,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAXT,CACT;AAAEX,iBAAO,EAAE,6DAAX;AAA4BY,oBAAU,EAAE,uEAAxC;AAAwDC,eAAK,EAAE,IAA/D;AAAqEC,cAAI,EAAE,CAAC,gFAAD;AAA3E,SADS,EAET;AAAEd,iBAAO,EAAE,sEAAX;AAA8BC,kBAAQ,EAAE,mFAAxC;AAA6DY,eAAK,EAAE;AAApE,SAFS,EAGT;AAAEb,iBAAO,EAAE,sEAAX;AAA8BC,kBAAQ,EAAE,4EAAxC;AAA0DY,eAAK,EAAE;AAAjE,SAHS,EAIT;AAAEb,iBAAO,EAAE,+EAAX;AAA+Be,kBAAQ,EAAE;AAAzC,SAJS,EAKT,yDALS,EAMT,0FANS,C;AAOV,kBAjDQ,CACP,uEADO,EAEP,oEAFO,EAGP,0EAHO,EAIP,kEAJO,EAKP,0DALO,EAMP,qEANO,EAOP,qEAPO,EAQP,6FARO,EASP,sEATO,EAUP,sFAVO,EAWP,wFAXO,EAYP,yEAZO,EAaP,8FAbO,EAcP,sEAdO,EAeP;AACA,yEAAeC,OAAf,CAAuB;AAAEhB,iBAAO,EAAE,6DAAX;AAAwBY,oBAAU,EAAE;AAApC,SAAvB,CAhBO,EAiBP,iEAjBO,EAkBP,2EAlBO,EAmBP,yEAnBO,EAoBP,2EApBO,EAqBP,qEArBO,EAsBP,qEAtBO,EAuBP,iEAvBO,EAwBP,uEAxBO,EAyBP,+EAzBO,EA0BP,qEA1BO,EA2BP,uEA3BO,EA4BP,yEA5BO,EA6BP,uEA7BO,EA8BP,qEA9BO,EA+BP,kEA/BO,EAgCP,gEAhCO,EAiCP,6EAjCO,EAkCP,mFAlCO,EAmCP,yDAAcI,OAAd,CAAsB;AACpBC,gBAAM,EAAE;AADY,SAAtB,CAnCO,EAsCP,+EAtCO,EAuCP,sEAvCO,CAwCP;AAxCO,SAiDR;;;;4HAIUN,S,EAAS;AAAA,yBAlIlB,2DAkIkB,EAjIlB,6EAiIkB,EAhIlB,gFAgIkB,EA/HlB,0FA+HkB,EA9HlB,sGA8HkB,EA7HlB,6FA6HkB,EA5HlB,2GA4HkB,EA3HlB,kGA2HkB,EA1HlB,uFA0HkB,EAzHlB,0FAyHkB,EAxHlB,sGAwHkB,EAvHlB,6FAuHkB,EAtHlB,8GAsHkB,EArHlB,8EAqHkB,EApHlB,0FAoHkB,EAnHlB,sGAmHkB,EAlHlB,0FAkHkB,EAjHlB,6FAiHkB,EAhHlB,gGAgHkB,EA/GlB,mGA+GkB,EA9GlB,gGA8GkB,EA7GlB,2EA6GkB,EA5GlB,4GA4GkB,EA3GlB,oFA2GkB,EA1GlB,6FA0GkB,EAzGlB,kEAyGkB,EAxGlB,gGAwGkB,EAvGlB,sGAuGkB,EAtGlB,8GAsGkB,EArGlB,qJAqGkB,EApGlB,iFAoGkB,EAnGlB,kHAmGkB,EAlGlB,4GAkGkB,EAjGlB,0EAiGkB,EAhGlB,0FAgGkB,EA/FlB,oHA+FkB,EA9FlB,0FA8FkB,EA7FlB,oFA6FkB,EA5FlB,sGA4FkB,EA3FlB,6FA2FkB,EA1FlB,oFA0FkB,EAzFlB,0GAyFkB,EAxFlB,uGAwFkB,EAvFlB,+FAuFkB,EAtFlB,wGAsFkB,EArFlB,uHAqFkB,EApFlB,iHAoFkB,EAnFlB,kHAmFkB,EAlFlB,iJAkFkB,EAjFlB,qHAiFkB,EAhFlB,wIAgFkB,EA/ElB,4GA+EkB,EA9ElB,qEA8EkB,EA7ElB,+FA6EkB,EA5ElB,kGA4EkB,EA3ElB,6FA2EkB,EA1ElB,wGA0EkB,EAzElB,2GAyEkB,EAxElB,2GAwEkB,EAvElB,iHAuEkB,EAtElB,8GAsEkB,EArElB,iHAqEkB,EApElB,4FAoEkB,EAnElB,iGAmEkB,EAlElB,gHAkEkB,EAjElB,sHAiEkB,EAhElB,sHAgEkB,EA/DlB,0GA+DkB,EA9DlB,4HA8DkB,EA7DlB,mHA6DkB,EA5DlB,wHA4DkB,EA3DlB,gGA2DkB,EA1DlB,mHA0DkB,EAzDlB,gHAyDkB,EAxDlB,mHAwDkB,EAvDlB,gHAuDkB;AAvDM,oBAGxB,uEAHwB,EAIxB,oEAJwB,EAKxB,0EALwB,EAMxB,kEANwB,EAOxB,0DAPwB,EAQxB,qEARwB,EASxB,qEATwB,EAUxB,6FAVwB,EAWxB,sEAXwB,EAYxB,sFAZwB,EAaxB,wFAbwB,EAcxB,yEAdwB,EAexB,8FAfwB,EAgBxB,sEAhBwB,EAgBR,gEAhBQ,EAmBxB,iEAnBwB,EAoBxB,2EApBwB,EAqBxB,yEArBwB,EAsBxB,2EAtBwB,EAuBxB,qEAvBwB,EAwBxB,qEAxBwB,EAyBxB,iEAzBwB,EA0BxB,uEA1BwB,EA2BxB,+EA3BwB,EA4BxB,qEA5BwB,EA6BxB,uEA7BwB,EA8BxB,yEA9BwB,EA+BxB,uEA/BwB,EAgCxB,qEAhCwB,EAiCxB,kEAjCwB,EAkCxB,gEAlCwB,EAmCxB,6EAnCwB,EAoCxB,mFApCwB,EAoCP,wDApCO,EAwCxB,+EAxCwB,EAyCxB,sEAzCwB,CA0CxB;AA1CwB;AAuDN,S;;;;;;wEAATA,S,EAAS;gBApIrB,sDAoIqB;iBApIZ;AACRxD,wBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,gFAHY,EAIZ,0FAJY,EAKZ,sGALY,EAMZ,6FANY,EAOZ,2GAPY,EAQZ,kGARY,EASZ,uFATY,EAUZ,0FAVY,EAWZ,sGAXY,EAYZ,6FAZY,EAaZ,8GAbY,EAcZ,8EAdY,EAeZ,0FAfY,EAgBZ,sGAhBY,EAiBZ,0FAjBY,EAkBZ,6FAlBY,EAmBZ,gGAnBY,EAoBZ,mGApBY,EAqBZ,gGArBY,EAsBZ,2EAtBY,EAuBZ,4GAvBY,EAwBZ,oFAxBY,EAyBZ,6FAzBY,EA0BZ,kEA1BY,EA2BZ,gGA3BY,EA4BZ,sGA5BY,EA6BZ,8GA7BY,EA8BZ,qJA9BY,EA+BZ,iFA/BY,EAgCZ,kHAhCY,EAiCZ,4GAjCY,EAkCZ,0EAlCY,EAmCZ,0FAnCY,EAoCZ,oHApCY,EAqCZ,0FArCY,EAsCZ,oFAtCY,EAuCZ,sGAvCY,EAwCZ,6FAxCY,EAyCZ,oFAzCY,EA0CZ,0GA1CY,EA2CZ,uGA3CY,EA4CZ,+FA5CY,EA6CZ,wGA7CY,EA8CZ,uHA9CY,EA+CZ,iHA/CY,EAgDZ,kHAhDY,EAiDZ,iJAjDY,EAkDZ,qHAlDY,EAmDZ,wIAnDY,EAoDZ,4GApDY,EAqDZ,qEArDY,EAsDZ,+FAtDY,EAuDZ,kGAvDY,EAwDZ,6FAxDY,EAyDZ,wGAzDY,EA0DZ,2GA1DY,EA2DZ,2GA3DY,EA4DZ,iHA5DY,EA6DZ,8GA7DY,EA8DZ,iHA9DY,EA+DZ,4FA/DY,EAgEZ,iGAhEY,EAiEZ,gHAjEY,EAkEZ,sHAlEY,EAmEZ,sHAnEY,EAoEZ,0GApEY,EAqEZ,4HArEY,EAsEZ,mHAtEY,EAuEZ,wHAvEY,EAwEZ,gGAxEY,EAyEZ,mHAzEY,EA0EZ,gHA1EY,EA2EZ,mHA3EY,EA4EZ,gHA5EY,CADN;AA+ERC,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0EAHO,EAIP,kEAJO,EAKP,0DALO,EAMP,qEANO,EAOP,qEAPO,EAQP,6FARO,EASP,sEATO,EAUP,sFAVO,EAWP,wFAXO,EAYP,yEAZO,EAaP,8FAbO,EAcP,sEAdO,EAeP;AACA,6EAAe4D,OAAf,CAAuB;AAAEhB,qBAAO,EAAE,6DAAX;AAAwBY,wBAAU,EAAE;AAApC,aAAvB,CAhBO,EAiBP,iEAjBO,EAkBP,2EAlBO,EAmBP,yEAnBO,EAoBP,2EApBO,EAqBP,qEArBO,EAsBP,qEAtBO,EAuBP,iEAvBO,EAwBP,uEAxBO,EAyBP,+EAzBO,EA0BP,qEA1BO,EA2BP,uEA3BO,EA4BP,yEA5BO,EA6BP,uEA7BO,EA8BP,qEA9BO,EA+BP,kEA/BO,EAgCP,gEAhCO,EAiCP,6EAjCO,EAkCP,mFAlCO,EAmCP,yDAAcI,OAAd,CAAsB;AACpBC,oBAAM,EAAE;AADY,aAAtB,CAnCO,EAsCP,+EAtCO,EAuCP,sEAvCO,CAwCP;AAxCO,aA/ED;AAyHR5D,qBAAS,EAAE,CACT;AAAE2C,qBAAO,EAAE,6DAAX;AAA4BY,wBAAU,EAAE,uEAAxC;AAAwDC,mBAAK,EAAE,IAA/D;AAAqEC,kBAAI,EAAE,CAAC,gFAAD;AAA3E,aADS,EAET;AAAEd,qBAAO,EAAE,sEAAX;AAA8BC,sBAAQ,EAAE,mFAAxC;AAA6DY,mBAAK,EAAE;AAApE,aAFS,EAGT;AAAEb,qBAAO,EAAE,sEAAX;AAA8BC,sBAAQ,EAAE,4EAAxC;AAA0DY,mBAAK,EAAE;AAAjE,aAHS,EAIT;AAAEb,qBAAO,EAAE,+EAAX;AAA+Be,sBAAQ,EAAE;AAAzC,aAJS,EAKT,yDALS,EAMT,0FANS,CAzHH;AAiIRG,2BAAe,EAAE,CAAC,0FAAD,EAAoB,sGAApB,CAjIT;AAkIRC,qBAAS,EAAE,CAAC,2DAAD;AAlIH,W;AAoIY,U;;;;;;;;;;;;;;;;;;AC5PtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACE;;AACF;;;;;;;;AAEE;;AACE;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAC5F;;;;;;AADkB;;AAAA,0FAAe,SAAf,EAAe,cAAf;;;;;;;;AAElB;;AACE;;AACE;;AAAqB;;AAAS;;AAChC;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAM;;AAAiC;;AAAG;;AAAQ;;AACpD;;AAEF;;AACF;;AACA;;AACE;;AACF;;AACA;;AAA+C;AAAA;;AAAA;;AAAA,mCAAkB,IAAlB;AAAsB,WAAtB;;AAC7C;;AAAU;;AAAG;;AACf;;AACF;;;;;;AAzBF;;AACE;;AAGA;;AAuBF;;;;;;AA3Bc;;AACE;;AAAA;;AAGA;;AAAA;;;;;;AATpB;;AACE;;AACE;;AAGA;;AA4BF;;AACF;;;;;;AAhC+B;;AAAA;;AAGmB;;AAAA;;;;;;;;AA+BlD;;AACE;;AAAiB;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AACzD;;;;UD5BaC,e;AAEX,iCAAoB5yB,WAApB,EACoBoJ,WADpB,EACqDE,YADrD,EACiF;AAAA;;AAD7D,eAAAtJ,WAAA,GAAAA,WAAA;AACA,eAAAoJ,WAAA,GAAAA,WAAA;AAAiC,eAAAE,YAAA,GAAAA,YAAA;AAErD,eAAAupB,MAAA,GAAS,KAAT;AAFoF;;;;qCAQ5E;AACN,iBAAKtnB,SAAL,GAAiB,IAAjB;AACA,iBAAKunB,QAAL;AACD;;;qCAEO;AAAA;;AACN,iBAAK1pB,WAAL,CAAiBglB,iBAAjB,CAAmC,KAAKpuB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA9D,EAAkEc,SAAlE,CACE,UAAAC,CAAC,EAAI;AACH,qBAAI,CAACgc,MAAL,GAAchc,CAAd;AACA,qBAAI,CAACmL,SAAL,GAAiB,KAAjB;AACA,qBAAI,CAACwnB,OAAL,GAAe3yB,CAAC,CAACoN,MAAF,CAAS,UAAArB,CAAC;AAAA,uBAAI,CAACA,CAAC,CAACkB,MAAP;AAAA,eAAV,CAAf;AACA,qBAAI,CAACqQ,KAAL,GAAatd,CAAC,CAACoN,MAAF,CAAS,UAAArB,CAAC;AAAA,uBAAIA,CAAC,CAACkB,MAAN;AAAA,eAAV,CAAb;AACD,aANH,EAMK,UAACzL,KAAD,EAAW;AACZ,qBAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwB,sBAAxB;;AACA,qBAAI,CAAC2J,SAAL,GAAiB,KAAjB;AACD,aATH;AAWD;;;wCAGa9I,K,EAAK;AACjB,iBAAKqwB,QAAL;AACArwB,iBAAK,KAAK,IAAV,GAAiB,KAAKowB,MAAL,GAAc,KAA/B,GAAuC,KAAKA,MAAL,GAAc,IAArD;AACD;;;;;;;yBAlCUD,e,EAAe,wJ,EAAA,0I,EAAA,4I;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,6gB;AAAA;AAAA;ACV5B;;AAoCA;;;;AApCc;;AAoCA;;AAAA;;;;;;;;;wED1BDA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTj0B,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuCwB;;;;;;;;AAtBV;;AACE;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AACE;;AACE;;AAAkD;;AAAgB;;AAClE;;AACE;;AACE;;AACE;;AAAA;;AAEE;;AAEA;;AACF;;AACF;;AACF;;AACA;;AAAA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA3BqB;;AAAA;;AAoBgE;;AAAA;;AACrE;;AAAA;;;;;;;;AASZ;;AACE;;AACE;AAAA;;AAAA;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA;;AAAA;;AAAA;AAAA,WAAxB;;AADF;;AAEF;;;;;;;AAH2D,iFAAa,SAAb,EAAa,CAAb;;AACsB;;AAAA,8FAAAqG,IAAA;;AAAtD,0FAAiB,SAAjB,EAAiB,aAAjB;;;;;;;;AAH/B;;AACE;;AACE;;AAIF;;AACA;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAQ;;AACnF;;AACE;;AAAqB;;AAAuB;;AAC5C;;AAA0B;;AAAG;AAAA;;AAAA;;AAAA,oCAAkB,IAAlB;AAAsB,WAAtB;;AAAwB;;AAAwB;;AAAI;;AACnF;;AACF;;;;;;AAVmB;;AAAA;;;;;;;;AAarB;;AAAgE;;AAC9D;;AAAG;AAAA;;AAAA;;AAAA,0CAAwB,IAAxB;AAA4B,WAA5B;;AACD;;AAAA;;AACE;;AACF;;AACF;;AAAK;;;;;;AALyD;;AAAA;;;;;;;;AAMhE;;AAAwD;;AACtD;;AAAG;AAAA;;AAAA;;AAAA,mCAAiB,IAAjB;AAAqB,WAArB;;AACD;;AAAA;;AACE;;AACF;;AACF;;AAAI;;;;;;AALkD;;AAAA;;;;UDxDvD8tB,Y;AAEX,8BAAoBhzB,WAApB,EACoB2F,KADpB,EAEoBC,MAFpB,EAGoBqtB,EAHpB,EAGmC;AAAA;;AAHf,eAAAjzB,WAAA,GAAAA,WAAA;AACA,eAAA2F,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAqtB,EAAA,GAAAA,EAAA;AAUpB,eAAAC,MAAA,GAAS,IAAT;AACA,eAAAC,OAAA,GAAU,CACR;AAACjuB,gBAAI,EAAE,MAAP;AAAe0B,iBAAK,EAAE;AAAtB,WADQ,EAER;AAAC1B,gBAAI,EAAE,MAAP;AAAe0B,iBAAK,EAAE;AAAtB,WAFQ,EAGR;AAAC1B,gBAAI,EAAE,MAAP;AAAe0B,iBAAK,EAAE;AAAtB,WAHQ,EAIR;AAAC1B,gBAAI,EAAE,MAAP;AAAe0B,iBAAK,EAAE;AAAtB,WAJQ,EAKR;AAAC1B,gBAAI,EAAE,MAAP;AAAe0B,iBAAK,EAAE;AAAtB,WALQ,CAAV;AAXyC;;;;qCAmBjC;AACN;AACA,iBAAKwsB,SAAL,GAAiB,KAAKztB,KAAL,CAAWoB,QAAX,CAAoBC,WAApB,CAAgC,OAAhC,CAAjB,CAFM,CAGN;;AACA,iBAAKF,SAAL,GAAiB,KAAKnB,KAAL,CAAWoB,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,KAAjE;AACA,iBAAKqsB,SAAL,GAAiB,KAAKJ,EAAL,CAAQ3sB,KAAR,CAAc;AAC7BiS,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW/R,QAAhB;AADsB,aAAd,CAAjB;AAGD;;;qCAEU/D,K,EAAK;AACd,gBAAM6wB,EAAE,GAAG7wB,KAAK,CAAC8wB,UAAjB;AACA9xB,mBAAO,CAACC,GAAR,CAAYe,KAAZ;AACA,gBAAM+wB,IAAI,GAAG,CAAEF,EAAE,CAACG,YAAH,CAAgB,UAAhB,CAAF,GAAiC,CAA9C;AAAA,gBACAC,QAAQ,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CADX;;AAGA,iBAAK,IAAI9vB,CAAC,GAAG4vB,QAAQ,CAACnwB,MAAtB,EAA8BO,CAAC,EAA/B,GAAoC;AAChC,kBAAM+vB,KAAK,GAAGH,QAAQ,CAAC5vB,CAAD,CAAR,CAAY2vB,YAAZ,CAAyB,UAAzB,CAAd;;AACA,kBAAIxqB,MAAM,CAAC4qB,KAAD,CAAN,KAAkBL,IAAtB,EAA4B;AAAEE,wBAAQ,CAAC5vB,CAAD,CAAR,CAAYgwB,KAAZ;AAAsB;AACvD;AACF;;;qCAEO;AAAA;;AACN,gBAAIC,SAAS,GAAG,EAAhB;AACA,iBAAKjuB,SAAL,GAAiB,IAAjB;AACA,iBAAKqtB,OAAL,CAAa7tB,OAAb,CAAqB,UAAAlF,CAAC,EAAI;AAAC2zB,uBAAS,IAAI3zB,CAAC,CAACwG,KAAf;AAAuB,aAAlD;AACA,iBAAK5G,WAAL,CAAiBg0B,SAAjB,CAA2B,KAAKZ,SAAhC,EAA2CW,SAA3C,EAAsD5zB,SAAtD,CACE,UAAAC,CAAC,EAAI;AACH,kBAAIA,CAAJ,EAAM;AACJ,uBAAI,CAACwF,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,OAAI,CAACU,SAAN,CAArB;AACD,eAFD,MAGI;AACF,uBAAI,CAAClF,KAAL,GAAa,oBAAb;AACD;;AACD,qBAAI,CAACkE,SAAL,GAAiB,KAAjB;AACD,aATH,EAUE,UAAClE,KAAD,EAAW;AACT,qBAAI,CAACA,KAAL,GAAa,oBAAb;AACA,qBAAI,CAACkE,SAAL,GAAiB,KAAjB;AACD,aAbH;AAeD;;;oCAEM;AAAA;;AACL,iBAAKA,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKutB,SAAL,CAAejsB,KAAnB,EAAyB;AACvB,mBAAKnH,OAAL,GAAe,IAAf;AACA,mBAAKD,WAAL,CAAiBi0B,OAAjB,CAAyB,KAAKZ,SAAL,CAAezsB,KAAxC,EAA+CtG,IAA/C,CAAoD,8DAApD,EACCH,SADD,CACW;AACTgH,oBAAI,EAAE,gBAAM;AACV,yBAAI,CAAC+rB,MAAL,GAAc,KAAd;AACA,yBAAI,CAACptB,SAAL,GAAiB,KAAjB;AACD,iBAJQ;AAKTlE,qBAAK,EAAE,eAAAA,OAAK,EAAI;AACd,yBAAI,CAACA,KAAL,GAAaA,OAAb;AACA,yBAAI,CAAC3B,OAAL,GAAe,KAAf;AACA,yBAAI,CAAC6F,SAAL,GAAiB,KAAjB;AACD;AATQ,eADX;AAYD;AACF;;;uCAES;AAAA;;AACR,iBAAK9F,WAAL,CAAiBk0B,SAAjB,CAA2B,KAAKl0B,WAAL,CAAiBmG,SAAjB,CAA2BmB,KAAtD,EAA6DnH,SAA7D,CAAuE,UAAAC,CAAC,EAAI;AAC1E,kBAAIA,CAAJ,EAAM;AACF,uBAAI,CAAC+zB,YAAL,GAAoB,yBAApB;AACH;AACF,aAJD,EAIG,UAACvyB,KAAD,EAAW;AACZ,qBAAI,CAACA,KAAL,GAAaA,KAAb;AACD,aAND;AAOD;;;;;;;yBA9FUoxB,Y,EAAY,wJ,EAAA,+H,EAAA,uH,EAAA,2H;AAAA,O;;;cAAZA,Y;AAAY,gC;AAAA,iB;AAAA,e;AAAA,swE;AAAA;AAAA;ACXzB;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAsB;;AACE;;AACxB;;AACA;;AACE;;AACF;;AAEA;;AACE;;AA6BA;;AAaF;;AAEA;;AAMA;;AAMF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAjEc;;AAAA;;AAGG;;AAAA;;AACE;;AAAA;;AA6BA;;AAAA;;AAeF;;AAAA;;AAMA;;AAAA;;;;;;;;;wEDxDJA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTr0B,oBAAQ,EAAE,SADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;UAmCau1B,mB;AAMX,uCAAc;AAAA;;AACZ,eAAKC,YAAL,GAAoB;AAClBC,kBAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADU;AAElBC,iBAAK,EAAE;AACL/G,oBAAM,EAAE,GADH;AAEL9S,kBAAI,EAAE;AAFD,aAFW;AAMlB8Z,uBAAW,EAAE;AACXC,uBAAS,EAAE;AACTC,0BAAU,EAAE;AACVxvB,sBAAI,EAAE;AACJyvB,4BAAQ,EAAE;AADN,mBADI;AAIV/tB,uBAAK,EAAE;AACL+tB,4BAAQ,EAAE;AADL,mBAJG;AAOVC,uBAAK,EAAE;AACLC,wBAAI,EAAE,IADD;AAEL7E,yBAAK,EAAE,SAFF;AAGL8E,6BAHK,qBAGKC,CAHL,EAGQ;AACX,6BAAO,IAAP;AACD;AALI;AAPG;AADH;AADA,aANK;AAyBlBC,kBAAM,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,MAAtB;AAzBU,WAApB;AA4BA,eAAKC,QAAL,GAAgB;AACdX,kBAAM,EAAE,CACN;AACEpvB,kBAAI,EAAE,YADR;AAEEtF,kBAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC;AAFR,aADM,CADM;AAOd20B,iBAAK,EAAE;AACL7Z,kBAAI,EAAE,KADD;AAEL8S,oBAAM,EAAE;AAFH,aAPO;AAWdgH,uBAAW,EAAE;AACXU,iBAAG,EAAE;AACHC,0BAAU,EAAE,KADT;AAEHC,2BAAW,EAAE,KAFV;AAGHC,2BAAW,EAAE;AAHV;AADM,aAXC;AAkBdX,sBAAU,EAAE;AACVY,qBAAO,EAAE;AADC,aAlBE;AAqBdC,kBAAM,EAAE;AACNV,kBAAI,EAAE,IADA;AAENxZ,mBAAK,EAAE,CAFD;AAGNkJ,oBAAM,EAAE,CAAC,aAAD;AAHF,aArBM;AA0BdiR,iBAAK,EAAE;AACLC,wBAAU,EAAE,CACV,KADU,EAEV,KAFU,EAGV,KAHU,EAIV,KAJU,EAKV,KALU,EAMV,KANU,EAOV,KAPU,EAQV,KARU,EASV,KATU;AADP,aA1BO;AAuCdC,iBAAK,EAAE;AACLzrB,mBAAK,EAAE;AACLmjB,oBAAI,EAAE;AADD;AADF,aAvCO;AA4CduI,gBAAI,EAAE;AACJC,qBAAO,EAAE;AADL,aA5CQ;AA+CdC,mBAAO,EAAE;AACP1pB,eAAC,EAAE;AACD2oB,yBADC,qBACSgB,GADT,EACc;AACb,yBAAO,OAAOA,GAAP,GAAa,QAApB;AACD;AAHA;AADI;AA/CK,WAAhB;AAuDD;;;;qCAGO,CACP;;;;;;;yBA9FU1B,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,uC;AAAA;AAAA;;;;;;;;;;;;;;;ACnChC;;AACE;;AACE;;AACI;;AACA;;AAAoB;;AAAO;;AAC/B;;AACA;;AACI;;AACA;;AAAoB;;AAAK;;AAC7B;;AACF;;AACA;;AACI;;AACE;;AACI;;AACI;;AACI;;AACI;;AAAK;;AAAM;;AACX;;AACI;;AAAU;;AAAQ;;AAClB;;AAAU;;AAAc;;AAC5B;;AACJ;;AACJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AACI;;AAA6B;;AAAK;;AAClC;;AAA6B;;AAAQ;;AACrC;;AAA6B;;AAAI;;AACrC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAK;;AAAM;;AACX;;AACI;;AAAU;;AAAQ;;AAClB;;AAAU;;AAAc;;AAC5B;;AACJ;;AACJ;;AACA;;AACI;;AAYJ;;AACA;;AACI;;AACI;;AAA6B;;AAAM;;AACnC;;AAA6B;;AAAS;;AACtC;;AAA6B;;AAAM;;AACvC;;AACJ;;AACJ;;AACJ;;AACF;;AACJ;;AACF;;;;AAjDgC;;AAAA,wGAA8B,OAA9B,EAA8B,sBAA9B,EAA8B,aAA9B,EAA8B,4BAA9B,EAA8B,QAA9B,EAA8B,uBAA9B;;AA0BZ;;AAAA,oGAA0B,OAA1B,EAA0B,kBAA1B,EAA0B,YAA1B,EAA0B,uBAA1B,EAA0B,aAA1B,EAA0B,wBAA1B,EAA0B,OAA1B,EAA0B,kBAA1B,EAA0B,QAA1B,EAA0B,mBAA1B,EAA0B,MAA1B,EAA0B,iBAA1B,EAA0B,QAA1B,EAA0B,mBAA1B,EAA0B,SAA1B,EAA0B,oBAA1B,EAA0B,OAA1B,EAA0B,kBAA1B;;;;;;;;;wEDhBPA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTz1B,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;AAEV01B,eAAK,EAAE,CAAF;kBAAxB,uDAAwB;mBAAd,O;AAAc,WAAE;;;;;;;;;;;;;;;;;;;AErC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOawB,gB;AAEX,oCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,oC;AAAA,gB;AAAA,e;AAAA,4G;AAAA;AAAA;ACP7B;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;;;;;;;;wEDAaA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTp3B,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACGM;;AACE;;AACF;;;;AAFwB;;;;;;AAGxB;;AACE;;AACF;;;;AAFyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DzB;;AACE;;AACE;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAAqE;;AAAa;;AAChE;;AAAS;;AAAO;;AACtC;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAAsE;;AAAU;;AACpF;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAAmD;;AAAU;;AACjE;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAA0D;;AAAc;;AAC5E;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAA2D;;AAAe;;AAC9E;;AAYF;;AACF;;;;AAhC2D;;AAAA;;AAKA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAgB3D;;AACE;;AACE;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAAsE;;AAAa;;AACjE;;AAAS;;AAC7B;;AACF;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAAwE;;AAAgB;;AAC5F;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAAqD;;AAAU;;AACnE;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAAuD;;AAAS;;AACpE;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAA4D;;AAAW;;AAC3E;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAA6D;;AAAY;;AAC7E;;AACF;;AACF;;;;AA1B2D;;AAAA;;AAMA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;AAhE/D;;AAEE;;AACE;;AAoCA;;AA8BF;;AAGF;;;;;;AAvEE;;AACc;;AAAA;;AACE;;AAAA;;AAoCA;;AAAA;;;;;;;;UD1FPm3B,sB;AAQX,wCAAmBh2B,WAAnB,EAA4Di2B,aAA5D,EAA8F;AAAA;;AAA3E,eAAAj2B,WAAA,GAAAA,WAAA;AAAyC,eAAAi2B,aAAA,GAAAA,aAAA;AAL5D,eAAA/Q,OAAA,GAAU,KAAV;AACA,eAAAgR,UAAA,GAAa,IAAb;AACA,eAAAh1B,aAAA,GAAgB,EAAhB;AACA,eAAAi1B,SAAA,GAAY,KAAZ;AACU,eAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACuF;;;;qCAEzF;AAAA;;AACN,iBAAKl2B,IAAL,GAAY,KAAKF,WAAL,CAAiBmG,SAA7B;;AACA,gBAAI,KAAKnG,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA/B,EAAkC;AAChC,mBAAK42B,aAAL,CAAmBI,gBAAnB,CAAoC,KAAKr2B,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA/D,EAAmEc,SAAnE,CACE,UAAAC,CAAC;AAAA,uBAAI,OAAI,CAACc,aAAL,GAAqBd,CAAzB;AAAA,eADH;AAGD;AACF;;;mCAEQ;AACP,iBAAKJ,WAAL,CAAiB6rB,MAAjB;AACD;;;wCAEU;AACT,iBAAKuK,aAAL,CAAmB5mB,IAAnB;AACA,iBAAK0mB,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;6CAEe;AACd,iBAAKC,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;;;;;;;yBA9BUH,sB,EAAsB,wJ,EAAA,sJ;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,83D;AAAA;AAAA;ACVnC;;AACE;;AACE;;AACE;;AAGA;;AAGF;;AACA;;AAAmB;AAAA,qBAAS,IAAAM,WAAA,EAAT;AAAsB,aAAtB;;AACjB;;AAAU;;AAAI;;AAChB;;AAEA;;AAEA;;AACE;;AAAmE;;AAAa;;AAClF;;AAEA;;AAEE;;AACF;;AACA;;AACE;;AAAiB;AAAA,qBAAS,IAAAzK,MAAA,EAAT;AAAiB,aAAjB;;AACf;;AAAU;;AAAW;;AACrB;;AAAM;;AAAQ;;AAChB;;AACF;;AACA;;AAAmB;AAAA,qBAAS,IAAA0K,gBAAA,EAAT;AAA2B,aAA3B;;AACjB;;AAAU;;AAAI;;AAChB;;AAGA;;AACE;;AACE;;AACE;;AACE;;AAAmE;;AAAa;;AAClF;;AACF;;AAEA;;AACE;;AAEE;;AACF;;AACA;;AACE;;AAAiB;AAAA,qBAAS,IAAA1K,MAAA,EAAT;AAAiB,aAAjB;;AACf;;AAAU;;AAAW;;AACrB;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AACA;;AACE;;AAAgC;;AAAoC;;AACtE;;AACF;;AACF;;AACF;;AACA;;AAyEF;;;;;;;;AApIU;;AAAA;;AACD;;AAAA;;AAGA;;AAAA;;AAUc;;AAAA;;AACP;;AAAA;;AAGO;;AAAA;;AAEkC;;AAAA;;AAgB5B;;AAAA;;AACP;;AAAA;;AAKO;;AAAA;;AAEkC;;AAAA;;AAUrB;;AAAA;;AAKvB;;AAAA;;;;;;;;;wEDnDNmK,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTr3B,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKwB,U;;;;;;;AAOvBu3B,uBAAa;kBAAtB;AAAsB;;;;;;;;;;;;;;;;;;;AEjBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAkBaI,Y;AAKX,gCAAc;AAAA;;AAHN,eAAA9zB,OAAA,GAAU,IAAI,4CAAJ,EAAV;AACA,eAAA+zB,SAAA,GAAY,eAAZ;AAEQ;;;;oCAEW;AAAA,gBAAnBp3B,EAAmB,uEAAd,KAAKo3B,SAAS;AACzB,mBAAO,KAAK/zB,OAAL,CAAag0B,YAAb,GAA4Bp2B,IAA5B,CAAiC,8DAAO,UAAAF,CAAC;AAAA,qBAAIA,CAAC,IAAIA,CAAC,CAACf,EAAF,KAASA,EAAlB;AAAA,aAAR,CAAjC,CAAP;AACD;;;kCAEO0c,O,EAAiBjH,O,EAAgB;AACvC,iBAAKgH,KAAL,CAAW,IAAI,mDAAJ,CAAU,MAAD,OAAC,CAAD,kBACfhH,OADe,CAAC,EACT;AACV4F,kBAAI,EAAE,wDAAU+B,OADN;AAEVV,qBAAO,EAAPA;AAFU,aADS,CAAV,CAAX;AAKD;;;gCAEKA,O,EAAiBjH,O,EAAgB;AACrC,iBAAKgH,KAAL,CAAW,IAAI,mDAAJ,CAAU,MAAD,OAAC,CAAD,kBACfhH,OADe,CAAC,EACT;AACV4F,kBAAI,EAAE,wDAAUgC,KADN;AAEVX,qBAAO,EAAPA;AAFU,aADS,CAAV,CAAX;AAKD;;;+BAEIA,O,EAAiBjH,O,EAAgB;AACpC,iBAAKgH,KAAL,CAAW,IAAI,mDAAJ,CAAU,MAAD,OAAC,CAAD,kBACfhH,OADe,CAAC,EACT;AACV4F,kBAAI,EAAE,wDAAUiC,IADN;AAEVZ,qBAAO,EAAPA;AAFU,aADS,CAAV,CAAX;AAKD;;;+BAEIA,O,EAAiBjH,O,EAAgB;AACpC,iBAAKgH,KAAL,CAAW,IAAI,mDAAJ,CAAU,MAAD,OAAC,CAAD,kBACfhH,OADe,CAAC,EACT;AACV4F,kBAAI,EAAE,wDAAUkC,OADN;AAEVb,qBAAO,EAAPA;AAFU,aADS,CAAV,CAAX;AAKD;;;;;;;;;;;;;sBAEKD,K,EAAc;AAClBA,iBAAK,CAACzc,EAAN,GAAWyc,KAAK,CAACzc,EAAN,IAAY,KAAKo3B,SAA5B;AACA,iBAAK/zB,OAAL,CAAayE,IAAb,CAAkB2U,KAAlB;AACD,W;;;kCAE0B;AAAA,gBAArBzc,EAAqB,uEAAhB,KAAKo3B,SAAW;AACzB,iBAAK/zB,OAAL,CAAayE,IAAb,CAAkB,IAAI,mDAAJ,CAAU;AAC1B9H,gBAAE,EAAFA;AAD0B,aAAV,CAAlB;AAGD;;;;;;;yBApDUm3B,Y;AAAY,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACV3xB,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;AClBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIM;;AAAsD;;AAAE;;;;;;AACxD;;AAAmC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKnC;;AAAsD;;AAAK;;;;;;AAC3D;;AAAmC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAKnC;;AAAsD;;AAAO;;;;;;AAC7D;;AAAmC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAKjC;;AAAsD;;AAAK;;;;;;AAC3D;;AAAmC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAKrC;;AAAsD;;AAAK;;;;;;AAC3D;;AAAmC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAInC;;AAAsD;;AAAW;;;;;;;;AACjE;;AAAmC;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AAAA;;AAEA;;AAEA;;AAEF;;AAAO;;AACL;;AAAK;;;;;;AAGT;;;;;;AACA;;;;;;;;UDjCS8xB,4B;AAkBX,8CAAoBhxB,KAApB,EAA2CixB,aAA3C,EAA8E;AAAA;;AAA1D,eAAAjxB,KAAA,GAAAA,KAAA;AAAuB,eAAAixB,aAAA,GAAAA,aAAA;AAZ3C;;AACA,eAAA7V,gBAAA,GAAmB,CAAC,IAAD,EAAO,OAAP,EAAgB,SAAhB,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,OAA7C,CAAnB;AAGA,eAAA8V,MAAA,GAAS,CACP;AACA;AACA;AACA;AACA;AALO,WAAT;AASE,eAAKC,IAAL,GAAY,KAAKnxB,KAAL,CAAW8Z,GAAvB;AACD;;;;qCAEU;AAAA;;AACT,iBAAKuB,UAAL,GAAkB,IAAI,6FAAJ,EAAlB;AACA,iBAAK4V,aAAL,CAAmBG,YAAnB,GAAkC52B,SAAlC,CAA4C,UAAAC,CAAC,EAAI;AAC/C,qBAAI,CAAC4gB,UAAL,CAAgBphB,IAAhB,GAAuBQ,CAAvB;AACAA,eAAC,CAACkF,OAAF,CAAU,UAAAgV,CAAC,EAAI;;;AACd,sBAAAA,CAAC,CAAClJ,KAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAE9L,OAAF,CAAU,UAAAlG,OAAO,EAAI;AACzB,yBAAI,CAACy3B,MAAL,CAAYn3B,IAAZ,CAAiB;AAACkL,yBAAK,EAAExL,OAAO,CAAC43B,QAAhB;AAA0B/sB,yBAAK,EAAE7K,OAAO,CAAC43B;AAAzC,mBAAjB;AACD,iBAFK,CAAP;AAGA,eAJD;;AAMA,qBAAI,CAACH,MAAL,CAAYvxB,OAAZ,CAAoB,UAAAlF,CAAC;AAAA,uBAAIA,CAAC,CAACwK,KAAF,IAAWxJ,MAAM,CAACiD,QAAP,CAAgB4yB,MAA/B;AAAA,eAArB;AAED,aAVD;AAWD;;;4CAEiB;AAChB,iBAAKjW,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACA,iBAAKH,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKgW,KAAL,CAAWlW,UAAX,GAAwB,KAAKA,UAA7B;AACD;;;uCAEY5P,K,EAAK,CAEjB;;;;;;;yBA7CUulB,4B,EAA4B,uH,EAAA,4J;AAAA,O;;;cAA5BA,4B;AAA4B,gD;AAAA;AAAA;sEAC5B,wE,EAAY,I;;sEACZ,8D,EAAO,I;;sEACP,gE,EAAQ,I;;;;;;;;;;;;;;;;AChBrB;;AACE;;AAEE;;AACE;;AACA;;AACF;;AAGC;;AACC;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGE;;AACE;;AACA;;AACF;;AAGF;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACA;;AACF;;AAEA;;AAMF;;AA6BA;;AACE;;AACF;;;;AAzCuB;;AAAA;;AACP;;AAAA;;AAIV;;AAAA,2IAAkC,WAAlC,EAAkC,CAAlC,EAAkC,UAAlC,EAAkC,CAAlC,EAAkC,iBAAlC,EAAkC,qEAAlC;;AAmCgB;;AAAA;;;;;;;;;wEDxETA,4B,EAA4B;gBALxC,uDAKwC;iBAL9B;AACTh4B,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,sCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD;AAHF,W;AAK8B,U;;;;;;;AACdqiB,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACL+V,eAAK,EAAE,CAAF;kBAAzB,uDAAyB;mBAAf,gE;AAAe,WAAE;;;;;;;;;;;;;;;;;;;AEhB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,W;AAEX,6BAAoBC,SAApB,EAA2C;AAAA;;AAAvB,eAAAA,SAAA,GAAAA,SAAA;AACnB;;;;oCAESxwB,K,EAAO;AACf,mBAAO,KAAKwwB,SAAL,CAAeC,8BAAf,CAA8CzwB,KAA9C,CAAP;AACD;;;;;;;yBAPUuwB,W,EAAW,uI;AAAA,O;;;;cAAXA,W;AAAW;;;;;wEAAXA,W,EAAW;gBAHvB,kDAGuB;iBAHlB;AACJjyB,gBAAI,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACNxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaoyB,iB;AAKX,mCAAoB9mB,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFpB,eAAA+mB,MAAA,GAAkB,EAAlB;AACA,eAAAC,OAAA,GAAqB,EAArB;AACyC;;;;0CAE5B;AACX,mBAAO,KAAKhnB,IAAL,CAAUnF,GAAV,WAA6B,yEAAYwF,MAAzC,2BAAP;AACD;;;sCAEQ;AACP,mBAAO,KAAKL,IAAL,CAAUnF,GAAV,WAAwB,yEAAYwF,MAApC,uBAAP;AACD;;;yCAEW;AACV,mBAAO,KAAKL,IAAL,CAAUnF,GAAV,WAA0B,yEAAYwF,MAAtC,0BAAP;AACD;;;0CAEexM,Q,EAAkB;AAEhC,gBAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEd,MAAV,IAAmB,CAAvB,EAAyB;AACvB,kBAAMuR,OAAO,GAAG;AAAEC,sBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,cAArB,EAAqC,yEAAYhI,kBAAjD;AAAV,eAAhB;AACA,qBAAO,KAAK6H,IAAL,CAAUnF,GAAV,CAAmB,yEAAYwU,UAAZ,GAAyB,gBAAzB,GAA4Cxb,QAA5C,UAAnB,EAAmFyQ,OAAnF,CAAP;AACD;;AACD,mBAAO,gDAAG,EAAH,CAAP;AACD;;;2CAEgB/B,M,EAAM;AACrB,gBAAM+B,OAAO,GAAG;AAAEC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,QAArB,EAA+BoC,MAA/B;AAAV,aAAhB;AACA,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,+BAAoEiE,OAApE,CAAP;AACD;;;8CAEgB;AACf,mBAAO,KAAKtE,IAAL,CAAUnF,GAAV,WAA6B,yEAAYwF,MAAzC,kBAAP;AACD;;;wCAEakC,M,EAAM;AAClB,gBAAM+B,OAAO,GAAG;AAAEC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,QAArB,EAAgCoC,MAAhC;AAAV,aAAhB;AACA,mBAAO,KAAKvC,IAAL,CAAUnF,GAAV,WAA6B,yEAAYwF,MAAzC,yBAAqEiE,OAArE,CAAP;AACD;;;;;;;yBAxCUwiB,iB,EAAiB,uH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVzyB,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,eAAS4yB,cAAT,CAAwBC,qBAAxB,EAAmE;AACtE,eAAO;AAAA,iBAAM,IAAIC,OAAJ,CAAY,UAAA/M,OAAO,EAAI;AAChC8M,iCAAqB,CAACE,YAAtB,GACKz3B,SADL,GAEK0M,GAFL,CAES+d,OAFT;AAGH,WAJY,CAAN;AAAA,SAAP;AAKH;;;;;;;;;;;;;;;;;ACRD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmEgB;;AACE;;AACF;;;;;;;;AACA;;AACE;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAAU;;AAAI;;AAChB;;AACA;;AACF;;;;;;AAGJ;;AAA8C;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;;;AAyB5C;;AAAoD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClD;;AAAU;;AAAa;;AACvB;;AAAwB;;AAAc;;AACxC;;;;;;AAFY;;AAAA;;AACc;;AAAA;;;;;;AAzB9B;;AAkBE;;AACE;;AAAM;;AAAQ;;AACd;;AAAoC;;AAAG;;AACzC;;AACA;;AACE;;AAIF;;AACF;;;;;;;;AAV2C;;AAAA;;AAKtB;;AAAA;;;;;;AAzCzB;;AACE;;AACE;;AACE;;AACE;;AACE;;AAGA;;AAMF;;AACF;;AACA;;AACF;;AACA;;AA6BF;;AACF;;;;;;AA5CsB;;AAAA;;AACsB;;AAAA;;AAGA;;AAAA;;AAQnB;;AAAA;;AAED;;AAAA;;;;;;AAoCd;;AACE;;AACF;;;;;;;;AACA;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;;;;;AAJnF;;AACE;;AAGA;;AACF;;;;;;AAJ6B;;AAAA;;AAGR;;AAAA;;;;;;AAErB;;AACE;;AAGF;;;;;;AAHsB;;AAAA,uGAA2B,QAA3B,EAA2B,aAA3B;;;;;;AAT1B;;AACE;;AACE;;AAMA;;AAKF;;AA8BF;;;;;;AA1CgB;;AAAA;;AACE;;AAAA;;AAMA;;AAAA;;;;;;;;AAoClB;;AACE;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AACzD;;;;;;AAFwB;;AAAA,oGAAyB,UAAzB,EAAyB,uBAAzB;;;;UDlJrBiN,oB;AAEX,sCAAoB5E,EAApB,EACoBhiB,aADpB,EAEoBjR,WAFpB,EAEqD;AAAA;;AAFjC,eAAAizB,EAAA,GAAAA,EAAA;AACA,eAAAhiB,aAAA,GAAAA,aAAA;AACA,eAAAjR,WAAA,GAAAA,WAAA;AAEpB,eAAA83B,kBAAA,GAAqB,IAArB;AAMA,eAAA5iB,WAAA,GAAc,EAAd;AAIA,eAAA3D,SAAA,GAAY,CACV;AAAClS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,YAAf;AAA6B4K,gBAAI,EAAE;AAAnC,WADU,EAEV;AAACnS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,iBAAf;AAAkC4K,gBAAI,EAAE;AAAxC,WAFU,EAGV;AACA;AACA;AAACnS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,OAAf;AAAwB4K,gBAAI,EAAE;AAA9B,WALU,CAAZ;AAQA,eAAAumB,WAAA,GAAc,CACZ;AAAC14B,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,SAAf;AAA0B4K,gBAAI,EAAE;AAAhC,WADY,EAEZ;AAACnS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,iBAAf;AAAkC4K,gBAAI,EAAE;AAAxC,WAFY,EAGZ;AACA;AACA;AAACnS,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE,OAAf;AAAwB4K,gBAAI,EAAE;AAA9B,WALY,CAAd;AApBwD;;;;qCA4BhD;AACN,iBAAKjG,SAAL,GAAiB,IAAjB;AACA,iBAAKysB,UAAL;AACD;;;qCAEU3yB,I,EAAI;AACb,gBAAIA,IAAI,CAAChG,EAAL,KAAY,CAAhB,EAAkB;AAChB,mBAAKy4B,kBAAL,GAA0B,KAA1B;AACD;AACF;;;wCAEU;AACT,mBAAO,KAAKA,kBAAL,GAA0B,KAAKvmB,SAA/B,GAA2C,KAAKwmB,WAAvD;AACD;;;wCAEa/qB,G,EAAS;AACrB,mBAAOA,GAAG,GAAGA,GAAG,CAAC/C,KAAP,GAAe,EAAzB;AACD;;;uCAES;AAAA;;AACR,iBAAKgH,aAAL,CAAmBgnB,oBAAnB,CAAwC,KAAKj4B,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAAnE,EACCc,SADD,CACW,UAAAC,CAAC,EAAI;AAAC,qBAAI,CAAC8U,WAAL,GAAmB9U,CAAnB;AAAsB,qBAAI,CAAC83B,iBAAL,GAAyB93B,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAE8d,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAzB;AAAyC,qBAAI,CAAC3S,SAAL,GAAiB,KAAjB;AAAyB,aADzG,EAEA,UAAC3J,KAAD,EAAW;AAAE,qBAAI,CAAC2J,SAAL,GAAiB,KAAjB;AAAyB,aAFtC;AAGD;;;qCAEO;AACN,iBAAKusB,kBAAL,GAA0B,IAA1B;AACA,iBAAKE,UAAL;AACD;;;qCAEUv1B,K,EAAK;AACd,gBAAMqc,UAAU,GAAGrc,KAAK,CAACsc,SAAN,GAAkBtc,KAAK,CAACuc,QAA3C;AACA,gBAAIC,QAAQ,GAAGH,UAAU,GAAGrc,KAAK,CAACuc,QAAlC;;AAEA,gBAAIC,QAAQ,GAAG,KAAK/J,WAAL,CAAiB3R,MAAhC,EAAuC;AACrC0b,sBAAQ,GAAG,KAAK/J,WAAL,CAAiB3R,MAA5B;AACD;;AAED,iBAAK20B,iBAAL,GAAyB,KAAKhjB,WAAL,CAAiBgJ,KAAjB,CAAuBY,UAAvB,EAAmCG,QAAnC,CAAzB;AACD;;;uCAEYxc,K,EAAK;AAChB,gBAAIA,KAAK,CAACpD,EAAN,KAAa,CAAjB,EAAmB;AACjB,mBAAKy4B,kBAAL,GAA0B,KAA1B;AACD;AACF;;;iDAEsBr1B,K,EAAK;AAC1B,iBAAKq1B,kBAAL,GAA0Br1B,KAA1B;AACD;;;;;;;yBAjFUo1B,oB,EAAoB,2H,EAAA,8I,EAAA,wJ;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA,iB;AAAA,e;AAAA,2nC;AAAA;AAAA;ACZjC;;AACE;;AACE;;AAAI;;AAAa;;AAAM;;AAAa;;AAAO;;AAC3C;;AACE;;AAAI;;AAAc;;AAClB;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAAI;;AAAe;;AACnB;;AACE;;AACE;;AAAkC;;AAAS;;AAC3C;;AAAgC;;AAAM;;AACxC;;AACF;;AACA;;AAAI;;AAAW;;AACf;;AACE;;AAAM;;AAAC;;AAA+E;;AAAG;;AAC3F;;AAIA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AAEF;;AACA;;AACE;;AAAyC;;AAAK;;AAChD;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAiDA;;AACE;;AACE;;AA4CA;;AAIF;;AACF;;AACF;;AACF;;AACF;;;;AAtI2B;;AAAA,iFAAW,KAAX,EAAW,CAAX,EAAW,MAAX,EAAW,EAAX,EAAW,YAAX,EAAW,IAAX;;AA+Be;;AAAA;;AAkD5B;;AAAA;;AACD;;AAAA;;AA4CA;;AAAA;;;;;;;;;wEDjJAA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTl5B,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;;UAAas5B,gB;;;;;;;2CACeC,K,EAAex2B,K,EAAuB;AAC1D,mBAAO,UAAC8e,OAAD,EAAsD;AAC3D,kBAAI,CAACA,OAAO,CAAC9Z,KAAb,EAAoB;AAClB,uBAAO,IAAP;AACD;;AAED,kBAAMQ,KAAK,GAAGgxB,KAAK,CAACvU,IAAN,CAAWnD,OAAO,CAAC9Z,KAAnB,CAAd;AACA,qBAAOQ,KAAK,GAAG,IAAH,GAAUxF,KAAtB;AACD,aAPD;AAQD;;;iDAE2B8e,O,EAA0B;AACpD,gBAAMja,QAAQ,GAAWia,OAAO,CAACrV,GAAR,CAAY,UAAZ,EAAwBzE,KAAjD;AACA,gBAAMC,eAAe,GAAW6Z,OAAO,CAACrV,GAAR,CAAY,iBAAZ,EAA+BzE,KAA/D;;AACA,gBAAIH,QAAQ,KAAKI,eAAjB,EAAkC;AAChC6Z,qBAAO,CAACrV,GAAR,CAAY,iBAAZ,EAA+BsE,SAA/B,CAAyC;AAAE0oB,gCAAgB,EAAE;AAApB,eAAzC;AACD;AACF;;;;;;;;;;;;;;;;;;;;;ACpBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACE;;AACE;;AAAA;;AAEE;;AACA;;AAEF;;AACF;;AACA;;AAAA;;AAAiB;;AAAqB;;AACxC;;;;;;AAYM;;AACE;;AAAgB;;AAAW;;AAC3B;;AACE;;AACF;;AACA;;AAAI;;AAAkB;;AACxB;;;;;;;AALkB;;AAAA;;AAEd;;AAAA;;AAEE;;AAAA;;;;UDrBHC,yB;AAEX,2CAAmBt4B,WAAnB,EAA4Di2B,aAA5D,EAA8F;AAAA;;AAA3E,eAAAj2B,WAAA,GAAAA,WAAA;AAAyC,eAAAi2B,aAAA,GAAAA,aAAA;AAE5D,eAAA/0B,aAAA,GAAgB,EAAhB;AAFiG;;;;qCAIzF;AAAA;;AACN,gBAAI,KAAKlB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA/B,EAAkC;AAChC,mBAAK42B,aAAL,CAAmBI,gBAAnB,CAAoC,KAAKr2B,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA/D,EAAmEc,SAAnE,CACE,UAAAC,CAAC;AAAA,uBAAI,OAAI,CAACc,aAAL,GAAqBd,CAAzB;AAAA,eADH;AAGD;AACF;;;;;;;yBAZUk4B,yB,EAAyB,wJ,EAAA,sJ;AAAA,O;;;cAAzBA,yB;AAAyB,6C;AAAA,iB;AAAA,e;AAAA,u6B;AAAA;AAAA;ACTtC;;AACE;;AACE;;AAAsB;;AAAa;;AACnC;;AAWA;;AAEE;;AACE;;AACE;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAO;;AACzB;;AACF;;AACA;;AACE;;AAOF;;AACF;;AASF;;AAMF;;AACF;;;;AA9C8D;;AAAA;;AAsBhD;;AAAA;;;;;;;;;wEDhBDA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACT35B,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;AETtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqDQ;;AACE;;AACF;;;;;;AAFqD;;AACnD;;AAAA;;;;;;AAOF;;AACE;;AACF;;;;;;AAFmE;;AACjE;;AAAA;;;;;;;;AAcJ;;AACE;;AAAc;AAAA;;AAAA;;AAAA,qDAAoC,IAApC;AAAwC,WAAxC;;AAEd;;AACF;;;;;;AAH0D;;AAAA,qIAAmD,eAAnD,EAAmD,sDAAnD,EAAmD,YAAnD,EAAmD,sBAAnD;;;;;;;;AAI1D;;AACE;;AAAc;AAAA;;AAAA,mBAASowB,MAAM,CAACnH,eAAP,EAAT;AAAiC,WAAjC,EAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA,4BAAoB,QAAAyQ,SAAA,gBAApB,GAA4C,IAA5C;AAAgD,WAAlF;;AAEd;;AACF;;;;;;;;AAFI;;AAAA,oHAAqC,YAArC,EAAqC,6BAArC;;;;;;AAaJ;;AAAuD;;AAAM;;;;;;AAC7D;;AACE;;AAAuB;;AAA2F;;AAAO;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAK3H;;AAAuD;;AAAM;;;;;;AAC7D;;AAA8D;;AAAc;;;;;;AAAzC;;AAA2B;;AAAA;;;;;;AAK9D;;AAAuD;;AAAQ;;;;;;AAC/D;;AAAoC;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAKpC;;AAAuD;;AAAS;;;;;;AAChE;;AAA8D;;;;AAAuB;;;;;;AAAlD;;AAA2B;;AAAA;;;;;;AAK9D;;AAAuD;;AAAM;;;;;;AAC7D;;AAA8D;;AAAc;;;;;;AAAzC;;AAA2B;;AAAA;;;;;;AAK9D;;AAAuD;;AAAO;;;;;;AAC9D;;AAA8D;;AAAe;;;;;;AAA1C;;AAA2B;;AAAA;;;;;;AAI9D;;AAAuD;;AAAW;;;;;;;;AAClE;;AAA8D;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/D;;AAAA;;AAEA;;AAEA;;AAEF;;AAAO;;AACL;;AAAK;;;;;;AAR4B;;;;;;AAWrC;;;;;;AACA;;;;;;AAGA;;AACE;;AAAiC;;AAA6C;;AAChF;;;;;;;;AADmC;;AAAA;;;;;;;;AAKnC;;AACE;;AAAQ;;AAAiC;;AAAU;;AAAU;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAM;;AAClG;;;;;;;;AACA;;AACC;;AAAQ;;AAAS;;AAAU;;AAAU;AAAA;;AAAA;;AAAA,mCAAiB,IAAjB;AAAqB,WAArB;;AAAuB;;AAAM;;AACpE;;;;;;AADU;;AAAA;;;;;;;;UDjJAC,uB;AAEX,yCAAoBvnB,aAApB,EACoBjR,WADpB,EACqD;AAAA;;AADjC,eAAAiR,aAAA,GAAAA,aAAA;AACA,eAAAjR,WAAA,GAAAA,WAAA;AAepB,eAAA+gB,gBAAA,GAA6B,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,OAAnD,EAA4D,QAA5D,EAAsE,YAAtE,CAA7B;AAEA,eAAAwX,SAAA,GAAY,IAAI,uEAAJ,CAAwB,IAAxB,EAA8B,EAA9B,CAAZ;AAjBwD;;;;qCAsBhD;AAAA;;AACN,iBAAKvX,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAK9L,WAA5B,CAAlB;AACA,iBAAKjE,aAAL,CAAmBob,mBAAnB,CAAuC,KAAKrsB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAAlE,EACCc,SADD,CACW,UAAAC,CAAC;AAAA,qBAAI,OAAI,CAACiuB,eAAL,GAAuBjuB,CAA3B;AAAA,aADZ;AAED;;;4CAEiB;AAChB,iBAAK4gB,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;qCAEU1e,K,EAAK,CAEf;;;sCAEWA,K,EAAY;AACtB,gBAAM8e,WAAW,GAAI9e,KAAK,CAAC4Q,MAAN,CAAkCzM,KAAvD;AACA,iBAAKoa,UAAL,CAAgBxT,MAAhB,GAAyB+T,WAAW,CAACC,IAAZ,GAAmBrC,WAAnB,EAAzB;;AAEA,gBAAI,KAAK6B,UAAL,CAAgBE,SAApB,EAA+B;AAC7B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BO,SAA1B;AACD;AACF;;;0CAEe;AACd,gBAAMgX,WAAW,GAAG,KAAKF,SAAL,CAAe5uB,QAAf,CAAwBpG,MAA5C;AACA,gBAAMm1B,OAAO,GAAG,KAAK1X,UAAL,CAAgBphB,IAAhB,CAAqB2D,MAArC;AACA,mBAAOk1B,WAAW,KAAKC,OAAvB;AACD;AAED;;;;yCACe;AAAA;;AACb,iBAAKC,aAAL,KACI,KAAKJ,SAAL,CAAelc,KAAf,EADJ,GAEI,KAAK2E,UAAL,CAAgBphB,IAAhB,CAAqB0F,OAArB,CAA6B,UAAA+b,GAAG;AAAA,qBAAI,OAAI,CAACkX,SAAL,CAAeK,MAAf,CAAsBvX,GAAtB,CAAJ;AAAA,aAAhC,CAFJ;AAGD;AAED;;;;wCACcA,G,EAAS;AACrB,gBAAI,CAACA,GAAL,EAAU;AACR,+BAAU,KAAKsX,aAAL,KAAuB,QAAvB,GAAkC,UAA5C;AACD;;AACD,6BAAU,KAAKJ,SAAL,CAAevzB,UAAf,CAA0Bqc,GAA1B,IAAiC,UAAjC,GAA8C,QAAxD,kBAAwEA,GAAG,CAACnZ,QAAJ,GAAe,CAAvF;AACD;;;uCAEYuI,I,EAAI;AACf,gBAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAElN,MAAN,IAAe,CAAnB,EAAsB;AACpBnC,oBAAM,CAACsD,IAAP,CAAY+L,IAAZ;AACD;AACF;;;2CAEa;AAAA;;AACZ,gBAAI,KAAK8nB,SAAL,CAAe5uB,QAAf,CAAwBpG,MAAxB,GAAiC,CAArC,EAAuC;AACrC,kBAAMs1B,eAAe,GAAG,EAAxB;AACA,mBAAKC,gBAAL,CAAsBxzB,OAAtB,CAA8B,UAAAmZ,OAAO,EAAI;AACvC,uBAAI,CAAC8Z,SAAL,CAAe5uB,QAAf,CAAwBrE,OAAxB,CAAgC,UAAAlF,CAAC,EAAI;AACnCy4B,iCAAe,CAACn5B,IAAhB,CAAqB;AACnBkT,gCAAY,EAAExS,CAAC,CAACwS,YADG;AAEnBoc,6BAAS,EAAEvQ,OAAO,CAACpf,EAFA;AAGnB2K,4BAAQ,EAAE,OAAI,CAAC+uB,cAAL,CAAoB/uB,QAHX;AAInBgvB,gCAAY,EAAE,IAAI/5B,IAAJ;AAJK,mBAArB;AAMD,iBAPD;AAQD,eATD;AAUA,mBAAKgS,aAAL,CAAmBgoB,uBAAnB,CAA2CJ,eAA3C,EACC14B,SADD,CACW,UAAAC,CAAC,EAAI;AACd,uBAAI,CAACwN,OAAL,GAAe,IAAf;AACA,uBAAI,CAACmrB,cAAL,GAAsB,IAAtB;AACA,uBAAI,CAACD,gBAAL,GAAwB,IAAxB;AACD,eALD,EAKG,UAACl3B,KAAD,EAAW;AACZ,uBAAI,CAACA,KAAL,GAAaA,KAAb;AACD,eAPD;AAQD;AACF;;;;;;;yBAlGU42B,uB,EAAuB,8I,EAAA,wJ;AAAA,O;;;cAAvBA,uB;AAAuB,2C;AAAA;AAAA;sEAsBvB,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;;;;;ACQpB;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA,qBAAS,IAAA9W,WAAA,QAAT;AAA4B,aAA5B;;AAAhB;;AACF;;AACA;;AACE;;AACE;;AAAwB;;AAAM;;AAC9B;;AAAY;AAAA;AAAA;;AACV;;AAGF;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AAAY;AAAA;AAAA;;AACV;;AAGF;;AACF;;AACA;;AAAiD;AAAA,qBAAS,IAAAwX,cAAA,EAAT;AAAyB,aAAzB;;AACkB;;AAAM;;AAC3E;;AACF;;AAGA;;AACE;;AAEE;;AACE;;AAKA;;AAKF;;AASA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACA;;AAGA;;AAGF;;AACA;;AACA;;AACE;;AAGA;;AAGF;;AAEF;;;;AA9GkB;;AAAA;;AACE;;AAAA;;AAOF;;AAAA;;AACE;;AAAA;;AAMd;;AAAA;;AAMa;;AAAA;;AAuEI;;AAAA;;AACP;;AAAA;;AAOC;;AAAA;;AAEoB;;AAAA;;AAGA;;AAAA;;;;;;;;;;wEDhJxBV,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT75B,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKyB,U;;;;;;;AAMlCqW,qBAAW;kBADV;AACU,Y;AAGX1H,gBAAM;kBADL;AACK,Y;AAamB0T,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;;;;;;;;;AEpC5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKagY,gB;;;;;;;oCAEDvyB,K,EAAOhE,I,EAAcw2B,I,EAAc;AAC3C,gBAAI,CAACA,IAAL,EAAW;AAAE,qBAAOxyB,KAAP;AAAe;;AAC5B,mBAAO,CAACA,KAAK,IAAI,EAAV,EAAc4G,MAAd,CAAqB,UAAAnI,IAAI;AAAA,qBAAIzC,IAAI,CAACuM,KAAL,CAAW,GAAX,EAAgBoL,IAAhB,CAAqB,UAAA0F,GAAG;AAAA,uBAAI5a,IAAI,CAACse,cAAL,CAAoB1D,GAApB,KAA4B,IAAI2D,MAAJ,CAAWwV,IAAX,EAAiB,IAAjB,EAAuBvV,IAAvB,CAA4Bxe,IAAI,CAAC4a,GAAD,CAAhC,CAAhC;AAAA,eAAxB,CAAJ;AAAA,aAAzB,CAAP;AACD;;;;;;;yBALUkZ,gB;AAAgB,O;;;;cAAhBA,gB;AAAgB;;;;;wEAAhBA,gB,EAAgB;gBAH5B,kDAG4B;iBAHvB;AACJj0B,gBAAI,EAAE;AADF,W;AAGuB,U;;;;;;;;;;;;;;;;;;ACL7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoD0B;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAFT;;AACE;;AAGF;;;;;;AAHkC;;AAAA;;;;;;AAIlC;;AACE;;AACE;;AACF;;AACF;;;;;;AAFS;;AAAA;;;;;;;;AA7BrB;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAsB;;AAAc;;AACtC;;AACA;;AACE;;AAAkC;;AAAqB;;AACzD;;AACF;;AACF;;AACA;;AACE;;AAA6B;;AAAgB;;AAC7C;;AAAmC;;AAAoB;;AACvD;;AAAmC;;;;AAAoC;;AACvE;;AAAmC;;AAA2C;;AAC9E;;AACE;;AACE;;AAKA;;AAKA;;AACE;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAY;;AACnG;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAhCkC;;AAAA;;AAGY;;AAAA;;AAKT;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGL;;AAAA;;AAKA;;AAAA;;;;;;AA0ExB;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;;;AAxBrB;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAsB;;AAAgB;;AACxC;;AACA;;AACE;;AAAkC;;AAAuB;;AAC3D;;AACF;;AACF;;AACA;;AACE;;AAA6B;;AAAkB;;AAC/C;;AAAmC;;AAAsB;;AACzD;;AAAmC;;;;AAAsC;;AACzE;;AAAmC;;AAA+C;;AAClF;;AACE;;AACE;;AACE;;AAGF;;AACA;;AACE;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAY;;AACrG;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA3BkC;;AAAA;;AAGY;;AAAA;;AAKT;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIE;;AAAA;;;;;;;;AAlIzD;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAG;;AAAW;;AACd;;AAAG;;AAAuB;;AAC5B;;AACA;;AACE;;AAAG;AAAA;;AAAA;;AAAA,qCAAmB,MAAnB;AAAyB,WAAzB;;AACD;;AAAU;;AAAY;;AACxB;;AACA;;AAAM;;;;AAA+B;;AACrC;;AAAG;AAAA;;AAAA;;AAAA,qCAAmB,OAAnB;AAA0B,WAA1B;;AACD;;AAAU;;AAAa;;AACzB;;AACF;;AACA;;AACE;;AACE;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;;;AAyCF;;AACF;;AACA;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AAAU;;AAAG;;AACjB;;AACF;;AAEF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAG;;AAAc;;AACjB;;AAAG;;AAAyB;;AAC9B;;AACA;;AACE;;AAAG;AAAA;;AAAA;;AAAA,qCAAmB,MAAnB;AAAyB,WAAzB;;AACD;;AAAU;;AAAY;;AACxB;;AACA;;AAAM;;;;AAA+B;;AACrC;;AAAG;AAAA;;AAAA;;AAAA,qCAAmB,OAAnB;AAA0B,WAA1B;;AACD;;AAAU;;AAAa;;AACzB;;AACF;;AACA;;AACE;;AACE;;AAAgB;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AACA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AAGF;;AACA;;AACE;;AACE;;;;AAoCF;;AACF;;AACA;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AAAU;;AAAG;;AACf;;AACJ;;AACF;;AACF;;AACF;;;;;;AAtJyC;;AAAA;;AAOxB;;AAAA;;AAMG;;AAAA;;AAOY;;AAAA;;AASlB;;AAAA;;AAsDG;;AAAA;;AAMG;;AAAA;;AAOY;;AAAA;;AAWlB;;AAAA;;;;;;;;AA6Cd;;AACI;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AACnF;;;;;;AADoB;;AAAA;;;;UDhJPm0B,mB;AAEX,qCAAmBr5B,WAAnB,EACoBoJ,WADpB,EAC4C;AAAA;;AADzB,eAAApJ,WAAA,GAAAA,WAAA;AACC,eAAAoJ,WAAA,GAAAA,WAAA;AAQpB,eAAAkwB,KAAA,GAAQ,IAAIr6B,IAAJ,EAAR;AACU,eAAA6K,WAAA,GAAc,IAAI,0DAAJ,EAAd;AATyC;;;;qCAY3C;AACN,iBAAKyvB,YAAL;AACD;;;yCAEW;AAAA;;AACV,iBAAKC,YAAL,GAAqB,KAAKzG,OAA1B;AACA,iBAAK0G,UAAL,GAAkB,KAAK/b,KAAvB;AACA,iBAAK+b,UAAL,GAAkB,KAAK/b,KAAL,CAAWlQ,MAAX,CAAkB,UAAApN,CAAC;AAAA,qBAAM,IAAInB,IAAJ,CAASmB,CAAC,CAAC+J,SAAX,EAAsBgE,QAAtB,OAAqC,OAAI,CAACmrB,KAAL,CAAWnrB,QAAX,EAAtC,IACrC,IAAIlP,IAAJ,CAASmB,CAAC,CAAC+J,SAAX,EAAsB8D,WAAtB,OAAwC,OAAI,CAACqrB,KAAL,CAAWrrB,WAAX,EADJ,IACoC,IAAIhP,IAAJ,CAASmB,CAAC,CAACgK,OAAX,EAAoB+D,QAApB,OAAmC,OAAI,CAACmrB,KAAL,CAAWnrB,QAAX,EAApC,IACvE,IAAIlP,IAAJ,CAASmB,CAAC,CAACgK,OAAX,EAAoB6D,WAApB,OAAsC,OAAI,CAACqrB,KAAL,CAAWrrB,WAAX,EAFN;AAAA,aAAnB,CAAlB;AAGA,iBAAKurB,YAAL,GAAoB,KAAKzG,OAAL,CAAavlB,MAAb,CAAoB,UAAApN,CAAC;AAAA,qBAAM,IAAInB,IAAJ,CAASmB,CAAC,CAAC+J,SAAX,EAAsBgE,QAAtB,OAAqC,OAAI,CAACmrB,KAAL,CAAWnrB,QAAX,EAAtC,IAC1C,IAAIlP,IAAJ,CAASmB,CAAC,CAAC+J,SAAX,EAAsB8D,WAAtB,OAAwC,OAAI,CAACqrB,KAAL,CAAWrrB,WAAX,EADC,IAC+B,IAAIhP,IAAJ,CAASmB,CAAC,CAACgK,OAAX,EAAoB+D,QAApB,OAAmC,OAAI,CAACmrB,KAAL,CAAWnrB,QAAX,EAApC,IACvE,IAAIlP,IAAJ,CAASmB,CAAC,CAACgK,OAAX,EAAoB6D,WAApB,OAAsC,OAAI,CAACqrB,KAAL,CAAWrrB,WAAX,EAFD;AAAA,aAArB,CAApB;AAGD;;;oCAESyrB,I,EAAI;AACZ,gBAAIA,IAAI,KAAK,MAAb,EAAoB;AAClB,mBAAKJ,KAAL,GAAa,mCAAM,CAAC,KAAKA,KAAN,CAAN,CAAmBK,QAAnB,CAA4B,GAA5B,EAAiC,OAAjC,EAA0CC,MAA1C,EAAb;AACD,aAFD,MAGI;AACF,mBAAKN,KAAL,GAAa,mCAAM,CAAC,KAAKA,KAAN,CAAN,CAAmBzsB,GAAnB,CAAuB,GAAvB,EAA4B,OAA5B,EAAqC+sB,MAArC,EAAb;AACD;;AACD,iBAAKL,YAAL;AACD;;;qCAEO;AACN,iBAAKzvB,WAAL,CAAiB0F,IAAjB,CAAsB,KAAtB;AACD;;;4CAEiB/M,K,EAAK;AACrB,iBAAK82B,YAAL;;AACA,gBAAI92B,KAAJ,EAAU;AACR,mBAAKo3B,YAAL,GAAoB,IAApB;AACD;AACF;;;;;;;yBAjDUR,mB,EAAmB,wJ,EAAA,0I;AAAA,O;;;cAAnBA,mB;AAAmB,uC;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,i/B;AAAA;AAAA;ACVhC;;AAyJA;;;;AAzJc;;AAyJA;;AAAA;;;;;;;;;;wED/IDA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT16B,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;;AAKrBk0B,iBAAO;kBAAf;AAAe,Y;AACPrV,eAAK;kBAAb;AAAa,Y;AAMJ5T,qBAAW;kBAApB;AAAoB;;;;;;;;;;;;;;;;;;;AEtBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA2BagwB,kB;AAEX,oCAAoBl0B,MAApB,EACoB4K,IADpB,EACsC;AAAA;;AADlB,eAAA5K,MAAA,GAAAA,MAAA;AACA,eAAA4K,IAAA,GAAAA,IAAA;AAClB,eAAKupB,WAAL,GAAmB,IAAI,oDAAJ,CAA0B/3B,IAAI,CAACM,KAAL,CAAW03B,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA1B,CAAnB;AACA,eAAK/5B,IAAL,GAAY,KAAK65B,WAAL,CAAiBrD,YAAjB,EAAZ;AAEA,eAAKwD,YAAL,GAAoB,IAAI,oDAAJ,CAA4BF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAA5B,CAApB;AACA,eAAKE,SAAL,GAAiB,KAAKD,YAAL,CAAkBxD,YAAlB,EAAjB;AACD;;;;wCAmBU;AACTsD,wBAAY,CAACI,UAAb,CAAwB,SAAxB;AACD;;;0CAEe1f,I,EAAI;AAClBsf,wBAAY,CAACK,OAAb,CAAqB,SAArB,EAAgC3f,IAAhC;AACA,iBAAKwf,YAAL,CAAkB/yB,IAAlB,CAAuBuT,IAAvB;AACD;;;gCAEKnU,Q,EAAkBE,Q,EAAkBmb,I,EAAc;AAAA;;AACtD,mBAAO,KAAKpR,IAAL,CAAUwE,IAAV,WAA2B,yEAAYnE,MAAvC,6BAAuE;AAC3EvJ,mBAAK,EAAGf,QADmE;AAE3EE,sBAAQ,EAARA,QAF2E;AAG3E6zB,wBAAU,EAAE,KAH+D;AAI3E1Y,kBAAI,EAAJA;AAJ2E,aAAvE,EAKF;AACD9Q,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,gCAAgB;AAAlB,eAAhB,CADR;AAEDmE,6BAAe,EAAE;AAFhB,aALE,EASJ3U,IATI,CASC,2DAAI,UAAAJ,IAAI,EAAI;AAChB85B,0BAAY,CAACK,OAAb,CAAqB,MAArB,EAA6Br4B,IAAI,CAACC,SAAL,CAAe/B,IAAf,CAA7B;;AACA,qBAAI,CAAC65B,WAAL,CAAiB5yB,IAAjB,CAAsBjH,IAAtB;;AACA,qBAAI,CAACq6B,sBAAL;;AACA,qBAAOr6B,IAAP;AACD,aALK,CATD,CAAP;AAeD;;;mCAEQ;AACP,gBAAM8jB,KAAK,GAAGhiB,IAAI,CAACM,KAAL,CAAW03B,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAd;AACA,iBAAKzpB,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,6BAAmE;AAACmT,mBAAK,EAAEA,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEwW;AAAf,aAAnE,EAAiG;AAC/FvlB,6BAAe,EAAE,IAD8E;AAE/FnE,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,gCAAgB;AAAlB,eAAhB;AAFsF,aAAjG,EAGG3Q,SAHH;AAIA65B,wBAAY,CAACI,UAAb,CAAwB,MAAxB;AACA,iBAAKK,qBAAL;AACA,iBAAKV,WAAL,CAAiB5yB,IAAjB,CAAsB,IAAtB;AACA,iBAAKvB,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;yCAEc;AAAA;;AACb,gBAAMs0B,KAAK,GAAS14B,IAAI,CAACM,KAAL,CAAW03B,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;AACA,mBAAO,KAAKzpB,IAAL,CAAUwE,IAAV,WAA2B,yEAAYnE,MAAvC,8BAAwE;AAC7E8pB,mBAAK,EAAED,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEF;AAD+D,aAAxE,EAEJ;AACD1pB,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,gCAAgB;AAAlB,eAAhB,CADR;AAECmE,6BAAe,EAAE;AAFlB,aAFI,EAMJ3U,IANI,CAMC,2DAAI,UAACJ,IAAD,EAAU;AAClB,qBAAI,CAAC65B,WAAL,CAAiB5yB,IAAjB,CAAsBjH,IAAtB;;AACA,qBAAI,CAACq6B,sBAAL;;AACA,qBAAOr6B,IAAP;AACD,aAJK,CAND,CAAP;AAWD;;;mDAEgC;AAAA;;;;AAC/BuB,mBAAO,CAACC,GAAR,CAAY,SAAS,KAAKyE,SAA1B;AACA,gBAAMihB,QAAQ,GAAGplB,IAAI,CAACM,KAAL,CAAWqB,IAAI,CAAC,CAAD,KAAC,KAAKwC,SAAL,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEihB,QAAF,CAAWjY,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAf,CAAf,CAAjB;AAEA,gBAAMyrB,OAAO,GAAG,IAAI37B,IAAJ,CAASmoB,QAAQ,CAACyT,GAAT,GAAe,IAAxB,CAAhB;AACA,gBAAMC,OAAO,GAAGF,OAAO,CAAC9rB,OAAR,KAAoB7P,IAAI,CAAC87B,GAAL,EAApB,GAAkC,KAAK,IAAvD;AACA,iBAAKC,mBAAL,GAA2BxnB,UAAU,CAAC;AAAA,qBAAM,OAAI,CAACokB,YAAL,GAAoBz3B,SAApB,EAAN;AAAA,aAAD,EAAwC26B,OAAxC,CAArC;AACD;;;kDAE+B;AAC9BG,wBAAY,CAAC,KAAKD,mBAAN,CAAZ;AACD;;;uCAEYp0B,K,EAAY;AACvB,mBAAO,KAAK4J,IAAL,CAAUwE,IAAV,WAAwB,yEAAYnE,MAApC,6BAAoE;AAACmT,mBAAK,EAAEpd;AAAR,aAApE,EACP;AACEqO,6BAAe,EAAE;AADnB,aADO,CAAP;AAID;;;oCAES/U,I,EAAU;AAClB,gBAAM4U,OAAO,GAAG5U,IAAI,GACpB;AAAE6U,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,SAArB,EAAgCzQ,IAAI,CAACoH,KAArC;AAAV,aADoB,GACqC,EADzD;AAEA,mBAAO,KAAKkJ,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,uBAA4DiE,OAA5D,CAAP;AACD;;;oCAESD,M,EAAQqmB,G,EAAW;AAAA;;AAC3B,gBAAMpmB,OAAO,GAAGomB,GAAG,GACnB;AAAEnmB,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,KAArB,EAA4BuqB,GAA5B;AAAV,aADmB,GAC2B,EAD9C;AAGA,mBAAO,KAAK1qB,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,0BAA+D;AACpEoE,6BAAe,EAAE,IADmD;AAEpEF,oBAAM,EAAED,OAAO,CAACC;AAFoD,aAA/D,EAGJzU,IAHI,CAGC,2DAAI,UAAAJ,IAAI,EAAI;AAClB,qBAAI,CAAC65B,WAAL,CAAiB5yB,IAAjB,CAAsBjH,IAAtB;;AACA,qBAAI,CAACq6B,sBAAL;;AACA,qBAAOr6B,IAAP;AACD,aAJO,CAHD,CAAP;AAQD;;;oCAESi7B,O,EAAO;AACf,gBAAMrmB,OAAO,GAAGqmB,OAAO,GACvB;AAAEpmB,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,OAArB,EAA8BwqB,OAA9B;AAAV,aADuB,GAC6B,EADpD;AAEA,mBAAO,KAAK3qB,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,4BAAiEiE,OAAjE,CAAP;AACD;;;kCAEOyD,K,EAAK;AACX,mBAAO,KAAK/H,IAAL,CAAUwE,IAAV,WAAuB,yEAAYnE,MAAnC,4BAAkE0H,KAAlE,CAAP;AACD;;;yCAEc6iB,a,EAAa;AAC1B,mBAAO,KAAK5qB,IAAL,CAAUwE,IAAV,WAAwB,yEAAYnE,MAApC,gCAAuEuqB,aAAvE,EAAsF;AAC3FnmB,6BAAe,EAAE;AAD0E,aAAtF,EAGN3U,IAHM,CAGD,2DAAI,UAAAJ,IAAI,EAAI;AAChB,qBAAOA,IAAP;AACD,aAFK,CAHC,CAAP;AAMD;;;wCAEak7B,a,EAAa;AACzB,mBAAO,KAAK5qB,IAAL,CAAUwE,IAAV,WAAwB,yEAAYnE,MAApC,+BAAsEuqB,aAAtE,EAAqF;AAC1FnmB,6BAAe,EAAE;AADyE,aAArF,EAGN3U,IAHM,CAGD,2DAAI,UAAAJ,IAAI,EAAI;AAChB,qBAAOA,IAAP;AACD,aAFK,CAHC,CAAP;AAMD;;;8BAzImB;AAClB,mBAAO,KAAK65B,WAAL,CAAiBnzB,KAAxB;AACD;;;8BAEkB;AACjB,mBAAO,KAAKszB,YAAL,CAAkBtzB,KAAzB;AACD;;;;;;;yBAjBUkzB,kB,EAAkB,8G,EAAA,uH;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;wEAEDA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACVj1B,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;;;;;AC3B/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaw2B,6B;;;;;AAKX,iDAAc;AAAA;;AAAA;AAEb;AAGD;;;;;;;;;oCAKO;AAAA;;AACL,gBAAMC,aAAa,GAAG,CACpB,gDAAa,KAAK17B,IAAlB,CADoB,EAEpB,KAAKshB,SAAL,CAAeqa,IAFK,EAGpB,KAAKpa,IAAL,CAAUqa,UAHU,CAAtB;AAMA,mBAAO,iEAASF,aAAT,EAAwBh7B,IAAxB,CAA6B,2DAAI,YAAM;AAC5C,qBAAO,OAAI,CAACm7B,YAAL,CAAkB,OAAI,CAACC,aAAL,oBAAuB,OAAI,CAAC97B,IAA5B,EAAlB,CAAP;AACD,aAFmC,CAA7B,CAAP;AAGD;AAED;;;;;;;uCAIa,CAAE;AAEf;;;;;;;uCAIqBA,I,EAAiC;AACpD,gBAAMkf,UAAU,GAAG,KAAKoC,SAAL,CAAenC,SAAf,GAA2B,KAAKmC,SAAL,CAAelC,QAA7D;AACA,mBAAOpf,IAAI,CAAC+7B,MAAL,CAAY7c,UAAZ,EAAwB,KAAKoC,SAAL,CAAelC,QAAvC,CAAP;AACD;AAED;;;;;;;wCAIsBpf,I,EAAiC;AAAA;;AACrD,gBAAI,CAAC,KAAKuhB,IAAL,CAAUya,MAAX,IAAqB,KAAKza,IAAL,CAAU0a,SAAV,KAAwB,EAAjD,EAAqD;AACnD,qBAAOj8B,IAAP;AACD;;AAED,mBAAOA,IAAI,CAACuhB,IAAL,CAAU,UAAC7G,CAAD,EAAIqP,CAAJ,EAAU;AACzB,kBAAMmS,KAAK,GAAG,OAAI,CAAC3a,IAAL,CAAU0a,SAAV,KAAwB,KAAtC;;AACA,sBAAQ,OAAI,CAAC1a,IAAL,CAAUya,MAAlB;AACE,qBAAK,SAAL;AAAgB,yBAAOG,OAAO,CAACzhB,CAAC,CAAC5X,OAAH,EAAYinB,CAAC,CAACjnB,OAAd,EAAuBo5B,KAAvB,CAAd;;AAChB,qBAAK,IAAL;AAAW,yBAAOC,OAAO,CAAC,CAACzhB,CAAC,CAAC0hB,UAAJ,EAAgB,CAACrS,CAAC,CAACqS,UAAnB,EAA+BF,KAA/B,CAAd;;AACX,qBAAK,OAAL;AAAc,yBAAOC,OAAO,CAACzhB,CAAC,CAAC5I,KAAH,EAAUiY,CAAC,CAACjY,KAAZ,EAAmBoqB,KAAnB,CAAd;;AACd;AAAS,yBAAO,CAAP;AAJX;AAMD,aARM,CAAP;AASD;;;;QA5DgD,mE;AA+DnD;;;AACA,eAASC,OAAT,CAAiBzhB,CAAjB,EAAqCqP,CAArC,EAAyDmS,KAAzD,EAAyE;AACvE,eAAO,CAACxhB,CAAC,GAAGqP,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAd,KAAoBmS,KAAK,GAAG,CAAH,GAAO,CAAC,CAAjC,CAAP;AACD;;;;;;;;;;;;;;;;;AClFD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;UAQaG,mB;AAEX,uCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,uC;AAAA,iB;AAAA,gB;AAAA,ub;AAAA;AAAA;ACRhC;;AACE;;AACE;;AACE;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAiC;;AACnC;;AAA6B;;AAAqC;;AAClE;;AAA6B;;AAA6B;;AAC1D;;AAA6B;;AAA+B;;AAC9D;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAA2C;;AAAG;;AAAI;;AAAI;;AACtD;;AAAmD;;AAAQ;;AAC3D;;AAAmD;;AAAQ;;AAC3D;;AAAkD;;AAAO;;AACzD;;AAAkD;;AAAU;;AAC9D;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAsB;;AAAiB;;AACvC;;AAAsB;;AAAsB;;AAC5C;;AAAsB;;AAA6D;;AACrF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAGA;;AAKA;;AAGA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAGA;;AAGA;;AAGA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA3DY;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;wEDlBCA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTt9B,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AERhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaq9B,W;;;;;cAAAA;;;;2BAAAA,W;AAAW,S;AAAA,kBALb,CACP,4DADO,CAKa;;;;4HAAXA,W,EAAW;AAAA,yBANP,wEAMO;AANQ,oBAE5B,4DAF4B,CAMR;AAJR,oBAEJ,wEAFI;AAIQ,S;AAFG,O;;;;;wEAEdA,W,EAAW;gBAPvB,sDAOuB;iBAPd;AACRvN,wBAAY,EAAE,CAAC,wEAAD,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,CAFD;AAKR9D,mBAAO,EAAE,CAAC,wEAAD;AALD,W;AAOc,U;;;;;;;;;;;;;;;;;;ACbxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaqR,e;AAEX,mCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP5B;;AAAQ;;AAAyC;;;;;;;;wEDOpCA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTx9B,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBQ;;AAAuD;;AAAM;;;;;;AAC7D;;AACA;;AACF;;;;;;;;AADE;;AAAA;;;;;;AAIA;;AAAuD;;AAAK;;;;;;;;AAC5D;;AAAmC;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;;;AAAwB;;AAAK;;;;;;AAA7B;;AAAA;;;;;;AAGvE;;AAAuD;;AAAM;;;;;;AAC7D;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGpC;;AAAuD;;AAAQ;;;;;;AAC/D;;AAAoC;;AAA6D;;;;;;AAAxC;;AAAA;;;;;;AAGzD;;AAAuD;;AAAM;;;;;;AAC7D;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAatC;;;;;;AACA;;;;;;;;UDrCOu9B,oB;AAOX,sCAAoB5V,YAApB,EAAwDld,YAAxD,EAAoF;AAAA;;AAAhE,eAAAkd,YAAA,GAAAA,YAAA;AAAoC,eAAAld,YAAA,GAAAA,YAAA;AAExD,eAAAyX,gBAAA,GAA6B,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,YAAzB,EAAuC,OAAvC,CAA7B;AAFuF;;;;qCAK/E;AACN,iBAAKC,UAAL,GAAkB,IAAI,0EAAJ,EAAlB;AACA,iBAAKqb,UAAL;AACD;;;4CAEiB;AAChB,iBAAKrb,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;uCAES;AAAA;;AACR,iBAAKqF,YAAL,CAAkBC,YAAlB,GAAiCtmB,SAAjC,CAA2C,UAAAC,CAAC,EAAI;AAC9CqB,qBAAO,CAACC,GAAR,CAAYtB,CAAC,CAACmd,MAAd;AACA,qBAAI,CAACyD,UAAL,CAAgBphB,IAAhB,GAAuBQ,CAAC,CAACmd,MAAzB;AACD,aAHD,EAGG,UAAC3b,KAAD,EAAW;AACZ,qBAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwBA,KAAxB;AACD,aALD;AAMD;;;gCAEKa,K,EAAO4e,G,EAAG,CAEf;;;sCAEWC,G,EAAG;AACb,gBAAMC,WAAW,GAAID,GAAG,CAACjO,MAAJ,CAAgCzM,KAArD;AACA,iBAAKoa,UAAL,CAAgBxT,MAAhB,GAAyB+T,WAAW,CAACC,IAAZ,GAAmBrC,WAAnB,EAAzB;;AAEA,gBAAI,KAAK6B,UAAL,CAAgBE,SAApB,EAA+B;AAC7B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BO,SAA1B;AACD;AACF;;;;;;;yBA1CU2a,oB,EAAoB,4I,EAAA,4I;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA;AAAA;sEAEpB,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;AChBpB;;AACE;;AAAI;;AAAM;;AACV;;AACE;;AACE;;AACE;;AAA0C;AAAA,qBAAS,IAAA1a,WAAA,QAAT;AAA4B,aAA5B;;AAA1C;;AACA;;AACE;;AACE;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAYA;;AACA;;AACF;;AACF;;AACA;;AACF;;;;AAvC4B;;AAAA;;AAkCH;;AAAA;;AACP;;AAAA;;AAGD;;AAAA;;;;;;;;;;wEDxCJ0a,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTz9B,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;AAENqiB,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;;;;;;;;;AEhB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGE;;AAAyE;;AAAoC;;;;;;AAC7G;;AAAsI;;AAAW;;;;;;AACjJ;;AAAuI;;AAAS;;;;;;;;AAMhJ;;AACE;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AACjE;;AAAO;;AAAiB;;AAC1B;;AACF;;;;;;;;AAHK;;AAAA;;AAAgE;;AAAA;;AAC1D;;AAAA;;;;UDJAmb,qB;AAEX,uCAAmBC,sBAAnB,EACoB32B,MADpB,EACoC;AAAA;;AADjB,eAAA22B,sBAAA,GAAAA,sBAAA;AACC,eAAA32B,MAAA,GAAAA,MAAA;AAAmB;;;;qCAE/B,CACP;;;+CAEoB;AACnB,iBAAK22B,sBAAL,CAA4BC,kBAA5B;AACD;;;mCAEQ/c,G,EAAK;AACZ,gBAAIA,GAAG,CAACgd,OAAJ,CAAYC,IAAI,CAACr4B,QAAL,CAAc4yB,MAA1B,KAAqC,CAAzC,EAA4C;AAC1C,qBAAOxX,GAAG,CAAChc,OAAJ,CAAYi5B,IAAI,CAACr4B,QAAL,CAAc4yB,MAA1B,EAAkC,EAAlC,CAAP;AACD;;AACD,mBAAOxX,GAAP;AACD;;;sCAEWkd,K,EAAO;AACjB,gBAAMx9B,KAAK,GAAG,KAAKo9B,sBAAL,CAA4Br7B,aAA5B,CAA0Cu7B,OAA1C,CAAkDE,KAAlD,CAAd;;AACA,gBAAIx9B,KAAK,IAAI,CAAb,EAAgB;AACd,mBAAKo9B,sBAAL,CAA4Br7B,aAA5B,CAA0Cy6B,MAA1C,CAAiDx8B,KAAjD,EAAwD,CAAxD;AACD;AACF;;;;;;;yBAxBUm9B,qB,EAAqB,2K,EAAA,uH;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,iB;AAAA,e;AAAA,4M;AAAA;AAAA;ACTlC;;AAAI;;AAAa;;AAEjB;;AAAQ;AAAA,qBAAS,IAAAE,kBAAA,EAAT;AAA6B,aAA7B;;AACN;;AACA;;AACA;;AACF;;AAEA;;;;AACA;;AAEE;;AAKF;;;;AAd+D;;AAAA;;AACvD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGR;;AAAA;;AAG8B;;AAAA;;;;;;;;;;wEDFjBF,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT39B,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgFU;;AACE;;AAWF;;;;;;AAVE;;AAAA,qGAA0B,OAA1B,EAA0B,qBAA1B,EAA0B,YAA1B,EAA0B,0BAA1B,EAA0B,aAA1B,EAA0B,2BAA1B,EAA0B,OAA1B,EAA0B,qBAA1B,EAA0B,QAA1B,EAA0B,sBAA1B,EAA0B,MAA1B,EAA0B,oBAA1B,EAA0B,QAA1B,EAA0B,sBAA1B,EAA0B,SAA1B,EAA0B,uBAA1B,EAA0B,OAA1B,EAA0B,qBAA1B;;;;;;AAWF;;AACE;;AAMF;;;;;;AALE;;AAAA,qGAA0B,OAA1B,EAA0B,qBAA1B,EAA0B,QAA1B,EAA0B,sBAA1B,EAA0B,YAA1B,EAA0B,0BAA1B;;;;;;AAMF;;AACE;;AAMF;;;;;;AALE;;AAAA,qGAA0B,OAA1B,EAA0B,qBAA1B,EAA0B,QAA1B,EAA0B,sBAA1B,EAA0B,YAA1B,EAA0B,0BAA1B;;;;;;;;AAQE;;AACE;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA,gDAA2B,CAA3B;AAA4B,WAA5B;;AAA+B;;AAAM;;AACtD;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA,gDAA2B,CAA3B;AAA4B,WAA5B;;AAA+B;;AAAM;;AACtD;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA,gDAA2B,CAA3B;AAA4B,WAA5B;;AAA+B;;AAAO;;AACzD;;AACF;;;;;;;;AATE;;AAAA;;AACuC;;AAAA;;;;;;AAJ7C;;AACE;;AACE;;AAWF;;AACF;;;;;;AAZkF;;AAAA;;;;;;AAalF;;AACE;;AACE;;AACC;;AACC;;AACE;;AAAU;;AAAU;;AACtB;;AACF;;AACA;;AACE;;AACA;;AACE;;AAAU;;AAAU;;AACtB;;AACF;;AACA;;AACE;;AACA;;AACE;;AAAU;;AAAU;;AACtB;;AACF;;AACF;;AACF;;;;;;AAhFN;;AACE;;AACE;;AACE;;AACE;;AAQF;;AACF;;AACA;;AACE;;AAaA;;AAQA;;AAQA;;AAeA;;AAsBF;;AACF;;AACF;;;;;;AAnFkD,4FAAqB,SAArB,EAAqB,YAArB;;AAI1C;;AAAA;;AAWG;;AAAA;;AAaA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAeA;;AAAA;;;;UD5FF+9B,c;AA+BX,gCAAoB7Q,kBAApB,EAAoEvF,YAApE,EAAgG;AAAA;;AAA5E,eAAAuF,kBAAA,GAAAA,kBAAA;AAAgD,eAAAvF,YAAA,GAAAA,YAAA;AAzBpE,eAAAqW,aAAA,GAAgB,EAAhB;AAEA;;AACA,eAAAC,KAAA,GAAQ,KAAK/Q,kBAAL,CAAwBE,OAAxB,CAAgC,gEAAYC,OAA5C,EAAqD5rB,IAArD,CACN,2DAAI,iBAAiB;AAAA,gBAAd6rB,OAAc,SAAdA,OAAc;;AACnB,gBAAIA,OAAJ,EAAa;AACX,qBAAO,CACL;AAAEliB,qBAAK,EAAE,SAAT;AAAoB8yB,oBAAI,EAAE,CAA1B;AAA6BC,oBAAI,EAAE;AAAnC,eADK,EAEL;AAAE/yB,qBAAK,EAAE,aAAT;AAAwB8yB,oBAAI,EAAE,CAA9B;AAAiCC,oBAAI,EAAE;AAAvC,eAFK,EAGL;AAAE/yB,qBAAK,EAAE,UAAT;AAAqB8yB,oBAAI,EAAE,CAA3B;AAA8BC,oBAAI,EAAE;AAApC,eAHK,EAIL;AAAE/yB,qBAAK,EAAE,QAAT;AAAmB8yB,oBAAI,EAAE,CAAzB;AAA4BC,oBAAI,EAAE;AAAlC,eAJK,EAKL;AAAE/yB,qBAAK,EAAE,iBAAT;AAA4B8yB,oBAAI,EAAE,CAAlC;AAAqCC,oBAAI,EAAE;AAA3C,eALK,CAAP;AAOD;;AAED,mBAAO,CACL;AAAE/yB,mBAAK,EAAE,SAAT;AAAoB8yB,kBAAI,EAAE,CAA1B;AAA6BC,kBAAI,EAAE;AAAnC,aADK,EAEL;AAAE/yB,mBAAK,EAAE,aAAT;AAAwB8yB,kBAAI,EAAE,CAA9B;AAAiCC,kBAAI,EAAE;AAAvC,aAFK,EAGL;AAAE/yB,mBAAK,EAAE,UAAT;AAAqB8yB,kBAAI,EAAE,CAA3B;AAA8BC,kBAAI,EAAE;AAApC,aAHK,EAIL;AAAE/yB,mBAAK,EAAE,QAAT;AAAmB8yB,kBAAI,EAAE,CAAzB;AAA4BC,kBAAI,EAAE;AAAlC,aAJK,EAKL;AAAE/yB,mBAAK,EAAE,iBAAT;AAA4B8yB,kBAAI,EAAE,CAAlC;AAAqCC,kBAAI,EAAE;AAA3C,aALK,CAAP;AAOD,WAlBD,CADM,CAAR;AAuBE,eAAKC,YAAL;AACD;;;;2CAEa;AACZ,iBAAKhI,QAAL,GAAgB;AACdX,oBAAM,EAAE,CACN;AACEpvB,oBAAI,EAAE,OADR;AAEEtF,oBAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC;AAFR,eADM,CADM;AAOd20B,mBAAK,EAAE;AACL7Z,oBAAI,EAAE,KADD;AAEL8S,sBAAM,EAAE;AAFH,eAPO;AAWdgH,yBAAW,EAAE;AACXU,mBAAG,EAAE;AACHC,4BAAU,EAAE,KADT;AAEHC,6BAAW,EAAE,KAFV;AAGHC,6BAAW,EAAE;AAHV;AADM,eAXC;AAkBdX,wBAAU,EAAE;AACVY,uBAAO,EAAE;AADC,eAlBE;AAqBdC,oBAAM,EAAE;AACNV,oBAAI,EAAE,IADA;AAENxZ,qBAAK,EAAE,CAFD;AAGNkJ,sBAAM,EAAE,CAAC,aAAD;AAHF,eArBM;AA0BdiR,mBAAK,EAAE;AACLC,0BAAU,EAAE,CACV,KADU,EAEV,KAFU,EAGV,KAHU,EAIV,KAJU,EAKV,KALU,EAMV,KANU,EAOV,KAPU,EAQV,KARU,EASV,KATU;AADP,eA1BO;AAuCdC,mBAAK,EAAE;AACLzrB,qBAAK,EAAE;AACLmjB,sBAAI,EAAE;AADD;AADF,eAvCO;AA4CduI,kBAAI,EAAE;AACJC,uBAAO,EAAE;AADL,eA5CQ;AA+CdC,qBAAO,EAAE;AACP1pB,iBAAC,EAAE;AACD2oB,2BADC,qBACSgB,GADT,EACc;AACb,2BAAO,OAAOA,GAAd;AACD;AAHA;AADI;AA/CK,aAAhB;AAuDD;;;2CAEa;AACZ,iBAAKoH,QAAL,GAAgB;AACd5I,oBAAM,EAAE,CAAC,KAAK6I,SAAL,CAAe5f,MAAf,CAAsBha,MAAvB,EAA+B,KAAK45B,SAAL,CAAe9rB,QAAf,CAAwB9N,MAAvD,EAA+D,KAAK45B,SAAL,CAAeC,OAAf,CAAuB75B,MAAtF,CADM;AAEdgxB,mBAAK,EAAE;AACLlZ,qBAAK,EAAE,GADF;AAELX,oBAAI,EAAE;AAFD,eAFO;AAMdsa,oBAAM,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,CANM;AAOdlM,wBAAU,EAAE,CACV;AACEuU,0BAAU,EAAE,GADd;AAEEvoB,uBAAO,EAAE;AACPyf,uBAAK,EAAE;AACLlZ,yBAAK,EAAE;AADF,mBADA;AAIPiiB,wBAAM,EAAE;AACNp1B,4BAAQ,EAAE;AADJ;AAJD;AAFX,eADU;AAPE,aAAhB;AAqBD;;;4CAEc;;;AACb,gBAAMqU,OAAO,GAAG,CAAH,KAAG,KAAK4gB,SAAL,CAAevP,cAAf,MAA6B,IAA7B,IAA6B,aAA7B,GAA6B,MAA7B,GAA6B,GAAEpgB,MAAF,CAAS,UAAApN,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACiN,MAAP;AAAA,aAAV,CAA7C;AACA,gBAAMqQ,KAAK,GAAG,CAAH,KAAG,KAAKyf,SAAL,CAAevP,cAAf,MAA6B,IAA7B,IAA6B,aAA7B,GAA6B,MAA7B,GAA6B,GAAEpgB,MAAF,CAAS,UAAApN,CAAC;AAAA,qBAAIA,CAAC,CAACiN,MAAN;AAAA,aAAV,CAA3C;AACA,iBAAKkwB,QAAL,GAAgB;AACdjJ,oBAAM,EAAE,CAAC/X,OAAO,CAAChZ,MAAT,EAAiBma,KAAK,CAACna,MAAvB,CADM;AAEdgxB,mBAAK,EAAE;AACLlZ,qBAAK,EAAE,GADF;AAELX,oBAAI,EAAE;AAFD,eAFO;AAMdsa,oBAAM,EAAE,CAAC,SAAD,EAAY,OAAZ,CANM;AAOdlM,wBAAU,EAAE,CACV;AACEuU,0BAAU,EAAE,GADd;AAEEvoB,uBAAO,EAAE;AACPyf,uBAAK,EAAE;AACLlZ,yBAAK,EAAE;AADF,mBADA;AAIPiiB,wBAAM,EAAE;AACNp1B,4BAAQ,EAAE;AADJ;AAJD;AAFX,eADU;AAPE,aAAhB;AAqBD;;;yCAEW;AAAA;;AACV,iBAAKse,YAAL,CAAkBC,YAAlB,GAAiCtmB,SAAjC,CACE,UAAAC,CAAC,EAAI;AACL,qBAAI,CAAC+8B,SAAL,GAAiB/8B,CAAjB;AACA,qBAAI,CAACy8B,aAAL,GAAqBz8B,CAAC,CAACmd,MAAF,CAAS/P,MAAT,CAAgB,UAAA8M,CAAC;AAAA,uBAAIA,CAAC,CAACkjB,WAAF,KAAkB,CAAtB;AAAA,eAAjB,CAArB;;AACA,qBAAI,CAACC,cAAL;;AACA,qBAAI,CAACC,cAAL;;AACA,qBAAI,CAACC,eAAL;AACC,aAPH;AASD;;;qCAEUvf,K,EAAO8H,M,EAAM;AAAA;;AACtB,iBAAKM,YAAL,CAAkBoX,WAAlB,CAA8B;AAAC7qB,oBAAM,EAAEqL,KAAK,CAAC/e,EAAf;AAAmB6mB,oBAAM,EAANA;AAAnB,aAA9B,EAA0D/lB,SAA1D,CACE,UAAAC,CAAC,EAAI;AACH,qBAAI,CAAC68B,YAAL;AACD,aAHH;AAKD;;;;;;;yBAjKUL,c,EAAc,uI,EAAA,4I;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA;AAAA;;;;;;;;;;;;;;;AChC3B;;AACE;;AAAmB;;AAAc;;AACjC;;AACE;;AACE;;AACE;;AAAyB;;AAAa;;AACtC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAoC;;AAC1C;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAQ;;AACjC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAA4B;;AAClC;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAa;;AACtC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAA2B;;AACjC;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAY;;AACrC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAiC;;AACvC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;;;AAoFF;;AACF;;;;AA1IkB;;AAAA;;AAeA;;AAAA;;AAeA;;AAAA;;AAeA;;AAAA;;AAQC;;AAAA;;;;;;;;;;wEDjCNA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTj+B,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;AACL01B,eAAK,EAAE,CAAF;kBAAxB,uDAAwB;mBAAd,O;AAAc,WAAE;;;;;;;;;;;;;;;;;;;AEjC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQO,UAAMsJ,YAAY,GAAG,IAAI,4DAAJ,CAA2B,cAA3B,CAArB;;UAKMC,oB;AAKT,sCAAgCttB,IAAhC,EAAoFutB,OAApF,EAAsG;AAAA;;AAF5F,eAAAC,gBAAA,GAAmErwB,SAAnE;AAGN,eAAK6C,IAAL,GAAYA,IAAZ;AACA,eAAKutB,OAAL,GAAeA,OAAO,GAAGA,OAAH,GAAa,yEAAYltB,MAA/C;AACH;;;;oCAES1N,G,EAA4B;AAAA;;AAClC,gBAAI86B,IAAI,GAAG,KAAKF,OAAL,GAAe,0BAA1B;AACAE,gBAAI,GAAGA,IAAI,CAACx6B,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,gBAAMy6B,QAAQ,GAAGl8B,IAAI,CAACC,SAAL,CAAekB,GAAf,CAAjB;AAEA,gBAAIg7B,QAAQ,GAAS;AACjBC,kBAAI,EAAEF,QADW;AAEjBjS,qBAAO,EAAE,UAFQ;AAGjBoS,0BAAY,EAAE,MAHG;AAIjBvtB,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACrB,gCAAgB;AADK,eAAhB;AAJQ,aAArB;AASA,mBAAO,KAAKN,IAAL,CAAU0W,OAAV,CAAkB,MAAlB,EAA0B+W,IAA1B,EAAgCE,QAAhC,EAA0C79B,IAA1C,CAA+C,gEAAoB,UAACg+B,SAAD,EAAqB;AAC3F,qBAAO,OAAI,CAACC,gBAAL,CAAsBD,SAAtB,CAAP;AACH,aAFqD,CAA/C,EAEHh+B,IAFG,CAEE,kEAAiB,UAACg+B,SAAD,EAAoB;AAC1C,kBAAIA,SAAS,YAAY,qEAAzB,EAA2C;AACvC,oBAAI;AACA,yBAAO,OAAI,CAACC,gBAAL,CAA2BD,SAA3B,CAAP;AACH,iBAFD,CAEE,OAAO52B,CAAP,EAAU;AACR,yBAA8B,wDAAiBA,CAAjB,CAA9B;AACH;AACJ,eAND,MAOI,OAA8B,wDAAiB42B,SAAjB,CAA9B;AACP,aATQ,CAFF,CAAP;AAYH;;;2CAE0BE,Q,EAA0B;AACjD,gBAAMtY,MAAM,GAAGsY,QAAQ,CAACtY,MAAxB;AACA,gBAAMuY,YAAY,GACdD,QAAQ,YAAY,iEAApB,GAAmCA,QAAQ,CAACJ,IAA5C,GACMI,QAAS,CAAC58B,KAAV,YAA2B2qB,IAA3B,GAAwCiS,QAAS,CAAC58B,KAAlD,GAA0D+L,SAFpE;AAIA,gBAAI+wB,QAAQ,GAAQ,EAApB;;AAAwB,gBAAIF,QAAQ,CAAC1tB,OAAb,EAAsB;AAAA,0DAAkB0tB,QAAQ,CAAC1tB,OAAT,CAAiBlO,IAAjB,EAAlB;AAAA;;AAAA;AAAE,uEAAyC;AAAA,sBAAhCqd,GAAgC;AAAEye,0BAAQ,CAACze,GAAD,CAAR,GAAgBue,QAAQ,CAAC1tB,OAAT,CAAiBzF,GAAjB,CAAqB4U,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,gBAAIiG,MAAM,KAAK,GAAf,EAAoB;AAChB,qBAAOyY,UAAU,CAACF,YAAD,CAAV,CAAyBn+B,IAAzB,CAA8B,gEAAoB,UAAAs+B,aAAa,EAAI;AAC1E,uBAAO,gDAAyB,IAAzB,CAAP;AACC,eAFoC,CAA9B,CAAP;AAGH,aAJD,MAIO,IAAI1Y,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,qBAAOyY,UAAU,CAACF,YAAD,CAAV,CAAyBn+B,IAAzB,CAA8B,gEAAoB,UAAAs+B,aAAa,EAAI;AAC1E,uBAAOC,cAAc,CAAC,sCAAD,EAAyC3Y,MAAzC,EAAiD0Y,aAAjD,EAAgEF,QAAhE,CAArB;AACC,eAFoC,CAA9B,CAAP;AAGH;;AACD,mBAAO,gDAAyB,IAAzB,CAAP;AACH;;;sCAEWv7B,G,EAA4B;AAAA;;AACpC,gBAAI86B,IAAI,GAAG,KAAKF,OAAL,GAAe,4BAA1B;AACAE,gBAAI,GAAGA,IAAI,CAACx6B,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,gBAAMy6B,QAAQ,GAAGl8B,IAAI,CAACC,SAAL,CAAekB,GAAf,CAAjB;AAEA,gBAAIg7B,QAAQ,GAAS;AACjBC,kBAAI,EAAEF,QADW;AAEjBjS,qBAAO,EAAE,UAFQ;AAGjBoS,0BAAY,EAAE,MAHG;AAIjBvtB,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACrB,gCAAgB;AADK,eAAhB;AAJQ,aAArB;AASA,mBAAO,KAAKN,IAAL,CAAU0W,OAAV,CAAkB,MAAlB,EAA0B+W,IAA1B,EAAgCE,QAAhC,EAA0C79B,IAA1C,CAA+C,gEAAoB,UAACg+B,SAAD,EAAqB;AAC3F,qBAAO,OAAI,CAACQ,kBAAL,CAAwBR,SAAxB,CAAP;AACH,aAFqD,CAA/C,EAEHh+B,IAFG,CAEE,kEAAiB,UAACg+B,SAAD,EAAoB;AAC1C,kBAAIA,SAAS,YAAY,qEAAzB,EAA2C;AACvC,oBAAI;AACA,yBAAO,OAAI,CAACQ,kBAAL,CAA6BR,SAA7B,CAAP;AACH,iBAFD,CAEE,OAAO52B,CAAP,EAAU;AACR,yBAA8B,wDAAiBA,CAAjB,CAA9B;AACH;AACJ,eAND,MAOI,OAA8B,wDAAiB42B,SAAjB,CAA9B;AACP,aATQ,CAFF,CAAP;AAYH;;;6CAE4BE,Q,EAA0B;AACnD,gBAAMtY,MAAM,GAAGsY,QAAQ,CAACtY,MAAxB;AACA,gBAAMuY,YAAY,GACdD,QAAQ,YAAY,iEAApB,GAAmCA,QAAQ,CAACJ,IAA5C,GACMI,QAAS,CAAC58B,KAAV,YAA2B2qB,IAA3B,GAAwCiS,QAAS,CAAC58B,KAAlD,GAA0D+L,SAFpE;AAIA,gBAAI+wB,QAAQ,GAAQ,EAApB;;AAAwB,gBAAIF,QAAQ,CAAC1tB,OAAb,EAAsB;AAAA,0DAAkB0tB,QAAQ,CAAC1tB,OAAT,CAAiBlO,IAAjB,EAAlB;AAAA;;AAAA;AAAE,uEAAyC;AAAA,sBAAhCqd,GAAgC;AAAEye,0BAAQ,CAACze,GAAD,CAAR,GAAgBue,QAAQ,CAAC1tB,OAAT,CAAiBzF,GAAjB,CAAqB4U,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,gBAAIiG,MAAM,KAAK,GAAf,EAAoB;AAChB,qBAAOyY,UAAU,CAACF,YAAD,CAAV,CAAyBn+B,IAAzB,CAA8B,gEAAoB,UAAAs+B,aAAa,EAAI;AAC1E,uBAAO,gDAAyB,IAAzB,CAAP;AACC,eAFoC,CAA9B,CAAP;AAGH,aAJD,MAIO,IAAI1Y,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,qBAAOyY,UAAU,CAACF,YAAD,CAAV,CAAyBn+B,IAAzB,CAA8B,gEAAoB,UAAAs+B,aAAa,EAAI;AAC1E,uBAAOC,cAAc,CAAC,sCAAD,EAAyC3Y,MAAzC,EAAiD0Y,aAAjD,EAAgEF,QAAhE,CAArB;AACC,eAFoC,CAA9B,CAAP;AAGH;;AACD,mBAAO,gDAAyB,IAAzB,CAAP;AACH;;;oCAES3iB,O,EAAiC;AAAA;;AACvC,gBAAIkiB,IAAI,GAAG,KAAKF,OAAL,GAAe,0BAA1B;AACAE,gBAAI,GAAGA,IAAI,CAACx6B,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,gBAAMy6B,QAAQ,GAAGl8B,IAAI,CAACC,SAAL,CAAe8Z,OAAf,CAAjB;AAEA,gBAAIoiB,QAAQ,GAAS;AACjBC,kBAAI,EAAEF,QADW;AAEjBjS,qBAAO,EAAE,UAFQ;AAGjBoS,0BAAY,EAAE,MAHG;AAIjBvtB,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACrB,gCAAgB;AADK,eAAhB;AAJQ,aAArB;AASA,mBAAO,KAAKN,IAAL,CAAU0W,OAAV,CAAkB,MAAlB,EAA0B+W,IAA1B,EAAgCE,QAAhC,EAA0C79B,IAA1C,CAA+C,gEAAoB,UAACg+B,SAAD,EAAqB;AAC3F,qBAAO,OAAI,CAACS,gBAAL,CAAsBT,SAAtB,CAAP;AACH,aAFqD,CAA/C,EAEHh+B,IAFG,CAEE,kEAAiB,UAACg+B,SAAD,EAAoB;AAC1C,kBAAIA,SAAS,YAAY,qEAAzB,EAA2C;AACvC,oBAAI;AACA,yBAAO,OAAI,CAACS,gBAAL,CAA2BT,SAA3B,CAAP;AACH,iBAFD,CAEE,OAAO52B,CAAP,EAAU;AACR,yBAA8B,wDAAiBA,CAAjB,CAA9B;AACH;AACJ,eAND,MAOI,OAA8B,wDAAiB42B,SAAjB,CAA9B;AACP,aATQ,CAFF,CAAP;AAYH;;;2CAE0BE,Q,EAA0B;AACjD,gBAAMtY,MAAM,GAAGsY,QAAQ,CAACtY,MAAxB;AACA,gBAAMuY,YAAY,GACdD,QAAQ,YAAY,iEAApB,GAAmCA,QAAQ,CAACJ,IAA5C,GACMI,QAAS,CAAC58B,KAAV,YAA2B2qB,IAA3B,GAAwCiS,QAAS,CAAC58B,KAAlD,GAA0D+L,SAFpE;AAIA,gBAAI+wB,QAAQ,GAAQ,EAApB;;AAAwB,gBAAIF,QAAQ,CAAC1tB,OAAb,EAAsB;AAAA,0DAAkB0tB,QAAQ,CAAC1tB,OAAT,CAAiBlO,IAAjB,EAAlB;AAAA;;AAAA;AAAE,uEAAyC;AAAA,sBAAhCqd,GAAgC;AAAEye,0BAAQ,CAACze,GAAD,CAAR,GAAgBue,QAAQ,CAAC1tB,OAAT,CAAiBzF,GAAjB,CAAqB4U,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,gBAAIiG,MAAM,KAAK,GAAf,EAAoB;AAChB,qBAAOyY,UAAU,CAACF,YAAD,CAAV,CAAyBn+B,IAAzB,CAA8B,gEAAoB,UAAAs+B,aAAa,EAAI;AAC1E,uBAAO,gDAAyB,IAAzB,CAAP;AACC,eAFoC,CAA9B,CAAP;AAGH,aAJD,MAIO,IAAI1Y,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,qBAAOyY,UAAU,CAACF,YAAD,CAAV,CAAyBn+B,IAAzB,CAA8B,gEAAoB,UAAAs+B,aAAa,EAAI;AAC1E,uBAAOC,cAAc,CAAC,sCAAD,EAAyC3Y,MAAzC,EAAiD0Y,aAAjD,EAAgEF,QAAhE,CAArB;AACC,eAFoC,CAA9B,CAAP;AAGH;;AACD,mBAAO,gDAAyB,IAAzB,CAAP;AACH;;;;;;;yBAxJQZ,oB,EAAoB,uDAKT,+DALS,C,EAKC,uDAAwCD,YAAxC,EAAoD,CAApD,C;AAAoD,O;;;eALzEC,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;wEAEDA,oB,EAAoB;gBAHhC,wDAGgC;iBAHrB;AACVj5B,sBAAU,EAAE;AADF,W;AAGqB,U;;;;oBAKhB,oD;qBAAO,+D;;;;;oBAA+B;;oBAAY,oD;qBAAOg5B,Y;;;;;;UAkK7DmB,gB;;;;;AAOT,kCAAYjjB,OAAZ,EAA6BmK,MAA7B,EAA6CsY,QAA7C,EAA+D1tB,OAA/D,EAAiGd,MAAjG,EAA8G;AAAA;;AAAA;;AAC1G;AASM,kBAAAivB,kBAAA,GAAqB,IAArB;AAPN,kBAAKljB,OAAL,GAAeA,OAAf;AACA,kBAAKmK,MAAL,GAAcA,MAAd;AACA,kBAAKsY,QAAL,GAAgBA,QAAhB;AACA,kBAAK1tB,OAAL,GAAeA,OAAf;AACA,kBAAKd,MAAL,GAAcA,MAAd;AAP0G;AAQ7G;;;;6CAIyBkvB,G,EAAQ;AAC9B,mBAAOA,GAAG,CAACD,kBAAJ,KAA2B,IAAlC;AACH;;;;uCArBiCviB,K;;AAwBtC,eAASmiB,cAAT,CAAwB9iB,OAAxB,EAAyCmK,MAAzC,EAAyDsY,QAAzD,EAA2E1tB,OAA3E,EAA6Gd,MAA7G,EAAyH;AACrH,YAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKrC,SAAlC,EACI,OAAO,wDAAiBqC,MAAjB,CAAP,CADJ,KAGI,OAAO,wDAAiB,IAAIgvB,gBAAJ,CAAqBjjB,OAArB,EAA8BmK,MAA9B,EAAsCsY,QAAtC,EAAgD1tB,OAAhD,EAAyD,IAAzD,CAAjB,CAAP;AACP;;AAED,eAAS6tB,UAAT,CAAoBrS,IAApB,EAA6B;AACzB,eAAO,IAAI,+CAAJ,CAAuB,UAAC6S,QAAD,EAAmB;AAC7C,cAAI,CAAC7S,IAAL,EAAW;AACP6S,oBAAQ,CAACh4B,IAAT,CAAc,EAAd;AACAg4B,oBAAQ,CAACC,QAAT;AACH,WAHD,MAGO;AACH,gBAAInsB,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,kBAAM,CAACE,MAAP,GAAgB,UAAA1Q,KAAK,EAAI;AACrB08B,sBAAQ,CAACh4B,IAAT,CAAoB1E,KAAK,CAAC4Q,MAAN,CAAcrD,MAAlC;AACAmvB,sBAAQ,CAACC,QAAT;AACH,aAHD;;AAIAnsB,kBAAM,CAACosB,UAAP,CAAkB/S,IAAlB;AACH;AACJ,SAZM,CAAP;AAaH;;;;;;;;;;;;;;;;;ACxOD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBY;;AACE;;AAAc;;AAAQ;;AAAQ;;AAChC;;;;;;AAMA;;AACE;;AAAa;;AAAQ;;AAAQ;;AAC/B;;;;;;AAQA;;AACE;;AAAW;;AAAQ;;AAAQ;;AAC7B;;;;;;;;AAIN;;AACE;;AACE;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AACF;;AACF;;AACF;;;;;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAKM;;AACE;;AAAQ;;AAAQ;;AAAQ;;AAC1B;;;;;;AAME;;AACE;;AACF;;;;;;AAFyC;;AACvC;;AAAA;;;;;;AAGJ;;AACE;;AAAS;;AAAQ;;AAAQ;;AAC3B;;;;UDjECgT,yB;AA+EX,2CAAoBrM,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AA9EpB,eAAAsM,WAAA,GAAc,KAAKtM,EAAL,CAAQ3sB,KAAR,CAAc;AAC1Bk5B,mBAAO,EAAE,IADiB;AAE1BnnB,qBAAS,EAAE,CAAC,IAAD,EAAO,0DAAW7R,QAAlB,CAFe;AAG1B8R,oBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAW9R,QAAlB,CAHgB;AAI1BgS,mBAAO,EAAE,CAAC,IAAD,EAAO,0DAAWhS,QAAlB,CAJiB;AAK1BoS,oBAAQ,EAAE,IALgB;AAM1BC,gBAAI,EAAE,CAAC,IAAD,EAAO,0DAAWrS,QAAlB,CANoB;AAO1Bi5B,iBAAK,EAAE,CAAC,IAAD,EAAO,0DAAWj5B,QAAlB,CAPmB;AAQ1Bk5B,sBAAU,EAAE,CAAC,IAAD,EAAO,0DAAWzc,OAAX,CAAmB,CACpC,0DAAWzc,QADyB,EACf,0DAAW4c,SAAX,CAAqB,CAArB,CADe,EACU,0DAAWuc,SAAX,CAAqB,CAArB,CADV,CAAnB,CAAP,CARc;AAW1BC,oBAAQ,EAAE,CAAC,MAAD,EAAS,0DAAWp5B,QAApB;AAXgB,WAAd,CAAd;AAcA,eAAAq5B,aAAA,GAAgB,KAAhB;AAEA,eAAAtI,MAAA,GAAS,CACP;AAACryB,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WADO,EAEP;AAAC56B,gBAAI,EAAE,QAAP;AAAiB46B,wBAAY,EAAE;AAA/B,WAFO,EAGP;AAAC56B,gBAAI,EAAE,gBAAP;AAAyB46B,wBAAY,EAAE;AAAvC,WAHO,EAIP;AAAC56B,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WAJO,EAKP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WALO,EAMP;AAAC56B,gBAAI,EAAE,YAAP;AAAqB46B,wBAAY,EAAE;AAAnC,WANO,EAOP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WAPO,EAQP;AAAC56B,gBAAI,EAAE,aAAP;AAAsB46B,wBAAY,EAAE;AAApC,WARO,EASP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WATO,EAUP;AAAC56B,gBAAI,EAAE,sBAAP;AAA+B46B,wBAAY,EAAE;AAA7C,WAVO,EAWP;AAAC56B,gBAAI,EAAE,gCAAP;AAAyC46B,wBAAY,EAAE;AAAvD,WAXO,EAYP;AAAC56B,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WAZO,EAaP;AAAC56B,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WAbO,EAcP;AAAC56B,gBAAI,EAAE,MAAP;AAAe46B,wBAAY,EAAE;AAA7B,WAdO,EAeP;AAAC56B,gBAAI,EAAE,QAAP;AAAiB46B,wBAAY,EAAE;AAA/B,WAfO,EAgBP;AAAC56B,gBAAI,EAAE,OAAP;AAAgB46B,wBAAY,EAAE;AAA9B,WAhBO,EAiBP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WAjBO,EAkBP;AAAC56B,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WAlBO,EAmBP;AAAC56B,gBAAI,EAAE,MAAP;AAAe46B,wBAAY,EAAE;AAA7B,WAnBO,EAoBP;AAAC56B,gBAAI,EAAE,QAAP;AAAiB46B,wBAAY,EAAE;AAA/B,WApBO,EAqBP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WArBO,EAsBP;AAAC56B,gBAAI,EAAE,WAAP;AAAoB46B,wBAAY,EAAE;AAAlC,WAtBO,EAuBP;AAAC56B,gBAAI,EAAE,OAAP;AAAgB46B,wBAAY,EAAE;AAA9B,WAvBO,EAwBP;AAAC56B,gBAAI,EAAE,kBAAP;AAA2B46B,wBAAY,EAAE;AAAzC,WAxBO,EAyBP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WAzBO,EA0BP;AAAC56B,gBAAI,EAAE,eAAP;AAAwB46B,wBAAY,EAAE;AAAtC,WA1BO,EA2BP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WA3BO,EA4BP;AAAC56B,gBAAI,EAAE,WAAP;AAAoB46B,wBAAY,EAAE;AAAlC,WA5BO,EA6BP;AAAC56B,gBAAI,EAAE,aAAP;AAAsB46B,wBAAY,EAAE;AAApC,WA7BO,EA8BP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WA9BO,EA+BP;AAAC56B,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WA/BO,EAgCP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WAhCO,EAiCP;AAAC56B,gBAAI,EAAE,QAAP;AAAiB46B,wBAAY,EAAE;AAA/B,WAjCO,EAkCP;AAAC56B,gBAAI,EAAE,eAAP;AAAwB46B,wBAAY,EAAE;AAAtC,WAlCO,EAmCP;AAAC56B,gBAAI,EAAE,YAAP;AAAqB46B,wBAAY,EAAE;AAAnC,WAnCO,EAoCP;AAAC56B,gBAAI,EAAE,YAAP;AAAqB46B,wBAAY,EAAE;AAAnC,WApCO,EAqCP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WArCO,EAsCP;AAAC56B,gBAAI,EAAE,gBAAP;AAAyB46B,wBAAY,EAAE;AAAvC,WAtCO,EAuCP;AAAC56B,gBAAI,EAAE,cAAP;AAAuB46B,wBAAY,EAAE;AAArC,WAvCO,EAwCP;AAAC56B,gBAAI,EAAE,0BAAP;AAAmC46B,wBAAY,EAAE;AAAjD,WAxCO,EAyCP;AAAC56B,gBAAI,EAAE,MAAP;AAAe46B,wBAAY,EAAE;AAA7B,WAzCO,EA0CP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WA1CO,EA2CP;AAAC56B,gBAAI,EAAE,QAAP;AAAiB46B,wBAAY,EAAE;AAA/B,WA3CO,EA4CP;AAAC56B,gBAAI,EAAE,OAAP;AAAgB46B,wBAAY,EAAE;AAA9B,WA5CO,EA6CP;AAAC56B,gBAAI,EAAE,cAAP;AAAuB46B,wBAAY,EAAE;AAArC,WA7CO,EA8CP;AAAC56B,gBAAI,EAAE,aAAP;AAAsB46B,wBAAY,EAAE;AAApC,WA9CO,EA+CP;AAAC56B,gBAAI,EAAE,cAAP;AAAuB46B,wBAAY,EAAE;AAArC,WA/CO,EAgDP;AAAC56B,gBAAI,EAAE,gBAAP;AAAyB46B,wBAAY,EAAE;AAAvC,WAhDO,EAiDP;AAAC56B,gBAAI,EAAE,cAAP;AAAuB46B,wBAAY,EAAE;AAArC,WAjDO,EAkDP;AAAC56B,gBAAI,EAAE,WAAP;AAAoB46B,wBAAY,EAAE;AAAlC,WAlDO,EAmDP;AAAC56B,gBAAI,EAAE,OAAP;AAAgB46B,wBAAY,EAAE;AAA9B,WAnDO,EAoDP;AAAC56B,gBAAI,EAAE,MAAP;AAAe46B,wBAAY,EAAE;AAA7B,WApDO,EAqDP;AAAC56B,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WArDO,EAsDP;AAAC56B,gBAAI,EAAE,gBAAP;AAAyB46B,wBAAY,EAAE;AAAvC,WAtDO,EAuDP;AAAC56B,gBAAI,EAAE,UAAP;AAAmB46B,wBAAY,EAAE;AAAjC,WAvDO,EAwDP;AAAC56B,gBAAI,EAAE,YAAP;AAAqB46B,wBAAY,EAAE;AAAnC,WAxDO,EAyDP;AAAC56B,gBAAI,EAAE,eAAP;AAAwB46B,wBAAY,EAAE;AAAtC,WAzDO,EA0DP;AAAC56B,gBAAI,EAAE,WAAP;AAAoB46B,wBAAY,EAAE;AAAlC,WA1DO,EA2DP;AAAC56B,gBAAI,EAAE,SAAP;AAAkB46B,wBAAY,EAAE;AAAhC,WA3DO,CAAT;AA8DuC;;;;qCAE5B;AACThkB,iBAAK,CAAC,SAAD,CAAL;AACD;;;;;;;yBAnFUwjB,yB,EAAyB,2H;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA,iB;AAAA,gB;AAAA,okC;AAAA;AAAA;ACRtC;;AAA2C;AAAA,qBAAY,IAAAnvB,QAAA,EAAZ;AAAsB,aAAtB;;AACzC;;AACE;;AACE;;AAAgB;;AAAoB;;AACtC;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACF;;AACA;;AAOA;;AAOA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAAsB;;AAA+B;;AACvD;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA+B;;AAAa;;AAC5C;;AAAmC;;AAAiB;;AACpD;;AAAkC;;AAAiB;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAwD;;AAAM;;AAChE;;AACF;;AACF;;;;;;AAnGM;;AAiBiB;;AAAA;;AAQA;;AAAA;;AAUA;;AAAA;;AAMA;;AAAA;;AAOA;;AAAA;;AAWA;;AAAA;;AAQG;;AAAA;;AAIH;;AAAA;;AAUW;;AAAA;;;;;;;;;wEDzErBmvB,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACT3gC,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;AERtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYakhC,gB;AAEX,kCAAoBC,mBAApB,EAA6D;AAAA;;AAAzC,eAAAA,mBAAA,GAAAA,mBAAA;AAA2C;;;;oCAErD9Y,O,EAA2B/f,I,EAAiB;AAAA;;AACpD,mBAAOA,IAAI,CAACsgB,MAAL,CAAYP,OAAZ,EAAqB5mB,IAArB,CAA0B,kEAAW,UAAAiC,GAAG,EAAI;AACjD,kBAAI,CAAC,GAAD,EAAM,GAAN,EAAW+M,QAAX,CAAoB/M,GAAG,CAAC2jB,MAAxB,KAAmC,OAAI,CAAC8Z,mBAAL,CAAyB75B,SAAhE,EAA2E,CACxE;AACF;;AAED,kBAAMvE,KAAK,GAAIW,GAAG,IAAIA,GAAG,CAACX,KAAX,IAAoBW,GAAG,CAACX,KAAJ,CAAUma,OAA/B,IAA2CxZ,GAAG,CAAC09B,UAA7D;AACAx+B,qBAAO,CAACG,KAAR,CAAcW,GAAd;AACA,qBAAO,wDAAWX,KAAX,CAAP;AACH,aARkC,CAA1B,CAAP;AASD;;;;;;;yBAdUm+B,gB,EAAgB,wI;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBoB;;AAAwC;;AAAoB;;;;;;AAC5D;;AAAuC;;AAAqE;;;;;;AAF9G;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAcL;;AAA+C;;AAA4B;;;;;;AAC3E;;AAA8C;;AAA2B;;;;;;AAF3E;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAOP;;;;;;AAIJ;;AAA+E;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAC/E;;AAA6E;;AAAS;;;;;;AAAT;;AAAA;;;;;;;;;;;;;;UDxC9EG,sB;AAEX,wCAAoBx6B,WAApB,EACoB1F,WADpB,EAEoB4F,MAFpB,EAE4C;AAAA;;AAFxB,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAA1F,WAAA,GAAAA,WAAA;AACA,eAAA4F,MAAA,GAAAA,MAAA;AAA2B;;;;qCAUvC;AACN,iBAAKoe,KAAL,GAAa,KAAKpe,MAAL,CAAYmB,QAAZ,CAAqBC,WAArB,CAAiCgd,KAA9C;AAEA,iBAAKtd,YAAL,GAAoB,KAAKhB,WAAL,CAAiBY,KAAjB,CAAuB;AACzCG,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWwc,OAAX,CAAmB,CAChC,0DAAWzc,QADqB,EAEhC,kFAAiB0c,gBAAjB,CAAkC,qDAAlC,EAAyF;AAAEC,yBAAS,EAAE;AAAb,eAAzF,CAFgC,EAGhC,0DAAWC,SAAX,CAAqB,CAArB,CAHgC,CAAnB,CAAL,CAD+B;AAKzCvc,6BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB;AALwB,aAAvB,EAMjB;AAAC6c,uBAAS,EAAE,6EAAQ,UAAR,EAAoB,iBAApB;AAAZ,aANiB,CAApB;AAOD;;;6CAMkB;AAAA;;AACjB,iBAAKtd,iBAAL,GAAyB,IAAzB;AAEA,iBAAKF,UAAL,GAAkB,IAAlB;AACApE,mBAAO,CAACC,GAAR,CAAY,KAAKsiB,KAAjB;;AACA,gBAAI,KAAKtd,YAAL,CAAkBU,KAAtB,EAA4B;AAC1B,kBAAMC,WAAW,GAAG;AAClB2c,qBAAK,EAAG,KAAKA,KADK;AAElBvd,wBAAQ,EAAG,KAAKc,CAAL,CAAOd,QAAP,CAAgBG,KAFT;AAGlBC,+BAAe,EAAE,KAAKU,CAAL,CAAOV,eAAP,CAAuBD;AAHtB,eAApB;AAKA,mBAAK5G,WAAL,CAAiBmgC,aAAjB,CAA+B94B,WAA/B,EAA4ClH,SAA5C,CAAsD,UAAAC,CAAC,EAAI;AACzD,uBAAI,CAACwN,OAAL,GAAexN,CAAC,CAAC2b,OAAjB;AACA,uBAAI,CAAClW,UAAL,GAAkB,KAAlB;AACD,eAHD,EAGG,UAACjE,KAAD,EAAW;AACZ,uBAAI,CAACiE,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACjE,KAAL,GAAaA,KAAb;AACD,eAND;AAOD;AACF;;;8BAvBI;AACH,mBAAO,KAAK8E,YAAL,CAAkBkB,QAAzB;AACD;;;;;;;yBA5BUs4B,sB,EAAsB,2H,EAAA,wJ,EAAA,+H;AAAA,O;;;cAAtBA,sB;AAAsB,0C;AAAA,iB;AAAA,gB;AAAA,8xC;AAAA;AAAA;ACZnC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAgB;;AAAc;;AAC9B;;AACF;;AACA;;AAA6C;AAAA,qBAAY,IAAAre,gBAAA,EAAZ;AAA8B,aAA9B;;AAC3C;;AACE;;AACE;;AAA0B;;AAAY;;AACtC;;AACE;;AAA0B;;AAAI;;AAC9B;;AACF;;AACA;;AAEA;;AAIF;;AACF;;AACA;;AACE;;AACE;;AAAiC;;AAAgB;;AACjD;;AACE;;AAA0B;;AAAI;;AAC9B;;AACF;;AACA;;AAEA;;AAIF;;AACF;;AACA;;AACE;;AAAmF;;AAAM;;AACzF;;AACE;;AACA;;AACF;;AACF;;AACA;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA3DmC;;AAajB;;AAAA;;AAMe;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAWU;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAOoC;;AAAA;;AACoB;;AAAA;;AACvD;;AAAA;;AAIL;;AAAA;;AACA;;AAAA;;;;;;;;;wEDxCNqe,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTvhC,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEZnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBoB;;AAAyC;;AAAsB;;;;;;AADjE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAWL;;AAAwC;;AAAqB;;;;;;AAD/D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAuBL;;AAAqC;;AAAyB;;;;;;AAC9D;;AAAkC;;AAAoC;;;;;;AAFxE;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAYL;;AAAwC;;AAAyB;;;;;;AACjE;;AAAuC;;AAAqE;;;;;;AAF9G;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAWL;;AAA+C;;AAA4B;;;;;;AAC3E;;AAA8C;;AAA2B;;;;;;AAF3E;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAWL;;AAAqC;;AAA6B;;;;;;AAClE;;AAAoC;;AAAmC;;;;;;AAFzE;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAQL;;;;;;;;AAOF;;AACE;;AAAQ;;AAAW;;AACnB;;AAAU;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAK;;AACxC;;;;;;AAFU;;AAAA;;;;;;;;AAGV;;AACE;;AAAQ;;AAAmB;;AAC3B;;AAAU;AAAA;;AAAA;;AAAA,mCAAiB,IAAjB;AAAqB,WAArB;;AAAuB;;AAAK;;AACxC;;;;;;;;;;UDlGLuhC,iB;AAoBX,mCACU16B,WADV,EAEUC,KAFV,EAGUC,MAHV,EAIU7F,WAJV,EAKSC,WALT,EAMUsJ,YANV,EAMoC;AAAA;;AAL1B,eAAA5D,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAA7F,WAAA,GAAAA,WAAA;AACD,eAAAC,WAAA,GAAAA,WAAA;AACC,eAAAsJ,YAAA,GAAAA,YAAA;AAvBV,eAAArJ,OAAA,GAAU,KAAV;AACA,eAAA6F,SAAA,GAAY,KAAZ;AACA,eAAAE,OAAA,GAAU,EAAV;AACA,eAAApE,KAAA,GAAQ,EAAR;AACA,eAAAqE,OAAA,GAAU,IAAV;AAGA,eAAAo6B,KAAA,GAAgB,CACd;AAACjT,gBAAI,EAAE,KAAP;AAAc2P,gBAAI,EAAE,CAApB;AAAuBC,gBAAI,EAAE,CAA7B;AAAgC3X,iBAAK,EAAE;AAAvC,WADc,EAEd;AAAC+H,gBAAI,EAAE,KAAP;AAAc2P,gBAAI,EAAE,CAApB;AAAuBC,gBAAI,EAAE,CAA7B;AAAgC3X,iBAAK,EAAE;AAAvC,WAFc,CAAhB;AAKA,eAAAvQ,OAAA,GAAU;AACRmH,qBAAS,EAAE,IADH;AAERD,gCAAoB,EAAE;AAFd,WAAV;AAaC;;;;qCAEO;AAAA;;AACN,gBAAMskB,GAAG,GAAG,KAAK36B,KAAL,CAAW8Z,GAAX,CAAetf,SAAf,CACV,UAAAC,CAAC,EAAI;AAAC,qBAAI,CAAC6F,OAAL,GAAe7F,CAAC,CAAC,CAAD,CAAD,CAAKgF,IAAL,KAAc,OAA7B;AAAuC,aADnC,CAAZ;AAGA,iBAAK4d,YAAL,GAAoB,KAAKtd,WAAL,CAAiBY,KAAjB,CAAuB;AACzC+R,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW7R,QAAhB,CAD8B;AAEzC8R,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW9R,QAAhB,CAF+B;AAGzCc,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWd,QAAZ,EAAsB,0DAAWc,KAAjC,CAAL,CAHkC;AAIzCiR,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW/R,QAAhB,CAJkC;AAKzCC,sBAAQ,EAAE,CAAE,IAAF,EAAQ,0DAAWwc,OAAX,CAAmB,CACnC,0DAAWzc,QADwB,EAEnC,kFAAiB0c,gBAAjB,CAAkC,qDAAlC,EAAyF;AAAEC,yBAAS,EAAE;AAAb,eAAzF,CAFmC,EAGnC;AACA;AACA,wEAAWC,SAAX,CAAqB,CAArB,CALmC,CAAnB,CAAR,CAL+B;AAYzCxB,kBAAI,EAAE,CAAC,EAAD,CAZmC;AAazC/a,6BAAe,EAAE,CAAC,EAAD;AAbwB,aAAvB,EAcjB;AAACwc,uBAAS,EAAE,6EAAQ,UAAR,EAAoB,iBAApB;AAAZ,aAdiB,CAApB;AAeD;;;qCAMO;AAAA;;AACN,iBAAKzhB,KAAL,GAAa,IAAb;AACA,iBAAKkE,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKkd,YAAL,CAAkB/b,OAAtB,EAA8B;AAC5B;AACD;;AAED,gBAAMqc,OAAO,GAAQ;AAClBjL,uBAAS,EAAG,KAAK1R,CAAL,CAAO0R,SAAP,CAAiBzR,KADX;AAElB0R,sBAAQ,EAAE,KAAK3R,CAAL,CAAO2R,QAAP,CAAgB1R,KAFR;AAGlBU,mBAAK,EAAE,KAAKX,CAAL,CAAOW,KAAP,CAAaV,KAHF;AAIlBH,sBAAQ,EAAE,KAAKE,CAAL,CAAOF,QAAP,CAAgBG,KAJR;AAKlB2R,mBAAK,EAAE,KAAK5R,CAAL,CAAO4R,KAAP,CAAa3R,KALF;AAMlBL,sBAAQ,EAAE,KAAKI,CAAL,CAAOW,KAAP,CAAaV,KANL;AAOlBC,6BAAe,EAAE,KAAKF,CAAL,CAAOE,eAAP,CAAuBD,KAPtB;AAQlB25B,yBAAW,EAAE,IARK;AASlBt2B,mBAAK,EAAE,KAAKhE,OAAL,GAAe,OAAf,GAAyB,SATd;AAUlB2b,kBAAI,EAAE,KAAK3b,OAAL,GAAe,CAAf,GAAmB;AAVP,aAArB;AAaA,iBAAKhG,OAAL,GAAe,IAAf;AACA,iBAAKF,WAAL,CAAiBuB,QAAjB,CAA0BgiB,OAA1B,EACCnjB,SADD,CACW,UAAAP,IAAI,EAAI;AACjB,qBAAI,CAAC0J,YAAL,CAAkBsE,OAAlB,CAA0BhO,IAAI,CAACmc,OAA/B,EAAwC,OAAI,CAACjH,OAA7C;;AACA,qBAAI,CAAClP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,qBAAI,CAACnG,OAAL,GAAe,KAAf;AACA,aALF,EAKI,UAAA2B,KAAK,EAAI;AAAC,qBAAI,CAAC0H,YAAL,CAAkB1H,KAAlB,CAAwBA,KAAxB,EAA+B,OAAI,CAACkT,OAApC;;AAA8C,qBAAI,CAAC7U,OAAL,GAAe,KAAf;AAAuB,aALnF;AAOD;;;uCAES;AACR,iBAAK2N,OAAL,GAAe,IAAf;AACA,iBAAKoV,YAAL,CAAkBzT,KAAlB;AACD;;;8BArCO;AACN,mBAAO,KAAKyT,YAAL,CAAkBpb,QAAzB;AACD;;;;;;;yBArDUw4B,iB,EAAiB,2H,EAAA,+H,EAAA,uH,EAAA,0I,EAAA,wJ,EAAA,4I;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,gB;AAAA,wmD;AAAA;AAAA;AChB9B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAsD;AAAA,qBAAY,IAAAjwB,QAAA,EAAZ;AAAsB,aAAtB;;AACpD;;AACE;;AACE;;AAAwB;;AAAiB;;AACzC;;AAAiB;;AAAQ;;AAA8C;;AAAQ;;AACjF;;AACA;;AACE;;AACE;;AAA2B;;AAAU;;AACrC;;AAEA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAA0B;;AAAS;;AACnC;;AAEA;;AAGF;;AACF;;AAcA;;AACE;;AACE;;AAAuB;;AAAK;;AAC5B;;AAEA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AAA0B;;AAAQ;;AAClC;;AAEA;;AAAU;;AAAiE;;AAC3E;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AAA0B;;AAAgB;;AAC1C;;AAEA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AAAuB;;AAAK;;AAC5B;;AAEA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACA;;AACF;;AAEA;;AAAsB;;AAAyB;;AAA2B;;AAAO;;AAAI;;AACvF;;AACA;;AACE;;AAIA;;AAIF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA3HmC;;AAQnB;;AAAA;;AAUI;;AAAA;;AACG;;AAAA;;AAUH;;AAAA;;AACG;;AAAA;;AAsBH;;AAAA;;AACG;;AAAA;;AAWH;;AAAA;;AAEG;;AAAA;;AAWH;;AAAA;;AACG;;AAAA;;AAWH;;AAAA;;AACG;;AAAA;;AASgD;;AAAA;;AAC7C;;AAAA;;AAI0C;;AAAA;;AAGJ;;AAAA;;AAIA;;AAAA;;;;;;;;;wED/FnDiwB,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTzhC,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgDoB;;AACE;;AACE;;AACE;;AACE;;AAAK;;AAAK;;AACV;;AACE;;AACE;;AAAU;;AAAc;;AAC1B;;AACA;;AACE;;AACE;;AAAM;;AAAY;;AACpB;;AACA;;AACE;;AAAM;;AAAQ;;AAChB;;AACA;;AACE;;AAAM;;AAAG;;AACX;;AACA;;AACE;;AAAM;;AAAI;;AACZ;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAEF;;AACA;;AACG;;AACI;;AACI;;AAAyB;;AAAE;;AAC3B;;AAAyB;;AAAkB;;AAC9C;;AACD;;AAGA;;AACI;;AAA0B;;AAAC;;AAC3B;;AAAyB;;AAAa;;AACzC;;AACL;;AACH;;AACF;;AACF;;;;;;;;AAxCkC;;AAAA;;AAqBjB;;AAAA,8FAAuB,OAAvB,EAAuB,cAAvB,EAAuB,aAAvB,EAAuB,oBAAvB,EAAuB,QAAvB,EAAuB,eAAvB,EAAuB,QAAvB,EAAuB,eAAvB,EAAuB,MAAvB,EAAuB,aAAvB;;AAUF;;AAAA;;;;UDtCtB2hC,wB;AASX,4CAAc;AAAA;;AAFd,eAAAC,YAAA,GAAe,EAAf;AAQA,eAAAC,UAAA,GAAa,IAAIzhC,IAAJ,EAAb;AALE,eAAK0hC,aAAL;AACA,eAAKC,eAAL;AAED;;;;0CAIY;AACX,gBAAMC,QAAQ,GAAG,EAAjB;;AACA,iBAAK,IAAI1hC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACvC0hC,sBAAQ,CAACnhC,IAAT,CAAcP,KAAd;AACD;;AACD,iBAAKk1B,YAAL,GAAoB;AAClBC,oBAAM,EAAE,CACN;AACEpvB,oBAAI,EAAE,oBADR;AAEEtF,oBAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,CAAlB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,EAA/C,EAAmD,CAAnD,EAAsD,EAAtD,EAA0D,CAA1D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,EAA7E,EAAiF,EAAjF,EAAqF,CAArF,EAAyF,CAAzF,EAA4F,CAA5F,EAA+F,CAA/F;AAFR,eADM,CADU;AAOlB20B,mBAAK,EAAE;AACL/G,sBAAM,EAAE,GADH;AAEL9S,oBAAI,EAAE,MAFD;AAGLomB,0BAAU,EAAE;AACVxL,yBAAO,EAAE,IADC;AAEVjQ,uBAAK,EAAE,MAFG;AAGV0b,qBAAG,EAAE,EAHK;AAIVC,sBAAI,EAAE,CAJI;AAKVC,sBAAI,EAAE,EALI;AAMVrL,yBAAO,EAAE;AANC,iBAHP;AAWLsL,uBAAO,EAAE;AACPrM,sBAAI,EAAE;AADC;AAXJ,eAPW;AAsBlBtQ,oBAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAtBU;AAuBlBmQ,wBAAU,EAAE;AACVY,uBAAO,EAAE;AADC,eAvBM;AA0BlBC,oBAAM,EAAE;AACN4L,qBAAK,EAAE;AADD,eA1BU;AA6BlB;AACA;AACA;AACA;AACAC,kBAAI,EAAE;AACJC,2BAAW,EAAE,SADT;AAEJhgB,mBAAG,EAAE;AACHkD,wBAAM,EAAE,CAAC,SAAD,EAAY,aAAZ,CADL;AAEHqR,yBAAO,EAAE;AAFN;AAFD,eAjCY;AAwClB0L,qBAAO,EAAE;AACPlX,oBAAI,EAAE;AADC,eAxCS;AA2ClBoL,mBAAK,EAAE;AACLC,0BAAU,EAAEoL,QADP;AAEL52B,qBAAK,EAAE;AACLmjB,sBAAI,EAAE;AADD;AAFF,eA3CW;AAiDlBsI,mBAAK,EAAE;AACLzrB,qBAAK,EAAE;AACLmjB,sBAAI,EAAE;AADD,iBADF;AAILmU,mBAAG,EAAE,CAJA;AAKLC,mBAAG,EAAE;AALA,eAjDW;AAwDlBlE,oBAAM,EAAE;AACNp1B,wBAAQ,EAAE,KADJ;AAENu5B,+BAAe,EAAE,OAFX;AAGNC,wBAAQ,EAAE,IAHJ;AAINC,uBAAO,EAAE,CAAC,EAJJ;AAKNC,uBAAO,EAAE,CAAC;AALJ;AAxDU,aAApB;AAgED;;;4CAEc;AACb,iBAAKC,kBAAL,GAA0B;AACxBvN,oBAAM,EAAE,CAAC,EAAD,CADgB;AAExBC,mBAAK,EAAE;AACL/G,sBAAM,EAAE,GADH;AAEL9S,oBAAI,EAAE,WAFD;AAGLwmB,uBAAO,EAAE;AACPrM,sBAAI,EAAE;AADC;AAHJ,eAFiB;AASxBL,yBAAW,EAAE;AACXC,yBAAS,EAAE;AACTqN,4BAAU,EAAE,CAAC,GADJ;AAETC,0BAAQ,EAAE,GAFD;AAGTC,wBAAM,EAAE;AACNC,0BAAM,EAAE,CADF;AAEN7X,wBAAI,EAAE,KAFA;AAGN5F,8BAAU,EAAE,MAHN;AAINjJ,yBAAK,EAAE5N,SAJD;AAKNzF,4BAAQ,EAAE,OALJ;AAMN44B,8BAAU,EAAE;AACVxL,6BAAO,EAAE,IADC;AAEVyL,yBAAG,EAAE,CAFK;AAGVC,0BAAI,EAAE,CAHI;AAIVC,0BAAI,EAAE,CAJI;AAKVrL,6BAAO,EAAE;AALC;AANN,mBAHC;AAiBTsM,uBAAK,EAAE;AACL1d,8BAAU,EAAE,MADP;AAEL2d,+BAAW,EAAE,IAFR;AAGLF,0BAAM,EAAE,CAHH;AAILnB,8BAAU,EAAE;AACVxL,6BAAO,EAAE,IADC;AAEVyL,yBAAG,EAAE,CAAC,CAFI;AAGVC,0BAAI,EAAE,CAHI;AAIVC,0BAAI,EAAE,CAJI;AAKVrL,6BAAO,EAAE;AALC;AAJP,mBAjBE;AA8BTlB,4BAAU,EAAE;AACVG,wBAAI,EAAE,IADI;AAEV3vB,wBAAI,EAAE;AACJy8B,6BAAO,EAAE,CAAC,EADN;AAEJ9M,0BAAI,EAAE,IAFF;AAGJxP,2BAAK,EAAE,MAHH;AAIJsP,8BAAQ,EAAE;AAJN,qBAFI;AAQV/tB,yBAAK,EAAE;AACLkuB,+BAAS,EAAE,mBAACgB,GAAD,EAAS;AAClB,+BAAO1oB,QAAQ,CAAC0oB,GAAG,CAACrb,QAAJ,EAAD,EAAiB,EAAjB,CAAR,CAA6BA,QAA7B,EAAP;AACD,uBAHI;AAIL4K,2BAAK,EAAE,MAJF;AAKLsP,8BAAQ,EAAE,MALL;AAMLE,0BAAI,EAAE;AAND;AARG;AA9BH;AADA,eATW;AA2DxBc,kBAAI,EAAE;AACJjb,oBAAI,EAAE,UADF;AAEJ0nB,wBAAQ,EAAE;AACRC,uBAAK,EAAE,MADC;AAER3nB,sBAAI,EAAE,YAFE;AAGR4nB,gCAAc,EAAE,GAHR;AAIRC,kCAAgB,EAAE,CAAC,SAAD,CAJV;AAKRC,+BAAa,EAAE,IALP;AAMRC,6BAAW,EAAE,CANL;AAORC,2BAAS,EAAE,CAPH;AAQRC,uBAAK,EAAE,CAAC,CAAD,EAAI,GAAJ;AARC;AAFN,eA3DkB;AAwExBpN,oBAAM,EAAE;AACNqN,uBAAO,EAAE;AADH,eAxEgB;AA2ExB5N,oBAAM,EAAE,CAAC,SAAD;AA3EgB,aAA1B;;AA8EA,iBAAK,IAAI71B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAA5B,EAA+BA,KAAK,EAApC,EAAwC;AACtC,mBAAKshC,YAAL,CAAkB/gC,IAAlB,CAAuB,KAAKmiC,kBAA5B;AACD;AAEF;;;qCAEO,CACP;;;;;;;yBA9KUrB,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,4C;AAAA;AAAA;;;;;;;;;;;;;;;AC/CrC;;AACE;;AACE;;AACE;;AACA;;AAAoB;;AAAO;;AAC7B;;AACA;;AACE;;AACA;;AAAoB;;AAAK;;AAC3B;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAwB;;;;AAAwC;;AAChE;;AAA0B;;AAAS;;AACrC;;AACA;;AACE;;AAAwB;;;;AAA2C;;AACnE;;AAA0B;;AAAW;;AACvC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAIF;;AACF;;AAEA;;AACI;;AACI;;AACI;;AAAgC;;AAA2B;;AAC3D;;AACI;;AA+CJ;;AACJ;;AACJ;;AAEJ;;AACF;;AACF;;;;AAjFc;;AAAA;;AAKwB;;AAAA;;AAIA;;AAAA;;AAOnB;;AAAA,wGAA8B,OAA9B,EAA8B,sBAA9B,EAA8B,OAA9B,EAA8B,sBAA9B,EAA8B,QAA9B,EAA8B,uBAA9B,EAA8B,QAA9B,EAA8B,uBAA9B,EAA8B,YAA9B,EAA8B,2BAA9B,EAA8B,QAA9B,EAA8B,uBAA9B,EAA8B,SAA9B,EAA8B,wBAA9B,EAA8B,MAA9B,EAA8B,qBAA9B,EAA8B,OAA9B,EAA8B,sBAA9B,EAA8B,OAA9B,EAA8B,sBAA9B;;AAYuB;;AAAA;;;;;;;;;;wEDD7BA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACT7hC,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAK0B,U;;;AAGf01B,eAAK,EAAE,CAAF;kBAAxB,uDAAwB;mBAAd,O;AAAc,WAAE;;;;;;;;;;;;;;;;;;;AElD7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQasO,S;AACX,2BAAoBj9B,MAApB,EACoB8xB,qBADpB,EAC6D;AAAA;;AADzC,eAAA9xB,MAAA,GAAAA,MAAA;AACA,eAAA8xB,qBAAA,GAAAA,qBAAA;AAEnB;;;;sCAEW/xB,K,EACA85B,K,EAA0B;AACzB,gBAAMv/B,IAAI,GAAG,KAAKw3B,qBAAL,CAA2BvxB,SAAxC;;AACA,gBAAIjG,IAAJ,EAAU;AACL,qBAAO,IAAP;AACH,aAFF,MAEQ;AACH,mBAAK0F,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAAEY,2BAAW,EAAE;AAAEF,2BAAS,EAAE24B,KAAK,CAAChgB;AAAnB;AAAf,eAAjC;AACA,qBAAO,KAAP;AACH;AACd;;;;;;;yBAfUojB,S,EAAS,8G,EAAA,wI;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACVh+B,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOai+B,qB;AAEX,yCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,yC;AAAA,iB;AAAA,e;AAAA,utC;AAAA;AAAA;ACPlC;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACjC;;AAAwB;;AAAqC;;AAC7D;;AAAoB;;AAAiE;;AACrF;;AAA4D;;AAAM;;AAAW;;AAAO;;AACtF;;AACA;;AACE;;AAGF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAA2B;;AAAyB;;AACpD;;AACF;;AACA;;AACE;;AACE;;AAEA;;AACE;;AACE;;AAAsC;;AACtB;;AAChB;;AAAkC;;AAIsB;;AACtD;;AAA8C;;AAAgB;;AAClE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAsC;;AACpB;;AAClB;;AAAkC;;AAEkC;;AAClE;;AAA8C;;AAAgB;;AAClE;;AACF;;AACA;;AAEF;;AACA;;AACE;;AAEA;;AACE;;AACE;;AAAsC;;AACvB;;AACf;;AAAkC;;AAEkC;;AAClE;;AAA8C;;AAAgB;;AAClE;;AACF;;AACF;;AACF;;AACF;;AAEA;;;;;;;;;wEDlEaA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTnkC,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOakkC,oB;AAEX,sCAAoBvyB,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;yCAE7B;AACV,mBAAO,KAAKA,IAAL,CAAUnF,GAAV,WAAsB,yEAAYwF,MAAlC,eAAP;AACD;;;;;;;yBANUkyB,oB,EAAoB,uH;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;wEAEDA,oB,EAAoB;gBAHhC,wDAGgC;iBAHrB;AACVl+B,sBAAU,EAAE;AADF,W;AAGqB,U;;;;;;;;;;;;;;;;;;;;;;ACJjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQ6D;;;;;;AAOvC;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;;;AASF;;AACE;;AAA8C;;;;;;AADH;;AAC3C;;AAAA;;;;;;;;AAqBJ;;AAA0D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;;;AAAuB;;;;;;AADjB;;AACN;;AAAA;;;;;;AA0BY;;;;;;AA+GA;;;;UD5J9Cm+B,wB;AAEX,0CAAoBt9B,WAApB,EACoBoX,WADpB,EAEoB3L,iBAFpB,EAE0D;AAAA;;AAFtC,eAAAzL,WAAA,GAAAA,WAAA;AACA,eAAAoX,WAAA,GAAAA,WAAA;AACA,eAAA3L,iBAAA,GAAAA,iBAAA;AAKpB,eAAArL,SAAA,GAAY,KAAZ;AAIA,eAAA+D,UAAA,GAAa,KAAb;AACA,eAAAJ,IAAA,GAAO,CAAC;AACJC,eAAG,EAAE,QADD;AAEJC,oBAAQ,EAAE;AAFN,WAAD,EAIL;AACED,eAAG,EAAE,SADP;AAEEC,oBAAQ,EAAE;AAFZ,WAJK,EAQL;AACED,eAAG,EAAE,WADP;AAEEC,oBAAQ,EAAE;AAFZ,WARK,EAYL;AACED,eAAG,EAAE,UADP;AAEEC,oBAAQ,EAAE;AAFZ,WAZK,EAgBL;AACED,eAAG,EAAE,QADP;AAEEC,oBAAQ,EAAE;AAFZ,WAhBK,EAoBL;AACED,eAAG,EAAE,UADP;AAEEC,oBAAQ,EAAE;AAFZ,WApBK,EAwBL;AACED,eAAG,EAAE,QADP;AAEEC,oBAAQ,EAAE;AAFZ,WAxBK,CAAP;AAV4D;;;;qCAwCpD;AACN,iBAAKs5B,WAAL,GAAmB,KAAKv9B,WAAL,CAAiBY,KAAjB,CAAuB;AACxC8X,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW5X,QAAhB,CADiC;AAExC0F,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW1F,QAAhB,CAF8B;AAGxC08B,2BAAa,EAAE,CAAC,EAAD,EAAK,0DAAW18B,QAAhB,CAHyB;AAIxCiD,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWjD,QAAhB,CAJkC;AAKxC28B,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW38B,QAAhB,CALiC;AAMxC8Q,sBAAQ,EAAE,CAAC,KAAD,EAAQ,0DAAW9Q,QAAnB;AAN8B,aAAvB,CAAnB;AASA,iBAAK48B,KAAL,GAAa,KAAK19B,WAAL,CAAiBY,KAAjB,CAAuB;AAClCwO,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWtO,QAAhB,CADyB;AAElC2D,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW3D,QAAhB,CAFuB;AAGlC4D,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW5D,QAAhB,CAHyB;AAIlC4I,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW5I,QAAhB,CAJ2B;AAKlCuH,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWvH,QAAhB;AAL4B,aAAvB,CAAb;AAQA,iBAAK68B,QAAL,GAAgB,KAAK39B,WAAL,CAAiBY,KAAjB,CAAuB;AACrCg9B,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAW98B,QAAhB,CAD6B;AAErC+8B,mBAAK,EAAE,CAAC,EAAD,CAF8B;AAGrCC,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWh9B,QAAhB,CAHyB;AAIrCi9B,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWj9B,QAAhB,CAJ4B;AAKrCk9B,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWl9B,QAAhB,CALyB;AAMrCm9B,iBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWn9B,QAAhB;AANgC,aAAvB,CAAhB;AASA,iBAAK+W,MAAL,GAAc,KAAKT,WAAL,CAAiB8mB,SAAjB,EAAd;AACA,iBAAKC,WAAL;AACD;;;oCAES3jC,I,EAAW;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACgF,IAAb,GAAoBhF,IAAI,CAACgF,IAAzB,GAAgC,EAAvC;AACD;;;wCAGa;AAAA;;AACZ,iBAAKiM,iBAAL,CAAuBnF,iBAAvB,GAA2C7L,SAA3C,CACE,UAAAP,IAAI,EAAI;AACN,qBAAI,CAACsM,QAAL,GAAgBtM,IAAI,CAACsM,QAAL,CAAc5D,GAAd,CAAkB,UAAAZ,CAAC,EAAI;AACrC,uBAAO,MAAP,OAAO,CAAP,EAAO,EACFA,CADE,CAAP;AAGD,eAJe,CAAhB;AAKD,aAPH;AASD;;;gDAckB;AACjB,gBAAMwE,QAAQ,GAAG,EAAjB;AACA43B,iBAAK,CAACC,IAAN,CAAW,KAAKp9B,CAAL,CAAOuF,QAAP,CAAgBtF,KAA3B,EACCtB,OADD,CACS,UAAClG,OAAD,EAAkB;AACzB8M,sBAAQ,CAACxM,IAAT,CAAcN,OAAO,CAACkH,KAAR,CAAc09B,SAAd,GAA0B,GAA1B,GAAgC5kC,OAAO,CAAC8F,IAAtD;AACD,aAHD;AAIA,mBAAOgH,QAAQ,CAACuB,IAAT,CAAc,GAAd,CAAP;AACD;;;yCAEW;AACV,gBAAMhE,IAAI,GAAG,EAAb;AACAq6B,iBAAK,CAACC,IAAN,CAAW,KAAKt6B,IAAhB,EACCnE,OADD,CACS,UAAClG,OAAD,EAAkB;AACzB,kBAAIA,OAAO,CAACuK,QAAZ,EAAqB;AACnBF,oBAAI,CAAC/J,IAAL,CAAUN,OAAO,CAACsK,GAAlB;AACD;AACF,aALD;AAMA,mBAAOD,IAAI,CAACgE,IAAL,CAAU,GAAV,CAAP;AACD;;;qCAEUyN,O,EAASxR,G,EAAK;AACvBA,eAAG,CAACC,QAAJ,GAAeuR,OAAf;AACA,iBAAKrR,UAAL,GAAkB,KAAKJ,IAAL,CAAU+D,MAAV,CAAiB,UAAAkC,CAAC;AAAA,qBAAIA,CAAC,CAAC/F,QAAN;AAAA,aAAlB,EAAkCpG,MAAlC,GAA2C,CAA3C,GAA+C,KAA/C,GAAuD,KAAKsG,UAA9E;AACD;;;oCAESsR,S,EAAoB;AAC5B,iBAAKtR,UAAL,GAAkBsR,SAAlB;;AACA,gBAAI,KAAK1R,IAAL,IAAa,IAAjB,EAAuB;AACrB;AACD;;AACD,iBAAKA,IAAL,CAAUnE,OAAV,CAAkB,UAAAoK,CAAC,EAAI;AACrB,kBAAIyL,SAAS,KAAK,IAAlB,EAAwB;AACtBzL,iBAAC,CAAC/F,QAAF,GAAa,IAAb;AACD;AACF,aAJD;AAKD;;;qCAEU;AACT,iBAAK7D,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKm9B,WAAL,CAAiB77B,KAArB,EAA4B,CAE3B;AACF;;;8BAtDO;AACN,mBAAO,KAAK67B,WAAL,CAAiBr7B,QAAxB;AACD;;;8BAEa;AACZ,mBAAO,KAAKw7B,KAAL,CAAWx7B,QAAlB;AACD;;;8BAEgB;AACf,mBAAO,KAAKjB,CAAL,CAAOw8B,KAAP,CAAav8B,KAAb,GAAqB,KAAKq9B,UAAL,CAAgB70B,KAAhB,CAAsBxI,KAAlD;AACD;;;;;;;yBAtGUo8B,wB,EAAwB,2H,EAAA,0I,EAAA,sJ;AAAA,O;;;cAAxBA,wB;AAAwB,4C;AAAA,kB;AAAA,gB;AAAA,w6E;AAAA;AAAA;;;AChCrC;;AACE;;AACE;;AACE;;AAAsB;;AAAO;;AAC/B;;AACA;;AACE;;AACE;;AACE;;AAAoB;;AAAoB;;AACxC;;AACE;;AACE;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AACE;;;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACE;;AAAoD;;AAAM;;AAC1D;;AAAqD;;AAAO;;AAC5D;;AAAkD;;AAAI;;AACxD;;AACF;;AACF;;AACA;;AACE;;AAAW;;AAAuB;;AAClC;;AACE;;AAAwD;AAAA,qBAAU,IAAA5yB,SAAA,gBAAV;AAAmC,aAAnC;;AAAqC;;AAC7F;;AACA;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AACF;;AACF;;AACA;;AAA6D;;AAAQ;;AACrE;;AAAqD;;AAAI;;AAC3D;;AACF;;AACF;;AACA;;AACE;;AAAoB;;AAAsB;;AAC1C;;AACE;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AACE;;AAA2C;;AAAoB;;AAC/D;;AAA8C;;AAAoB;;AACpE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AAAU;;AAAc;;AAC1B;;AACA;;AACE;;AACA;;AACF;;AACA;;AACA;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAoB;;AAC/B;;AACE;;AAAW;;AAAoB;;AAC/B;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAAU;;AAAK;;AACjB;;AACA;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAe;;AACnB;;AACA;;AACE;;AACE;;AAA2B;;AAAW;;AACtC;;AAAiB;;AAAsB;;AACzC;;AACA;;AACE;;AAA2B;;AAAS;;AACpC;;AAAkB;;AAA0B;;AAC9C;;AACA;;AACE;;AAA2B;;AAAe;;AAC1C;;AAAiB;;AAAyB;;AAC5C;;AACA;;AACE;;AAA2B;;AAAY;;AACvC;;AAAiB;;AAAsC;;AACzD;;AACF;;AACA;;AACA;;AACE;;AACE;;AAA2B;;AAAqB;;AAChD;;AAAiB;;AAAkB;;AACrC;;AACA;;AACE;;AAA2B;;AAAc;;AACzC;;AAAiB;;;;;;AAA2E;;AAC9F;;AACA;;AACE;;AAA2B;;AAAqB;;AAChD;;AAAiB;;AAA0B;;AAC7C;;AACA;;AACE;;AAA2B;;AAAU;;AACrC;;AAAiB;;AAAyB;;AAC5C;;AACF;;AACA;;AACA;;AACE;;AACE;;AAA2B;;AAAY;;AACvC;;AAAiB;;AAAiB;;AACpC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAoB;;AAAgB;;AACpC;;AACE;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAc;;AAAgB;;AAC9B;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAAW;;AAAU;;AACrB;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AACE;;AAA6C;;AAAW;;AACxD;;AAA6C;;AAAc;;AAC3D;;AAA8C;;AAAgB;;AAChE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAAW;;AAAW;;AACtB;;AAAgB;;AAAU;;AAAW;;AAAW;;AAChD;;AACF;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AACF;;AACA;;AACE;;AAAW;;AAAG;;AACd;;AACE;;AAAW;;AAAG;;AACd;;AAAgB;;AAAU;;AAAW;;AAAW;;AAChD;;AACF;;AACF;;AACF;;AACA;;AAAc;;AAA+B;;AAC/C;;AACA;;AACE;;AACE;;AAAI;;AAAe;;AACnB;;AACA;;AACE;;AACE;;AAA2B;;AAAW;;AACtC;;AAAiB;;AAAsB;;AACzC;;AACA;;AACE;;AAA2B;;AAAS;;AACpC;;AAAkB;;AAA0B;;AAC9C;;AACA;;AACE;;AAA2B;;AAAe;;AAC1C;;AAAiB;;AAAyB;;AAC5C;;AACA;;AACE;;AAA2B;;AAAY;;AACvC;;AAAiB;;AAAsC;;AACzD;;AACF;;AACA;;AACA;;AACE;;AACE;;AAA2B;;AAAqB;;AAChD;;AAAiB;;AAAkB;;AACrC;;AACA;;AACE;;AAA2B;;AAAc;;AACzC;;AAAiB;;;;;;AAA2E;;AAC9F;;AACA;;AACE;;AAA2B;;AAAqB;;AAChD;;AAAiB;;AAA0B;;AAC7C;;AACA;;AACE;;AAA2B;;AAAU;;AACrC;;AAAiB;;AAAyB;;AAC5C;;AACF;;AACA;;AACA;;AACE;;AACE;;AAA2B;;AAAY;;AACvC;;AAAiB;;AAAiB;;AACpC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA6B;AAAA;;AAAA;;AAAA,qBAAS,qCAAT;AAAyD,aAAzD;;AAAyE;;AAAI;;AAC1G;;AACE;;AAA6C;;AAAM;;AACnD;;AAA+B;AAAA;;AAAA;;AAAA,qBAAS,qCAAT;AAAqD,aAArD;;AACf;;AAAQ;;AAC1B;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;AAxTkB;;AAAA;;AAGA;;AAAA;;AAM6E;;AAAA;;AACjC;;AAAA;;AAC5B;;AAAA;;AAUA;;AAAA;;AAoBmB;;AAAA;;AAG/B;;AAAA;;AAuBJ;;AAAA;;AAEF;;AAAA;;AAwB8B;;AAAA;;AAIW;;AAAA;;AAmClB;;AAAA;;AAIC;;AAAA;;AAID;;AAAA;;AAIA;;AAAA;;AAOA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAOA;;AAAA;;AAUvB;;AAAA;;AAyCsB;;AAAA;;AACiB;;AAAA;;AA+BhB;;AAAA;;AAIC;;AAAA;;AAID;;AAAA;;AAIA;;AAAA;;AAOA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAOA;;AAAA;;;;;;;;;;;wED1Q1B4yB,wB,EAAwB;gBANpC,uDAMoC;iBAN1B;AACTrkC,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD,CAHF;AAIT6lB,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAM0B,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEhCrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOauf,uB;AAEX,2CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,uB;AAAuB,O;;;cAAvBA,uB;AAAuB,2C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPpC;;;;;;;;;wEDOaA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTvlC,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;AEPpgDA,UAAMslC,MAAM,GAAW,CACrB;AAAE/+B,YAAI,EAAE,IAAR;AAAcg/B,iBAAS,EAAE,6FAAzB;AAA8CC,mBAAW,EAAE,CAAC,6DAAD,CAA3D;AACAC,gBAAQ,EAAE,CACV;AAAEl/B,cAAI,EAAE,EAAR;AAAYg/B,mBAAS,EAAE,6EAAvB;AAAsCG,mBAAS,EAAE;AAAjD,SADU,EAEV;AAAEn/B,cAAI,EAAE,QAAR;AAAkBg/B,mBAAS,EAAE;AAA7B,SAFU,EAGV;AAAEh/B,cAAI,EAAE,SAAR;AAAmBg/B,mBAAS,EAAE;AAA9B,SAHU,EAIV;AAAEh/B,cAAI,EAAE,QAAR;AAAkBg/B,mBAAS,EAAE;AAA7B,SAJU,EAKV;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SALU,EAMV;AAAEh/B,cAAI,EAAE,eAAR;AAAyBg/B,mBAAS,EAAE;AAApC,SANU,EAOV;AAAEh/B,cAAI,EAAE,WAAR;AAAqBg/B,mBAAS,EAAE;AAAhC,SAPU,EAQV;AAAEh/B,cAAI,EAAE,SAAR;AAAmBg/B,mBAAS,EAAE;AAA9B,SARU,EASV;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SATU,EAUV;AAAEh/B,cAAI,EAAE,WAAR;AAAqBg/B,mBAAS,EAAE;AAAhC,SAVU,EAWV;AAAEh/B,cAAI,EAAE,OAAR;AAAiBg/B,mBAAS,EAAE;AAA5B,SAXU,EAYV;AAAEh/B,cAAI,EAAE,OAAR;AAAiBg/B,mBAAS,EAAE;AAA5B,SAZU,EAaV;AAAEh/B,cAAI,EAAE,QAAR;AAAkBg/B,mBAAS,EAAE;AAA7B,SAbU,EAcV;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SAdU,EAeV;AAAEh/B,cAAI,EAAE,cAAR;AAAwBg/B,mBAAS,EAAE;AAAnC,SAfU,EAgBV;AAAEh/B,cAAI,EAAE,gBAAR;AAA0Bg/B,mBAAS,EAAE;AAArC,SAhBU,EAiBV;AAAEh/B,cAAI,EAAE,WAAR;AAAqBg/B,mBAAS,EAAE;AAAhC,SAjBU,EAkBV;AAAEh/B,cAAI,EAAE,iBAAR;AAA2Bg/B,mBAAS,EAAE;AAAtC,SAlBU,EAmBV;AAAEh/B,cAAI,EAAE,qBAAR;AAA+Bg/B,mBAAS,EAAE;AAA1C,SAnBU,EAoBV;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SApBU,EAqBV;AAAEh/B,cAAI,EAAE,kBAAR;AAA4Bg/B,mBAAS,EAAE;AAAvC,SArBU,EAsBV;AAAEh/B,cAAI,EAAE,WAAR;AAAqBg/B,mBAAS,EAAE;AAAhC,SAtBU;AADV,OADqB,EA0BrB;AACEh/B,YAAI,EAAE,EADR;AACYg/B,iBAAS,EAAE,6FADvB;AAEEE,gBAAQ,EAAE,CACR;AAAEl/B,cAAI,EAAE,EAAR;AAAYg/B,mBAAS,EAAE,kGAAvB;AAA0CG,mBAAS,EAAE;AAArD,SADQ,EAER;AAAEn/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SAFQ,EAGR;AAAEh/B,cAAI,EAAE,SAAR;AAAmBg/B,mBAAS,EAAE;AAA9B,SAHQ,EAIR;AAAEh/B,cAAI,EAAE,SAAR;AAAmBg/B,mBAAS,EAAE;AAA9B,SAJQ,EAKR;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SALQ,EAMR;AAAEh/B,cAAI,EAAE,QAAR;AAAkBg/B,mBAAS,EAAE;AAA7B,SANQ;AAFZ,OA1BqB,EAqCrB;AACEh/B,YAAI,EAAE,OADR;AACiBg/B,iBAAS,EAAE,gGAD5B;AAEEE,gBAAQ,EAAE,CACR;AAAEl/B,cAAI,EAAE,EAAR;AAAYg/B,mBAAS,EAAE,2FAAvB;AAAuCG,mBAAS,EAAE;AAAlD,SADQ,EAER;AAAEn/B,cAAI,EAAE,QAAR;AAAkBg/B,mBAAS,EAAE;AAA7B,SAFQ,EAGR;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SAHQ,EAIR;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SAJQ;AAFZ,OArCqB,EA8CrB;AACEh/B,YAAI,EAAE,UADR;AACoBg/B,iBAAS,EAAE,yGAD/B;AAEEE,gBAAQ,EAAE,CACR;AAAEl/B,cAAI,EAAE,EAAR;AAAYg/B,mBAAS,EAAE,2FAAvB;AAAuCG,mBAAS,EAAE;AAAlD,SADQ,EAER;AAAEn/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SAFQ,EAGR;AAAEh/B,cAAI,EAAE,OAAR;AAAiBg/B,mBAAS,EAAE;AAA5B,SAHQ,EAIR;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SAJQ,EAKR;AAAEh/B,cAAI,EAAE,UAAR;AAAoBg/B,mBAAS,EAAE;AAA/B,SALQ;AAFZ,OA9CqB,EAwDrB;AAAEh/B,YAAI,EAAE,OAAR;AAAiBg/B,iBAAS,EAAE;AAA5B,OAxDqB,EAyDrB;AAAEh/B,YAAI,EAAE,cAAR;AAAwBg/B,iBAAS,EAAE;AAAnC,OAzDqB,EA0DrB;AAAEh/B,YAAI,EAAE,cAAR;AAAwBg/B,iBAAS,EAAE;AAAnC,OA1DqB,EA2DrB;AAAEh/B,YAAI,EAAE,yBAAR;AAAmCg/B,iBAAS,EAAE;AAA9C,OA3DqB,EA4DrB;AAAEh/B,YAAI,EAAE,wBAAR;AAAkCg/B,iBAAS,EAAE;AAA7C,OA5DqB,EA6DrB;AAAEh/B,YAAI,EAAE,SAAR;AAAmBg/B,iBAAS,EAAE;AAA9B,OA7DqB,EA8DrB;AAAEh/B,YAAI,EAAE,qBAAR;AAA+Bg/B,iBAAS,EAAE;AAA1C,OA9DqB,EA+DrB;AAAEh/B,YAAI,EAAE,IAAR;AAAco/B,kBAAU,EAAE;AAA1B,OA/DqB,CAAvB;;UAuEaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAajS,OAAb,CAAqB2R,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBM,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACR7V,mBAAO,EAAE,CAAC,6DAAa4D,OAAb,CAAqB2R,MAArB,CAAD,CADD;AAERrZ,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACvH7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuEkB;;AACE;;AAAM;;AAAe;;AAAO;;AAAiB;;;;;;AAAvC;;AAAA;;AAAsB;;AAAA;;;;;;;;;;;;;AAPlC;;AAGE;;AACE;;AACA;;AAAkC;;AAAG;;AAAc;;AAAI;;AACvD;;AAEF;;AACA;;AAEF;;;;;;;;AAVE,0PAAiG,SAAjG,EAAiG,sNAAjG;;AAGkC;;AAAA;;AACK;;AAAA;;AACF;;AAAA;;;;;;AAR3C;;AACE;;AAcF;;;;;;AAd6B;;AAAA;;;;;;AAHjC;;AACE;;AACE;;AAgBF;;AACF;;;;;;AAlBkB;;AAAA;;AACA;;AAAA;;;;;;AA4BR;;AACE;;AAAM;;AAAc;;AAAO;;AAAgB;;;;;;AAArC;;AAAA;;AAAqB;;AAAA;;;;;;;;;;;;;AAP/B;;AAGA;;AACE;;AACA;;AAA4C;;AAAG;;AAAa;;AAAI;;AAChE;;AAEF;;AACF;;;;;;;;AARE,2PAA+F,SAA/F,EAA+F,wNAA/F;;AAGkC;;AAAA;;AACe;;AAAA;;AACF;;AAAA;;;;;;AARnD;;AACE;;AAYF;;;;;;AAZ6B;;AAAA;;;;;;AAHjC;;AACE;;AACE;;AAcF;;AACF;;;;;;AAhBkB;;AAAA;;AACA;;AAAA;;;;;;;;;;UDrEX4Z,kB;AA+DX,oCAAoB1kC,WAApB,EAA6DD,WAA7D,EACoBk2B,aADpB,EACsD;AAAA;;AADlC,eAAAj2B,WAAA,GAAAA,WAAA;AAAyC,eAAAD,WAAA,GAAAA,WAAA;AACzC,eAAAk2B,aAAA,GAAAA,aAAA;AAvDpB,eAAA3N,aAAA,GAA4B;AAC1BC,gBAAI,EAAE,IADoB;AAE1BC,qBAAS,EAAE,KAFe;AAG1BC,qBAAS,EAAE,KAHe;AAI1BC,oBAAQ,EAAE,KAJgB;AAK1BC,gBAAI,EAAE,KALoB;AAM1BC,oBAAQ,EAAE,GANgB;AAO1BC,mBAAO,EAAE,CAAC,EAAD,EAAK,EAAL,CAPiB;AAQ1BC,sBAAU,EAAE;AACV,iBAAG;AACDC,qBAAK,EAAE;AADN,eADO;AAIV,mBAAK;AACHA,qBAAK,EAAE;AADJ,eAJK;AAOV,mBAAK;AACHA,qBAAK,EAAE;AADJ,eAPK;AAUV,mBAAK;AACHA,qBAAK,EAAE;AADJ;AAVK,aARc;AAsB1BC,eAAG,EAAE;AAtBqB,WAA5B;AAyBA,eAAA2b,UAAA,GAA0B,CACxB;AAACtlC,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,4CAAd;AAA4D4b,gBAAI,EAAE,cAAlE;AAAkFC,mBAAO,EAAG,QAA5F;AACsDzmB,iBAAK,EAAG,GAD9D;AACmE8T,gBAAI,EAAE,EADzE;AAC6E,qBAAO,QADpF;AAC8FtV,gBAAI,EAAE;AADpG,WADwB,EAGxB;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,8CAAd;AAA8D4b,gBAAI,EAAE,UAApE;AACAC,mBAAO,EAAG,eADV;AAC2BzmB,iBAAK,EAAG,GADnC;AACwC8T,gBAAI,EAAE,EAD9C;AACkD,qBAAO,QADzD;AACmEtV,gBAAI,EAAE;AADzE,WAHwB,EAKxB;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,2BAAd;AAA2C4b,gBAAI,EAAE,YAAjD;AAA+DC,mBAAO,EAAG,WAAzE;AACAzmB,iBAAK,EAAG,IADR;AACc8T,gBAAI,EAAE,EADpB;AACwB,qBAAO,QAD/B;AAEAtV,gBAAI,EAAE;AAFN,WALwB,EAQxB;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,6BAAd;AAA6C4b,gBAAI,EAAE,WAAnD;AAAgEC,mBAAO,EAAG,WAA1E;AACAzmB,iBAAK,EAAG,GADR;AACa8T,gBAAI,EAAE,EADnB;AACuB,qBAAO,QAD9B;AACwCtV,gBAAI,EAAE;AAD9C,WARwB,EAUxB;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,kCAAd;AAAkD4b,gBAAI,EAAE,aAAxD;AACAC,mBAAO,EAAG,WADV;AACuBzmB,iBAAK,EAAG,GAD/B;AACoC8T,gBAAI,EAAE,EAD1C;AAC8C,qBAAO,QADrD;AAC+DtV,gBAAI,EAAE;AADrE,WAVwB,EAYxB;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,mCAAd;AAAmD4b,gBAAI,EAAE,cAAzD;AACAC,mBAAO,EAAG,SADV;AACqBzmB,iBAAK,EAAG,GAD7B;AACkC8T,gBAAI,EAAE,EADxC;AAC4C,qBAAO,QADnD;AAC6DtV,gBAAI,EAAE;AADnE,WAZwB,CAA1B;AAgBA,eAAAw/B,YAAA,GAA4B,CAC1B;AAACvlC,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,0CAAd;AAA0D4b,gBAAI,EAAE,cAAhE;AACAC,mBAAO,EAAG,QADV;AACoBzmB,iBAAK,EAAG,GAD5B;AAEoD8T,gBAAI,EAAE,EAF1D;AAE8D,qBAAO,QAFrE;AAE+EtV,gBAAI,EAAE;AAFrF,WAD0B,EAI1B;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,4CAAd;AAA4D4b,gBAAI,EAAE,YAAlE;AAAgFC,mBAAO,EAAG,eAA1F;AAA2GzmB,iBAAK,EAAG,GAAnH;AAAwH8T,gBAAI,EAAE,EAA9H;AAAkI,qBAAO,QAAzI;AAAmJtV,gBAAI,EAAE;AAAzJ,WAJ0B,EAK1B;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,yBAAd;AAAyC4b,gBAAI,EAAE,YAA/C;AACkDC,mBAAO,EAAG,WAD5D;AACyEzmB,iBAAK,EAAG,IADjF;AACuF8T,gBAAI,EAAE,EAD7F;AACiG,qBAAO,iBADxG;AAC2HtV,gBAAI,EAAE;AADjI,WAL0B,EAO1B;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,gCAAd;AAC8B4b,gBAAI,EAAE,gBADpC;AACsDC,mBAAO,EAAG,WADhE;AAC6EzmB,iBAAK,EAAG,GADrF;AAC0F8T,gBAAI,EAAE,EADhG;AACoG,qBAAO,QAD3G;AACqHtV,gBAAI,EAAE;AAD3H,WAP0B,EAS1B;AAAC/F,cAAE,EAAE,CAAL;AAAQmS,gBAAI,EAAE,iCAAd;AAAiD4b,gBAAI,EAAE,kBAAvD;AAC8BC,mBAAO,EAAG,SADxC;AACmDzmB,iBAAK,EAAG,GAD3D;AACgE8T,gBAAI,EAAE,EADtE;AAC0E,qBAAO,QADjF;AAC2FtV,gBAAI,EAAE;AADjG,WAT0B,CAA5B;AAcyD;;;;qCAEjD;AAAA;;AACN,iBAAKy/B,YAAL;AACA,iBAAK3kC,IAAL,GAAY,KAAKF,WAAL,CAAiBmG,SAA7B;AACA,iBAAKpG,WAAL,CAAiB+kC,cAAjB,CAAgC,KAAK5kC,IAAL,CAAUb,EAA1C,EAA8Cc,SAA9C,CAAwD,UAAAC,CAAC,EAAI;AAAC,qBAAI,CAACgY,OAAL,GAAehY,CAAf;AAAmB,aAAjF;AACA,iBAAK2kC,OAAL,GAAe,KAAK7kC,IAAL,CAAU0hB,IAAV,KAAmB,OAAlC;AACA,iBAAKqU,aAAL,CAAmB+O,aAAnB,CAAiC,KAAKhlC,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA5D,EAAgEc,SAAhE,CAA0E,UAAAC,CAAC,EAAI;;;AAC7E,qBAAI,CAAC6kC,UAAL,GAAkB7kC,CAAlB;;AACA,kBAAI,OAAI,CAAC2kC,OAAT,EAAiB;AACf,uBAAI,CAACJ,UAAL,CAAgB,CAAhB,EAAmB/9B,KAAnB,GAA2B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE7oB,MAAF,CAASwY,KAAT,CAAena,QAAf,EAA1C;AACA,uBAAI,CAACkqB,UAAL,CAAgB,CAAhB,EAAmB/9B,KAAnB,GAA2B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE7oB,MAAF,CAASwY,KAAT,CAAena,QAAf,EAA1C;AACA,uBAAI,CAACkqB,UAAL,CAAgB,CAAhB,EAAmB/9B,KAAnB,GAA2B,cAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEC,QAAF,CAAWtQ,KAAX,CAAiBna,QAAjB,EAAf,IAA6C,GAAxE;AACA,uBAAI,CAACkqB,UAAL,CAAgB,CAAhB,EAAmB/9B,KAAnB,GAA2B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE7oB,MAAF,CAASwY,KAAT,CAAena,QAAf,EAA1C;AACA,uBAAI,CAACkqB,UAAL,CAAgB,CAAhB,EAAmB/9B,KAAnB,GAA2B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEE,QAAF,CAAWvQ,KAAX,CAAiBna,QAAjB,EAA1C;AACA,uBAAI,CAACkqB,UAAL,CAAgB,CAAhB,EAAmB/9B,KAAnB,GAA2B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEjyB,QAAF,CAAW4hB,KAAX,CAAiBna,QAAjB,EAA1C;AACD,eAPD,MAQI;AACF,uBAAI,CAACmqB,YAAL,CAAkB,CAAlB,EAAqBh+B,KAArB,GAA6B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE7oB,MAAF,CAASwY,KAAT,CAAena,QAAf,EAA5C;AACA,uBAAI,CAACmqB,YAAL,CAAkB,CAAlB,EAAqBh+B,KAArB,GAA6B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE7oB,MAAF,CAASwY,KAAT,CAAena,QAAf,EAA5C;AACA,uBAAI,CAACmqB,YAAL,CAAkB,CAAlB,EAAqBh+B,KAArB,GAA6B,cAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEC,QAAF,CAAWtQ,KAAX,CAAiBna,QAAjB,EAAf,IAA6C,GAA1E;AACA,uBAAI,CAACmqB,YAAL,CAAkB,CAAlB,EAAqBh+B,KAArB,GAA6B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEG,SAAF,CAAYxQ,KAAZ,CAAkBna,QAAlB,EAA5C;AACA,uBAAI,CAACmqB,YAAL,CAAkB,CAAlB,EAAqBh+B,KAArB,GAA6B,CAAH,KAAG,OAAI,CAACq+B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEjyB,QAAF,CAAW4hB,KAAX,CAAiBna,QAAjB,EAA5C;AACD;AACF,aAjBD;AAkBD;;;yCAGsB;AACrB,gBAAMqD,KAAK,GAAG,IAAI7e,IAAJ,EAAd;AACA,gBAAMmQ,KAAK,GAAG0O,KAAK,CAACunB,QAAN,EAAd;;AAEA,gBAAIj2B,KAAK,GAAG,EAAZ,EAAgB;AACd,mBAAKk2B,YAAL,GAAoB,cAApB;AACD,aAFD,MAGK,IAAIl2B,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AACnC,mBAAKk2B,YAAL,GAAoB,gBAApB;AACD,aAFI,MAGA,IAAIl2B,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AACnC,mBAAKk2B,YAAL,GAAoB,cAApB;AACD;AACF;;;;;;;yBAzGUZ,kB,EAAkB,wJ,EAAA,0I,EAAA,sJ;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,gB;AAAA,sjC;AAAA;AAAA;ACd/B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAoB;;AACxB;;AAAgD;;;;;;AACjB;;AAC/B;;AACE;;AACE;;AACF;;AACA;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AAuCA;;AACE;;AAoBA;;AAkBF;;AACF;;AApGF;;;;AAMgB;;AAAA;;AACA;;AAAA;;AAA4C;;AAAA;;AAqDnD;;AAAA;;AACE;;AAAA;;AAoBA;;AAAA;;;;;;;;;;wEDnEEA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT/lC,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACKU;;AAAwB;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AAAU;;AAAI;;AAChB;;;;;;;;AAEF;;AACE;;AAAG;AAAA;;AAAA;;AAAA,oCAAmB,MAAnB;AAAyB,WAAzB;;AACD;;AAAU;;AAAY;;AACxB;;AACA;;AAAM;;;;AAA+B;;AACrC;;AAAG;AAAA;;AAAA;;AAAA,oCAAmB,OAAnB;AAA0B,WAA1B;;AACD;;AAAU;;AAAa;;AACzB;;AACF;;;;;;AAJQ;;AAAA;;;;;;;;AAmEF;;AACE;;AACE;;AAAqB;;AAAwB;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AAAU;;AAAc;;AAC1B;;AACF;;AACA;;AACE;;AACF;;AACA;;AAGF;;;;;;AAVI;;AAAA;;AAKA;;AAAA;;AAE8B;;AAAA,uFAAmB,OAAnB,EAAmB,2DAAnB,EAAmB,aAAnB,EAAmB,2DAAnB;;;;;;;;AAnE1C;;AAAkD;AAAA;;AAAA;;AAAA;AAAA;;AAChD;;AACE;;AAEE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAgB;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACrD;;AAAU;;AAAc;;AAC1B;;AACF;;AACF;;AACA;;AACE;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AADF;;AAEA;;AAAsB;;AAAsB;;AAC9C;;AACA;;AAaF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAuD;;AAAM;;AAC/D;;AACF;;AACF;;;;;;AA/EM;;AA0DoB;;AAAA;;;;;;AAuBxB;;AACE;;AACE;;AAAyB;;AAAO;;AAChC;;AAAsB;;AAAK;;AAC7B;;AACA;;AAAQ;;AAAS;;AACnB;;;;;;AADU;;AAAA;;;;;;AAkCI;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAQE;;AAA+D;;AAAO;;;;;;AACtE;;AAA+D;;AAAS;;;;;;AACxE;;AAA+D;;AAAS;;;;;;;;AA1CxF;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAsB;;AAA0B;;AAClD;;AACA;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAA6C;;AAClE;;AAAO;;AAUpB;;AACF;;AACF;;AACA;;AACE;;AAA6B;;AAA4B;;AACzD;;AAAmC;;AAA0B;;AAC7D;;AACE;;AACE;;AAAM;;;;AAAsD;;AAC5D;;AAOA;;AACE;;AACE;;AACA;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AA1CkC;;AAAA;;AAkBG;;AAAA;;AACM;;AAAA;;AAGzB;;AAAA;;AACoB;;AAAA;;AAQV;;AAAA;;AACiC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAnDjE;;AACE;;AAOA;;AACE;;;;AAmDF;;AACF;;;;;;AA5D4E;;AAAA;;AAStE;;AAAA;;;;UDnGC0mC,2B;AAiBX,6CAAoBt0B,aAApB,EACoBjR,WADpB,EAEoBkR,YAFpB,EAGoB8L,cAHpB,EAIoBiW,EAJpB,EAIqC;AAAA;;AAJjB,eAAAhiB,aAAA,GAAAA,aAAA;AACA,eAAAjR,WAAA,GAAAA,WAAA;AACA,eAAAkR,YAAA,GAAAA,YAAA;AACA,eAAA8L,cAAA,GAAAA,cAAA;AACA,eAAAiW,EAAA,GAAAA,EAAA;AAZpB,eAAAuS,YAAA,GAAe,KAAf;AAEA,eAAAlM,KAAA,GAAQ,IAAIr6B,IAAJ,EAAR;AAEO,eAAA6G,SAAA,GAAY,KAAZ;AACP,eAAAsL,KAAA,GAAQ,EAAR;AAOwC;;;;qCAEhC;AACN,iBAAKq0B,iBAAL;AACA,iBAAKh0B,cAAL;AACD;;;2CAEa;AACZ,iBAAKi0B,kBAAL,GAA0B,KAAKzS,EAAL,CAAQ3sB,KAAR,CAAc;AACtCjH,gBAAE,EAAE,CAAC;AACHuH,qBAAK,EAAE,CADJ;AAEHiP,wBAAQ,EAAE;AAFP,eAAD,CADkC;AAKtCjD,0BAAY,EAAG,CAAC;AACdhM,qBAAK,EAAE,EADO;AAEdiP,wBAAQ,EAAE;AAFI,eAAD,CALuB;AAStC7L,sBAAQ,EAAG,CAAC;AACVpD,qBAAK,EAAE,EADG;AAEViP,wBAAQ,EAAE;AAFA,eAAD,CAT2B;AAatCqQ,oBAAM,EAAG,CAAC;AACRtf,qBAAK,EAAE,EADC;AAERiP,wBAAQ,EAAE;AAFF,eAAD,CAb6B;AAiBtCjE,qBAAO,EAAE,CAAC;AACRhL,qBAAK,EAAE,EADC;AAERiP,wBAAQ,EAAE;AAFF,eAAD,CAjB6B;AAqBtC8W,4BAAc,EAAG,CAAC;AAChB/lB,qBAAK,EAAE,EADS;AAEhBiP,wBAAQ,EAAE;AAFM,eAAD,CArBqB;AAyBtC+W,4BAAc,EAAG,CAAC,EAAD,CAzBqB;AA0BtC9a,4BAAc,EAAE,CAAC,EAAD,CA1BsB;AA2BtCiB,oBAAM,EAAG,CAAC;AACRnM,qBAAK,EAAE,EADC;AAERiP,wBAAQ,EAAE;AAFF,eAAD,CA3B6B;AA+BtCnT,qBAAO,EAAE,CAAC;AACRkE,qBAAK,EAAE,EADC;AAERiP,wBAAQ,EAAE;AAFF,eAAD,CA/B6B;AAmCtC5L,mBAAK,EAAE,CAAC;AACNrD,qBAAK,EAAE,EADD;AAENiP,wBAAQ,EAAE;AAFJ,eAAD,CAnC+B;AAuCtCnE,mBAAK,EAAE,CAAC;AACN9K,qBAAK,EAAE,EADD;AAENiP,wBAAQ,EAAE;AAFJ,eAAD,CAvC+B;AA2CtCrL,mBAAK,EAAE,CAAC;AACN5D,qBAAK,EAAE,EADD;AAENiP,wBAAQ,EAAE;AAFJ,eAAD,CA3C+B;AA+CtCuI,mBAAK,EAAE,CAAC;AACNxX,qBAAK,EAAE,EADD;AAENiP,wBAAQ,EAAE;AAFJ,eAAD,CA/C+B;AAmDtClE,oBAAM,EAAE,CAAC;AACP/K,qBAAK,EAAE,EADA;AAEPiP,wBAAQ,EAAE;AAFH,eAAD,CAnD8B;AAuDtChE,0BAAY,EAAE,CAAC;AACbjL,qBAAK,EAAE,EADM;AAEbiP,wBAAQ,EAAE;AAFG,eAAD;AAvDwB,aAAd,CAA1B;AA4DD;;;8CAEgB;AAAA;;AACf,iBAAK5E,aAAL,CAAmB00B,qBAAnB,CAAyC,KAAK3lC,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAApE,EACCc,SADD,CACW,UAAAC,CAAC,EAAI;AAAC,qBAAI,CAAC8U,WAAL,GAAmB9U,CAAnB;AACA,qBAAI,CAACwlC,gBAAL,GAAwBxlC,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEoN,MAAH,CAAU,UAAArB,CAAC;AAAA,uBAAI,IAAIlN,IAAJ,CAASkN,CAAC,CAACiG,UAAF,CAAaR,OAAtB,EAA+BzD,QAA/B,OAA8C,OAAI,CAACmrB,KAAL,CAAWnrB,QAAX,EAA9C,IACvC,IAAIlP,IAAJ,CAASkN,CAAC,CAACiG,UAAF,CAAaR,OAAtB,EAA+B3D,WAA/B,OAAiD,OAAI,CAACqrB,KAAL,CAAWrrB,WAAX,EADd;AAAA,eAAX,CAAxB;AAC6E,aAH9F,EAIE,UAACrM,KAAD;AAAA,qBAAW,OAAI,CAACA,KAAL,GAAaA,KAAxB;AAAA,aAJF;AAKD;;;yCAEc;AACd;AACA;AACCR,kBAAM,CAACsD,IAAP,CAAY,KAAKiC,CAAL,CAAOmL,cAAP,CAAsBlL,KAAlC;AACD;;;qCAIUwK,K,EAAK;AACd,iBAAKuJ,YAAL,GAAoBvJ,KAAK,CAAC,CAAD,CAAzB;AACA,iBAAKsb,UAAL,GAAkB,IAAlB;AACD;;;sCAEWta,U,EAAU;;;AACpB,iBAAKozB,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,iBAAKE,kBAAL,CAAwBlrB,UAAxB,CAAmC;AACjCnb,gBAAE,EAAE+S,UAAU,CAAC/S,EADkB;AAEjCuT,0BAAY,EAAGR,UAAU,CAACQ,YAFO;AAGjChB,qBAAO,EAAEQ,UAAU,CAACA,UAAX,CAAsBR,OAHE;AAIjC5H,sBAAQ,EAAEoI,UAAU,CAACpI,QAJY;AAKjC2iB,4BAAc,EAAG,IAAI1tB,IAAJ,EALgB;AAMjC6S,4BAAc,EAAGM,UAAU,CAACA,UAAX,CAAsBN,cANN;AAOjCiB,oBAAM,EAAG,KAAK/S,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAPH;AAQjCqD,qBAAO,EAAE0P,UAAU,CAACA,UAAX,CAAsB1P,OARE;AASjCuH,mBAAK,EAAEmI,UAAU,CAACA,UAAX,CAAsBnI,KATI;AAUjCyH,mBAAK,EAAEU,UAAU,CAACA,UAAX,CAAsBV,KAVI;AAWjClH,mBAAK,EAAE4H,UAAU,CAACA,UAAX,CAAsB5H,KAXI;AAYjC4T,mBAAK,EAAE,OAAAhM,UAAU,CAACA,UAAX,CAAsB2T,OAAtB,MAA6B,IAA7B,IAA6B,aAA7B,GAA6B,MAA7B,GAA6B,GAAE1N,SAA/B,IAA2C,GAA3C,IAA8C,MAAGjG,UAAU,CAACA,UAAX,CAAsB2T,OAAzB,MAAgC,IAAhC,IAAgC,aAAhC,GAAgC,MAAhC,GAAgC,GAAEzN,QAAhF,CAZ0B;AAajC3G,oBAAM,EAAES,UAAU,CAACA,UAAX,CAAsBT,MAbG;AAcjCE,0BAAY,EAAEO,UAAU,CAACA,UAAX,CAAsBP;AAdH,aAAnC;AAgBD;;;qCAEO;AAAA;;AACN,gBAAI,KAAKT,KAAL,CAAW7N,MAAX,GAAoB,CAAxB,EAA0B;AACxB,kBAAM8Q,YAAY,GAAI,KAAKjD,KAAL,CAAW,CAAX,CAAtB;AACA,kBAAMkD,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,sBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,YAAxB,EAAsCA,YAAY,CAACnP,IAAnD;AACA,mBAAKgM,YAAL,CAAkBuB,UAAlB,CAA6B6B,QAA7B,EAAuCnU,SAAvC,CAAiD,UAAAC,CAAC,EAAI;AACpD,uBAAI,CAACysB,MAAL,CAAYzsB,CAAC,CAACsS,QAAd;;AACA,uBAAI,CAAC+yB,iBAAL;AACD,eAHD;AAID;AACF;;;iCAEMzO,Q,EAAQ;AAAA;;AACb,gBAAMlK,kBAAkB,GAAG;AACzBztB,gBAAE,EAAE,KAAKsH,CAAL,CAAOtH,EAAP,CAAUuH,KADW;AAEzBgM,0BAAY,EAAE,KAAKjM,CAAL,CAAOiM,YAAP,CAAoBhM,KAFT;AAGzBsf,oBAAM,EAAE,CAHiB;AAIzByG,4BAAc,EAAE,IAAI1tB,IAAJ,EAJS;AAKzB2tB,4BAAc,EAAEoK,QALS;AAMzBhI,uBAAS,EAAE,KAAKroB,CAAL,CAAOoM,MAAP,CAAcnM,KANA;AAOzBoD,sBAAQ,EAAE,KAAKrD,CAAL,CAAOqD,QAAP,CAAgBpD;AAPD,aAA3B;AASA,iBAAKqK,aAAL,CAAmB8b,wBAAnB,CAA4CD,kBAA5C,EAAgE3sB,SAAhE,CAA0E,UAAAC,CAAC,EAAI;AAAC,kBAAIA,CAAC,CAACf,EAAF,GAAO,CAAX,EAAa;AAC3F,uBAAI,CAAC2tB,SAAL,GAAiB,IAAjB;AACD;AAAC,aAFF,EAEI,UAACprB,KAAD;AAAA,qBAAW,OAAI,CAACorB,SAAL,GAAiB,KAA5B;AAAA,aAFJ;AAGD;;;qCAEO;AACN,iBAAKrS,YAAL,GAAoB,IAApB;AACD;;;oCAES+e,I,EAAI;AACZ,gBAAIA,IAAI,KAAK,MAAb,EAAoB;AAClB,mBAAKJ,KAAL,GAAa,mCAAM,CAAC,KAAKA,KAAN,CAAN,CAAmBK,QAAnB,CAA4B,GAA5B,EAAiC,OAAjC,EAA0CC,MAA1C,EAAb;AACD,aAFD,MAGI;AACF,mBAAKN,KAAL,GAAa,mCAAM,CAAC,KAAKA,KAAN,CAAN,CAAmBzsB,GAAnB,CAAuB,GAAvB,EAA4B,OAA5B,EAAqC+sB,MAArC,EAAb;AACD;;AACD,iBAAK6L,iBAAL;AACD;;;kCAEOr0B,K,EAAO;AACb,iBAAKe,gBAAL,CAAsBf,KAAtB;AACD;;;2CAEgBA,K,EAAmB;AAAA;;AAAA,wDACfA,KADe;AAAA;;AAAA;AAClC,qEAA0B;AAAA,oBAAf/L,IAAe;AACxBA,oBAAI,CAAC2N,QAAL,GAAgB,CAAhB;AACA,qBAAK5B,KAAL,CAAW1R,IAAX,CAAgB2F,IAAhB;AACD;AAJiC;AAAA;AAAA;AAAA;AAAA;;AAKlC,gBAAM4N,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAM,CAACE,MAAP,GAAgB,UAACzL,CAAD,EAAO;AACrB,qBAAI,CAACm+B,gBAAL,GAAwBn+B,CAAC,CAAC2L,MAAF,CAASrD,MAAjC;AACD,aAFD;;AAGAiD,kBAAM,CAACK,aAAP,CAAqBlC,KAAK,CAAC,CAAD,CAA1B;AACA,iBAAKmC,oBAAL,CAA0B,CAA1B;AACD;;;+CAEoBpU,K,EAAe;AAAA;;AAClCqU,sBAAU,CAAC,YAAM;AACf,kBAAIrU,KAAK,KAAK,OAAI,CAACiS,KAAL,CAAW7N,MAAzB,EAAiC;AAC/B;AACD,eAFD,MAEO;AACL,oBAAMkQ,gBAAgB,GAAGC,WAAW,CAAC,YAAM;AACzC,sBAAI,OAAI,CAACtC,KAAL,CAAWjS,KAAX,EAAkB6T,QAAlB,KAA+B,GAAnC,EAAwC;AACtCW,iCAAa,CAACF,gBAAD,CAAb;;AACA,2BAAI,CAACF,oBAAL,CAA0BpU,KAAK,GAAG,CAAlC;AACD,mBAHD,MAGO;AACL,2BAAI,CAACiS,KAAL,CAAWjS,KAAX,EAAkB6T,QAAlB,IAA8B,CAA9B;AACD;AACF,iBAPmC,EAOjC,GAPiC,CAApC;AAQD;AACF,aAbS,EAaP,IAbO,CAAV;AAcD;;;sCAEWY,K,EAAOC,Q,EAAU;AAC3B,gBAAID,KAAK,KAAK,CAAd,EAAiB;AACf,qBAAO,SAAP;AACD;;AACD,gBAAME,CAAC,GAAG,IAAV;AACA,gBAAMC,EAAE,GAAGF,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoBA,QAAQ,IAAI,CAA3C;AACA,gBAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AACA,gBAAMlQ,CAAC,GAAG8K,IAAI,CAACqF,KAAL,CAAWrF,IAAI,CAAClN,GAAL,CAASkS,KAAT,IAAkBhF,IAAI,CAAClN,GAAL,CAASoS,CAAT,CAA7B,CAAV;AACA,mBAAOI,UAAU,CAAC,CAACN,KAAK,GAAGhF,IAAI,CAACuF,GAAL,CAASL,CAAT,EAAYhQ,CAAZ,CAAT,EAAyBsQ,OAAzB,CAAiCL,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAAClQ,CAAD,CAArE;AACD;;;sCAEWsN,K,EAAO;AACjB,iBAAKe,gBAAL,CAAsBf,KAAtB;AACD;;;wCAEU;AACT,iBAAKA,KAAL,GAAa,EAAb;AACA,iBAAKs0B,kBAAL,CAAwB99B,QAAxB,CAAiCglB,cAAjC,CAAgDpS,UAAhD,CAA2D,EAA3D;AACD;;;8BAxHO;AAAE,mBAAO,KAAKkrB,kBAAL,CAAwB99B,QAA/B;AAA0C;;;;;;;yBAzGzC29B,2B,EAA2B,8I,EAAA,wJ,EAAA,0J,EAAA,gJ,EAAA,2H;AAAA,O;;;cAA3BA,2B;AAA2B,gD;AAAA,iB;AAAA,e;AAAA,qhF;AAAA;AAAA;ACbxC;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEK;;AACP;;AACA;;AASA;;AACF;;AACF;;AACA;;AACE;;AAgFA;;AA8DF;;AACF;;AACF;;;;AAjKa;;AAAA;;AAIA;;AAAA;;AAYH;;AAAA;;AACsE;;AAAA;;AAgFnD;;AAAA;;;;;;;;;;wEDzFhBA,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACT5mC,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAK6B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBkB;;AACE;;AACF;;;;;;AAF6C;;AAC3C;;AAAA;;;;;;AAcJ;;AAAoD;;AAAa;;;;;;AACjE;;AACE;;AACA;;AACF;;;;;;AAF8B;;AAAA;;AAC5B;;AAAA;;;;;;AAIF;;AAAoD;;AAAO;;;;;;AAC3D;;AAAsD;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGtD;;AAAoD;;AAAc;;;;;;AAClE;;AAAwD;;;;;;AACxD;;;;;;AADwD;;AAAA;;;;;;AAIxD;;AAAoD;;AAAc;;;;;;AAClE;;AAA4D;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAG5D;;AAAoD;;AAAO;;;;;;AAIvD;;AACE;;AAAA;;AAEE;;AAEF;;AACA;;AACF;;;;;;AACA;;AACE;;AAAA;;AAEE;;AAEF;;AACA;;AACF;;;;;;AAlBJ;;AACE;;AAEE;;AAQA;;AAQF;;AACF;;;;;;AAlBI;;AAAA;;AACG;;AAAA;;AAQA;;AAAA;;;;;;AAYP;;AAAoC;;AAAO;;;;;;AAC3C;;AAAqD;;;;AAAwC;;;;;;AAAxC;;AAAA;;;;;;AAUvD;;;;;;AACA;;;;;;;;UDhFDinC,iB;AAEX,mCAAoBrnB,OAApB,EACoBze,WADpB,EACqD;AAAA;;AADjC,eAAAye,OAAA,GAAAA,OAAA;AACA,eAAAze,WAAA,GAAAA,WAAA;AAEpB,eAAAsiB,WAAA,GAAc,CACZ;AAACjjB,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE;AAAf,WADY,EAEZ;AAACvH,cAAE,EAAE,CAAL;AAAQuH,iBAAK,EAAE;AAAf,WAFY,CAAd;AAMA,eAAAma,gBAAA,GAA6B,CAAC,MAAD,EAAS,QAAT,EAAmB,YAAnB,EAAiC,UAAjC,EAA6C,QAA7C,EAAuD,QAAvD,CAA7B;AACA,eAAA2B,aAAA,GAAgB,CAAhB;AATwD;;;;qCAchD;AACN,iBAAK1B,UAAL,GAAkB,IAAI,0EAAJ,EAAlB;AACA,iBAAK+kB,eAAL;AACA,iBAAK/kB,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;4CAEiB;AAChB,iBAAKH,UAAL,CAAgBE,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKF,UAAL,CAAgBG,IAAhB,GAAuB,KAAKA,IAA5B;AACC;;;4CAEY;AAAA;;AACb,iBAAK1C,OAAL,CAAaunB,qBAAb,CAAmC,KAAKhmC,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA9D,EACCc,SADD,CACW,UAAAC,CAAC,EAAI;AAAEqB,qBAAO,CAACC,GAAR,CAAYtB,CAAZ;AAAgB,qBAAI,CAAC4gB,UAAL,CAAgBphB,IAAhB,GAAuBQ,CAAvB;AAA0B,qBAAOA,CAAP;AAAW,aADvE;AAED;;;sCAEWqC,K,EAAK;;;AACf,gBAAM8e,WAAW,GAAI9e,KAAK,CAAC4Q,MAAN,CAAkCzM,KAAvD;AACA,iBAAKoa,UAAL,CAAgBxT,MAAhB,GAAyB+T,WAAW,CAACC,IAAZ,GAAmBrC,WAAnB,EAAzB;;AAEA,gBAAI,CAAJ,KAAI,KAAK6B,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEE,SAArB,EAAgC;AAC9B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BO,SAA1B;AACD;AACF;;;yCAEcJ,G,EAAG,CACjB;;;;;;;yBA5CUykB,iB,EAAiB,gJ,EAAA,wJ;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;sEAcjB,wE,EAAc,I;;sEACd,8D,EAAS,I;;;;;;;;;;;;;;;AC5BtB;;AACE;;AACE;;AACE;;AAAgB;;AAAW;;AAC7B;;AACA;;AACE;;AACE;;AACE;;AAAgB;;AAAa;;AAC7B;;AAAmB;;AAA0C;;AAC7D;;AACE;;AACE;;AACE;;AAA4B;AAAA,qBAAS,IAAApkB,WAAA,QAAT;AAA4B,aAA5B;;AAA5B;;AACA;;AACE;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAY;AAAA;AAAA;;AACV;;AAGF;;AACF;;AACF;;AACA;;AACG;;AAA6D;;AAAQ;;AACxE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACA;;AAIF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAqBF;;AACA;;AACE;;AACA;;AACF;;AASA;;AACA;;AACF;;AACA;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACF;;;;AA/F6B;;AAAA;;AAYD;;AAAA;;AACE;;AAAA;;AAaA;;AAAA;;AAyDA;;AAAA;;AACP;;AAAA;;AAEI;;AAAA;;;;;;;;;;wEDlFdokB,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTnnC,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;AAccqiB,mBAAS,EAAE,CAAF;kBAAlD,uDAAkD;mBAAxC,wE,EAAc;AAAC,wBAAQ;AAAT,a;AAA0B,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAxC,uDAAwC;mBAA9B,8D,EAAS;AAAC,wBAAQ;AAAT,a;AAAqB,WAAE;;;;;;;;;;;;;;;;;;;AE5B7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCA;;AAA8C;;AAAW;;;;;;AAAX;;AAAA;;;;UDejC8kB,a;AAkBX,+BAAoBvgC,WAApB,EACoB1F,WADpB,EAEoBoJ,WAFpB,EAGoBC,UAHpB,EAGmD;AAAA;;AAH/B,eAAA3D,WAAA,GAAAA,WAAA;AACA,eAAA1F,WAAA,GAAAA,WAAA;AACA,eAAAoJ,WAAA,GAAAA,WAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAlBf,eAAAvD,SAAA,GAAY,KAAZ;AAEP,eAAAyD,SAAA,GAA6B,EAA7B;AAMA,eAAA28B,WAAA,GAAc,CACZ;AAAC7gB,iBAAK,EAAE,KAAR;AAAezb,gBAAI,EAAE;AAArB,WADY,EAEZ;AAACyb,iBAAK,EAAE,QAAR;AAAkBzb,gBAAI,EAAE;AAAxB,WAFY,EAGZ;AAACyb,iBAAK,EAAE,MAAR;AAAgBzb,gBAAI,EAAE;AAAtB,WAHY,EAIZ;AAACyb,iBAAK,EAAE,MAAR;AAAgBzb,gBAAI,EAAE;AAAtB,WAJY,CAAd;AAUwD;;;;qCAE9C;AACN,iBAAKkpB,QAAL;AACD;;;qCAEO;AAAA;;AACN,iBAAK1pB,WAAL,CAAiBglB,iBAAjB,CAAmC,KAAKpuB,WAAL,CAAiBmG,SAAjB,CAA2B9G,EAA9D,EAAkEc,SAAlE,CACE,UAAAC,CAAC;AAAA,qBAAK,OAAI,CAACsd,KAAL,GAAatd,CAAlB;AAAA,aADH,EACyB,UAACwB,KAAD;AAAA,qBAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAX;AAAA,aADzB;AAGD;;;0CAEY;AACX,gBAAMyK,KAAK,GAAG,SAARA,KAAQ,CAACC,gBAAD,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAwC;AACpD,kBAAMC,aAAa,GAAG,gDAAgB,CAAhB,EAAmB,KAAnB,EAA0BC,EAA1B,CAA6BF,MAA7B,CAAtB;AACA,kBAAMG,UAAU,GAAG,EAAnB;AACA,kBAAMC,eAAe,GAAG,mCAAM,CAACN,gBAAD,EAAmB,OAAnB,CAA9B;;AACA,mBAAK,IAAIxI,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI2I,aAArB,EAAoC3I,CAAC,IAAIyI,QAAzC,EAAmD;AACjDK,+BAAe,CAACC,GAAhB,CAAoB/I,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcyI,QAAlC,EAA4CC,MAA5C;AACAG,0BAAU,CAACjN,IAAX,CAAgBkN,eAAe,CAACE,MAAhB,CAAuB,SAAvB,CAAhB;AACD;;AACD,qBAAOH,UAAP;AACD,aATD;;AAUA,iBAAKI,UAAL,GAAkBV,KAAK,CAAC,OAAD,EAAU,EAAV,EAAc,SAAd,CAAvB;AACD;;;qCAEUW,G,EAAG;AACZ,mBAAOA,GAAG,GAAGA,GAAG,CAACpB,YAAP,GAAsB,EAAhC;AACD;;;qCAIU;AACT,iBAAK9F,SAAL,GAAiB,IAAjB;AACD;;;8BAJsB;AAAE,mBAAO,KAAKiE,QAAL,CAAcnC,QAArB;AAAgC;;;;;;;yBAnD9Cq+B,a,EAAa,2H,EAAA,wJ,EAAA,0I,EAAA,sJ;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA,sF;AAAA;AAAA;ACf1B;;;;AAA8B;;;;;;;;;wEDejBA,a,EAAa;gBALzB,uDAKyB;iBALf;AACTtnC,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUU;;AAAuC;;AAAmB;;;;;;AAD5D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AASL;;AAAwC;;AAAmB;;;;;;AAD7D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AASL;;AAA2C;;AAAuB;;;;;;AADpE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAWL;;AAAqC;;AAAsB;;;;;;AAD7D;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAWL;;AAAmC;;AAAoB;;;;;;AADzD;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;;;;;UDzCFsnC,mB;AAIX,qCAAmB/qB,SAAnB,EAC4Cxb,IAD5C,EAEoB8F,WAFpB,EAE8C;AAAA;;AAF3B,eAAA0V,SAAA,GAAAA,SAAA;AACyB,eAAAxb,IAAA,GAAAA,IAAA;AACxB,eAAA8F,WAAA,GAAAA,WAAA;AAA6B;;;;qCAEzC;;;AACNjE,mBAAO,CAACC,GAAR,CAAY,KAAK9B,IAAjB;AACA,iBAAK2wB,gBAAL,GAAwB,KAAK7qB,WAAL,CAAiBY,KAAjB,CAAuB;AAC7CkqB,qBAAO,EAAE,CAAC,KAAK5wB,IAAL,CAAU6C,KAAV,CAAgBwH,KAAjB,EAAwB,0DAAWzD,QAAnC,CADoC;AAE7CnC,sBAAQ,EAAE,CAAC,CAAD,WAAC,KAAKzE,IAAL,CAAU6C,KAAX,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEwuB,IAAjB,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAErlB,YAAxB,EAAsC,0DAAWpF,QAAjD,CAFmC;AAG7CiqB,yBAAW,EAAE,CAAC,CAAD,WAAC,KAAK7wB,IAAL,CAAU6C,KAAX,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEwuB,IAAjB,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAE/mB,iBAAxB,EAA2C,0DAAW1D,QAAtD,CAHgC;AAI7CkqB,sBAAQ,EAAE,CAAC,eAAD,EAAkB,0DAAWlqB,QAA7B,CAJmC;AAK7CmqB,mBAAK,EAAE,CAAC,KAAK/wB,IAAL,CAAU6C,KAAV,CAAgBkuB,KAAjB,EAAwB,0DAAWnqB,QAAnC,CALsC;AAM7CoqB,iBAAG,EAAE,CAAC,KAAKhxB,IAAL,CAAU6C,KAAV,CAAgBmuB,GAAjB,EAAsB,0DAAWpqB,QAAjC,CANwC;AAO7CqqB,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWrqB,QAAhB,CAPiC;AAQ7CsqB,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWtqB,QAAhB,CARkC;AAS7CuqB,uBAAS,EAAE,CAAC,EAAD,CATkC;AAU7ClhB,mBAAK,EAAE,CAAC,EAAD;AAVsC,aAAvB,CAAxB;AAYA,iBAAK0gB,gBAAL,CAAsB6V,OAAtB;AACD;;;qCAMO;AACN,iBAAKhrB,SAAL,CAAeoQ,KAAf,CAAqB,KAAK7kB,CAA1B;AACD;;;sCAEQ;AACP,iBAAKyU,SAAL,CAAeoQ,KAAf;AACD;;;8BAVO;AACN,mBAAO,KAAK+E,gBAAL,CAAsB3oB,QAA7B;AACD;;;;;;;yBA3BUu+B,mB,EAAmB,sI,EAAA,gEAKV,wEALU,C,EAKK,2H;AAAA,O;;;cALxBA,mB;AAAmB,uC;AAAA,iB;AAAA,gB;AAAA,08B;AAAA;AAAA;ACThC;;AAAqB;;AAAuB;;AAC5C;;AACE;;AAAqC;AAAA,qBAAY,IAAAh2B,QAAA,EAAZ;AAAsB,aAAtB;;AACnC;;AAEE;;AACE;;AAAyB;;AAAO;;AAChC;;AAEA;;AAGF;;AAEA;;AACE;;AAA0B;;AAAQ;;AAClC;;AAEA;;AAGF;;AAEA;;AACE;;AAA6B;;AAAW;;AACxC;;AAEA;;AAGF;;AAEA;;AACE;;AAAuB;;AAAU;;AACjC;;AAEE;;AACA;;AACF;;AAGF;;AAEA;;AACE;;AAA6B;;AAAQ;;AACrC;;AAEE;;AACA;;AACF;;AAGF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA+C;AAAA,qBAAS,IAAAub,SAAA,EAAT;AAAoB,aAApB;;AAAsB;;AAAS;;AAC9E;;AAA2D;AAAA,qBAAS,IAAAvb,QAAA,EAAT;AAAmB,aAAnB;;AAAqC;;AAAE;;AACpG;;AAEF;;;;;;;;AA9DqB;;AAAA;;AAEb;;AAAA;;AAME;;AAAA;;AACG;;AAAA;;AAQH;;AAAA;;AACG;;AAAA;;AAQH;;AAAA;;AACG;;AAAA;;AAQH;;AAAA,6LAAyD,eAAzD,EAAyD,GAAzD;;AACiC;;AAAA;;AAE9B;;AAAA;;AAQH;;AAAA,2LAAuD,eAAvD,EAAuD,GAAvD;;AACiC;;AAAA;;AAE9B;;AAAA;;;;;;;;;wEDxCAg2B,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTxnC,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;oBAKjB,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AEdtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAY+gB,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBymB,eAAzB,CAAyC,yDAAzC,WACS,UAAA9jC,GAAG;AAAA,eAAId,OAAO,CAACG,KAAR,CAAcW,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;;;ACVA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa+jC,iB;AAEX,mCAAoB91B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;yCAE1B+1B,Q,EAAQ;AACrB,gBAAMzxB,OAAO,GAAGyxB,QAAQ,GACxB;AAAExxB,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2B41B,QAA3B;AAAV,aADwB,GAC0B,EADlD;AAEA,mBAAO,KAAK/1B,IAAL,CAAUnF,GAAV,CAAqB,yEAAYwF,MAAZ,yBAArB,EAAkEiE,OAAlE,CAAP;AACD;;;+CAEoByxB,Q,EAAQ;AAC3B,gBAAMzxB,OAAO,GAAGyxB,QAAQ,GACxB;AAAExxB,oBAAM,EAAE,IAAI,+DAAJ,GAAiBpE,GAAjB,CAAqB,IAArB,EAA2B41B,QAA3B;AAAV,aADwB,GAC0B,EADlD;AAEA,mBAAO,KAAK/1B,IAAL,CAAUnF,GAAV,CAAqB,yEAAYwF,MAAZ,wBAArB,EAAiEiE,OAAjE,CAAP;AACD;;;yCAEc0xB,W,EAAyB;AACtC,mBAAO,KAAKh2B,IAAL,CAAUwE,IAAV,CAAe,yEAAYnE,MAAZ,gBAAf,EAAmD21B,WAAnD,CAAP;AACD;;;2CAEgBtY,U,EAAU;AACzB,mBAAO,KAAK1d,IAAL,CAAUI,GAAV,CAAc,yEAAYC,MAAZ,gBAAd,EAAkDqd,UAAlD,EAA8D;AACnEjZ,6BAAe,EAAE;AADkD,aAA9D,CAAP;AAGD;;;;;;;yBAxBUqxB,iB,EAAiB,uH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVzhC,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACAA;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA,mBAAiB,YAAjB;AAAiC,WAAjC;;AAC9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBM;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAM;;AAC9B;;AAAa;;AAAY;;AAC3B;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAyB;;AAAW;;AACpC;;AAAa;;AAAU;;AACzB;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAe;;AACvC;;AAAa;;AAAU;;AACzB;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAuB;;AAAQ;;AAC/B;;AAAa;;AAAc;;AAC7B;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAU;;AAClC;;AAAa;;AAAe;;AAC9B;;AACF;;;;AA7B4B;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAM5B;;AACE;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAM;;AAC9B;;AAAa;;AAAY;;AAC3B;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAW;;AACnC;;AAAa;;AAAgB;;AAC/B;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAe;;AACvC;;AAAa;;AAAU;;AACzB;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAM;;AAC9B;;AAAa;;AAAS;;AACxB;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAgB;;AACxC;;AAAa;;AAAW;;AAC1B;;AACA;;AACA;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEE;;AAAwB;;AAAwB;;AAChD;;AAAa;;AAAY;;AAC3B;;AACF;;;;AAnC4B;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;;;;;AAS5B;;AACE;;AACE;;AACA;;AAA2B;;AAAc;;AACzC;;AAAgC;;AAAsC;;AACxE;;AACF;;;;;;;;;;UDrFO4hC,mB;AASX,qCAAmBzmC,WAAnB,EAA4D2F,KAA5D,EAA2FC,MAA3F,EAA2G;AAAA;;AAAA;;AAAxF,eAAA5F,WAAA,GAAAA,WAAA;AAAyC,eAAA2F,KAAA,GAAAA,KAAA;AAA+B,eAAAC,MAAA,GAAAA,MAAA;AAK3F,eAAA8gC,WAAA,GAAc,CACZ;AAAC/gC,iBAAK,EAAG,WAAT;AAAsB6L,gBAAI,EAAE,OAA5B;AAAqCvH,iBAAK,EAAE;AAA5C,WADY,EAEZ;AAACtE,iBAAK,EAAG,QAAT;AAAmB6L,gBAAI,EAAE,YAAzB;AAAuCvH,iBAAK,EAAE;AAA9C,WAFY,EAGZ;AAACtE,iBAAK,EAAG,SAAT;AAAoB6L,gBAAI,EAAE,gBAA1B;AAA4CvH,iBAAK,EAAE;AAAnD,WAHY,EAIZ;AAACtE,iBAAK,EAAG,UAAT;AAAqB6L,gBAAI,EAAE,iBAA3B;AAA8CvH,iBAAK,EAAE;AAArD,WAJY,EAKZ;AAACtE,iBAAK,EAAG,SAAT;AAAoB6L,gBAAI,EAAE,yBAA1B;AAAqDvH,iBAAK,EAAE;AAA5D,WALY,CAAd;AAQA,eAAA08B,SAAA,GAAY,CACV;AAAChhC,iBAAK,EAAG,WAAT;AAAsB6L,gBAAI,EAAE,OAA5B;AAAqCvH,iBAAK,EAAE;AAA5C,WADU,EAEV;AAACtE,iBAAK,EAAG,OAAT;AAAkB6L,gBAAI,EAAE,YAAxB;AAAsCvH,iBAAK,EAAE;AAA7C,WAFU,EAGV;AAACtE,iBAAK,EAAG,SAAT;AAAoB6L,gBAAI,EAAE,gBAA1B;AAA4CvH,iBAAK,EAAE;AAAnD,WAHU,EAIV;AAACtE,iBAAK,EAAG,UAAT;AAAqB6L,gBAAI,EAAE,iBAA3B;AAA8CvH,iBAAK,EAAE;AAArD,WAJU,EAKV;AAACtE,iBAAK,EAAI,SAAV;AAAqB6L,gBAAI,EAAE,yBAA3B;AAAsDvH,iBAAK,EAAE;AAA7D,WALU,CAAZ;AAZE,eAAKjK,WAAL,CAAiBE,IAAjB,CAAsBC,SAAtB,CAAgC,UAAAC,CAAC;AAAA,mBAAI,OAAI,CAACF,IAAL,GAAYE,CAAhB;AAAA,WAAjC;AACA,eAAKJ,WAAL,CAAiBm6B,SAAjB,CAA2Bh6B,SAA3B,CAAqC,UAAAC,CAAC,EAAI;AAAC,mBAAI,CAACwmC,SAAL,GAAiBxmC,CAAjB;AAAoBqB,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACklC,SAAjB;AAA8B,WAA7F;AACA;;;;qCAkBM;AACN,iBAAKC,QAAL,GAAgB,KAAKC,eAAL,GAAuB,IAAvB,GAA8B,KAA9C;AACD;;;4CAEc;AACb,mBAAO,KAAK5mC,IAAZ;AACD;;;mCAEQ6mC,I,EAAMC,O,EAAO;AACpBA,mBAAO,CAACxb,KAAR;AACA/pB,mBAAO,CAACC,GAAR,CAAYqlC,IAAZ;AACAtlC,mBAAO,CAACC,GAAR,CAAY,KAAKiE,KAAjB;AACA,iBAAKC,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,IAAD,EAAO2gC,IAAI,CAACphC,KAAZ,CAArB,EAAyC;AAAEshC,wBAAU,EAAE,KAAKthC;AAAnB,aAAzC;AACD;;;;;;;yBA3CU8gC,mB,EAAmB,wJ,EAAA,+H,EAAA,uH;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;;;;;;ACXhC;;AAEA;;AACE;;AAYE;;AACE;;AACA;;AAgCA;;AAsCA;;AAEA;;AACA;;AAOA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACF;;AACA;;AACA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AACF;;AACF;;;;;;AArHoB;;AAGwC;;AAAA;;AAaxC;;AAAA;;AACA;;AAAA;;AAgCqB;;AAAA;;AAyC+B;;AAAA;;AAWjB;;AAAA;;;;;;;;;;wED1F1CA,mB,EAAmB;gBAN/B,uDAM+B;iBANrB;AACT9nC,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD,CAHF;AAIT6lB,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMqB,U;;;;;;;;;AAM9BuiB,gBAAM,EAAE,CAAF;kBADL,uDACK;mBADK,Q,EAAU;AAAE,wBAAQ;AAAV,a;AACf,WAAE;;;;;;;;;;;;;;;;;AEjBV,eAASC,wBAAT,CAAkC5c,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOoN,OAAO,CAAC/M,OAAR,GAAkBrpB,IAAlB,CAAuB,YAAW;AACxC,cAAImG,CAAC,GAAG,IAAIgV,KAAJ,CAAU,yBAAyB6N,GAAzB,GAA+B,GAAzC,CAAR;AACA7iB,WAAC,CAACkC,IAAF,GAAS,kBAAT;AACA,gBAAMlC,CAAN;AACA,SAJM,CAAP;AAKA;;AACDy/B,8BAAwB,CAACvkC,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAukC,8BAAwB,CAACvc,OAAzB,GAAmCuc,wBAAnC;AACAtc,YAAM,CAACC,OAAP,GAAiBqc,wBAAjB;AACAA,8BAAwB,CAAC9nC,EAAzB,GAA8B,MAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa+nC,oB;AAEX,wCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,oB;AAAoB,O;;;cAApBA,oB;AAAoB,wC;AAAA,iB;AAAA,e;AAAA,qlD;AAAA;AAAA;ACPjC;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAY;;AAChC;;AAAwB;;AACD;;AACvB;;AAAoB;;AAAiE;;AACrF;;AAA4D;;AAAM;;AAAW;;AAAO;;AACtF;;AACA;;AACE;;AAGF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAA2B;;AAAoB;;AAC/C;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAkB;;AAAK;;AACvB;;AAAsB;;AACJ;;AAClB;;AAAwB;;AAAM;;AAChC;;AACA;;AACE;;AAAgB;;AAAG;;AACnB;;AACE;;AAEA;;AAEF;;AACA;;AAAsB;;AACJ;;AAClB;;AAA4B;;AAAM;;AAClC;;AAAA;;AACE;;AACF;;AACF;;AACA;;AAAA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAAsB;;AACJ;;AAClB;;AAAwB;;AAAM;;AAChC;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAAU;;AACb;;AAAG;;AAAqB;;AACxB;;AAAG;;AAAM;;AACX;;AACA;;AACE;;AAAG;;AAAgB;;AACnB;;AAAG;;AAAsB;;AACzB;;AAAG;;AAAsB;;AAC3B;;AACA;;AACE;;AAAG;;AAAiB;;AACpB;;AAAG;;AAAe;;AAClB;;AAAG;;AAAiB;;AACtB;;AACF;;AACF;;AACF;;AACF;;AACA;;;;;;;;;wEDtEaA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTzoC,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAcU;;AACE;;;;AACF;;;;;;AAFoD;;AAClD;;AAAA;;;;UDZDwoC,kB;AAUX,oCAAmBjsB,SAAnB,EAC4Cxb,IAD5C,EAEoB8F,WAFpB,EAE8C;AAAA;;AAF3B,eAAA0V,SAAA,GAAAA,SAAA;AACyB,eAAAxb,IAAA,GAAAA,IAAA;AACxB,eAAA8F,WAAA,GAAAA,WAAA;AAVpB,eAAA4hC,cAAA,GAAiB,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,oBAAjD,CAAjB;AAIA,eAAAlrB,MAAA,GAAS,EAAT;AAEO,eAAAtW,SAAA,GAAY,KAAZ;AAI0C;;;;qCAEzC;AACN,iBAAK6pB,QAAL,GAAgB,IAAI1wB,IAAJ,EAAhB;AAEA,iBAAKsoC,aAAL,GAAqB,KAAK7hC,WAAL,CAAiBY,KAAjB,CAAuB;AAC1CmR,kBAAI,EAAE,CAAC,IAAD,EAAO,0DAAWjR,QAAlB,CADoC;AAE1C9D,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW8D,QAAhB,CAFiC;AAG1CuV,qBAAO,EAAE,CAAC,EAAD;AAHiC,aAAvB,CAArB;AAKD;;;qCAEO;AACN,iBAAKjW,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKyhC,aAAL,CAAmBngC,KAAvB,EAA8B;AAC5B,kBAAMogC,OAAO,GAAgB;AAC1BC,uBAAO,EAAE,KAAK7nC,IAAL,CAAU4e,SAAV,CAAoBnf,EADH;AAE1BL,oBAAI,EAAE,KAAK2H,CAAL,CAAO8Q,IAAP,CAAY7Q,KAAZ,CAAkBuD,SAFE;AAG1B6kB,yBAAS,EAAG,KAAKpvB,IAAL,CAAU6e,OAAV,CAAkBpf,EAHJ;AAI1BqoC,oBAAI,EAAE,KAAK/gC,CAAL,CAAO8Q,IAAP,CAAY7Q,KAAZ,CAAkBoD,QAJE;AAK1BtH,uBAAO,EAAG,KAAKiE,CAAL,CAAOjE,OAAP,CAAekE,KALC;AAM1BmV,uBAAO,EAAG,KAAKpV,CAAL,CAAOoV,OAAP,CAAenV;AANC,eAA7B;AAQA,mBAAKwU,SAAL,CAAeoQ,KAAf,CAAqBgc,OAArB;AACA;AACH;;;oCAIM;AACL,iBAAKpsB,SAAL,CAAeoQ,KAAf,CAAqB,IAArB;AACD;;;8BAJO;AAAE,mBAAO,KAAK+b,aAAL,CAAmB3/B,QAA1B;AAAqC;;;;;;;yBAvCpCy/B,kB,EAAkB,sI,EAAA,gEAWT,wEAXS,C,EAWM,2H;AAAA,O;;;cAXxBA,kB;AAAkB,sC;AAAA,iB;AAAA,e;AAAA,gtB;AAAA;AAAA;ACV/B;;AACE;;AACA;;AAGA;;AAGA;;AAAO;;AACT;;AACI;;AAAkC;AAAA,qBAAU,IAAAl3B,QAAA,EAAV;AAAoB,aAApB;;AACpC;;AACI;;AACI;;AACA;;AAAM;;;;AAAmC;;AAC7C;;AACF;;AACE;;AACI;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AAKJ;;AACF;;AAeA;;AACI;;AACI;;AAAW;;AAAO;;AAClB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAkB;;AAC7B;;AAA+E;;AAAA;;AACnF;;AACJ;;AACF;;AACA;;AACE;;AACE;;AAAoE;AAAA,qBAAS,IAAAA,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAE;;AAC3F;;AAAsD;AAAA,qBAAS,IAAAw3B,OAAA,EAAT;AAAkB,aAAlB;;AAAoC;;AAAM;;AAClG;;AACJ;;AACA;;AACA;;;;AAhEQ;;AAAA;;AACH;;AAAA;;AAGA;;AAAA;;AAKK;;AAAA;;AAIM;;AAAA;;AAOQ;;AAAA;;;;;;;;;;wEDXXN,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT1oC,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;oBAWhB,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AErBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuBY;;AAAwC;;AAAyB;;;;;;AACjE;;AAAqC;;AAAoC;;;;;;AAF3E;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAcL;;AAAwC;;AAAyB;;;;;;AADnE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAQH;;;;;;AAKJ;;AAAqE;;AAAS;;;;;;AAAT;;AAAA;;;;;;;;;;;;;;;;;;UDxClE+oC,sB;AAEX,wCAAoB3U,EAApB,EAA6CttB,KAA7C,EACoBC,MADpB,EAC4C5F,WAD5C,EAC6E;AAAA;;AADzD,eAAAizB,EAAA,GAAAA,EAAA;AAAyB,eAAAttB,KAAA,GAAAA,KAAA;AACzB,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAA5F,WAAA,GAAAA,WAAA;;AAC9B,cAAI,KAAKA,WAAL,CAAiBmG,SAArB,EAAgC;AAC9B,iBAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,KAAD,CAArB;AACD;AACF;;;;qCASL;AACN,iBAAKC,SAAL,GAAiB,KAAK4sB,EAAL,CAAQ3sB,KAAR,CAAc;AAC7BC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADmB;AAE7BC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAFmB,aAAd,CAAjB;AAKA,iBAAKM,SAAL,GAAiB,KAAKnB,KAAL,CAAWoB,QAAX,CAAoBC,WAApB,CAAgCF,SAAhC,IAA6C,KAA9D;AACD;;;qCAMO;AAAA;;AACN,iBAAKhB,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKO,SAAL,CAAeY,OAAnB,EAA4B;AAC1B;AACD;;AAED,iBAAKhH,OAAL,GAAe,IAAf;AACA,iBAAKD,WAAL,CAAiBkH,KAAjB,CAAuB,KAAKP,CAAL,CAAOJ,QAAP,CAAgBK,KAAvC,EAA8C,KAAKD,CAAL,CAAOF,QAAP,CAAgBG,KAA9D,EAAqE,CAArE,EACGtG,IADH,CACQ,8DADR,EAEGH,SAFH,CAEa;AACTgH,kBAAI,EAAE,gBAAM;AACV,uBAAI,CAACvB,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,cAAD,CAArB,EAAuC;AAACY,6BAAW,EAAE;AAAEF,6BAAS,EAAG,OAAI,CAACA,SAAnB;AAA8BQ,yBAAK,EAAE,OAAI,CAACX,CAAL,CAAOJ,QAAP,CAAgBK;AAArD;AAAd,iBAAvC;AACD,eAHQ;AAIThF,mBAAK,EAAE,eAAAA,OAAK,EAAI;AACd,uBAAI,CAACA,KAAL,GAAa,gDAAb;AACA,uBAAI,CAAC3B,OAAL,GAAe,KAAf;AACD;AAPQ,aAFb;AAWD;;;sCAEWwC,K,EAAK,CAEhB;;;8BA1BI;AACH,mBAAO,KAAK4D,SAAL,CAAeuB,QAAtB;AACD;;;;;;;yBA3BUggC,sB,EAAsB,2H,EAAA,+H,EAAA,uH,EAAA,wJ;AAAA,O;;;cAAtBA,sB;AAAsB,0C;AAAA,iB;AAAA,gB;AAAA,gxC;AAAA;AAAA;ACXnC;;AACE;;AACE;;AAEF;;AACA;;AACE;;AAAkD;AAAA,qBAAY,IAAAz3B,QAAA,EAAZ;AAAsB,aAAtB;;AAChD;;AACE;;AACE;;AAAwB;;AAAyB;;AACjD;;AACF;;AAEA;;AAAmC;;AAAc;;AACjD;;AACE;;AAAuB;;AAAK;;AAC5B;;AACE;;AAA0B;;AAAK;;AAC/B;;AACF;;AACA;;AAEA;;AAIF;;AAEA;;AACE;;AAA0B;;AAAQ;;AAClC;;AACE;;AAA0B;;AAAI;;AAC9B;;AACF;;AACA;;AAEA;;AAAgB;;AAAQ;AAAA,qBAAS,IAAA03B,WAAA,QAAT;AAA4B,aAA5B;;AAA8B;;AAAO;;AAAI;;AACjE;;AAGF;;AAEA;;AACE;;AACE;;AAAqB;;AAAY;;AAAyC;;AAAQ;;AAAI;;AACtF;;AACE;;AACA;;AACF;;AACF;;AACA;;AAA8B;;AAAS;;AAA6B;;AAAkB;;AAAK;;AAC3F;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAlDU;;AAAA;;AAYe;;AAAA;;AAGb;;AAAA;;AACG;;AAAA;;AAUU;;AAAA;;AAGb;;AAAA;;AAEG;;AAAA;;AAOiC;;AAAA;;AAC2B;;AAAA;;AACvD;;AAAA;;AAIgC;;AAAA;;AACrC;;AAAA;;;;;;;;;wEDxCFD,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTjpC,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,oDAAD;AAHF,W;AAKwB,U","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitesubscribe',\r\n  templateUrl: './sitesubscribe.component.html',\r\n  styleUrls: ['./sitesubscribe.component.css']\r\n})\r\nexport class SitesubscribeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"team bg-white\">\r\n  <div class=\"news-letter\">\r\n  <h2 class=\"history-text\">Subscribe our newsletter</h2>\r\n  <div class=\"line\"></div>\r\n    <p class=\"subscribe-text\">Subscribe to our newsletter for daily/weekly update of our products and services.</p>\r\n    <form class=\"form-inline justify-content-center\">\r\n      <div class=\"form-group mx-sm-3 mb-2\">\r\n        <label for=\"inputPassword2\" class=\"sr-only\">Email</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"Email\">\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-discover btn-primary mb-2\">Discover</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitehome',\r\n  templateUrl: './sitehome.component.html',\r\n  styleUrls: ['./sitehome.component.css']\r\n})\r\nexport class SitehomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  date: Date;\r\n  images = [];\r\n\r\n  ngOnInit(): void {\r\n    this.date = new Date();\r\n    this.loadImages();\r\n  }\r\n\r\n  loadImages(){\r\n    for (let index = 0; index < 4; index++) {\r\n      const element = {\r\n        id: index,\r\n        image1: 'assets/website/bg-svg/mg-' + (index + 1) + '.png',\r\n        image2: 'assets/website/bg-svg/mg-' + (index + 1) + '-1.png 2x,' + 'assets/website/bg-svg/mg-' + (index + 1) + '-2.png 3x',\r\n        image3: 'assets/website/bg-svg/mg-' + (index + 1) + '-2',\r\n        style: 'img-' + index\r\n      };\r\n      this.images.push(element);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <h2 class=\"welove-text\"> We provide easy ways to exchange <b>Study/Teach</b>.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/dashboard/dashboard-1.png\"\r\n             class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"home-1\">\r\n  <!-- <div class=\"container p-2 \">\r\n    <div class=\"row main-margin align-items-center\">\r\n      <div class=\"col-md-6 text-left\">\r\n        <h1 class=\"provider\">\r\n          We provide easy ways to exchange <b>Study/Teach</b>.\r\n        </h1>\r\n        <h4 class=\"platform\">\r\n          VidhyaSadhan is a platform to change the way you Study and Teach.\r\n        </h4>\r\n        <button class=\"start-btn\" mat-raised-button><span class=\"btn-text\">Get Started</span></button>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <img class=\"img img-fluid\" src=\"assets/dashboard/dashboard-1.png\">\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  <div class=\"container p-2\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-5\">\r\n        <img class=\"img img-fluid\" src=\"assets/website/home-1.png\" srcset=\"assets/website/home-2.png 2x,\r\n        assets/website/home-3.png 3x\">\r\n      </div>\r\n      <div class=\"col-md-6 text-left\">\r\n        <h1 class=\"dev\">\r\n          Welcome to VidhyaSadhan\r\n        </h1>\r\n        <div class=\"line\"></div>\r\n        <div class=\"dev-text\">\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\r\n          standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to\r\n          make a type specimen book. It has survived not only five centuries, but also the leap into electronic\r\n          typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset\r\n          sheets containing.\r\n        </div>\r\n        <button class=\"dev-discover\" mat-raised-button>Discover</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"bg-white welcome-card\">\r\n  <div class=\"edu-simple\">\r\n    <div class=\"mid-card\">\r\n      <div class=\"card\">\r\n        <!-- <div class=\"card-header made-simple\">\r\n          <h2 class=\"made-simple-txt\">\r\n            Your Education made simple\r\n          </h2>\r\n        </div> -->\r\n        <div class=\"card-body\">\r\n          <h2 class=\"made-simple-txt\">\r\n            Your Education made simple\r\n          </h2>\r\n          <div class=\"line\"></div>\r\n          <div class=\"card-deck\">\r\n            <div class=\"card border-0\">\r\n              <div class=\"card-body text-center\">\r\n                <span class=\"card-count\">01</span>\r\n                <img class=\"card-img-top\" src=\"assets/website/section3/tutor1.png\" srcset=\"assets/website/section3/tutor2.png 2x,\r\n                assets/website/section3/tutor3.png 3x\">\r\n                <h2 class=\"card-title\">All You Need to Start</h2>\r\n                <p class=\"card-text\">Register as a tutor and add to the top searched tutor list.</p>\r\n                <a name=\"\" id=\"\" class=\"btn btn-light\" href=\"#\" role=\"button\">Register as a Tutor ></a>\r\n              </div>\r\n            </div>\r\n            <div class=\"card border-0\">\r\n              <div class=\"card-body text-center d-flex flex-column\">\r\n                <div>\r\n\r\n                </div>\r\n                <div class=\"mt-auto\">\r\n                  <span class=\"card-count\">02</span>\r\n                  <img class=\"card-img-top\" src=\"assets/website/section3/mask-1.png\" srcset=\"assets/website/section3/mask-2.png 2x,\r\n                  assets/website/section3/mask-3.png 3x\">\r\n                  <h2 class=\"card-title\">Customize and Extend</h2>\r\n                  <p class=\"card-text\">Get the classrooms/tuitions booked online/offline at your convenience.</p>\r\n                  <a name=\"\" id=\"\" class=\"btn btn-light\" href=\"#\" role=\"button\">Browse For Students ></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card border-0\">\r\n              <div class=\"card-body text-center\">\r\n                <span class=\"card-count\">03</span>\r\n                <!-- <div>\r\n                  <img class=\"rect-228\" src=\"assets/website/section3/rectangle-228.png\" srcset=\"assets/website/section3/rectangle-228@2x.png 2x, assets/website/section3/rectangle-228@3x.png 3x\">\r\n                </div> -->\r\n                <img class=\"card-img-top\" src=\"assets/website/section3/rectangle-225.png\" srcset=\"assets/website/section3/rectangle-225@2x.png 2x,\r\n                assets/website/section3/rectangle-225@3x.png 3x\">\r\n                <h2 class=\"card-title\">Active Community</h2>\r\n                <p class=\"card-text\">VidhyaSadhan is one of the fastest-growing Tution communities.</p>\r\n                <a name=\"\" id=\"\" class=\"btn btn-light\" href=\"#\" role=\"button\">Check your Blogs ></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div class=\"bg-white\">\r\n  <div class=\"gexp-card flex-row flex-wrap\">\r\n    <div class=\"card-deck\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body text-left\">\r\n          <h2 class=\"card-title great-exp\">Great experience with VidhyaSadhan</h2>\r\n          <div class=\"line m-0\"></div>\r\n          <p class=\"card-text great-text\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum\r\n            has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of\r\n            type and scrambled.</p>\r\n          <button class=\"dev-discover\" mat-raised-button>Discover</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <img class=\"img img-fluid\" src=\"assets/event.svg\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"role-access\">\r\n  <div class=\"role-card\">\r\n    <div class=\"container\">\r\n      <h2 class=\"role-based\">Role-based access control</h2>\r\n      <div class=\"line\"></div>\r\n      <div class=\"d-flex p-2 justify-content-center\">\r\n        <div class=\"role-1\">\r\n          <img class=\"img img-fluid\" src=\"assets/registration/login-1.svg\" alt=\"\">\r\n          <p>Tutor</p>\r\n        </div>\r\n        <div class=\"role-1\">\r\n          <img class=\"img img-fluid\" src=\"assets/registration/login-2.svg\" alt=\"\">\r\n          <p>Student</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"blog\">\r\n  <h2 class=\"role-based\">\r\n    Our Blog\r\n  </h2>\r\n  <div class=\"line\"></div>\r\n  <p class=\"card-text blog-post\">\r\n    Get to know the latest stuff via our blog post.\r\n  </p>\r\n  <div class=\"blog-content\">\r\n    <div>\r\n      <mat-card class=\"text-left\">\r\n        <mat-card-header>\r\n          <mat-card-subtitle>{{date | date}}</mat-card-subtitle>\r\n          <mat-card-title class=\"how-to\">HOW TO FIND BEST TUTOR FOR MY EDUCATION</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"how-to-body\">\r\n          Lorem ipsum dolor sit amet, magna habemus\r\n          ius ad, qui minimum voluptaria in. Ad mei modus\r\n          quodsi complectitur, postea...\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button class=\"readmore-1\" mat-button>Read More</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <mat-card class=\"text-left\">\r\n        <mat-card-header>\r\n          <mat-card-subtitle>{{date | date}}</mat-card-subtitle>\r\n          <mat-card-title class=\"refer-10\">REFER 10 TUTORS\r\n            RATE IS NOW #400 PER...</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"refer-10-body\">\r\n          Lorem ipsum dolor sit amet, magna habemus\r\n          ius ad, qui minimum voluptaria in. Ad mei modus\r\n          quodsi complectitur, postea...\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button class=\"readmore-2\" mat-button>Read More</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <mat-card class=\"text-left\">\r\n        <mat-card-header>\r\n          <mat-card-subtitle>{{date | date}}</mat-card-subtitle>\r\n          <mat-card-title class=\"how-to\">CAN I CHOOSE NEAR BY STUDENTS FOR OFFLINE..</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"how-to-body\">\r\n          Lorem ipsum dolor sit amet, magna habemus\r\n          ius ad, qui minimum voluptaria in. Ad mei modus\r\n          quodsi complectitur, postea...\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button class=\"readmore-1\" mat-button>Read More</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"testimonial-header\">\r\n  <div class=\"testimonial d-flex flex-column justify-content-center\">\r\n    <h4 class=\"satisfied-students\">\r\n      10,000 Satisfied Students & Tutors\r\n      around the world\r\n    </h4>\r\n    <p>Yeah! we’re proud with numbers. We’ve helped thousands of students &\r\n      Tutors all around the world with our VidhyaSadhan service. Hover ontop of them pic to view their testimonials.</p>\r\n    <div class=\"testimonial-img\">\r\n      <img [src]=\"img.image1\" *ngFor=\"let img of images\"  [ngClass]=\"img.style\">\r\n      <img [src]=\"img.image1\" *ngFor=\"let img of images\"  [ngClass]=\"img.style\">\r\n      <!-- <ul class=\"list-inline\">\r\n        <li class=\"list-inline-item\" *ngFor=\"let img of images\">\r\n          <img [src]=\"img.image1\"  class=\"Mask-Group\">\r\n        </li>\r\n      </ul>\r\n      <ul class=\"list-inline\">\r\n        <li class=\"list-inline-item\" *ngFor=\"let img of images.reverse()\">\r\n          <img [src]=\"img.image1\"  class=\"Mask-Group\">\r\n        </li>\r\n      </ul> -->\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"d-flex flex-column justify-content-center bg-white\">\r\n  <div class=\"download\">\r\n    <h2 class=\"role-based\">Download our app</h2>\r\n    <div class=\"line\"></div>\r\n    <p class=\"download-text\">Discover exclusive Learning services with\r\n      our mobile experience.</p>\r\n    <img src=\"assets/website/Store.png\"\r\n       srcset=\"assets/website/Store-1.png 2x,\r\n       assets/website/Store-2.png 3x\"\r\n       class=\"Store\">\r\n  </div>\r\n</div>\r\n<div class=\"download-mobile\">\r\n<div class=\"d-flex justify-content-center m-auto\">\r\n  <img src=\"assets/website/X-1.png\"\r\n       srcset=\"assets/website/X-1-1.png 2x,\r\n       assets/website/X-1-1.png 3x\"\r\n       class=\"Store p-2\">\r\n  <img src=\"assets/website/X-2.png\"\r\n       srcset=\"assets/website/X-2-1.png 2x,\r\n       assets/website/X-2-2.png 3x\"\r\n       class=\"Store p-2\">\r\n</div>\r\n</div>\r\n<!-- <div class=\"d-flex flex-column justify-content-center bg-white\">\r\n  <div class=\"download subscribe-email\">\r\n    <h2 class=\"role-based\">Subscribe our newsletter</h2>\r\n    <p>Subscribe to our newsletter for daily/weekly update of our products and services.</p>\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-md-8\">\r\n        <input type=\"text\"\r\n        class=\"form-control\" name=\"\" id=\"\" aria-describedby=\"helpId\" placeholder=\"Email\">\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <a class=\"btn discover-btn\" href=\"#\" role=\"button\">Discover</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-alertbox',\r\n  templateUrl: './alertbox.component.html',\r\n  styleUrls: ['./alertbox.component.css']\r\n})\r\nexport class AlertboxComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<span class=\"example-pizza-party\">\r\n    {{data.message}}\r\n</span>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-activatescreen',\r\n  templateUrl: './activatescreen.component.html',\r\n  styleUrls: ['./activatescreen.component.css']\r\n})\r\nexport class ActivatescreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron jumbo-bg\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-3\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-header class=\"bg-welcome p-4\">\r\n          <mat-card-title>\r\n            <img src=\"assets/welcome/vidhya-sandhhan-copy.svg\" class=\"vidhya-sandhhan-copy\">\r\n            <h2 class=\"welcome\">Welcome to VidhyaSadhan </h2>\r\n            <div class=\"text-center\">\r\n                <img src=\"assets/welcome/mesa-de-trabajo-1-copy-2-x-8.png\" srcset=\"assets/welcome/mesa-de-trabajo-1-copy-2-x-8@2x.png 2x,\r\n                assets/welcome/mesa-de-trabajo-1-copy-2-x-8@3x.png 3x\" class=\"Mesa-de-trabajo-1-copy2x-8\">\r\n            </div>\r\n            <p class=\"activate-text\">\r\n              To activate your account, we need to know you received this Email. Please click on the link shared to\r\n              confirm that.\r\n            </p>\r\n            <div class=\"p-1 text-center\">\r\n              <a class=\"btn btn-md btn-primary\" [routerLink]=\"['/login']\">Login</a>\r\n            </div>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"bg-white text-center\">\r\n            <div class=\"p-4\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <img src=\"assets/welcome/online-stores-icon.svg\" class=\"online-stores-icon\">\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <h4 class=\"home-edu\">Online Home Education</h4>\r\n                        <p class=\"home-edu-sub\">\r\n                            Morbi sit amet sapien placerat lorem ultrices euismod sed at neque. Mauris tristique, lacus id maximus convallis, neque tellus ornare risus\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <img src=\"assets/welcome/marketplace-icon.svg\" class=\"online-stores-icon\">\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <h4 class=\"home-edu\">Online Home Education</h4>\r\n                        <p class=\"home-edu-sub\">\r\n                            Morbi sit amet sapien placerat lorem ultrices euismod sed at neque. Mauris tristique, lacus id maximus convallis, neque tellus ornare risus\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <mat-divider class=\"m-2\"\r\n                    [inset]=\"true\">\r\n                </mat-divider>\r\n\r\n                <img src=\"assets/welcome/ava.svg\" class=\"ava\">\r\n                <p class=\"contact-1\">Contact: info@vidhyasadhan.com</p>\r\n            </div>       \r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div class=\"text-center footer-text p-4\">\r\n    <p>Vidhyasadhan Inc., The Marketplace To Bring Life Changing Tution to All </p>\r\n     <p>XXX Old Middlefield Way #XXX, Mountain View, CA XXXX-XXXX</p>   \r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { NotificationMiddlewareService } from 'src/app/core/notification-middleware.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  loading = false;\r\n  users: User[];\r\n  user: User;\r\n\r\n  constructor(private userService: UserService, private authService: AuthserviceService) {\r\n    this.authService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.userService.getAll().pipe(first()).subscribe(users => {\r\n        this.loading = false;\r\n        this.users = users;\r\n    });\r\n}\r\n\r\nlogout(){\r\n}\r\n\r\n}\r\n","<app-dashboard></app-dashboard>","import {\r\n  Injectable,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  environment\r\n} from 'src/environments/environment';\r\nimport {\r\n  NotificationsService,\r\n  PushSubscription\r\n} from '../_services/notifications.service';\r\nimport {SwPush, SwUpdate} from '@angular/service-worker';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationMiddlewareService {\r\n\r\n  public pushNotificationStatus = {\r\n    isSubscribed: false,\r\n    isSupported: false,\r\n    isInProgress: false\r\n  };\r\n\r\n  swRegistration = null;\r\n  public notifications = [];\r\n  snackBarDuration: 10;\r\n  constructor(private notificationService: NotificationsService,\r\n              private swPush: SwPush,\r\n              public swUpdate: SwUpdate,\r\n              private matSnackBar: MatSnackBar) {}\r\n\r\n\r\n  init() {\r\n    if ('serviceWorker' in navigator && 'PushManager' in window) {\r\n      navigator.serviceWorker.register('/assets/sw.js')\r\n        .then(swReg => {\r\n          console.log('Service Worker is registered', swReg);\r\n          this.swRegistration = swReg;\r\n          this.checkSubscription();\r\n        })\r\n        .catch(error => {\r\n          console.error('Service Worker Error', error);\r\n        });\r\n      this.pushNotificationStatus.isSupported = true;\r\n    } else {\r\n      this.pushNotificationStatus.isSupported = false;\r\n    }\r\n  }\r\n\r\n  checkSubscription() {\r\n    this.swRegistration.pushManager.getSubscription()\r\n      .then(subscription => {\r\n        console.log(subscription);\r\n        console.log(JSON.stringify(subscription));\r\n        this.pushNotificationStatus.isSubscribed = !(subscription === null);\r\n      });\r\n  }\r\n\r\n  subscribe() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    const applicationServerKey = this.urlB64ToUint8Array(environment.applicationServerPublicKey);\r\n    this.swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey\r\n      })\r\n      .then(subscription => {\r\n        console.log(JSON.parse(JSON.stringify(subscription)));\r\n        this.pushNotificationStatus.isSubscribed = true;\r\n      })\r\n      .catch(err => {\r\n        console.log('Failed to subscribe the user: ', err);\r\n      })\r\n      .then(() => {\r\n        this.pushNotificationStatus.isInProgress = false;\r\n      });\r\n\r\n    navigator.serviceWorker.addEventListener('message', (event) => {\r\n        console.log('pushed');\r\n        this.notifications.push(event.data);\r\n        });\r\n  }\r\n\r\n  subscribeUser() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    const applicationServerKey = this.urlB64ToUint8Array(environment.applicationServerPublicKey);\r\n    this.swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey\r\n      })\r\n      .then(subscription => {\r\n        const subject = JSON.parse(JSON.stringify(subscription));\r\n        this.notificationService.subscribe({\r\n          auth: subject.keys.auth,\r\n          p256Dh: subject.keys.p256dh,\r\n          endPoint: subject.endpoint\r\n        }).subscribe(s => {\r\n          this.pushNotificationStatus.isSubscribed = true;\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log('Failed to subscribe the user: ', err);\r\n      })\r\n      .then(() => {\r\n        this.pushNotificationStatus.isInProgress = false;\r\n      });\r\n\r\n    navigator.serviceWorker.addEventListener('message', (event) => {\r\n        console.log('pushed');\r\n        this.notifications.push(event.data);\r\n        });\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    this.swRegistration.pushManager.getSubscription()\r\n      .then((subscription) => {\r\n        if (subscription) {\r\n          return subscription.unsubscribe();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error unsubscribing', error);\r\n      })\r\n      .then(() => {\r\n        this.pushNotificationStatus.isSubscribed = false;\r\n        this.pushNotificationStatus.isInProgress = false;\r\n      });\r\n  }\r\n\r\n  unsubscribeUser() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    let sub;\r\n    this.swRegistration.pushManager.getSubscription()\r\n      .then((subscription) => {\r\n        if (subscription) {\r\n          sub = JSON.parse(JSON.stringify(subscription));\r\n          return subscription.unsubscribe();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error unsubscribing', error);\r\n      })\r\n      .then(() => {\r\n        this.notificationService.unsubscribe({\r\n          auth: sub.keys.auth,\r\n          p256Dh: sub.keys.p256dh,\r\n          endPoint: sub.endpoint\r\n        }).subscribe(() => {\r\n          this.pushNotificationStatus.isSubscribed = false;\r\n          this.pushNotificationStatus.isInProgress = false;\r\n        });\r\n      });\r\n  }\r\n\r\n  urlB64ToUint8Array(publicKey) {\r\n    const padding = '='.repeat((4 - publicKey.length % 4) % 4);\r\n    const base64 = (publicKey + padding)\r\n      .replace(/\\-/g, '+')\r\n      .replace(/_/g, '/');\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n\r\n  toggleSubscription() {\r\n    if (this.pushNotificationStatus.isSubscribed) {\r\n     // this.unsubscribeUser();\r\n     this.unsubscribeNotifications();\r\n    } else {\r\n     // this.subscribeUser();\r\n     this.subscribeToNotifications();\r\n    }\r\n  }\r\n\r\n  initialize(){\r\n    if (this.swUpdate.isEnabled) {\r\n      this.pushNotificationStatus.isSupported = true;\r\n      this.swUpdate.available.subscribe(() => {\r\n          if (confirm(`New version available. Load New Version?`)) {\r\n              window.location.reload();\r\n          }\r\n      });\r\n    }\r\n\r\n    if (this.swPush.isEnabled){\r\n      this.pushNotificationStatus.isSupported = true;\r\n    }\r\n\r\n    console.log(this.swUpdate.isEnabled);\r\n    console.log(this.pushNotificationStatus.isSupported);\r\n    this.pushNotificationStatus.isSubscribed = !(this.swPush.subscription === null);\r\n  }\r\n\r\n  subscribeToNotifications() {\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    this.swPush.requestSubscription({\r\n        serverPublicKey: environment.applicationServerPublicKey\r\n    })\r\n    .then(sub => {\r\n      const subject = JSON.parse(JSON.stringify(sub));\r\n      this.notificationService.subscribe({\r\n        auth: subject.keys.auth,\r\n        p256Dh: subject.keys.p256dh,\r\n        endPoint: subject.endpoint\r\n      }).subscribe(s => {\r\n        this.pushNotificationStatus.isSubscribed = true;\r\n        const snackBarRef = this.matSnackBar.open('Now you are subscribed', null, {\r\n          duration: this.snackBarDuration\r\n        });\r\n      });\r\n    }).catch(err => console.error('Could not subscribe to notifications', err))\r\n    .then(() => {\r\n      this.pushNotificationStatus.isInProgress = false;\r\n    });\r\n  }\r\n\r\n  unsubscribeNotifications(){\r\n    this.pushNotificationStatus.isInProgress = true;\r\n    const sub = JSON.parse(JSON.stringify(this.swPush.subscription));\r\n    console.log('test');\r\n    this.swPush.unsubscribe();\r\n    this.notificationService.unsubscribe({\r\n      auth: sub.keys.auth,\r\n      p256Dh: sub.keys.p256Dh,\r\n      endPoint: sub.endpoint\r\n    }).subscribe(() => {\r\n      this.pushNotificationStatus.isSubscribed = false;\r\n      this.pushNotificationStatus.isInProgress = false;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitenav',\r\n  templateUrl: './sitenav.component.html',\r\n  styleUrls: ['./sitenav.component.css']\r\n})\r\nexport class SitenavComponent implements OnInit {\r\n\r\n  public isCollapsed = true;\r\n  isSelected = true;\r\n\r\n  menunav = [\r\n    {id: 0, name: 'Home', isActive: true, path: '/'},\r\n    {id: 1, name: 'About Us', isActive: false, path: '/about-us'},\r\n    {id: 2, name: 'Features', isActive: false, path: '/features'},\r\n    {id: 3, name: 'Pricing', isActive: false, path: '/pricing'},\r\n    {id: 4, name: 'Contact Us', isActive: false, path: '/contact'},\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  clickedItem(item){\r\n    this.menunav.forEach(x => x.isActive = false);\r\n    item.isActive =  true;\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-white sticky-top\">\r\n    <a class=\"navbar-brand\" href=\"#\"><img src=\"assets/vidhyasadhan-logo.svg\"></a>\r\n    <button class=\"navbar-toggler hidden-lg-up\" type=\"button\" data-toggle=\"collapse\"\r\n    (click)=\"isCollapsed = !isCollapsed\" [attr.aria-expanded]=\"!isCollapsed\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n       aria-label=\"Toggle navigation\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\" [ngbCollapse]=\"isCollapsed\">\r\n      <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n        <li class=\"nav-item active\" [ngClass]=\"{'item-active': item.isActive}\" (click)=\"clickedItem(item)\" *ngFor=\"let item of menunav\">\r\n          <a class=\"nav-link\" [routerLink]=\"[item.path]\">{{item.name}} </a>\r\n        </li>\r\n        <li class=\"nav-item active dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Promoter/Parent</a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n            <a class=\"dropdown-item\" href=\"#\">Action 1</a>\r\n            <a class=\"dropdown-item\" href=\"#\">Action 2</a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n        <button [routerLink]=\"['/login']\" class=\"btn btn-outline-success my-2 my-sm-0 login-btn\" type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n@Component({\r\n  selector: 'app-tutor-referrals-details',\r\n  templateUrl: './tutor-referrals-details.component.html',\r\n  styleUrls: ['./tutor-referrals-details.component.css']\r\n})\r\nexport class TutorReferralsDetailsComponent implements OnInit {\r\n\r\n  @Input() name;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header modal-header-custom\">\r\n  <h4 class=\"modal-title referral-details\">Referral Details</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <form>\r\n          <div class=\"form-row align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <label class=\"sr-only\" for=\"inlineFormInput\">Name</label>\r\n              <input type=\"text\" class=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Search \">\r\n            </div> \r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <div class=\"col-3\">\r\n              <button type=\"submit\" class=\"btn btn-primary withdraw-button mb-2\">Withdraw</button>\r\n            </div>\r\n            <div class=\"col-9\"> \r\n              <button type=\"submit\" class=\"btn btn-secondary transfer-to-earn-button ml-2\">Transfer to Earnings</button>\r\n            </div>\r\n        </div>\r\n          \r\n         \r\n      </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12 padding-left-right\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 padding-left-right mt-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\"> Name</th>\r\n                  <th scope=\"col\">Email Address</th>\r\n                  <th scope=\"col\">Referred via</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Credits</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked>\r\n                        <label class=\"custom-control-label\" for=\"customCheck1\">1</label>\r\n                    </div>\r\n                  </td>\r\n                  <td>Bootstrap 4 CDN and Starter Template</td>\r\n                  <td>Cristina</td>\r\n                  <td>913</td>\r\n                  <td>2.846</td>\r\n                  <td>\r\n                    $26\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked>\r\n                        <label class=\"custom-control-label\" for=\"customCheck1\">1</label>\r\n                    </div>\r\n                  </td>\r\n                  <td>Bootstrap 4 CDN and Starter Template</td>\r\n                  <td>Cristina</td>\r\n                  <td>913</td>\r\n                  <td>2.846</td>\r\n                  <td>\r\n                    $26\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked>\r\n                        <label class=\"custom-control-label\" for=\"customCheck1\">1</label>\r\n                    </div>\r\n                  </td>\r\n                  <td>Bootstrap 4 CDN and Starter Template</td>\r\n                  <td>Cristina</td>\r\n                  <td>913</td>\r\n                  <td>2.846</td>\r\n                  <td>\r\n                    $26\r\n                  </td>\r\n                </tr>\r\n             \r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer justify-center-footer\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 text-center\" >\r\n      <!-- <nav aria-label=\"Page navigation example\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\">\r\n            <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n              <span aria-hidden=\"true\">&laquo;</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n          <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\r\n          <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\r\n          <li class=\"page-item\">\r\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n              <span aria-hidden=\"true\">&raquo;</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav> -->\r\n      <mat-paginator [length]=\"5\"\r\n        [pageSize]=\"5\"\r\n        [pageSizeOptions]=\"[5,10,15]\">\r\n        <!-- (page)=\"pageEvent = $event\" -->\r\n      </mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {\r\n  first\r\n} from 'rxjs/operators';\r\nimport {\r\n  ActivatedRoute,\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  loading = false;\r\n  loadforgot = false;\r\n  submitted = false;\r\n  passwordsubmitted = false;\r\n  returnUrl: string;\r\n  isAlert = false;\r\n  error = '';\r\n  isTutor = true;\r\n  username;\r\n  isForgot = false;\r\n  forgotMessage;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthserviceService\r\n  ) {\r\n    console.log(this.authService.userValue);\r\n    if (this.authService.userValue) {\r\n      this.router.navigate(['/vs']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    this.passwordForm = this.formBuilder.group({\r\n      username: [this.f.username.value, Validators.required],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required]\r\n    });\r\n\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/vs';\r\n  }\r\n\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  get p() {\r\n    return this.passwordForm.controls;\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authService.login(this.f.username.value, this.f.password.value, this.isTutor ? 1 : 2)\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error: error => {\r\n          this.error = 'Please Check your Password or Email to Confirm';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  onpasswordSubmit(){\r\n    this.passwordsubmitted = true;\r\n\r\n    this.loadforgot = true;\r\n    if (this.passwordForm.valid){\r\n      const forgotModel = {\r\n        email : this.p.username.value,\r\n        password : this.p.password.value,\r\n        confirmPassword: this.p.confirmPassword.value,\r\n      };\r\n      this.authService.forgotpassword(forgotModel).subscribe(x => {\r\n        if (x){\r\n          this.forgotMessage = true;\r\n        }\r\n        else{\r\n          this.error = 'Unable to Reset Password';\r\n        }\r\n        this.loadforgot = false;\r\n      }, (error) => {\r\n        this.loadforgot = false;\r\n        this.error = error;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  forgotClick(e){\r\n    e.preventDefault();\r\n    this.isForgot = !this.isForgot;\r\n  }\r\n\r\n}\r\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor? '':'main-bg'\">\r\n  <mat-toolbar class=\"justify-content-center tb\">\r\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\r\n  </mat-toolbar>\r\n  <div class=\"equal-container login-side\">\r\n    <div class=\"equal-col\">\r\n      <div>\r\n        <div class=\"card rounded\">\r\n          <div class=\"card-dody\" *ngIf=\"!isForgot\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"log-form-mr bg-white\">\r\n              <div class=\"card-header text-center log-header \">\r\n                <h2>Choose Account Type</h2>\r\n                <div class=\"d-flex flex-wrap justify-content-center\">\r\n                  <div class=\"icon-bg\" [ngClass]=\"isTutor ? 'icon-bg-color-blue' : 'border-light'\"\r\n                    (click)=\"isTutor = true\">\r\n                    <img class=\"img-thumbnail img-prop\" src=\"assets/registration/login-1.svg\">\r\n                    <p>Tutor</p>\r\n                    <mat-icon *ngIf=\"isTutor\" class=\"icon-position icon-color-blue\" color=\"primary\">check_circle\r\n                    </mat-icon>\r\n                  </div>\r\n                  <div class=\"icon-bg\" [ngClass]=\"!isTutor ? 'icon-bg-color-pink' : 'border-light'\"\r\n                    (click)=\"isTutor = false\">\r\n                    <img class=\"img-thumbnail img-prop\" src=\"assets/registration/login-2.svg\">\r\n                    <p>Student</p>\r\n                    <mat-icon *ngIf=\"!isTutor\" class=\"icon-position icon-color-pink\" color=\"secondary\">check_circle\r\n                    </mat-icon>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h2 class=\"text-center\">Hello {{isTutor ? \"Tutor\" : \"Student\"}}</h2>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"username\">Email</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">email</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"email\" formControlName=\"username\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Email is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">Password</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">lock</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"password\" formControlName=\"password\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  </div>\r\n                  <span matSuffix><a [routerLink]=\"['/account/forgot-password']\" [queryParams]=\"{role: isTutor ? 'tutor': 'student'}\">Forgot?</a></span>\r\n                </mat-form-field>\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div class=\"account\">No account? <a\r\n                      [routerLink]=\"['/register', isTutor? 'tutor': 'student']\">Register</a></div>\r\n                  <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loading\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                  </button>\r\n                </div>\r\n                <div class=\"promoter-log\">Login as <a [routerLink]=\"['/promoter/login']\">Promoter</a> Or with<a\r\n                    [routerLink]=\"['/authenticate']\">OTP</a> </div>\r\n                <!-- <div class=\"promoter-log\">Login With <a [routerLink]=\"['/promoter/login']\">OTP</a> </div> -->\r\n                <div *ngIf=\"submitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"card-body\" class=\"log-form-mr bg-white\" *ngIf=\"isForgot\">\r\n            <div class=\"card-header text-center bg-transparent border-0\">\r\n              <h2 class=\"m-2\">Reset Password</h2>\r\n            </div>\r\n            <form [formGroup]=\"passwordForm\" class=\"m-4\" (ngSubmit)=\"onpasswordSubmit()\">\r\n              <div class=\"form-group loginform\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"username\">Email</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">email</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"email\" formControlName=\"username\"\r\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.username.errors }\" />\r\n                  <div *ngIf=\"passwordsubmitted && p.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"p.username.errors.required\">Email is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group loginform\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">New Password</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">lock</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"password\" formControlName=\"password\"\r\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\r\n                  <div *ngIf=\"passwordsubmitted && p.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"p.password.errors.required\">Password is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group loginform\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"confirmPassword\">Confirm Password</mat-label>\r\n                  <span matPrefix>\r\n                    <mat-icon color=\"primary\">lock</mat-icon>\r\n                    <mat-divider [vertical]=\"true\"></mat-divider>\r\n                  </span>\r\n                  <input matInput type=\"password\" formControlName=\"confirmPassword\"\r\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\r\n                  <div *ngIf=\"passwordsubmitted && p.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"p.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between text-white\">\r\n                <a class=\"btn btn-secondary\" type=\"submit\" (click)=\"isForgot = !isForgot\" role=\"button\">Login?</a>\r\n                <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loadforgot\">\r\n                  <span *ngIf=\"loadforgot\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              <div class=\"alert alert-success\" *ngIf=\"submitted && forgotMessage\">\r\n                <strong>Password Reset Succesful. Please go back to</strong><a (click)=\"isForgot = !isForgot\"\r\n                  class=\"alert-link\">login</a>\r\n              </div>\r\n              <div *ngIf=\"submitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport * as mapboxgl from 'mapbox-gl';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Demo } from 'src/app/_models/demo';\r\n\r\n@Component({\r\n  selector: 'app-mapcomponent',\r\n  templateUrl: './mapcomponent.component.html',\r\n  styleUrls: ['./mapcomponent.component.css']\r\n})\r\nexport class MapcomponentComponent implements OnInit {\r\n\r\n  map: mapboxgl.Map;\r\n  style = 'mapbox://styles/mapbox/streets-v11';\r\n  lat = 17.36667;\r\n  lng = 78.46667;\r\n\r\n  @Input()\r\n  markersdata: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.lat = position.coords.latitude;\r\n      this.lng = position.coords.longitude;\r\n    });\r\n    this.map = new mapboxgl.Map({\r\n      container: 'map',\r\n      style: this.style,\r\n      zoom: 13,\r\n      center: [this.lng, this.lat],\r\n      accessToken: environment.mapbox_accessToken,\r\n  });\r\n\r\n    console.log(this.markersdata);\r\n  // Add map controls\r\n    this.map.addControl(new mapboxgl.NavigationControl());\r\n    this.markersdata.forEach(x => {\r\n      if (x.event?.langitude > 0 && x.event?.latitude > 0 ){\r\n        const marker = new mapboxgl.Marker().setLngLat([Number(x.event?.langitude), Number(x.event?.latitude)]).addTo(this.map);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"map\" id=\"map\" class=\"match-parent\" ></div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { LocationModel } from 'src/app/_models/location';\r\nimport * as moment from 'moment';\r\nimport { Demo } from 'src/app/_models/demo';\r\nimport { StaticData } from 'src/app/_models/static';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-eventdetail',\r\n  templateUrl: './eventdetail.component.html',\r\n  styleUrls: ['./eventdetail.component.css']\r\n})\r\nexport class EventdetailComponent implements OnInit {\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: AuthserviceService,\r\n              private demoService: DemoService,\r\n              private staticData: StaticdataService,\r\n              public alertService: AlertService) { }\r\n\r\n  public demoForm: FormGroup;\r\n  public submitted = false;\r\n  isLoading;\r\n  locations: LocationModel[] = [];\r\n  message;\r\n  timestamps;\r\n  staticDataSet: StaticData;\r\n  levels = [];\r\n  alertOptions: {\r\n    autoClose: true,\r\n    keepAfterRouteChange: false\r\n  };\r\n  days = [\r\n    {day: 'Monday', selected: false, code: 'MO' },\r\n    {day: 'Tuesday', selected: false, code: 'TU' },\r\n    {day: 'Wednesday', selected: false, code: 'WE' },\r\n    {day: 'Thursday', selected: false, code: 'TH' },\r\n    {day: 'Friday', selected: false, code: 'FR' },\r\n    {day: 'Saturday', selected: false, code: 'SA' },\r\n    {day: 'Sunday', selected: false, code: 'SU' }\r\n  ];\r\n  allChecked = false;\r\n\r\n  @Output() returnEvent = new EventEmitter<boolean>();\r\n\r\n  ngOnInit(): void {\r\n    this.demoForm = this.formBuilder.group({\r\n      courseId : [''],\r\n      title : ['', Validators.required],\r\n      subject: ['', Validators.required],\r\n      courseDescription : ['', Validators.required],\r\n      startDate : [new Date(), Validators.required],\r\n      endDate : [new Date(), Validators.required],\r\n      startTime: ['', Validators.required],\r\n      endTime: ['', Validators.required],\r\n      credits : [''],\r\n      grade: ['', Validators.required],\r\n      departmentID : [''],\r\n      courseAssignments : [''],\r\n      enrollments : [''],\r\n      location: ['', Validators.required],\r\n      video: ['', Validators.required],\r\n      calendar: [''],\r\n      eventType: [''],\r\n      notificationtype: ['Email', Validators.required],\r\n      remaindertime: ['10', Validators.required],\r\n      timer: ['Minutes', Validators.required]\r\n    });\r\n\r\n    this.locationSearch();\r\n    this.subjectSearch();\r\n    this.getTimeLabels();\r\n  }\r\n\r\n\r\n  private locationSearch() {\r\n    this.demoForm\r\n      .get('location')\r\n      .valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        tap(() => this.isLoading = true),\r\n        switchMap(value => this.staticData.searchLocations(value)\r\n          .pipe(\r\n            finalize(() => this.isLoading = false))\r\n        )\r\n      )\r\n      .subscribe((locs) => {\r\n        this.locations = [];\r\n        locs?.features?.forEach(element => {\r\n          const location: LocationModel = {\r\n            locationId: element.id,\r\n            locationName: element.place_name,\r\n            langitude: element.geometry?.coordinates[0],\r\n            latitude: element.geometry?.coordinates[1]\r\n          };\r\n          this.locations.push(location);\r\n        });\r\n      });\r\n  }\r\n\r\n  private subjectSearch() {\r\n    this.staticData.getStaticDataSets().subscribe(x => { this.staticDataSet = x;\r\n                                                         x.subjects.forEach(y => {\r\n                                                         this.levels.push(y.level);\r\n      });\r\n     });\r\n  }\r\n\r\n  getTimeLabels(){\r\n    const times = (desiredStartTime, interval, period) => {\r\n      const periodsInADay = moment.duration(1, 'day').as(period);\r\n      const timeLabels = [];\r\n      const startTimeMoment = moment(desiredStartTime, 'hh:mm');\r\n      for (let i = 0; i <= periodsInADay; i += interval) {\r\n        startTimeMoment.add(i === 0 ? 0 : interval, period);\r\n        timeLabels.push(startTimeMoment.format('hh:mm A'));\r\n      }\r\n      return timeLabels;\r\n    };\r\n    this.timestamps = times('00:00', 15, 'minutes');\r\n  }\r\n\r\n  displayLoc(loc): string {\r\n    return loc ? loc.locationName : '';\r\n  }\r\n\r\n  get demoFormControls() { return this.demoForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    console.log(this.demoFormControls.location.value);\r\n    if (this.demoForm.valid)\r\n    {\r\n      const demodata: Demo = {\r\n        title: this.demoFormControls.title.value,\r\n        courseId: null,\r\n        credits: 0,\r\n        departmentID: null,\r\n        subject: this.demoFormControls.subject.value,\r\n        grade: this.demoFormControls.grade.value,\r\n        courseDescription: this.demoFormControls.courseDescription.value,\r\n        startDate: this.demoFormControls.startDate.value,\r\n        endDate: this.demoFormControls.endDate.value,\r\n        startTime: this.demoFormControls.startTime.value,\r\n        endTime: this.demoFormControls.endTime.value,\r\n        ownerId: Number.parseInt(this.authService.userValue.id, 10),\r\n        // courseAssignments: [{\r\n        //   instructorID: this.authService.userValue.id,\r\n        //   courseID: null\r\n        // }],\r\n        enrollments: [],\r\n        locationName: this.demoFormControls.location.value.locationName,\r\n        locationId: this.demoFormControls.location.value.locationId,\r\n        langitude: this.demoFormControls.location.value.langitude,\r\n        latitude: this.demoFormControls.location.value.latitude,\r\n        // calendarEvent: {\r\n        //   summary: this.demoFormControls.title.value,\r\n        //   location: this.demoFormControls.location.value.locationName,\r\n        //   description: this.demoFormControls.courseDescription.value,\r\n        //   timeZone: 'Asia/Calcutta',\r\n        //   start: this.getDateforTimes(this.demoFormControls.startDate.value, this.demoFormControls.startTime.value),\r\n        //   end: this.getDateforTimes(this.demoFormControls.startDate.value, this.demoFormControls.endTime.value),\r\n        //   recurrence: this.createRecurrance(),\r\n        //   attendees: [\r\n        //     this.authService.userValue.email\r\n        //   ],\r\n        //   organizer: null,\r\n        // },\r\n        isDemo: this.demoFormControls.eventType.value === 'Demo',\r\n        isOnline: this.demoFormControls.video.value,\r\n        selectedDays: this.days.filter(x => x.selected).map(x => x.day).join(','),\r\n      };\r\n\r\n      this.demoService.createDemo(demodata).subscribe((x: Demo) => {\r\n        if (x?.courseId !== (null || undefined)){\r\n          this.alertService.success('Succesfully Created Event', this.alertOptions);\r\n          this.gotoList();\r\n        }\r\n        else{\r\n          this.alertService.error('Unable to Create Event', this.alertOptions);\r\n        }\r\n      },\r\n     (error) => this.alertService.error(error, this.alertOptions));\r\n    }\r\n  }\r\n\r\n  getDateforTimes(date: Date, time){\r\n    const Year = Number(date.getFullYear());\r\n    const Month = Number(date.getMonth());\r\n    const Day = Number(date.getDate());\r\n\r\n    const paseddate =   this.parseDaytime(time);\r\n    const convertedDate = new Date(Year, Month, Day, paseddate[0], paseddate[1]);\r\n    console.log(convertedDate);\r\n    return convertedDate;\r\n  }\r\n\r\n  dayDiff(d1: Date, d2: Date)\r\n  {\r\n    const diff = Math.abs(d1.getTime() - d2.getTime());\r\n    const diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n   parseDaytime(converttime) {\r\n    const dtime = converttime.split(':');\r\n    let hours = dtime[0];\r\n    const minutes = dtime[1].split(' ')[0];\r\n    if (converttime.includes('pm') && hours !== 12) { hours += 12; }\r\n    return [hours, minutes];\r\n  }\r\n\r\n  resetForm(){\r\n    this.demoForm.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  cancelForm(){\r\n    this.demoForm.reset();\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList(){\r\n    this.returnEvent.emit(true);\r\n  }\r\n\r\n  changeAll(check){\r\n    this.allChecked = check;\r\n    if (this.days == null) {\r\n      return;\r\n    }\r\n    this.days.forEach(t => {\r\n      if (check === true){\r\n        t.selected = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  changeDays(check, day){\r\n    day.selected = check;\r\n    this.allChecked = this.days.filter(t => t.selected).length > 0 ? false : this.allChecked;\r\n  }\r\n\r\n  dateChanged(){\r\n    if (this.demoFormControls.startDate.valid && this.demoFormControls.endDate.valid){\r\n      const diff = this.demoFormControls.endDate.value.getTime() - this.demoFormControls.startDate.value.getTime();\r\n      console.log(diff);\r\n      if (diff < 0){\r\n        this.demoFormControls.endDate.setErrors({lesserdate: true});\r\n      }\r\n    }\r\n  }\r\n\r\n  createRecurrance(){\r\n    const count = this.dayDiff(this.demoFormControls.startDate.value,\r\n      this.demoFormControls.endDate.value);\r\n    const frequency = 'WEEKLY';\r\n    let result = [];\r\n    const byday = this.allChecked ? this.days.forEach(x => {\r\n      result = result.concat(x.code);\r\n    }) :  this.days.filter(x => x.selected).forEach(x => {\r\n      result = result.concat(x.code);\r\n    });\r\n\r\n    return result.length > 0 ? ['RRULE:FREQ=WEEKLY;COUNT=' + count + ';BYDAY=' + result.join(',')] : ['RRULE:FREQ=WEEKLY;COUNT=' + count];\r\n  }\r\n\r\n}\r\n\r\n\r\n// [{\r\n//   enrollmentID: 0,\r\n//   courseID: null,\r\n//   studentID: this.authService.userValue.id\r\n// }]\r\n","<form [formGroup]=\"demoForm\" class=\"demoform rounded\" (submit)=\"onSubmit()\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header bg-primary\">\r\n        <div class=\"d-flex\">\r\n            <a (click)=\"gotoList()\">\r\n                <mat-icon>west</mat-icon>\r\n              </a>\r\n              <h2 class=\"my-event\">\r\n                Schedule an Event\r\n              </h2>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label for=\"title\">Title</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"title\" id=\"title\" placeholder=\"Demo Title\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.title.errors }\">\r\n            <div *ngIf=\"submitted && demoFormControls.title.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.title.errors.required\">Title is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label for=\"subject\">Subject</mat-label>\r\n            <!-- <input matInput type=\"text\" formControlName=\"subject\" id=\"subject\" placeholder=\"Course/Subject\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.subject.errors }\"> -->\r\n              <mat-select placeholder=\"Subject\" formControlName=\"subject\" name=\"subject\" id=\"subject\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.subject.errors }\">\r\n                <mat-option *ngFor=\"let item of staticDataSet?.subjects\" [value]=\"item.name\">\r\n                  {{item.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            <div *ngIf=\"submitted && demoFormControls.title.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.title.errors.required\">Subject is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field  appearance=\"outline\">\r\n            <mat-label>Enter a date range</mat-label>\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n              <input matStartDate placeholder=\"Start date\" formControlName=\"startDate\">\r\n              <input matEndDate placeholder=\"End date\" formControlName=\"endDate\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n          <mat-form-field class=\"w-50 pl-1\" appearance=\"outline\">\r\n            <mat-label for=\"startTime\">Start Time</mat-label>\r\n            <mat-select formControlName=\"startTime\" id=\"startTime\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.startTime.errors }\">\r\n              <mat-option *ngFor=\"let timestamp of timestamps\" [value]=\"timestamp\">\r\n                {{timestamp}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <div *ngIf=\"submitted && demoFormControls.startTime.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.startTime.errors.required\">Start Time is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-50 pl-1\" appearance=\"outline\">\r\n            <mat-label for=\"endTime\">End Time</mat-label>\r\n            <mat-select formControlName=\"endTime\" id=\"endTime\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.endTime.errors }\">\r\n              <mat-option *ngFor=\"let timestamp of timestamps\" [value]=\"timestamp\">\r\n                {{timestamp}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <div *ngIf=\"submitted && demoFormControls.endTime.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"demoFormControls.endTime.errors.required\">End Time is required</div>\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"card event-bg\">\r\n        <div class=\"card-header\">\r\n          Event Details\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-6\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"location\">Where</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"location\" id=\"location\" [matAutocomplete]=\"loc\"\r\n                  placeholder=\"Where\" [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.location.errors }\">\r\n                <mat-autocomplete #loc=\"matAutocomplete\" [displayWith]=\"displayLoc\">\r\n                  <mat-option *ngFor=\"let location of locations\" [value]=\"location\">\r\n                    {{location.locationName}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <div *ngIf=\"submitted && demoFormControls.location.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"demoFormControls.location.errors.required\">Location is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group col-md-6\">\r\n                <mat-label>Which days are you able to tutor?</mat-label>\r\n                <section class=\"m-1\">\r\n                  <mat-checkbox class=\"day-margin\" [checked]=\"allChecked\" (change)=\"changeAll($event.checked)\">All\r\n                  </mat-checkbox>\r\n                  <mat-checkbox class=\"day-margin\" [checked]=\"day.selected\" (change)=\"changeDays($event.checked, day)\"\r\n                    *ngFor=\"let day of days\">{{day.day | slice:0:3}}</mat-checkbox>\r\n                </section>\r\n\r\n              <!-- <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"video\">Online?</mat-label>\r\n                <mat-select formControlName=\"video\" id=\"video\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.video.errors }\">\r\n                  <mat-option selected=\"selected\" value=\"Yes\">Yes</mat-option>\r\n                  <mat-option value=\"No\">No</mat-option>\r\n                </mat-select>\r\n              </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"grade\">Level/Grade</mat-label>\r\n                <!-- <input type=\"text\" formControlName=\"grade\" matInput id=\"grade\" placeholder=\"Grade\"> -->\r\n                <mat-select placeholder=\"Grade\" formControlName=\"grade\" name=\"grade\" id=\"grade\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && demoFormControls.grade.errors }\">\r\n                  <mat-option *ngFor=\"let item of levels\" [value]=\"item\">\r\n                    {{item}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                </mat-form-field>\r\n                </div>\r\n            <div class=\"form-group col-md-3\">\r\n              <!-- <mat-label class=\"d-flex\">Event Type</mat-label> -->\r\n              <mat-radio-group formControlName=\"eventType\">\r\n                <mat-radio-button value=\"Demo\">Demo</mat-radio-button>\r\n                <mat-radio-button value=\"Tution\">Tution</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div class=\"form-group col-md-3\">\r\n              <mat-radio-group formControlName=\"video\">\r\n                <mat-radio-button value=\"true\">Online</mat-radio-button>\r\n                <mat-radio-button value=\"false\">Offline</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-12\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"courseDescription\">Description</mat-label>\r\n                <textarea matInput formControlName=\"courseDescription\" id=\"courseDescription\"\r\n                  placeholder=\"Description\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-6\">\r\n              Notifications:\r\n              <mat-select class=\"w-20\" formControlName=\"notificationtype\" id=\"notificationtype\">\r\n                <mat-option selected=\"selected\" value=\"None\">None</mat-option>\r\n                <mat-option value=\"Email\">Email</mat-option>\r\n                <mat-option value=\"Phone\">Phone</mat-option>\r\n              </mat-select>\r\n              <mat-select class=\"w-20\" formControlName=\"remaindertime\" id=\"remaindertime\">\r\n                <mat-option selected=\"selected\" value=\"0\">0</mat-option>\r\n                <mat-option value=\"0.5\">0.5</mat-option>\r\n                <mat-option value=\"1\">1</mat-option>\r\n                <mat-option value=\"5\">5</mat-option>\r\n                <mat-option value=\"10\">10</mat-option>\r\n                <mat-option value=\"15\">15</mat-option>\r\n                <mat-option value=\"20\">20</mat-option>\r\n              </mat-select>\r\n              <mat-select class=\"w-20\" formControlName=\"timer\" id=\"timer\">\r\n                <mat-option selected=\"selected\" value=\"None\">None</mat-option>\r\n                <mat-option value=\"Minutes\">Minutes</mat-option>\r\n                <mat-option value=\"Hours\">Hours</mat-option>\r\n                <mat-option value=\"Days\">Days</mat-option>\r\n              </mat-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-footer bg-light\">\r\n      <mat-card-actions class=\"footer-buttons clearfix\">\r\n        <button mat-raised-button (click)=\"resetForm()\" type=\"reset\" color=\"secondary\" class=\"m-2\">Reset</button>\r\n        <div class=\"float-right\">\r\n          <button mat-raised-button color=\"secondary\" (click)=\"cancelForm()\" class=\"m-2\">Cancel</button>\r\n          <button mat-raised-button type=\"submit\" color=\"accent\" class=\"m-2\">Send Invite</button>\r\n        </div>\r\n      </mat-card-actions>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable, Input } from '@angular/core';\r\n// import { BlobServiceClient, AnonymousCredential, newPipeline} from '@azure/storage-blob';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileuploaderService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  uploadFile(file){\r\n    const header = new HttpHeaders();\r\n    header.set('Accept', 'application/json');\r\n    header.delete('Content-Type');\r\n    return this.http.put<any>(`${environment.apiUrl}/files/upload`, file, {headers: header});\r\n  }\r\n\r\n  downloadFile(filename){\r\n    return this.http.get<any>(`${environment.apiUrl}/files/DownloadFile/` + filename);\r\n  }\r\n\r\n  listFiles(){\r\n    return this.http.get<any>(`${environment.apiUrl}/files/listfiles`);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {\r\n  Assignment, StudentAssignment\r\n} from 'src/app/_models/assignment';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { FileuploaderService } from 'src/app/_services/fileuploader.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { Demo } from 'src/app/_models/demo';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { StaticData } from 'src/app/_models/static';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-assignmentdetail',\r\n  templateUrl: './assignmentdetail.component.html',\r\n  styleUrls: ['./assignmentdetail.component.css']\r\n})\r\nexport class AssignmentdetailComponent implements OnInit {\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private fileUploader: FileuploaderService,\r\n              private staticdataService: StaticdataService,\r\n              public alertService: AlertService) {}\r\n\r\n  public assignmentForm: FormGroup;\r\n  public submitted = false;\r\n  success = null;\r\n  files: any[] = [];\r\n  imagepath;\r\n  uploadedFile;\r\n  staticData: StaticData;\r\n  levels;\r\n  subjects;\r\n\r\n  @Input()\r\n  course: Demo;\r\n\r\n  @Input()\r\n  students: any[] = [];\r\n\r\n  @Output()\r\n  assignmentCreated = new EventEmitter<boolean>();\r\n\r\n\r\n  menuItems = [{\r\n      id: 0,\r\n      value: 'Assignment',\r\n      icon: 'assignment_turned_in'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Quiz Assignment',\r\n      icon: 'batch_prediction'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Question',\r\n      icon: 'help'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Material',\r\n      icon: 'menu_book'\r\n    },\r\n    {\r\n      id: 0,\r\n      value: 'Topic',\r\n      icon: 'local_library'\r\n    },\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this.assignmentForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      topic: ['', Validators.required],\r\n      subject: ['', Validators.required],\r\n      grade: ['', Validators.required],\r\n      points: ['', Validators.required],\r\n      dueDate: ['', Validators.required],\r\n      instructions: [''],\r\n      assignmentFile: ['', Validators.required],\r\n    });\r\n\r\n    this.staticdataService.getStaticDataSets()\r\n      .subscribe(x => {\r\n        this.staticData = x;\r\n        this.levels = this.staticData.groups;\r\n        this.subjects = x.subjects.filter((thing, i, arr) => arr.findIndex(t => t.name === thing.name) === i);\r\n      });\r\n  }\r\n\r\n  get f() {\r\n    return this.assignmentForm.controls;\r\n  }\r\n\r\n  dropped(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  fileBrowse(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.assignmentForm.valid) {\r\n      const assignment: Assignment = {\r\n        title: this.f.title.value,\r\n        topic: this.f.topic.value,\r\n        instructorId: this.authService.userValue.id,\r\n        subject: this.f.subject.value,\r\n        grade: this.f.grade.value,\r\n        points: this.f.points.value,\r\n        startDate: new Date(),\r\n        dueDate: this.f.dueDate.value,\r\n        instructions: this.f.instructions.value,\r\n        assignmentFile: null,\r\n        questionSetId: 0,\r\n        courseId: this.course?.courseId,\r\n        studentAssignments: null,\r\n      };\r\n\r\n      this.uploadFile(this.files).then(event => {\r\n        assignment.assignmentFile = event.filepath;\r\n        this.courseService.createAssignment(assignment).subscribe(x => {\r\n          if (x.assignmentId >= 0){\r\n            this.success = 'Created Assignment Succesfully';\r\n            this.assignmentCancelled();\r\n          }\r\n          else{\r\n            this.success = 'Unable to Create Assignment at this time';\r\n          }\r\n        }, (error) => {\r\n          this.alertService.error('Unable to Create Assignment at this time');\r\n        });\r\n    });\r\n    }\r\n  }\r\n\r\n  getStudentAssignments(){\r\n    const studentsList: StudentAssignment[] = [];\r\n    this.students.forEach(x => {\r\n      if (x !== null){\r\n        const assignment: StudentAssignment = { userId : x.id };\r\n        studentsList.push(assignment);\r\n      }\r\n    });\r\n    return studentsList;\r\n  }\r\n\r\n  prepareFilesList(files: Array<any>) {\r\n    for (const item of files) {\r\n      item.progress = 0;\r\n      this.files.push(item);\r\n    }\r\n    console.log(this.files[0]);\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.imagepath = e.target.result;\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n    this.uploadFilesSimulator(0);\r\n  }\r\n\r\n  uploadFilesSimulator(index: number) {\r\n    setTimeout(() => {\r\n      if (index === this.files.length) {\r\n        return;\r\n      } else {\r\n        const progressInterval = setInterval(() => {\r\n          if (this.files[index].progress === 100) {\r\n            clearInterval(progressInterval);\r\n            this.uploadFilesSimulator(index + 1);\r\n          } else {\r\n            this.files[index].progress += 5;\r\n          }\r\n        }, 200);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n    const k = 1024;\r\n    const dm = decimals <= 0 ? 0 : decimals || 2;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  uploadFile(files) {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const fileToUpload =  files[0] as File;\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    return this.fileUploader.uploadFile(formData)\r\n      .toPromise();\r\n  }\r\n\r\n  assignmentCancelled(){\r\n    this.assignmentCreated.emit(true);\r\n  }\r\n\r\n}\r\n","<mat-card class=\"m-2\">\r\n  <form [formGroup]=\"assignmentForm\" (submit)=\"onSubmit()\">\r\n    <mat-card-content class=\"text-center\">\r\n      <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"success && submitted\">{{success}}</div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Exam Title</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"title\" id=\"title\" placeholder=\"Exam Title\">\r\n            <mat-icon matPrefix>queue_play_next</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Exam Topic</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"topic\" id=\"topic\" placeholder=\"topic\">\r\n            <mat-icon matPrefix>chrome_reader_mode</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Subject</mat-label>\r\n            <mat-select id=\"subject\" formControlName=\"subject\">\r\n              <mat-option>None</mat-option>\r\n              <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject.name\">\r\n                {{subject.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-icon matPrefix>subject</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Grade/Standard</mat-label>\r\n            <mat-select id=\"grade\" formControlName=\"grade\">\r\n              <mat-option>None</mat-option>\r\n              <mat-option *ngFor=\"let level of levels\" [value]=\"level.groupId\">\r\n                Grade - {{level.groupName}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-icon matPrefix>class</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Points</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"points\" id=\"points\" placeholder=\"Points\">\r\n            <mat-icon matPrefix>grading</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Due Date</mat-label>\r\n            <input matInput formControlName=\"dueDate\" id=\"dueDate\" [matDatepicker]=\"picker\" placeholder=\"Due Date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Instructions (Optional)</mat-label>\r\n          <textarea matInput placeholder=\"Instructions (Optional)\" matInput formControlName=\"instructions\"\r\n            id=\"instructions\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"container\" appDragndir (fileDropped)=\"dropped($event)\">\r\n        <input type=\"file\" class=\"fileinput\" #fileDropRef id=\"fileDropRef\" formControlName=\"assignmentFile\"\r\n          (change)=\"fileBrowse($event.target.files)\" />\r\n        <h3 class=\"text-dark\">Drag and Drop the file</h3>\r\n      </div>\r\n      <div class=\"info\">\r\n        <h4 class=\"name\">\r\n          {{ files[0]?.name }}\r\n        </h4>\r\n        <p class=\"size\" *ngIf=\"files.length>0\">\r\n          {{files[0]?.progress}}% of {{ formatBytes(files[0]?.size,0) }}\r\n        </p>\r\n        <mat-progress-bar mode=\"buffer\" [color]=\"'primary'\" [value]=\"files[0]?.progress\"\r\n          [bufferValue]=\"files[0]?.progress\">\r\n        </mat-progress-bar>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-footer>\r\n      <button class=\"ml-2 btn btn-md\" type=\"reset\" (click)=\"assignmentForm.reset()\" mat-raised-button>Reset</button>\r\n      <span class=\"float-right\">\r\n        <button class=\"mr-2 btn btn-md\" color=\"warn\" (click)=\"assignmentCancelled()\" mat-raised-button>Cancel</button>\r\n        <button class=\"mr-2 btn btn-md\" color=\"accent\" type=\"submit\" mat-raised-button>Save</button>\r\n      </span>\r\n      <mat-card-actions>\r\n      </mat-card-actions>\r\n    </mat-card-footer>\r\n  </form>\r\n</mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AuthserviceService } from './authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Calendar, CalendarResponse } from '../_models/calendar';\r\nimport { Demo } from '../_models/demo';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseService {\r\n\r\n  constructor(private http: HttpClient, private authService: AuthserviceService) {\r\n  }\r\n\r\n  getAllCourses(){\r\n    return this.http.get<any>(`${environment.apiUrl}/courses/allcourses`);\r\n  }\r\n\r\n  getAllCoursesByUser(userid){\r\n      const options = userid ? { params: new HttpParams().set('id', userid)} : {};\r\n      return this.http.get<Demo[]>(`${environment.apiUrl}/vevent/byuser`, options);\r\n  }\r\n\r\n  getAllCoursesByloggedUser(){\r\n  }\r\n\r\n  createCourse(course){\r\n    return this.http.post<any>(`${environment.apiUrl}/courses​/create`, course);\r\n  }\r\n\r\n  getCalendars(){\r\n    return this.http.get<any>(`${environment.apiUrl}/Calendar`);\r\n  }\r\n\r\n  getCalendarById(userId){\r\n    return this.http.get<CalendarResponse>(`${environment.apiUrl}/Calendar`);\r\n  }\r\n\r\n  createCalendar(calendar){\r\n    return this.http.post<any>(`${environment.apiUrl}/Calendar`, calendar);\r\n  }\r\n\r\n  createAssignment(assignment){\r\n    return this.http.post<any>(`${environment.apiUrl}/assignment`, assignment, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  addstudentstoassignment(assignments){\r\n    return this.http.post<any>(`${environment.apiUrl}/studentassignments`, assignments, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getAssignmentByTutor(userId){\r\n    const options = userId ?\r\n      { params: new HttpParams().set('id', userId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/assignment/bytutor`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n\r\n  getAssignmentByUser(userId){\r\n    const options = userId ?\r\n      { params: new HttpParams().set('id', userId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/assignment`, options);\r\n  }\r\n\r\n  getStudentAssignments(userId){\r\n    return this.http.get<any>(`${environment.apiUrl}/studentassignments/bystudent`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', userId)\r\n    });\r\n  }\r\n\r\n  updateStudentAssignments(assignment){\r\n    return this.http.put<any>(`${environment.apiUrl}/studentassignments`, assignment, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getTutorStudentAssignments(userId){\r\n    return this.http.get<any>(`${environment.apiUrl}/studentassignments/bytutor`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', userId)\r\n    });\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport {\r\n  UserService\r\n} from 'src/app/_services/user.service';\r\nimport {\r\n  User\r\n} from 'src/app/_models/user';\r\nimport {\r\n  StaticdataService\r\n} from 'src/app/_services/staticdata.service';\r\nimport {\r\n  StaticData\r\n} from 'src/app/_models/static';\r\nimport {\r\n  WeekDay,\r\n  formatDate\r\n} from '@angular/common';\r\nimport {\r\n  Profile\r\n} from 'src/app/_models/profile';\r\nimport {\r\n  HttpEventType\r\n} from '@angular/common/http';\r\nimport {\r\n  FileuploaderService\r\n} from 'src/app/_services/fileuploader.service';\r\nimport {\r\n  read\r\n} from 'fs';\r\nimport {\r\n  EventEmitter\r\n} from 'protractor';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\nimport {\r\n  format\r\n} from 'date-fns/fp';\r\nimport {\r\n  MatDialog\r\n} from '@angular/material/dialog';\r\nimport {\r\n  ProfilemodelComponent\r\n} from '../profilemodel/profilemodel.component';\r\nimport {\r\n  AlertService\r\n} from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  user: User;\r\n  profile: User;\r\n  staticData: StaticData;\r\n  public submitted = false;\r\n  proof;\r\n  successmessage = false;\r\n  proofdocument;\r\n  uploadedFile;\r\n  levels;\r\n  subjects;\r\n\r\n  days = [{\r\n      day: 'Monday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Tuesday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Wednesday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Thursday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Friday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Saturday',\r\n      selected: false\r\n    },\r\n    {\r\n      day: 'Sunday',\r\n      selected: false\r\n    }\r\n  ];\r\n  allChecked = false;\r\n\r\n  qualifications = [{\r\n      id: 1,\r\n      value: 'No High School'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'Some High School'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'High School Diploma or GED'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: 'Associate Degree'\r\n    },\r\n    {\r\n      id: 5,\r\n      value: 'Bachelors'\r\n    },\r\n    {\r\n      id: 6,\r\n      value: 'Masters'\r\n    },\r\n    {\r\n      id: 7,\r\n      value: 'Post Grad'\r\n    },\r\n    {\r\n      id: 8,\r\n      value: 'Doctorate'\r\n    },\r\n    {\r\n      id: 9,\r\n      value: 'Professional Degree'\r\n    },\r\n    {\r\n      id: 9,\r\n      value: 'Professional Certificate'\r\n    },\r\n  ];\r\n\r\n  nacategories = [{\r\n      id: 0,\r\n      value: 'Music',\r\n      subcategories: [{\r\n          id: 0,\r\n          value: 'Classical Music'\r\n        },\r\n        {\r\n          id: 1,\r\n          value: 'Tabla'\r\n        },\r\n        {\r\n          id: 2,\r\n          value: 'Piano'\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      id: 1,\r\n      value: 'Cricket',\r\n      subcategories: [{\r\n          id: 0,\r\n          value: 'Batsmen'\r\n        },\r\n        {\r\n          id: 1,\r\n          value: 'Bowler'\r\n        },\r\n        {\r\n          id: 2,\r\n          value: 'Wicket keeper'\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'Tennis',\r\n      subcategories: [{\r\n          id: 0,\r\n          value: 'Batsmen'\r\n        },\r\n        {\r\n          id: 1,\r\n          value: 'Bowler'\r\n        },\r\n        {\r\n          id: 2,\r\n          value: 'Wicket keeper'\r\n        },\r\n      ]\r\n    },\r\n  ];\r\n\r\n  nasubcategories = [{\r\n      id: 1,\r\n      value: 'Music'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'Cricket'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'Tennis'\r\n    },\r\n  ];\r\n\r\n  agegroups = [{\r\n      id: 1,\r\n      value: '5 to 10'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: '11 to 19'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: '20 to 35'\r\n    }\r\n  ];\r\n\r\n  @ViewChild('fileInput', {\r\n    static: false\r\n  }) fileInput: ElementRef;\r\n  files = [];\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private userService: UserService,\r\n              private staticdataService: StaticdataService,\r\n              private fileUploader: FileuploaderService,\r\n              public authService: AuthserviceService,\r\n              public dialog: MatDialog,\r\n              public alertService: AlertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userForm = this.formBuilder.group({\r\n      firstname: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      lastname: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      profilemail: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      profilephone: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      password: [{\r\n        value: '',\r\n        disabled: true\r\n      }, Validators.required],\r\n      gender: [{\r\n        value: '',\r\n        disabled: false\r\n      }, Validators.required],\r\n      birthdate: [{\r\n        value: '',\r\n        disabled: false\r\n      }, Validators.required],\r\n      profilePic: [`assets/profile-pic.svg`],\r\n      streetAddress1: ['', Validators.required],\r\n      streetAddress2: [''],\r\n      inputCity: ['', Validators.required],\r\n      stateCode: ['', Validators.required],\r\n      inputPin: ['', Validators.required],\r\n      national: ['', Validators.required],\r\n      backgroundtype: ['', Validators.required],\r\n      medium: ['', Validators.required],\r\n      subject: ['', Validators.required],\r\n      board: [''],\r\n      standard: [''],\r\n      qualification: [''],\r\n      isteacher: [''],\r\n      tutorexp: [''],\r\n      tutorpreference: [''],\r\n      dayselection: [''],\r\n      distance: [''],\r\n      timing: [''],\r\n      rate: [''],\r\n      currency: [''],\r\n      proof: [''],\r\n      proofDoc: [''],\r\n      demo: [''],\r\n      interests: [''],\r\n      nacategory: [''],\r\n      nasubcategory: [''],\r\n      agegroup: [''],\r\n      certification: [''],\r\n    });\r\n    this.getUser();\r\n    this.staticdataService.getStaticDataSets()\r\n      .subscribe(x => {\r\n        this.staticData = x;\r\n        this.levels = this.staticData.groups;\r\n        this.subjects = x.subjects.filter((thing, i, arr) => arr.findIndex(t => t.name === thing.name) === i);\r\n      });\r\n  }\r\n\r\n  getUser() {\r\n    const currentUser: User = this.authService.userValue;\r\n    this.userService.get(currentUser.id).subscribe(data => {\r\n      this.user = data;\r\n      this.updateFormValus(data);\r\n    });\r\n    return currentUser;\r\n  }\r\n\r\n  get f() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  fileread(callback) {\r\n    const file = this.f.proofDoc.value;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (() => {\r\n      callback(reader.result);\r\n    });\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.userForm.valid) {\r\n      const userValues = {\r\n        id: this.profile.id,\r\n        firstName: this.f.firstname.value,\r\n        lastName: this.f.lastname.value,\r\n        email: this.f.profilemail.value,\r\n        phone: this.f.profilephone.value,\r\n        profilePic: this.f.profilePic.value,\r\n        address: {\r\n          addressType: '1',\r\n          addressId: this.profile.address ? this.profile.address.addressId : 0,\r\n          address1: this.f.streetAddress1.value,\r\n          address2: this.f.streetAddress2.value,\r\n          city: this.f.inputCity.value,\r\n          pinCode: this.f.inputPin.value,\r\n          stateCd: this.f.stateCode.value,\r\n          id: this.profile.id,\r\n          countryCd: 'IND',\r\n        },\r\n        accountDetails: {\r\n          id: this.profile.accountDetails ? this.profile.id : 0,\r\n          profilePic: this.f.profilePic.value === `assets/profile-pic.svg` ? null : this.f.profilePic.value,\r\n          sex: this.f.gender.value,\r\n          dateOfBirth: this.f.birthdate.value,\r\n          enrollmentDate: new Date(),\r\n          naCategory: this.f.nacategory.value,\r\n          naSubCategory: this.f.nasubcategory.value,\r\n          ageGroup: this.f.agegroup.value,\r\n          certification: this.f.certification.value,\r\n          board: this.f.board.value.join(','),\r\n          academyTypeId: (this.f.backgroundtype.value === undefined || this.f.backgroundtype.value === null)\r\n                                                      ? 0 : Number.parseInt(this.f.backgroundtype.value, 10),\r\n          subjects: this.f.subject.value.join(','),\r\n          level: this.f.standard.value.join(','),\r\n          isTutorBefore: this.f.isteacher.value === undefined ? false : this.f.isteacher.value,\r\n          professionalDescription: this.f.tutorexp.value,\r\n          highestEducation: this.f.qualification.value,\r\n          preference: this.f.tutorpreference.value,\r\n          availableDays: this.days.filter(x => x.selected === true).map(x => x.day).join(','),\r\n          preferredDistance: this.f.distance.value === undefined || this.f.distance.value === null\r\n                                                  ? 0 : Number.parseInt(this.f.distance.value, 10),\r\n          preferredTimeSlot: this.f.timing.value,\r\n          hourlyRate: this.f.rate.value === undefined || this.f.rate.value === null ? 0 :  Number.parseInt(this.f.rate.value, 10),\r\n          currency: this.f.currency.value,\r\n          idType: this.f.proof.value,\r\n          idDoc: this.f.proofDoc.value,\r\n          demoLink: this.f.demo.value,\r\n          intersets: this.f.interests.value,\r\n          medium: this.f.medium.value.join(',')\r\n        },\r\n      };\r\n      this.userService.updateProfileData(userValues)\r\n        .subscribe((x: User) => {\r\n            if (x !== (null || undefined)) {\r\n              this.alertService.success('Profile Updated Succesfully');\r\n            } else {\r\n              this.alertService.error('Profile is not Updated');\r\n            }\r\n          },\r\n          (error) => this.alertService.error(error));\r\n    }\r\n  }\r\n\r\n  getByteArray(file) {\r\n\r\n  }\r\n\r\n  updateFormValus(user: User) {\r\n    this.profile = user;\r\n    const available = user?.accountDetails?.availableDays?.split(',');\r\n    this.days.forEach(a => {\r\n      if (available ?.some(y => y === a.day)) {\r\n        a.selected = true;\r\n      }\r\n    });\r\n    this.userForm.patchValue({\r\n      firstname: user?.firstName,\r\n      lastname: user?.lastName,\r\n      profilemail: user?.email,\r\n      profilephone: user?.phone,\r\n      password: null,\r\n      gender: user?.accountDetails?.sex,\r\n      birthdate: user?.accountDetails?.dateOfBirth ? formatDate(user?.accountDetails?.dateOfBirth, 'yyyy-MM-dd', 'en-us') : null,\r\n      profilePic: user?.accountDetails ?.profilePic === null ? `assets/profile-pic.svg` : user?.accountDetails?.profilePic,\r\n      streetAddress1: user?.address?.address1,\r\n      streetAddress2: user?.address?.address2,\r\n      inputCity: user?.address?.city,\r\n      stateCode: user?.address?.stateCd,\r\n      inputPin: user?.address?.pinCode,\r\n      national: user?.address?.countryCd,\r\n      backgroundtype: user?.accountDetails?.academyTypeId.toString(),\r\n      medium: user?.accountDetails?.medium.split(','),\r\n      subject: user?.accountDetails?.subjects.split(','),\r\n      board: user?.accountDetails?.board.split(','),\r\n      standard: user?.accountDetails?.level.split(',').map(x => Number.parseInt(x, 10)),\r\n      qualification: user?.accountDetails?.highestEducation,\r\n      isteacher: (user?.accountDetails?.isTutorBefore) ? 'true' : 'false',\r\n      tutorexp: user?.accountDetails?.professionalDescription,\r\n      tutorpreference: user?.accountDetails?.preference,\r\n      dayselection: user?.accountDetails?.availableDays,\r\n      distance: user?.accountDetails?.preferredDistance,\r\n      timing: user?.accountDetails?.preferredTimeSlot,\r\n      rate: user?.accountDetails?.hourlyRate,\r\n      currency: user?.accountDetails?.currency,\r\n      proof: user?.accountDetails?.idType,\r\n      demo: user?.accountDetails?.demoLink,\r\n      interests: user?.accountDetails?.intersets,\r\n      agegroup: user?.accountDetails?.ageGroup,\r\n      certification: user?.accountDetails?.certification,\r\n      nacategory: user?.accountDetails?.naCategory,\r\n      nasubcategory: user?.accountDetails?.naSubCategory,\r\n    });\r\n  }\r\n\r\n  callUploadService(file) {}\r\n\r\n  uploadFile(files, type) {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const fileToUpload = files[0] as File;\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    const filepath = this.fileUploader.uploadFile(formData)\r\n      .subscribe(event => {\r\n        if (type === 0) {\r\n          this.uploadedFile = event.filepath;\r\n          this.userForm.get('profilePic').setValue(this.uploadedFile);\r\n        } else {\r\n          this.proofdocument = event.filepath;\r\n          this.userForm.get('proofDoc').setValue(this.proofdocument);\r\n        }\r\n      });\r\n  }\r\n\r\n  onClick() {\r\n    const fileInput = this.fileInput.nativeElement;\r\n    fileInput.onchange = () => {};\r\n    fileInput.click();\r\n  }\r\n\r\n  changeDays(checker, day) {\r\n    day.selected = checker;\r\n    this.allChecked = this.days.filter(t => t.selected).length > 0 ? false : this.allChecked;\r\n  }\r\n\r\n  changeAll(completed: boolean) {\r\n    this.allChecked = completed;\r\n    if (this.days == null) {\r\n      return;\r\n    }\r\n    this.days.forEach(t => {\r\n      if (completed === true) {\r\n        t.selected = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(ProfilemodelComponent, {\r\n      width: '350px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result !== null && result !== undefined) {\r\n        this.userForm.get('profilePic').setValue(result.image);\r\n        this.uploadFile(result.file, 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubCategory() {\r\n    return this.nacategories.filter(x => x.value === this.userForm.get('nacategory').value)[0] ?.subcategories ;\r\n  }\r\n\r\n  reset() {\r\n    this.getUser();\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"card p-margin\">\r\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"card-header\" [ngClass]=\"{'pink-bg': authService?.userValue?.role === 0}\">\r\n        <span>My Profile</span>\r\n      </div>\r\n      <div class=\"card-body white-bg card-scroll\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-3 order-sm-last text-center\">\r\n            <img [src]=\"userForm.get('profilePic').value\" alt=\"upload image\" (click)=\"openDialog()\" class=\"img img-thumbnail\">\r\n          </div>\r\n          <div class=\"col-sm-9\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>First Name</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"firstname\" id=\"firstname\" placeholder=\"Enter First Name\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Last Name</mat-label>\r\n                  <input matInput type=\"lastname\" formControlName=\"lastname\" id=\"lastname\"\r\n                    placeholder=\"Enter Last Name\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input type=\"email\" matInput formControlName=\"profilemail\" id=\"profilemail\"\r\n                    placeholder=\"Please Provide a Valid Email\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Phone</mat-label>\r\n                  <input matInput type=\"tel\" formControlName=\"profilephone\" id=\"profilephone\"\r\n                    placeholder=\"Please Provide a Valid Phone\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group col-md-6\">\r\n                <mat-label>Sex: </mat-label>\r\n                <mat-radio-group formControlName=\"gender\" [ngClass]=\"{ 'is-invalid': submitted && f.gender.errors }\">\r\n                  <mat-radio-button value=\"1\">Male</mat-radio-button>\r\n                  <mat-radio-button value=\"2\">Female</mat-radio-button>\r\n                </mat-radio-group>\r\n                <div *ngIf=\"submitted && f.gender.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.gender.errors.required\">Gender is Required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"birthdate\">Date Of Birth</mat-label>\r\n                  <input matInput formControlName=\"birthdate\" type=\"date\" id=\"birthdate\" [ngClass]=\"{ 'is-invalid': submitted && f.birthdate.errors }\">\r\n                  <div *ngIf=\"submitted && f.birthdate.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.birthdate.errors.required\">Date Of Birth is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"address-divider\">Address:</div> -->\r\n        <h4 class=\"address-div\">Address</h4>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"streetAddress1\">Street Address</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"streetAddress1\" id=\"streetAddress1\"\r\n                    placeholder=\"1234 Main St\" [ngClass]=\"{ 'is-invalid': submitted && f.streetAddress1.errors }\">\r\n                    <div *ngIf=\"submitted && f.streetAddress1.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.streetAddress1.errors.required\">Address is required</div>\r\n                    </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"streetAddress2\">Strret Address Line 2</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"streetAddress2\" id=\"streetAddress2\"\r\n                    placeholder=\"Apartment, studio, or floor\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"inputCity\">City</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"inputCity\" id=\"inputCity\" [ngClass]=\"{ 'is-invalid': submitted && f.inputCity.errors }\">\r\n                  <div *ngIf=\"submitted && f.inputCity.errors\" class=\"invalid-feedback\" >\r\n                    <div *ngIf=\"f.inputCity.errors.required\">City is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"stateCode\">State</mat-label>\r\n                  <mat-select id=\"stateCode\" formControlName=\"stateCode\" [ngClass]=\"{ 'is-invalid': submitted && f.stateCode.errors }\">\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor=\"let state of staticData?.states\" [value]=\"state.stateCd\">\r\n                      {{state.stateName}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"submitted && f.stateCode.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.stateCode.errors.required\">State is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"inputPin\">PinCode</mat-label>\r\n                  <input matInput type=\"text\" matInput id=\"inputPin\" formControlName=\"inputPin\" [ngClass]=\"{ 'is-invalid': submitted && f.inputPin.errors }\">\r\n                  <div *ngIf=\"submitted && f.inputPin.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.inputPin.errors.required\">Pincode is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"national\">Nationality</mat-label>\r\n                  <mat-select id=\"national\" formControlName=\"national\" [ngClass]=\"{ 'is-invalid': submitted && f.national.errors }\">\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor=\"let country of staticData?.countries\" [value]=\"country.countryCd\">\r\n                      {{country.countryName}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"submitted && f.national.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.national.errors.required\">Country is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h4 class=\"address-div\">Professional Background</h4>\r\n        <div class=\"row\">\r\n          <div class=\"form-group col-12\">\r\n            <mat-label>Professional Background</mat-label>\r\n            <mat-radio-group formControlName=\"backgroundtype\">\r\n              <mat-radio-button value=\"1\">Academic</mat-radio-button>\r\n              <mat-radio-button value=\"2\">Non Academic</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <span [ngSwitch]=\"userForm.get('backgroundtype').value === '1' \">\r\n            <span *ngSwitchCase=\"true\">\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"medium\">Medium Of Education</mat-label>\r\n                    <mat-select id=\"medium\" multiple formControlName=\"medium\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let medium of staticData?.mediums\" [value]=\"medium.mediumName\">\r\n                        {{medium.mediumName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"subject\">Subject Selection</mat-label>\r\n                      <mat-select id=\"subject\" multiple formControlName=\"subject\">\r\n                        <mat-option>None</mat-option>\r\n                        <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject.name\">\r\n                          {{subject.name}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"board\">Education Board</mat-label>\r\n                    <mat-select id=\"board\" multiple formControlName=\"board\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let board of staticData?.boards\" [value]=\"board.boardName\">\r\n                        {{board.boardName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"standard\">Class/Grade</mat-label>\r\n                    <mat-select id=\"standard\" multiple formControlName=\"standard\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let level of levels\" [value]=\"level.groupId\">\r\n                        Grade - {{level.groupName}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </span>\r\n            <span *ngSwitchCase=\"false\">\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"nacategory\">Type Of Category/Activity</mat-label>\r\n                    <mat-select id=\"nacategory\" formControlName=\"nacategory\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let cat of nacategories; let i= index\" [value]=\"cat.value\">\r\n                        {{cat.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"nasubcategory\">Sub Category</mat-label>\r\n                    <mat-select id=\"nasubcategory\" formControlName=\"nasubcategory\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let subcat of getSubCategory()\" [value]=\"subcat?.value\">\r\n                        {{subcat?.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"agegroup\">Age Group</mat-label>\r\n                    <mat-select id=\"agegroup\" formControlName=\"agegroup\">\r\n                      <mat-option>None</mat-option>\r\n                      <mat-option *ngFor=\"let group of agegroups\" [value]=\"group.value\">\r\n                        {{group.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"certification\">Certification Details</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"certification\" id=\"certification\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </span>\r\n            </span>\r\n\r\n            <div class=\"form-row\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n                <div class=\"col-md-6\">\r\n                  <span [ngSwitch]=\"userForm.get('backgroundtype').value === '1'\">\r\n                    <span *ngSwitchCase=\"true\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"qualification\">Highest Education Qualification</mat-label>\r\n                    <mat-select id=\"qualification\" formControlName=\"qualification\">\r\n                      <mat-option *ngFor=\"let qualify of qualifications\" [value]=\"qualify.value\">{{qualify.value}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </span>\r\n                <span *ngSwitchCase=\"false\">\r\n\r\n                </span>\r\n                </span>\r\n                </div>\r\n\r\n              <div class=\"form-group col-md-6\">\r\n                <mat-label>Do you have a teacher Qualification?</mat-label>\r\n                <mat-radio-group formControlName=\"isteacher\">\r\n                  <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n                  <mat-radio-button value=\"false\">No</mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n              <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"tutorexp\">If you have tutored before, tell us about it here.</mat-label>\r\n                  <textarea matInput id=\"tutorexp\" formControlName=\"tutorexp\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h4 class=\"address-div\" *ngIf=\"authService?.userValue?.role === 'Tutor'\">Tutor Details</h4>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div *ngIf=\"authService?.userValue?.role === 'Tutor'\">\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-label>Preferred Teaching Style</mat-label>\r\n                  <mat-radio-group formControlName=\"tutorpreference\">\r\n                    <mat-radio-button value=\"Online\">Online</mat-radio-button>\r\n                    <mat-radio-button value=\"Offline\">Offline</mat-radio-button>\r\n                    <mat-radio-button value=\"Both\">Both</mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-label>Which days are you able to tutor?</mat-label>\r\n                  <section>\r\n                    <mat-checkbox class=\"day-margin\" [checked]=\"allChecked\" (change)=\"changeAll($event.checked)\">All\r\n                    </mat-checkbox>\r\n                    <mat-checkbox class=\"day-margin\" [checked]=\"day.selected\" (change)=\"changeDays($event.checked, day)\"\r\n                      *ngFor=\"let day of days\">{{day.day | slice:0:3}}</mat-checkbox>\r\n                  </section>\r\n                  <!-- <mat-selection-list #dat>\r\n                            <mat-list-option *ngFor=\"let day of days\">\r\n                              {{day | slice:0:3}}\r\n                            </mat-list-option>\r\n                          </mat-selection-list> -->\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"distance\">How far would you travel to tutor?</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"distance\" id=\"distance\"\r\n                      placeholder=\"Type your text here..\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"timing\">Which times are you available.</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"timing\" id=\"timing\"\r\n                      placeholder=\"Type your text here..\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"rate\">Hourly Rate</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"rate\" id=\"rate\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"currency\">Currency</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"currency\" id=\"currency\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"d-flex\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <mat-label for=\"proof\">Government ID proof</mat-label>\r\n                      <mat-select id=\"proof\" formControlName=\"proof\">\r\n                        <mat-option selected value=\"Drivers Licence\">Drivers Licence</mat-option>\r\n                        <mat-option value=\"Aadhar Card\">Aadhar Card</mat-option>\r\n                        <mat-option value=\"Other\">Other</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <div class=\"pl-2 pr-2\">\r\n                      <input type=\"file\" #file formControlName=\"proofDoc\" placeholder=\"Choose file\" name=\"formFile\" (change)=\"uploadFile(file.files, 1)\" style=\"display:none;\">\r\n                      <button type=\"button\" class=\"btn btn-success d-none d-md-block\" (click)=\"file.click()\">Browse</button>\r\n                      <button mat-icon-button class=\"d-block d-md-none\" color=\"primary\" (click)=\"file.click()\"><mat-icon>attach_file</mat-icon></button>\r\n                      <!-- <ngx-mat-file-input formControlName=\"proofDoc\" id=\"proofDoc\">\r\n                      </ngx-mat-file-input> -->\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label for=\"demo\">Teaching Demo Link</mat-label>\r\n                    <input matInput type=\"text\" matInput id=\"demo\" formControlName=\"demo\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"interests\">To help us make this match give us some idea of your interests, hobbies\r\n                    etc.</mat-label>\r\n                  <textarea matInput id=\"interests\" formControlName=\"interests\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"card-footer bg-light\">\r\n        <mat-card-actions class=\"footer-buttons clearfix\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <button mat-raised-button color=\"secondary\" (click)=\"reset()\" class=\"m-2\">Reset</button>\r\n            <div class=\"d-flex\">\r\n              <button mat-raised-button  color=\"secondary\" class=\"m-2\">Cancel</button>\r\n              <button mat-raised-button type=\"submit\" color=\"accent\" class=\"m-2\">Update Profile</button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </mat-card-actions>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input\r\n} from '@angular/core';\r\nimport {\r\n  Alert,\r\n  AlertType\r\n} from 'src/app/_models/alert';\r\nimport {\r\n  Subscription\r\n} from 'rxjs';\r\nimport {\r\n  Router,\r\n  NavigationStart\r\n} from '@angular/router';\r\nimport {\r\n  AlertService\r\n} from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-alerts',\r\n  templateUrl: './alerts.component.html',\r\n  styleUrls: ['./alerts.component.css']\r\n})\r\nexport class AlertsComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() id = 'default-alert';\r\n  @Input() fade = true;\r\n\r\n  alerts: Alert[] = [];\r\n  alertSubscription: Subscription;\r\n  routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private alertService: AlertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.alertSubscription = this.alertService.onAlert(this.id)\r\n      .subscribe(alert => {\r\n        if (!alert.message) {\r\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n          return;\r\n        }\r\n\r\n        this.alerts.push(alert);\r\n\r\n        if (alert.autoClose) {\r\n          setTimeout(() => this.removeAlert(alert), 3000);\r\n        }\r\n      });\r\n\r\n    this.routeSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alertService.clear(this.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alertSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    if (!this.alerts.includes(alert)) {\r\n      return;\r\n    }\r\n\r\n    if (this.fade) {\r\n      this.alerts.find(x => x === alert).fade = true;\r\n      setTimeout(() => {\r\n        this.alerts = this.alerts.filter(x => x !== alert);\r\n      }, 250);\r\n    } else {\r\n      this.alerts = this.alerts.filter(x => x !== alert);\r\n    }\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) {\r\n      return;\r\n    }\r\n\r\n    const classes = ['alert', 'alert-dismissable'];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: 'alert alert-success',\r\n      [AlertType.Error]: 'alert alert-danger',\r\n      [AlertType.Info]: 'alert alert-info',\r\n      [AlertType.Warning]: 'alert alert-warning'\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push('fade');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n}\r\n","<div class=\"alert-location\">\r\n  <div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  UserService\r\n} from 'src/app/_services/user.service';\r\nimport {\r\n  User\r\n} from 'src/app/_models/user';\r\nimport * as moment from 'moment';\r\nimport {\r\n  MatDialog\r\n} from '@angular/material/dialog';\r\nimport {\r\n  DemomodelComponent\r\n} from '../demomodel/demomodel.component';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AlertboxComponent } from '../alertbox/alertbox.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-tutors',\r\n  templateUrl: './tutors.component.html',\r\n  styleUrls: ['./tutors.component.css']\r\n})\r\nexport class TutorsComponent implements OnInit {\r\n\r\n  public tutors: any;\r\n  weekArray: string[] = [];\r\n  public slicedTutors: any;\r\n  public searchForm: FormGroup;\r\n  query1;\r\n  query2;\r\n  query3;\r\n  demos;\r\n  disableDemo = false;\r\n  demoDisabled = false;\r\n  classDisabled = false;\r\n\r\n  constructor(private userservice: UserService,\r\n              public dialog: MatDialog,\r\n              private authService: AuthserviceService,\r\n              private demoService: DemoService,\r\n              private _snackBar: MatSnackBar,\r\n              private formBuilder: FormBuilder,\r\n              private studentService: StudentService,\r\n              private alertService: AlertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    this.userservice.getUserByRole(1).subscribe(x => {\r\n      this.tutors = x;\r\n      this.sliceTutors(x);\r\n    },\r\n    (error) => this.alertService.error(error));\r\n\r\n    this.studentService.getEnrollmentsbyStudent(this.authService.userValue.id).subscribe(x => {\r\n      this.demos = x.filter(y => y.event.isDemo);\r\n    });\r\n\r\n    this.loadRequests();\r\n\r\n    const weekarrays = moment.weekdays();\r\n    weekarrays.join('-');\r\n    this.weekArray.push('Monday to Thursday');\r\n    this.weekArray.push('Friday');\r\n    this.weekArray.push('Saturday, Sunday');\r\n  }\r\n\r\n  private loadRequests() {\r\n    this.studentService.getRequestsbyStudent(this.authService.userValue.id).subscribe(x => {\r\n      const today = new Date();\r\n      let demoCount = 0;\r\n      x.forEach(element => {\r\n        const requestDate = new Date(element.date);\r\n        if (element?.event?.isDemo === true && requestDate.getMonth() === today.getMonth() &&\r\n          requestDate.getFullYear() === today.getFullYear()) {\r\n          demoCount++;\r\n        }\r\n      });\r\n      this.disableDemo = demoCount > 2;\r\n    });\r\n  }\r\n\r\n  get f() { return this.searchForm.controls; }\r\n\r\n  sliceTutors(tutors){\r\n    this.slicedTutors = tutors?.slice(0, 4);\r\n  }\r\n\r\n  createForm(){\r\n    this.searchForm = this.formBuilder.group({\r\n      location : null,\r\n      subject : null,\r\n      tutor: null,\r\n      indicator: null\r\n      });\r\n  }\r\n\r\n  bookClass(e, tutor, type) {\r\n    this.selectDemo(e, tutor, type);\r\n  }\r\n\r\n  selectDemo(e, tutor, type) {\r\n    if ((type === true && this.demoDisabled) || (type === false && this.classDisabled)){\r\n      return;\r\n    }\r\n    const tutordialog =   this.dialog.open(DemomodelComponent, {\r\n      width: '350px',\r\n      data: {\r\n        tutorinfo: tutor,\r\n        student:  this.authService.userValue,\r\n        courses: tutor.events?.filter(x => x.isDemo === type),\r\n        type\r\n      }\r\n    });\r\n    tutordialog.afterClosed().subscribe(result => {\r\n      if (result !== null){\r\n        this.demoService.requestDemo(result).subscribe(\r\n          x => {\r\n            this._snackBar.openFromComponent(AlertboxComponent, {\r\n              duration: 5000,\r\n              data: { message: x?.requestId > 0  ? 'Request Sent to Tutor' : 'Unable to Send Request'},\r\n            });\r\n            this.loadRequests();\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  pagechange(event: PageEvent){\r\n    const startIndex = event.pageIndex * event.pageSize;\r\n    let endIndex = startIndex + event.pageSize;\r\n\r\n    if (endIndex > this.tutors.length){\r\n      endIndex = this.tutors.length;\r\n    }\r\n\r\n    this.slicedTutors = this.tutors.slice(startIndex, endIndex);\r\n  }\r\n\r\n  filterItem(){\r\n    let filteredItems = this.tutors;\r\n    if (this.f.location.value !== null &&  this.f.location.value !== undefined){\r\n      const keys = 'address1,city,pincode';\r\n      filteredItems = filteredItems.filter(item =>\r\n        item.address?.address1.toLowerCase().includes(this.f.location.value.toLowerCase())\r\n        || item.address?.city.toLowerCase().includes(this.f.location.value.toLowerCase())\r\n        || item.address?.pincode.toLowerCase().includes(this.f.location.value.toLowerCase()));\r\n    }\r\n    if (this.f.subject.value !== null && this.f.subject.value !== undefined){\r\n      const keys = 'subjects, level';\r\n      filteredItems = filteredItems.filter(item =>\r\n        item.accountDetails.subjects.toLowerCase().includes(this.f.subject.value.toLowerCase())\r\n        || item.accountDetails.level.toLowerCase().includes(this.f.subject.value.toLowerCase()));\r\n    }\r\n    if (this.f.tutor.value !== null && this.f.tutor.value !== undefined){\r\n      const keys = 'name';\r\n      filteredItems = filteredItems.filter(item =>\r\n        item.name?.toLowerCase().includes(this.f.tutor.value.toLowerCase()));\r\n    }\r\n    this.slicedTutors = filteredItems.slice(0, 4);\r\n  }\r\n\r\n  getDisabled(tutor, item){\r\n    if (item){\r\n      const demos = tutor.events?.filter(x => x.isDemo === true);\r\n      this.demoDisabled = !(demos?.length > 0 && !this.disableDemo);\r\n      return this.demoDisabled;\r\n    }\r\n    else{\r\n      const classes = tutor.events?.filter(x => x.isDemo === false);\r\n      this.classDisabled = !(classes?.length > 0);\r\n      return this.classDisabled;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"m-4 bg-tutor\">\r\n  <mat-toolbar class=\"tutor-header\">\r\n    <span>Book Tutor</span>\r\n    <span class=\"lead\" *ngIf=\"disableDemo\">Maximum Demo Limit of 3 per month reached</span>\r\n  </mat-toolbar>\r\n  <div class=\"card min-card\">\r\n    <div class=\"card-header bg-white\">\r\n      <form [formGroup]=\"searchForm\" (submit)=\"filterItem()\">\r\n        <div class=\"d-flex justify-content-between flex-wrap flex-lg-nowrap\">\r\n          <mat-form-field>\r\n            <mat-label>Area</mat-label>\r\n            <input matInput placeholder=\"Area\" formControlName=\"location\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>place</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n          <mat-form-field >\r\n            <mat-label>Subjects, Grades, etc.</mat-label>\r\n            <input matInput placeholder=\"Subjects, Grades, etc.\" formControlName=\"subject\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>school</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-label>Tutor</mat-label>\r\n            <input matInput placeholder=\"Tutor\" formControlName=\"tutor\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>person_outline</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n          <div class=\"w-100\">\r\n            <!-- <mat-radio-group formControlName=\"indicator\">\r\n              <mat-radio-button value=\"online\">Online</mat-radio-button>\r\n              <mat-radio-button value=\"offline\">Offline</mat-radio-button>\r\n              <mat-radio-button value=\"both\">Both</mat-radio-button>\r\n            </mat-radio-group> -->\r\n            <button mat-raised-button type=\"submit\" color=\"primary\">\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <!-- <div class=\"row w-100\">\r\n        <div class=\"col-md-3\">\r\n          <mat-form-field>\r\n            <mat-label>Area</mat-label>\r\n            <input matInput placeholder=\"Area\" >\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>place</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n          <mat-form-field>\r\n            <mat-label>Subjects, Grades, etc.</mat-label>\r\n            <input matInput placeholder=\"Subjects, Grades, etc.\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>school</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <mat-form-field>\r\n            <mat-label>Tutor</mat-label>\r\n            <input matInput placeholder=\"Tutor\" [(ngModel)]=\"query\">\r\n            <button mat-icon-button matPrefix>\r\n              <mat-icon>person_outline</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n          <a mat-icon-button>\r\n            <mat-icon>search</mat-icon>\r\n          </a>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div *ngIf=\"!slicedTutors || slicedTutors?.length === 0\" class=\"d-flex flex-column\">\r\n        <h2 class=\"search-text\">Searching...</h2>\r\n        <h2 class=\"search-text\">Best suitable Tutor(s) for you</h2>\r\n        <img src=\"assets/tutor.png\" class=\"tutor-img\" />\r\n      </div>\r\n      <div class=\"card mb-3\"\r\n        *ngFor=\"let tutor of slicedTutors\">\r\n        <div class=\"row text-vs-center no-gutters\">\r\n          <div class=\"col-md-2\">\r\n            <!-- <img  [src]=\"tutor.profilePic\"> -->\r\n            <img [src]=\"tutor.accountDetails?.profilePic || 'assets/profile-pic.svg'\" class=\"img-thumbnail p-2 mx-auto d-block\">\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <h5 class=\"card-title text-dark\">\r\n                    <a class=\"tutor-name\">{{tutor.name | uppercase}}\r\n                    </a>\r\n                  </h5>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star_half</mat-icon>\r\n                  <mat-icon [ngStyle]=\"{'color':'yellow'}\">star_border</mat-icon>\r\n                  <ul class=\"list-group list-group-horizontal justify-vs-center\">\r\n                    <li class=\"list-group-item border-0 p-2\">\r\n                      <span class=\"review\">Teaching</span>\r\n                      <span class=\"review-val\">70%</span>\r\n                      <mat-progress-spinner class=\"example-margin\" diameter=\"30\" [color]=\"'primary'\"\r\n                        [mode]=\"'determinate'\" [value]=\"70\">\r\n                      </mat-progress-spinner>\r\n                    </li>\r\n                    <li class=\"list-group-item border-0 p-2\">\r\n                      <span class=\"review\">Knowledge</span>\r\n                      <span class=\"review-val\">80%</span>\r\n                      <mat-progress-spinner class=\"example-margin\" diameter=\"30\" [color]=\"'warn'\" [mode]=\"'determinate'\"\r\n                        [value]=\"80\">\r\n                      </mat-progress-spinner>\r\n                    </li>\r\n                    <li class=\"list-group-item border-0 p-2\">\r\n                      <span class=\"review\">Freiendly</span>\r\n                      <span class=\"review-val\">90%</span>\r\n                      <mat-progress-spinner class=\"example-margin\" diameter=\"30\" [color]=\"'secondary'\"\r\n                        [mode]=\"'determinate'\" [value]=\"90\">\r\n                      </mat-progress-spinner>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <mat-divider [vertical]=\"true\">\r\n                </mat-divider>\r\n                <div class=\"col-md-5\">\r\n                  <span>Schedules</span>\r\n                  <div *ngIf=\"!tutor.events || tutor.events.length === 0\"\r\n                    class=\"alert alert-info\">\r\n                    No Schedule is Available\r\n                  </div>\r\n                  <ul class=\"list-group text-list list-height\">\r\n                    <li class=\"list-group-item p-1 border-0 d-flex justify-content-between align-items-center\"\r\n                      *ngFor=\"let assignment of tutor.events\">\r\n                      {{assignment.startDate | date:'mediumDate'}}\r\n                      <span class=\"badge badge-pill\"\r\n                        [ngClass]=\"assignment.isDemo ? 'badge-primary' : 'badge-warning'\"\r\n                        matTooltip=\"{{assignment.title}}\">{{assignment.startTime}} :\r\n                        {{assignment.endTime}}</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <!-- <div class=\"d-flex justify-content-center\">\r\n                    <button mat-icon-button class=\"btn-icons\">\r\n                      <mat-icon>email</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button class=\"btn-icons\">\r\n                      <mat-icon>call</mat-icon>\r\n                    </button>\r\n                  </div> -->\r\n                  <mat-chip-list class=\"mat-chip-list-stacked\">\r\n                    <mat-chip class=\"book\" [disabled]=\"getDisabled(tutor, false)\"\r\n                      (click)=\"bookClass($event, tutor, false)\">Book</mat-chip>\r\n                    <mat-chip class=\"demo\" [disabled]=\"getDisabled(tutor, true)\"\r\n                      (click)=\"selectDemo($event,tutor, true)\">Schedule A Demo</mat-chip>\r\n                  </mat-chip-list>\r\n                  <!-- <mat-chip-list>\r\n                        <mat-chip class=\"book\">Book</mat-chip>\r\n                        <mat-chip class=\"demo\">Schedule A Demo</mat-chip>\r\n                    </mat-chip-list> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <mat-paginator [length]=\"tutors?.length\" [pageSize]=\"4\" [pageSizeOptions]=\"[4, 8, 12, 16]\"\r\n        (page)=\"pagechange($event)\"> </mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NotificationsService } from 'src/app/_services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'app-broadcast',\r\n  templateUrl: './broadcast.component.html',\r\n  styleUrls: ['./broadcast.component.css']\r\n})\r\nexport class BroadcastComponent implements OnInit {\r\n\r\n  broadcastForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n              private notificationService: NotificationsService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.broadcastForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      message: ['', Validators.required],\r\n      url: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  broadcast(){\r\n    console.log(this.broadcastForm.get('url').value);\r\n    this.notificationService.broadcast({\r\n      url: this.broadcastForm.get('url').value,\r\n      message: this.broadcastForm.get('message').value,\r\n      title: this.broadcastForm.get('title').value,\r\n    }).subscribe(() => {\r\n      this.broadcastForm.reset();\r\n    });\r\n  }\r\n}\r\n","<h1>Broadcast messages</h1>\r\n<form [formGroup]=\"broadcastForm\" (ngSubmit)=\"broadcast()\" class=\"form\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label>Title</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"title\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label>Message</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"message\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"form-group\">\r\n            <label>Url</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"url\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Broadcast</button>\r\n        </div>\r\n      </div>\r\n</form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: `https://localhost:44385/api`,\r\n  applicationServerPublicKey: `BK1AabF3PRWyqtFwz8-8NvCdG35Ze5GbRW6YdN1cqSsws2H3nIYNGiYnmTD45XRcul556ZUk2p8oURhVlaC4tWI`,\r\n  mapbox_accessToken: `pk.eyJ1IjoiYWRtaW4yMTkiLCJhIjoiY2tkbjV1bGFoMDdyNjJ1cWp6OW9vYTc2cCJ9.f3iM4kZihwi3_7gKEEsZ8g`,\r\n  mapbox_api: `https://api.mapbox.com/geocoding/v5/`,\r\n  braincert_key: `oAQbTjuSbktWkNvVPHWY`,\r\n  braincert_api: `https://api.braincert.com`,\r\n  cloudinary: {\r\n    url: `https://api.cloudinary.com/v1_1/dfsizfwtr`,\r\n    key: `519897199111461`,\r\n    secret: `sCtuDGDDq_p8tCQuSKMTgJ6slAA`,\r\n    environmet: `CLOUDINARY_URL=cloudinary://519897199111461:sCtuDGDDq_p8tCQuSKMTgJ6slAA@dfsizfwtr`\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AuthserviceService } from './authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Demo } from '../_models/demo';\r\nimport { DemoRequest } from '../_models/demorequest';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DemoService {\r\n\r\n  constructor(private http: HttpClient, private authService: AuthserviceService) { }\r\n\r\n  getAllDemos(){\r\n    return this.http.get<any>(`${environment.apiUrl}/demos/allcourses`);\r\n  }\r\n\r\n  getDemoById(id){\r\n    return this.http.get<any>(`${environment.apiUrl}/vevent`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', id)\r\n    });\r\n  }\r\n\r\n  getAllDemosByUser(userid){\r\n    const options = userid ?\r\n    { params: new HttpParams().set('id', userid)} : {};\r\n    return this.http.get<Demo[]>(`${environment.apiUrl}/vevent/byuser`, options);\r\n  }\r\n\r\n  getAllDemosByloggedUser(){\r\n  }\r\n\r\n  createDemo(demo){\r\n    return this.http.post<any>(`${environment.apiUrl}/vevent`, demo);\r\n  }\r\n\r\n  requestDemo(demo){\r\n    return this.http.post<any>(`${environment.apiUrl}/request`, demo, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getDemoRequests(userId){\r\n    const options = userId ?\r\n    { params: new HttpParams().set('id', userId)} : {};\r\n\r\n    return this.http.get<DemoRequest[]>(`${environment.apiUrl}/request/byuser`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mainlayout',\r\n  templateUrl: './mainlayout.component.html',\r\n  styleUrls: ['./mainlayout.component.css']\r\n})\r\nexport class MainlayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-alerts></app-alerts>\r\n<app-sidenav-bar></app-sidenav-bar>\r\n<app-footer></app-footer>\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function IsMatch(control1: string, control2: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[control1];\r\n        const matchControl = formGroup.controls[control2];\r\n\r\n        if (matchControl.errors && !matchControl.errors.mustMatch) {\r\n            return;\r\n        }\r\n\r\n        if (control.value !== matchControl.value) {\r\n            matchControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchControl.setErrors(null);\r\n        }\r\n    };\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-adminpayments',\n  templateUrl: './adminpayments.component.html',\n  styleUrls: ['./adminpayments.component.css']\n})\nexport class AdminpaymentsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  error;\n\n  constructor(private userService: UserService, private alertService: AlertService) { }\n\n  displayedColumns: string[] = ['sno', 'class', 'tutor', 'amount', 'date'];\n  dataSource: MatTableDataSource<any>;\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource();\n    this.loadStudents();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadStudents(){\n    this.dataSource.data = [\n      {\n        class: 'Maths Session 1',\n        tutor: 'John Doe',\n        amount: 2000,\n        date: new Date(),\n      },\n      {\n        class: 'Physics Session 1',\n        tutor: 'John Doe 1',\n        amount: 5000,\n        date: new Date(),\n      },\n      {\n        class: 'English Session 1',\n        tutor: 'John Doe 2',\n        amount: 6000,\n        date: new Date(),\n      },\n    ];\n    // this.userService.getStudents().subscribe(x => {\n    //   this.dataSource.data = x;\n    // }, (error) => {\n    //   this.alertService.error(error);\n    // });\n  }\n\n  click(event, row){\n\n  }\n\n  applyFilter(eve){\n    const filterValue = (eve.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n}\n","<div class=\"tutor-table\">\n  <h1>Payments</h1>\n  <div class=\"form-group row\">\n    <div class=\"offset-md-8 col-md-4\">\n      <div class=\"input-group mb-2\">\n        <input class=\"form-control input-rounded\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\" #input>\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <mat-icon>search</mat-icon>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"mat-container mat-elevation-z8\">\n    <table mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"sno\" sticky>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No. </th>\n        <td mat-cell *matCellDef=\"let i = index\">\n        {{this.paginator?.pageIndex == 0 ? i + 1 : 1 + i + this.paginator?.pageIndex * this.paginator?.pageSize}}\n      </td>\n      </ng-container>\n      <ng-container matColumnDef=\"class\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Class </th>\n        <td mat-cell *matCellDef=\"let row\"><a href (click)=\"click($event,row)\">{{row.class}}</a> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"tutor\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Tutor </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.tutor}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.amount}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"date\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.date | date}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthserviceService,\n              private router: ActivatedRoute) { }\n\n  isTutor;\n  passwordForm: FormGroup;\n  passwordsubmitted;\n  loadforgot;\n  error;\n  success;\n\n  ngOnInit(): void {\n    const role = this.router.snapshot.queryParams.role;\n    this.isTutor = role === 'tutor';\n    this.passwordForm = this.formBuilder.group({\n      email: ['', Validators.required]\n    });\n  }\n\n  get p(){\n    return this.passwordForm.controls;\n  }\n\n  onpasswordSubmit() {\n    this.passwordsubmitted = true;\n\n    this.loadforgot = true;\n    if (this.passwordForm.valid){\n      this.authService.forgotpassword(this.passwordForm.value).subscribe(x => {\n        this.success = x.message;\n        this.loadforgot = false;\n      }, (error) => {\n        this.loadforgot = false;\n        this.error = error;\n      });\n    }\n  }\n}\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor? '':'main-bg'\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n  </mat-toolbar>\n  <div class=\"equal-container login-side\">\n    <div class=\"equal-col\">\n      <div>\n        <div class=\"card rounded\">\n          <div class=\"card-body\" class=\"log-form-mr bg-white\">\n            <div class=\"card-header text-center bg-transparent border-0\">\n              <h2 class=\"m-2\">Reset Password</h2>\n              <img class=\"h-vs\" src=\"assets/icons/vidhya-sandhhan.svg\">\n            </div>\n            <form [formGroup]=\"passwordForm\" class=\"m-4\" (ngSubmit)=\"onpasswordSubmit()\">\n              <div class=\"form-group loginform\">\n                <mat-label for=\"email\">Provide Email to Reset Password:</mat-label>\n                <mat-form-field appearance=\"outline\">\n                  <mat-label for=\"email\">Email</mat-label>\n                  <span matPrefix>\n                    <mat-icon color=\"primary\">email</mat-icon>\n                    <mat-divider [vertical]=\"true\"></mat-divider>\n                  </span>\n                  <input matInput type=\"email\" formControlName=\"email\"\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.email.errors }\" />\n                  <div *ngIf=\"passwordsubmitted && p.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"p.email.errors.required\">Email is required</div>\n                  </div>\n                </mat-form-field>\n              </div>\n              <div class=\"d-flex justify-content-between text-white\">\n                <a class=\"btn btn-secondary\" type=\"submit\" [routerLink]=\"['/login']\" role=\"button\">Login?</a>\n                <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loadforgot\">\n                  <span *ngIf=\"loadforgot\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                  Submit\n                </button>\n              </div>\n              <div *ngIf=\"passwordsubmitted && success\" class=\"alert alert-success mt-3 mb-0\">{{success}}</div>\n              <div *ngIf=\"passwordsubmitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","export class Alert {\r\n  id: string;\r\n  type: AlertType;\r\n  message: string;\r\n  autoClose: boolean;\r\n  keepAfterRouteChange: boolean;\r\n  fade: boolean;\r\n\r\n  constructor(init?:Partial<Alert>) {\r\n      Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport enum AlertType {\r\n  Success,\r\n  Error,\r\n  Info,\r\n  Warning\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-noassignments',\r\n  templateUrl: './noassignments.component.html',\r\n  styleUrls: ['./noassignments.component.css']\r\n})\r\nexport class NoassignmentsComponent implements OnInit {\r\n\r\n  menuItems = [\r\n    {id: 0, value: 'Assignment', icon: 'assignment_turned_in'},\r\n    {id: 1, value: 'Quiz Assignment', icon: 'batch_prediction'},\r\n    // {id: 2, value: 'Question', icon: 'help'},\r\n    // {id: 3, value: 'Material', icon: 'menu_book'},\r\n    {id: 2, value: 'Topic', icon: 'local_library'},\r\n  ];\r\n\r\n  @Output() assignmentEmitter = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addEvent(item){\r\n    this.assignmentEmitter.emit(item);\r\n  }\r\n\r\n\r\n}\r\n","<!-- <div class=\"card-header bg-primary\">\r\n  <h2 class=\"my-event\">Assignments</h2>\r\n</div> -->\r\n  <h1 class=\"card-title\">\r\n    <p class=\"Start-your-journey-b\">\r\n      You haven't created any Assignments yet,\r\n    </p>\r\n    <p class=\"Start-your-journey-b\">\r\n      Click <span style=\"font-weight: bold;\">'+'</span> icon to create an assignment, Quiz, and Q&A..etc..  \r\n    </p>\r\n\r\n  </h1>\r\n<div class=\"event-img\">\r\n  <img class=\"img img-responsive\" src=\"assets/assignments/assignment_bg1.png\"\r\n  srcset=\"assets/assignments/assignment_bg2.png 2x,\r\n  assets/assignments/assignment_bg3.png 3x\">\r\n</div>\r\n<a class=\"ml-auto m-4 circle-add float-right\" mat-mini-fab [matMenuTriggerFor]=\"menu\">\r\n  <mat-icon>add</mat-icon>\r\n</a>\r\n<mat-menu #menu=\"matMenu\" yPosition=\"above\">\r\n  <a mat-menu-item *ngFor=\"let item of menuItems\" (click)=\"addEvent(item)\">\r\n    <mat-icon>{{item.icon}}</mat-icon>\r\n    <span>{{item.value}}</span>\r\n  </a>\r\n</mat-menu>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport {\r\n  MatTableDataSource\r\n} from '@angular/material/table';\r\nimport {\r\n  DemoService\r\n} from 'src/app/_services/demo.service';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\nimport {\r\n  MatPaginator\r\n} from '@angular/material/paginator';\r\nimport {\r\n  MatSort\r\n} from '@angular/material/sort';\r\nimport {\r\n  CourseService\r\n} from 'src/app/_services/course.service';\r\n\r\n@Component({\r\n  selector: 'app-evaluate',\r\n  templateUrl: './evaluate.component.html',\r\n  styleUrls: ['./evaluate.component.css']\r\n})\r\nexport class EvaluateComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private demoService: DemoService,\r\n              private authService: AuthserviceService,\r\n              private assignments: CourseService) {\r\n    this.getassigments();\r\n  }\r\n\r\n  sortoptions = [{\r\n      id: 0,\r\n      value: 'Most Recent'\r\n    },\r\n    {\r\n      id: 1,\r\n      value: 'Oldest'\r\n    }\r\n  ];\r\n\r\n  doEvaluate = false;\r\n\r\n  resultsLength = 0;\r\n  dataSource: MatTableDataSource < any > ;\r\n  primary = 'primary';\r\n  selectedValue = 0;\r\n  selectedCourse;\r\n  isLoading;\r\n  courses;\r\n  selectedRow;\r\n  displayedColumns: string[] = ['name', 'grade', 'period', 'topic', 'attachment', 'status', 'points', 'action'];\r\n\r\n  @ViewChild(MatPaginator, {\r\n    static: false\r\n  }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {\r\n    static: false\r\n  }) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource();\r\n    this.getassigments();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  displaycourse(course) {\r\n    return course.title;\r\n  }\r\n\r\n  getassigments() {\r\n    this.assignments.getTutorStudentAssignments(this.authService.userValue.id).subscribe((x: []) => {\r\n      this.dataSource.data = x;\r\n      return x;\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue) {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n    this.dataSource.filter = filterValue;\r\n\r\n    if (this.dataSource?.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  actionSelected(row) {\r\n    this.doEvaluate = true;\r\n    this.selectedRow = row;\r\n  }\r\n\r\n  selectValue(event) {\r\n    if (event.isReturn) {\r\n      this.doEvaluate = false;\r\n    }\r\n  }\r\n\r\n  downloadFile(file: string) {\r\n    if (file?.length > 0) {\r\n      window.open(file);\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-container [ngSwitch]=\"!doEvaluate\">\r\n  <div *ngSwitchCase=\"true\">\r\n    <mat-card class=\"min-card\">\r\n      <mat-card-header class=\"header-rad\">\r\n        <mat-card-title class=\"evaluate-tasks\">Evaluate Tasks</mat-card-title>\r\n        <mat-card-subtitle>Total Tasks: {{dataSource.data.length}}</mat-card-subtitle>\r\n        <div class=\"row ml-auto\">\r\n          <div class=\"col-md-6\">\r\n            <mat-form-field>\r\n              <input matInput type=\"text\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\r\n              <button mat-button matSuffix mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <mat-form-field>\r\n              <mat-select [(ngModel)]=\"selectedValue\" name=\"item\">\r\n                <mat-option *ngFor=\"let item of sortoptions\" [value]=\"item.id\">\r\n                  {{item.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <!-- <div class=\"col-md-3\">\r\n                    <mat-chip-list>\r\n                        <mat-chip class=\"bg-primary\" [color]=\"primary\">Print <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-printer\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M11 2H5a1 1 0 0 0-1 1v2H3V3a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2h-1V3a1 1 0 0 0-1-1zm3 4H2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h1v1H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1z\"/>\r\n                            <path fill-rule=\"evenodd\" d=\"M11 9H5a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1zM5 8a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H5z\"/>\r\n                            <path d=\"M3 7.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z\"/>\r\n                          </svg></mat-chip>\r\n                        <mat-chip  class=\"bg-primary\" [color]=\"primary\">Export <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-box-arrow-in-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" d=\"M4.646 8.146a.5.5 0 0 1 .708 0L8 10.793l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                            <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0v-9A.5.5 0 0 1 8 1z\"/>\r\n                            <path fill-rule=\"evenodd\" d=\"M1.5 13.5A1.5 1.5 0 0 0 3 15h10a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 13 4h-1.5a.5.5 0 0 0 0 1H13a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5v-8A.5.5 0 0 1 3 5h1.5a.5.5 0 0 0 0-1H3a1.5 1.5 0 0 0-1.5 1.5v8z\"/>\r\n                          </svg>\r\n                        </mat-chip>\r\n                    </mat-chip-list>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\">Online</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\">Offline</button>\r\n                    </div>\r\n                </div> -->\r\n        </div>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <!-- <div class=\"row\">\r\n                <div class=\"col-md-3 ml-auto\">\r\n                    <mat-form-field>\r\n                        <mat-label for=\"course\">Course</mat-label>\r\n                        <input matInput type=\"text\" id=\"course\"  [matAutocomplete]=\"loc\" placeholder=\"Course\">\r\n                        <mat-autocomplete #loc=\"matAutocomplete\" autoActiveFirstOption=\"true\" [displayWith]=\"displaycourse\" (optionSelected)='getattendance($event.option.value)'>\r\n                          <mat-option *ngFor=\"let course of courses\" [value]=\"course\">\r\n                            {{course.locationName}}\r\n                          </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div> -->\r\n        <div class=\"example-container mat-elevation-z8\">\r\n          <table mat-table #table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Student Name </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <img class=\"rounded-circle\" [src]=\"row.account.accountDetails[0]?.profilePic\" width=\"30\" height=\"30\">\r\n                {{row.account.firstName}} {{row.account.lastName}}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"grade\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Grade </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.grade}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"period\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Assignment Period </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.startDate | date}} -\r\n                {{row.assignment.dueDate | date}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"topic\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Topic </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.topic}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"attachment\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Attachment(s) </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <a (click)=\"downloadFile(row.assignment.assignmentFile)\">\r\n                  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-download\" fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\"\r\n                      d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n                    <path fill-rule=\"evenodd\"\r\n                      d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\" />\r\n                  </svg> Download\r\n                </a>\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <span [ngSwitch]=\"row.isPresent === undefined || row.isPresent === null\">\r\n                  <p *ngSwitchCase=\"true\">\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-slash-circle-fill\" fill=\"#ff0000\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\"\r\n                        d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708l-7 7a.5.5 0 0 0 .708.708l7-7z\" />\r\n                    </svg>\r\n                    Incomplete\r\n                  </p>\r\n                  <p *ngSwitchCase=\"false\">\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill\" fill=\"#039f02\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fill-rule=\"evenodd\"\r\n                        d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n                    </svg>\r\n                    Done\r\n                  </p>\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"points\">\r\n              <th mat-header-cell *matHeaderCellDef> Points </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.assignment.points}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef> Action </th>\r\n              <td mat-cell *matCellDef=\"let row\">\r\n                <mat-chip color=\"accent\" selected class=\"text-white m-2\" (click)=\"actionSelected(row)\">\r\n                  Evaluate\r\n                </mat-chip>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          </table>\r\n        </div>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[4, 8, 12]\" showFirstLastButtons></mat-paginator>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <!-- <button mat-button>Ok</button> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  <div *ngSwitchCase=\"false\">\r\n    <app-evaluation-detail [student]=\"selectedRow\" (onSelectValue)='selectValue($event)'></app-evaluation-detail>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Customvalidators } from 'src/app/_helpers/customvalidators';\nimport { IsMatch } from 'src/app/_helpers/fieldmatcher';\nimport { User } from 'src/app/_models/user';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-promoterregister',\n  templateUrl: './promoterregister.component.html',\n  styleUrls: ['./promoterregister.component.css']\n})\nexport class PromoterregisterComponent implements OnInit {\n\n  constructor( private formBuilder: FormBuilder,\n               private userService: UserService,\n               private alertService: AlertService) { }\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  isAlert = '';\n  error = '';\n  success;\n  options = {\n    autoClose: true,\n    keepAfterRouteChange: true\n  };\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      password: [ null, Validators.compose([\n        Validators.required,\n        Customvalidators.patternValidator(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, { isInvalid: true }),\n        Validators.minLength(8)])\n     ],\n      role: [''],\n      confirmPassword: [''],\n    }, {validator: IsMatch('password', 'confirmPassword') });\n  }\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit(){\n    this.error = null;\n    this.submitted = true;\n    if (this.registerForm.invalid){\n      return;\n    }\n\n    const regUser: User = {\n       firstName : this.f.firstName.value,\n       lastName: this.f.lastName.value,\n       email: this.f.email.value,\n       password: this.f.password.value,\n       phone: this.f.phone.value,\n       username: this.f.email.value,\n       role: 4,\n    };\n\n    this.userService.addUser(regUser)\n    .subscribe(data => {\n      if (data === true){\n        this.alertService.success('Registration Complete. Check your email to confirm!', this.options);\n      }else{\n        this.alertService.error('Unable to Complete Registration', this.options);\n      }\n     }, error => this.alertService.error(error, this.options));\n\n  }\n\n  registered(){\n    this.success = null;\n    this.registerForm.reset();\n  }\n\n}\n","<div class=\"pbg-1\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n  </mat-toolbar>\n  <div class=\"content-fit\">\n    <form [formGroup]=\"registerForm\" class=\"log-form-mr\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"p-4\">\n        <div class=\"card-header bg-img  log-header text-center\">\n          <div class=\"signup-txt\">Register For Free</div>\n          <div class=\"p-2 fillout\"><small>Please fill out the form below to get started.</small></div>\n        </div>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"firstname\">First Name</mat-label>\n          <input matInput type=\"text\" formControlName=\"firstName\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n          <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n          </div>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"lastname\">Last Name</mat-label>\n          <input matInput type=\"text\" formControlName=\"lastName\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n          <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n          </div>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"email\">Email</mat-label>\n          <input matInput type=\"email\" formControlName=\"email\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email Address is required</div>\n            <div *ngIf=\"f.email.errors.email\">Please Provide a Valid Email Address</div>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"password\">Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n          <mat-hint>Minimum 8 characters with atleast one capital letter and a number</mat-hint>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Please Provide a Password</div>\n            <div *ngIf=\"f.password.errors.pattern\">Password should be 8 characters with 1 Upper case letter and a number\n            </div>\n          </div>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"password\">Confirm Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"confirmPassword\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n          <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n            <div *ngIf=\"f.confirmPassword.errors.IsMatch\">Passwords are not matching!</div>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"phone\">Phone</mat-label>\n          <input matInput type=\"tel\" formControlName=\"phone\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\n          <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.phone.errors.required\">Please Provide a Phone number</div>\n            <div *ngIf=\"f.phone.errors.pattern\">Please provide a valid phone number</div>\n          </div>\n        </mat-form-field>\n\n        <mat-card-footer class=\"text-center justify-content-center\">\n          <mat-card-actions class=\"d-flex flex-column p-2 align-items-center\">\n            <button mat-flat-button color=\"accent\" type=\"submit\" [disabled]=\"loading\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Register\n            </button>\n            <!-- <a mat-flat-button color=\"accent\" [routerLink]=\"'/register'\">Sign Up</a> -->\n            <div class=\"mt-2 p-2 login\">Already have an account? <a [routerLink]=\"['/promoter/login']\">Login</a></div>\n          </mat-card-actions>\n          <div class=\"m-1\">\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success\">\n              <strong>{{success}}</strong>\n              <mat-icon (click)=\"registered()\">close</mat-icon>\n            </div>\n            <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"error\">\n              <strong>Unable to Register!</strong>\n              <mat-icon (click)=\"error = null\">close</mat-icon>\n            </div>\n          </div>\n        </mat-card-footer>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitelayout',\r\n  templateUrl: './sitelayout.component.html',\r\n  styleUrls: ['./sitelayout.component.css']\r\n})\r\nexport class SitelayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-sitenav></app-sitenav>\r\n<router-outlet></router-outlet>\r\n<app-sitefooter></app-sitefooter>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'tutorfilter'\r\n})\r\nexport class TutorfilterPipe implements PipeTransform {\r\n\r\n  transform(value, keys: string, arg1: any) {\r\n    console.log(arg1);\r\n    let filterValue = (value || []);\r\n    console.log(filterValue);\r\n    if (arg1[0]){\r\n      filterValue = (filterValue).filter(item => keys.split(',').some(key => item.hasOwnProperty(key)\r\n                                                             && new RegExp(arg1[0], 'gi').test(item[key])));\r\n    }\r\n    if (arg1[1]){\r\n      filterValue = (filterValue).filter(item => keys.split(',').some(key => item.hasOwnProperty(key)\r\n      && new RegExp(arg1[1], 'gi').test(item[key])));\r\n    }\r\n    if (arg1[2]){\r\n      filterValue = (filterValue).filter(item => keys.split(',').some(key => item.hasOwnProperty(key)\r\n      && new RegExp(arg1[2], 'gi').test(item[key])));\r\n    }\r\n    return filterValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.css']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              public authservice: AuthserviceService,\r\n              private router: Router) { }\r\n\r\n  user: {\r\n    userId: '',\r\n    token: ''\r\n  };\r\n  success;\r\n  isResend;\r\n  error;\r\n\r\n  authUser: User;\r\n\r\n  ngOnInit(): void {\r\n    const token = this.route.snapshot.paramMap.get('token');\r\n    console.log(token);\r\n    this.authservice.confirmEmail(token).subscribe(x =>  this.success = true, (error) => this.success = false);\r\n    //this.router.navigate(['/login'];\r\n  }\r\n\r\n  confirmEmail(){\r\n    this.authservice.reConfirm(this.authUser).subscribe(x => this.isResend = x);\r\n  }\r\n\r\n}\r\n","<div class=\"container m-2\">\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-body\">\r\n <div [ngSwitch]=\"success\"> \r\n    <div *ngSwitchCase=\"true\">\r\n       Succesfully Completed Registration. <a [routerLink]=\"['/login']\"></a>Click Here to go back to login.\r\n    </div> \r\n    <div *ngSwitchCase=\"false\">\r\n      <div class=\"authBlock\">\r\n        <h3>Thank You for Registering</h3>\r\n\r\n        <div class=\"formGroup\" *ngIf=\"authUser\">\r\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{authUser.email}}</strong>.</p>\r\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\r\n        </div>\r\n\r\n        <div class=\"formGroup\">\r\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"confirmEmail()\">\r\n            <i class=\"fas fa-redo-alt\"></i>\r\n            Resend Verification Email\r\n          </button>\r\n          <div *ngIf=\"isResend\" class=\"alert alert-info\">Succesfully Resent for Verification</div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"redirectToLogin\">\r\n        <span>Go back to?<a class=\"redirect\" [routerLink]=\"['/login']\"> Sign in</a></span>\r\n      </div>\r\n    </div> \r\n</div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\n\r\n@Component({\r\n  selector: 'app-classroom',\r\n  templateUrl: './classroom.component.html',\r\n  styleUrls: ['./classroom.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ClassroomComponent implements OnInit {\r\n\r\n  constructor(public auth: AuthserviceService) { }\r\n\r\n  colors = {\r\n    background: 'primary',\r\n    font: 'primary'\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    if (this.auth.userValue.role === 0){\r\n      this.colors.background = 'secondary';\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"m-4\">\r\n  <p class=\"bg-tutor-primary m-2 classroom\" [ngClass]=\"{'student-header': auth.userValue.role === 0}\">My Classroom</p>\r\n  <mat-tab-group mat-align-tabs=\"end\" [color]=\"colors.font\" class=\"tabheader\" [ngClass]=\"{'bg-pink': auth.userValue.role === 0}\"\r\n   [backgroundColor]=\"colors.background\">\r\n    <mat-tab label=\"TIMETABLE\">\r\n      <ng-template matTabContent>\r\n        <app-calendar></app-calendar>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"ASSIGNMENT\" *ngIf=\"auth.userValue.role !== 'Student'\">\r\n      <ng-template matTabContent>\r\n        <app-assignments></app-assignments>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"ASSIGNMENT\" *ngIf=\"auth.userValue.role === 'Student'\">\r\n      <ng-template matTabContent>\r\n        <app-student-assignments></app-student-assignments>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Evaluate\" *ngIf=\"auth.userValue.role !== 'Student'\">\r\n      <ng-template matTabContent>\r\n        <app-evaluate></app-evaluate>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"ATTENDANCE SHEET\">\r\n      <ng-template matTabContent>\r\n        <app-attendance></app-attendance>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Demo, Enrollment } from 'src/app/_models/demo';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AlertboxComponent } from '../alertbox/alertbox.component';\r\nimport { DemoRequest } from 'src/app/_models/demorequest';\r\n\r\n@Component({\r\n  selector: 'app-demolist',\r\n  templateUrl: './demolist.component.html',\r\n  styleUrls: ['./demolist.component.css']\r\n})\r\nexport class DemolistComponent implements OnInit {\r\n\r\n  selectedAction ;\r\n  isOnline = false;\r\n  demos: Demo[] = [];\r\n  requests: DemoRequest[] = [];\r\n  filteredRequests: DemoRequest[] = [];\r\n  loadDemo = false;\r\n  checked = false;\r\n  actions = [\r\n    {id: 1, action : 'Accept', icon: 'check_circle', color: 'primary', title: 'List View'},\r\n    {id: 2, action : 'Reject', icon: 'cancel', color: 'warn', title: 'List View'},\r\n    {id: 3, action : 'Re-Schedule', icon: 'alt_route', color: 'accent', title: 'List View'},\r\n  ];\r\n\r\n  actionIcons = [\r\n    {id: 0, action : 'clicklist', icon: 'view_list', title: 'List View'},\r\n    {id: 1, action : 'clickdemo', icon: 'view_module', title: 'Demo View'},\r\n    {id: 2, action : 'clickmap', icon: 'map', title: 'Map View'},\r\n  ];\r\n\r\n  @Input()\r\n  demoId;\r\n\r\n\r\n  constructor(private demoService: DemoService,\r\n              private authService: AuthserviceService,\r\n              private studentService: StudentService,\r\n              private snackBar: MatSnackBar,\r\n              private alertcomponent: AlertboxComponent) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.selectedAction = this.actionIcons[0];\r\n    // this.demoService.getAllDemosByUser(this.authService.userValue.id)\r\n    // .subscribe(x => this.demos = x, (error) => console.log(error));\r\n\r\n    this.demoService.getDemoRequests(this.authService.userValue.id).subscribe(\r\n      x => { this.requests = x;\r\n             this.filteredRequests = x;\r\n             this.loadDemo = true;\r\n      }, (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  getDaywithFormat(day: Demo){\r\n    const setDate = new Date(day.startDate);\r\n    if (setDate){\r\n      return setDate.getDay();\r\n    }\r\n  }\r\n\r\n  changeSelected(e, action, enrollment){\r\n    console.log(enrollment);\r\n    const enrol: Enrollment = {\r\n    eventId: enrollment.event.courseId,\r\n    studentID: enrollment.account.id,\r\n    enrollmentDate: new Date(),\r\n    updateDate: new Date(),\r\n    requestId: enrollment.requestId\r\n    };\r\n    this.updateEnrollment(enrol, action.id);\r\n  }\r\n\r\n  updateEnrollment(enrollment: Enrollment, status){\r\n    enrollment.status = status;\r\n    this.studentService.saveEnrollment(enrollment).subscribe(x => {\r\n  if (x?.id > 0){\r\n    this.openSnackBar('Notified Student', null);\r\n  }\r\n  else{\r\n    this.openSnackBar('Unable to Complete', 1);\r\n  }\r\n}, (error) => {\r\n  this.openSnackBar(error, 1);\r\n});\r\n  }\r\n\r\n  openSnackBar(alert, error) {\r\n    this.snackBar.openFromComponent(AlertboxComponent, {\r\n      duration: 5 * 1000,\r\n      data: { message: alert }\r\n    });\r\n  }\r\n\r\n  filterRequests(event) {\r\n    this.loadDemo = true;\r\n    if (!this.checked){\r\n     this.filteredRequests = this.requests.filter(x => x.event.eventType === 0);\r\n   }\r\n   else{\r\n    this.filteredRequests = this.requests;\r\n   }\r\n  }\r\n  // getAdress(day: Demo){\r\n  //   const address = day.enrollments[0].student.addresses[0];\r\n  //   return address.address1  + ',' + address.address2 + ',' + address.city\r\n  // }\r\n\r\n}\r\n","<!-- <div class=\"container\">\r\n<a mat-raised-button [routerLink]=\"['/demos/create']\">Create</a>\r\n</div> -->\r\n\r\n\r\n<div class=\"card m-2 min-card\">\r\n  <!-- <div class=\"card-header bg-tutor-primary\">\r\n          <div>Demo Requests</div>\r\n        </div> -->\r\n  <div class=\"card-body\">\r\n    <div class=\"d-flex\">\r\n      <!-- <div class=\"lh-40\"> Students List</div> -->\r\n      <div class=\"ml-auto d-flex\">\r\n        <div class=\"mr-1 Layout\">LAYOUT</div>\r\n        <div class=\"mr-1 ml-1\">\r\n          <a mat-icon-button *ngFor=\"let action of actionIcons\" (click)=\"selectedAction = action\">\r\n            <mat-icon>\r\n              {{action.icon}}\r\n            </mat-icon>\r\n          </a>\r\n        </div>\r\n        <div class=\"lh-40\">\r\n          <mat-slide-toggle (toggleChange)=\"filterRequests($event)\" [(ngModel)]=\"checked\" color=\"Primary\">Online\r\n          </mat-slide-toggle>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div [ngClass]=\"{'col' : selectedAction === actionIcons[0],\r\n                  'col-md-12' : selectedAction === actionIcons[1],\r\n                  'col-md-6' : selectedAction === actionIcons[2] }\">\r\n          <div [ngClass]=\"{'card-deck': selectedAction === actionIcons[1]}\">\r\n            <div class=\"card card-chip mb-3\" *ngFor=\"let element of demoRequests\">\r\n              <div class=\"row no-gutters\">\r\n                <div [ngClass]=\"{'col-md-2' : selectedAction === actionIcons[0],\r\n                                  'col-md-12' : selectedAction === actionIcons[1],\r\n                                  'col-md-4' : selectedAction === actionIcons[2] }\">\r\n                  <div class=\"d-flex\" [ngClass]=\"{'justify-content-center' : selectedAction === actionIcons[1]}\">\r\n                    <img [src]=\"element.student.profilePic\" class=\"img-thumbnail m-2\" width=\"200\">\r\n                    <img src=\"assets/demo/group-10-copy-3.png\"\r\n                      srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                      class=\"Group-10-Copy-3\">\r\n                  </div>\r\n                </div>\r\n                <div [ngClass]=\"{'col-md-10' : selectedAction === actionIcons[0],\r\n                                  'col-md-12' : selectedAction === actionIcons[1],\r\n                                  'col-md-8' : selectedAction === actionIcons[2] }\">\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title text-dark\">\r\n                      <a class=\"Student-Name-10th-S\"> {{element.student.firstName}}\r\n                        {{element.student.lastName}}\r\n                      </a>\r\n                    </h5>\r\n                    <div class=\"card-text Requested-Subs-M\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col\">\r\n                          <p>Requested Sub(s) — {{element.subject}}</p>\r\n                          <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                            {{element.date | date: 'shortTime'}} slot</p>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                          <p class=\"address\">Address</p>\r\n                          <p class=\"v-map\">{{element.course?.locationName}} - <a\r\n                              (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                          <mat-chip-list #chipList>\r\n                            <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                              (click)=\"changeSelected($event, action, element)\">\r\n                              <mat-icon>{{action.icon}}</mat-icon>\r\n                              {{action.action}}\r\n                            </mat-chip>\r\n                          </mat-chip-list>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"col-md-6\" *ngIf=\"selectedAction == actionIcons[2]\">\r\n          <google-map height=\"500px\" width=\"100%\"></google-map>\r\n          <app-mapcomponent [markersdata]=\"demoRequests\"></app-mapcomponent>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"demoRequests.length == 0 && loadDemo\" class=\"alert alert-info\">\r\n        There are no new requests at this time.\r\n      </div>\r\n      <div class=\"text-center\">\r\n        <mat-spinner *ngIf=\"!loadDemo\" [diameter]=\"30\"></mat-spinner>\r\n      </div>\r\n    </div> -->\r\n\r\n    <ng-container [ngSwitch]=\"selectedAction\">\r\n      <div class=\"container-fluid\">\r\n        <ng-container *ngSwitchCase=\"actionIcons[0]\">\r\n          <div class=\"card card-chip mb-3\" *ngFor=\"let element of filteredRequests\">\r\n            <div class=\"row no-gutters\">\r\n              <div class=\"col-md-2\">\r\n                <div class=\"card-img\">\r\n                  <img [src]=\"element.account?.accountDetails?.profilePic || 'assets/profile-pic.svg'\"\r\n                    class=\"img-thumbnail m-2\" width=\"200\">\r\n                  <img src=\"assets/demo/group-10-copy-3.png\"\r\n                    srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                    class=\"Group-10-Copy-3\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-10\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title text-dark\">\r\n                    <a class=\"Student-Name-10th-S\"> {{element.account?.name | uppercase}}\r\n                    </a>\r\n                  </h5>\r\n                  <div class=\"card-text Requested-Subs-M\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <p>Requested Sub(s) — {{element.subject}}</p>\r\n                        <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                          {{element.date | date: 'shortTime'}} slot</p>\r\n                      </div>\r\n                      <div class=\"col\">\r\n                        <p class=\"address\">Address</p>\r\n                        <p class=\"v-map\">{{element.event?.locationName}} - <a\r\n                            (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                      </div>\r\n                      <div class=\"col-12\">\r\n                        <mat-chip-list #chipList>\r\n                          <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                            (click)=\"changeSelected($event, action, element)\">\r\n                            <mat-icon>{{action.icon}}</mat-icon>\r\n                            {{action.action}}\r\n                          </mat-chip>\r\n                        </mat-chip-list>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"actionIcons[1]\">\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4\" *ngFor=\"let element of filteredRequests\">\r\n                <div class=\"card card-chip mb-3\">\r\n                  <div class=\"row no-gutters\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"card-img\">\r\n                        <img [src]=\"element.account?.accountDetails?.profilePic || 'assets/profile-pic.svg'\"\r\n                          class=\"img-thumbnail m-2\" width=\"200\">\r\n                        <img src=\"assets/demo/group-10-copy-3.png\"\r\n                          srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                          class=\"Group-10-Copy-3\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"card-body\">\r\n                        <h5 class=\"card-title text-dark\">\r\n                          <a class=\"Student-Name-10th-S\"> {{element.account?.name | uppercase}}\r\n                          </a>\r\n                        </h5>\r\n                        <div class=\"card-text Requested-Subs-M\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col\">\r\n                              <p>Requested Sub(s) — {{element.subject}}</p>\r\n                              <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                                {{element.date | date: 'shortTime'}} slot</p>\r\n                            </div>\r\n                            <div class=\"col text-right\">\r\n                              <p class=\"address\">Address</p>\r\n                              <p class=\"v-map\">{{element.event?.locationName}} - <a\r\n                                  (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                              <mat-chip-list #chipList>\r\n                                <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                                  (click)=\"changeSelected($event, action, element)\">\r\n                                  <mat-icon>{{action.icon}}</mat-icon>\r\n                                  {{action.action}}\r\n                                </mat-chip>\r\n                              </mat-chip-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"actionIcons[2]\">\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-7\">\r\n                <div class=\"card card-chip mb-3\" *ngFor=\"let element of filteredRequests\">\r\n                  <div class=\"row no-gutters\">\r\n                    <div class=\"col-md-2\">\r\n                      <div class=\"card-img\">\r\n                        <img [src]=\"element.account?.accountDetails?.profilePic || 'assets/profile-pic.svg'\"\r\n                          class=\"img-thumbnail m-2\" width=\"200\">\r\n                        <img src=\"assets/demo/group-10-copy-3.png\"\r\n                          srcset=\"assets/demo/group-10-copy-3@2x.png 2x,assets/demo/group-10-copy-3@3x.png 3x\"\r\n                          class=\"Group-10-Copy-3\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-10\">\r\n                      <div class=\"card-body\">\r\n                        <h5 class=\"card-title text-dark\">\r\n                          <a class=\"Student-Name-10th-S\"> {{element.account.name | uppercase}}\r\n                          </a>\r\n                        </h5>\r\n                        <div class=\"card-text Requested-Subs-M\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col\">\r\n                              <p>Requested Sub(s) — {{element.subject}}</p>\r\n                              <p>Requested Demo on {{element.date | date: 'EEEE'}},\r\n                                {{element.date | date: 'shortTime'}} slot</p>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                              <p class=\"address\">Address</p>\r\n                              <p class=\"v-map\">{{element.event?.locationName}} - <a\r\n                                  (click)=\"selectedAction = actionIcons[2]\">View On Map</a></p>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                              <mat-chip-list #chipList>\r\n                                <mat-chip [color]=\"action.color\" selected *ngFor=\"let action of actions\"\r\n                                  (click)=\"changeSelected($event, action, element)\">\r\n                                  <mat-icon>{{action.icon}}</mat-icon>\r\n                                  {{action.action}}\r\n                                </mat-chip>\r\n                              </mat-chip-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-5\">\r\n                <app-mapcomponent [markersdata]=\"filteredRequests\"></app-mapcomponent>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <div *ngIf=\"filteredRequests.length == 0 && loadDemo\" class=\"alert alert-info\">\r\n      There are no new requests.\r\n    </div>\r\n    <div class=\"text-center\">\r\n      <mat-spinner *ngIf=\"!loadDemo\" [diameter]=\"30\"></mat-spinner>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-adminstudents',\n  templateUrl: './adminstudents.component.html',\n  styleUrls: ['./adminstudents.component.css']\n})\nexport class AdminstudentsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  error;\n\n  constructor(private adminService: AdminService, private alertService: AlertService) { }\n\n  displayedColumns: string[] = ['sno', 'name', 'email', 'profilePic', 'phone'];\n  dataSource: MatTableDataSource<any>;\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource();\n    this.loadStudents();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadStudents(){\n    this.adminService.getadminData().subscribe(x => {\n      this.dataSource.data = x.students;\n    }, (error) => {\n      this.alertService.error(error);\n    });\n  }\n\n  click(event, row){\n\n  }\n\n  applyFilter(eve){\n    const filterValue = (eve.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n}\n","<div class=\"tutor-table\">\n  <h1>Students</h1>\n  <div class=\"form-group row\">\n    <div class=\"offset-md-8 col-md-4\">\n      <div class=\"input-group mb-2\">\n        <input class=\"form-control input-rounded\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\" #input>\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <mat-icon>search</mat-icon>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"mat-container mat-elevation-z8\">\n    <table mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"sno\" sticky>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No. </th>\n        <td mat-cell *matCellDef=\"let i = index\">\n        {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\n      </td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n        <td mat-cell *matCellDef=\"let row\"><a href (click)=\"click($event,row)\">{{row.name | uppercase}}</a> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"profilePic\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Profile </th>\n        <td mat-cell *matCellDef=\"let row\"> <img class=\"profile\" [src]=\"row.accountDetails?.profilePic\"> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"phone\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"startdate\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Start Date </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.account.startDate}} </td>\n      </ng-container> -->\n      <!-- <ng-container matColumnDef=\"star\"  stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-icon color=\"primary\" (click)=\"click($event,row)\">visibility</mat-icon>\n        </td>\n      </ng-container> -->\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n\n\n\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {\r\n  ActivatedRoute\r\n} from '@angular/router';\r\nimport {\r\n  DemoService\r\n} from 'src/app/_services/demo.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-demodetail',\r\n  templateUrl: './demodetail.component.html',\r\n  styleUrls: ['./demodetail.component.css']\r\n})\r\nexport class DemodetailComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private demoService: DemoService) {}\r\n\r\n  @Input()\r\n  course;\r\n\r\n  @Output() listView = new EventEmitter<boolean>();\r\n\r\n  demo;\r\n  enrollments: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['name', 'email', 'phone'];\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.course);\r\n    this.demo = this.course;\r\n    const enrollmentarray = [];\r\n    this.demo?.enrollments?.forEach(e => {\r\n        enrollmentarray.push({\r\n          name : e.account.firstName + ' ' + e.account.lastName,\r\n          email: e.account.email,\r\n          phone: e.account.phone\r\n        });\r\n      });\r\n    this.enrollments = new MatTableDataSource(enrollmentarray);\r\n  }\r\n\r\n  returnToList(){\r\n    this.listView.emit(true);\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"demo-header\"> \r\n      <div class=\"d-flex\">\r\n        <a (click)=\"returnToList()\"><mat-icon>west</mat-icon></a>\r\n        <div>\r\n          <div class=\"header-title\">{{demo?.title}}</div>\r\n          <div class=\"header-subtitle\">{{demo?.locationName}}</div>\r\n          <div class=\"header-subtitle\"><a [href]=\"demo?.calendarEvent?.videoLink\">{{demo?.calendarEvent?.videoLink}}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"d-flex flex-column text-center\">\r\n          <p class=\"header-title\">{{demo?.startDate | date}} - {{demo?.endDate | date}}</p>\r\n          <p class=\"header-subtitle\">{{demo?.startTime}} - {{demo?.endTime}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <!-- <div class=\"card-title\">\r\n        Enrolled Students\r\n      </div> -->\r\n    <table mat-table #table [dataSource]=\"enrollments\">\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <img class=\"img-responsive\" src=\"assets/demo/avatar.png\">\r\n          {{row.name}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"email\">\r\n        <th mat-header-cell *matHeaderCellDef> Email </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"phone\">\r\n        <th mat-header-cell *matHeaderCellDef> Phone </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\r\n      </ng-container>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <!-- <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            New Requests\r\n          </mat-expansion-panel-header>\r\n          <app-demolist [demoId]=\"courseId\"></app-demolist>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            Enrolled Students\r\n          </mat-expansion-panel-header>\r\n\r\n        </mat-expansion-panel>\r\n      </mat-accordion> -->\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-siteaboutus',\r\n  templateUrl: './siteaboutus.component.html',\r\n  styleUrls: ['./siteaboutus.component.css']\r\n})\r\nexport class SiteaboutusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/ABOUT US</p>\r\n          <h2 class=\"welove-text\">We provide Great service,\r\n            Professional support.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/website/aboutus/about-1.png\"\r\n            srcset=\"assets/website/aboutus/about-1-1.png 2x,assets/website/aboutus/about-1-2.png 3x\" class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"about-vs\">\r\n  <div class=\"container\">\r\n    <div class=\"about-vs-text\">\r\n      <div class=\"m-2\">\r\n        <img src=\"assets/website/aboutus/about-2.png\"\r\n          srcset=\"assets/website/aboutus/about-2-1.png 2x,assets/website/aboutus/about-2-2.png 3x\" class=\"about-us-1\">\r\n      </div>\r\n      <div class=\"m-2\">\r\n        <h3 class=\"card-title we-love-dev\">About VidhyaSadhan</h3>\r\n        <p class=\"we-love-dev-text about-us-1\">Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown\r\n          printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five\r\n          centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised\r\n          in the 1960s with the release of Letraset sheets containing.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"bg-white\">\r\n  <div class=\"history\">\r\n    <div class=\"text-center\">\r\n      <h2 class=\"history-text\">Our History</h2>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <div class=\"history-card\">\r\n            <h4 class=\"history-head\">May 2020</h4>\r\n            <div>\r\n              Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit,\r\n              at vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper pellentesque orci, nec vestibulum\r\n              nibh.uspendisse\r\n            </div>\r\n          </div>\r\n          <div class=\"history-card\">\r\n            <h4 class=\"history-head\">July 2020</h4>\r\n            <div class=\"\">\r\n              Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit,\r\n              at vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper pellentesque orci, nec vestibulum\r\n              nibh.uspendisse\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"history-line\">\r\n          <div class=\"history-line-bar\" *ngFor=\"let number of [0,1,2,3,4,5,6,7]\">\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div class=\"history-card-right\">\r\n            <h4 class=\"history-head\">June 2020</h4>\r\n            <div>\r\n              Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit,\r\n              at vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper pellentesque orci, nec vestibulum\r\n              nibh.uspendisse\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p class=\"to-be-continue\">To be Continue....</p>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div class=\"team bg-white\">\r\n  <div class=\"team-cards\">\r\n    <h2 class=\"history-text\">Meet the team</h2>\r\n    <div class=\"team-card-parent\">\r\n      <div class=\"child child1\">\r\n      </div>\r\n      <div class=\"child child2\">\r\n      </div>\r\n      <div class=\"child child3\">\r\n        <div class=\"child-text\">\r\n          <h6>CEO</h6>\r\n          <p>Subash Reddy. M</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"child child4\">\r\n      </div>\r\n      <div class=\"child child5\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { LOCALE_ID, Inject, Injectable } from '@angular/core';\r\nimport { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class CustomCalendarFormat extends CalendarEventTitleFormatter {\r\n  constructor(@Inject(LOCALE_ID) private locale: string) {\r\n    super();\r\n  }\r\n\r\n  // you can override any of the methods defined in the parent class\r\n\r\n  month(event: CalendarEvent): string {\r\n    return `<b>${event.startTime} - ${event.endTime}</b> ${event.title}`;\r\n  }\r\n\r\n  week(event: CalendarEvent): string {\r\n    return `<b>${event.startTime} - ${event.endTime}</b> ${event.title}`;\r\n  }\r\n\r\n  day(event: CalendarEvent): string {\r\n    return `<b>${event.startTime} - ${event.endTime}</b> ${event.title}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthserviceService } from '../_services/authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class JwtTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthserviceService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const user = this.authService.userValue;\r\n    const isLoggedIn = user && user.jwtToken;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      const headers = new HttpHeaders({\r\n        Authorization: `Bearer ${user.jwtToken}`,\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': 'true',\r\n      });\r\n      request = request.clone({\r\n          headers\r\n        });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-adminlayout',\r\n  templateUrl: './adminlayout.component.html',\r\n  styleUrls: ['./adminlayout.component.css']\r\n})\r\nexport class AdminlayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-vsnavigation></app-vsnavigation>\r\n","import { Directive, Output,\r\n  Input,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDragndir]'\r\n})\r\nexport class DragndirDirective {\r\n\r\n  @HostBinding('class.fileover') fileOver: boolean;\r\n  @Output() fileDropped = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = true;\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n  }\r\n\r\n  @HostListener('drop', ['$event']) public ondrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n    const files = evt.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      this.fileDropped.emit(files);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.css']\n})\nexport class AddressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\n\r\n@Component({\r\n  selector: 'app-carouselhelper',\r\n  templateUrl: './carouselhelper.component.html',\r\n  styleUrls: ['./carouselhelper.component.css']\r\n})\r\nexport class CarouselhelperComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input()\r\n  slidesStore;\r\n\r\n  @Input()\r\n  sourceType;\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: false,\r\n    touchDrag: false,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      400: {\r\n        items: 2\r\n      },\r\n      740: {\r\n        items: 3\r\n      },\r\n      940: {\r\n        items: 4\r\n      }\r\n    },\r\n    nav: true\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<owl-carousel-o [options]=\"customOptions\">\r\n  <ng-container *ngFor=\"let slide of slidesStore\">\r\n    <ng-template carouselSlide [id]=\"slide.id\">\r\n      <!-- <img [src]=\"slide.src\" [alt]=\"slide.alt\" [title]=\"slide.title\"> -->\r\n      <div class=\"m-2\">\r\n        <iframe id=\"ytplayer\" type=\"text/html\" width=\"100%\" height=\"auto\" [src]=\"slide.video | urlsafe\"\r\n        frameborder=\"0\"></iframe>\r\n      </div>\r\n    </ng-template>\r\n  </ng-container>\r\n</owl-carousel-o>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-evaluation-detail',\r\n  templateUrl: './evaluation-detail.component.html',\r\n  styleUrls: ['./evaluation-detail.component.css']\r\n})\r\nexport class EvaluationDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  selectedValue: number;\r\n  starsarray = [1, 2, 3, 4, 5];\r\n\r\n  ratingList = [\r\n     {id: 1, name: 'Leadership skills', value: 0, data: this.starsarray},\r\n     {id: 2, name: 'English language knowledge', value: 0, data: this.starsarray},\r\n     {id: 3, name: 'Communication skills', value: 0, data: this.starsarray},\r\n     {id: 4, name: 'Problem solving', value: 0, data: this.starsarray},\r\n     {id: 5, name: 'Programming skills', value: 0, data: this.starsarray},\r\n     {id: 6, name: 'Ability to learning', value: 0, data: this.starsarray},\r\n     {id: 7, name: 'Workflow behavior', value: 0, data: this.starsarray},\r\n     {id: 8, name: 'Sence of humor', value: 0, data: this.starsarray}\r\n  ];\r\n\r\n  feedback1;\r\n  feedback2;\r\n\r\n  @Input()\r\n  student;\r\n\r\n  @Output()\r\n  onSelectValue = new EventEmitter<{isReturn}>();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  startCount(star, rating){\r\n    rating.value = star;\r\n    const sum = this.ratingList.map(a => a.value).reduce((a, b) =>\r\n    {\r\n      return a + b;\r\n    });\r\n\r\n    this.selectedValue = sum / 8;\r\n  }\r\n\r\n  gotolist(){\r\n    this.onSelectValue.emit( {isReturn: true});\r\n  }\r\n\r\n  reset(){\r\n    this.selectedValue = 0;\r\n    this.ratingList.forEach(x => x.value = 0);\r\n    this.feedback1 = null;\r\n    this.feedback2 = null;\r\n  }\r\n\r\n  cancel(){\r\n    this.onSelectValue.emit( {isReturn: true});\r\n  }\r\n\r\n  onSubmit(){\r\n  }\r\n\r\n\r\n}\r\n","<mat-card>\r\n  <mat-card-header class=\"header-rad\">\r\n    <mat-card-title>\r\n      <a (click)=\"gotolist()\" mat-icon-button>\r\n        <mat-icon>west</mat-icon>\r\n      </a>\r\n      <img class=\"rounded-circle\" width=\"50\" height=\"50\" [src]=\"student.account.profilePic\">\r\n      {{student.account.firstName}} {{student.account.lastName}}\r\n    </mat-card-title>\r\n    <div class=\"row ml-auto\">\r\n        <div class=\"d-flex flex-column mr-5 mt-2\">\r\n            <mat-card-subtitle>Average Score</mat-card-subtitle>  \r\n            <div>\r\n               <span>{{selectedValue}}</span>\r\n                <ul class=\"list-inline rating-list\" *ngFor=\"let star of starsarray\" style=\"display: inline-block\">\r\n                    <li class=\"p-1\" [ngClass]=\"{'selected': (star <= selectedValue)}\">\r\n                      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-star-fill\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                          d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n                      </svg>\r\n                    </li>\r\n                  </ul>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h4 class=\"skills\">Personal skills and competences</h4>\r\n    <ul class=\"list-group\">\r\n      <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let rating of ratingList\">\r\n        {{rating.name}}\r\n        <span>\r\n          <ul class=\"list-inline rating-list\" *ngFor=\"let star of rating.data\" style=\"display: inline-block\">\r\n            <li (click)=\"startCount(star, rating)\" [ngClass]=\"{'selected': (star <= rating.value)}\">\r\n              <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-star-fill\" fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n              </svg>\r\n            </li>\r\n          </ul>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <h4 class=\"feedback\">Write a Feedback</h4>\r\n    <div class=\"form-group\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"feedback1\">What went well?</mat-label>\r\n        <textarea matInput id=\"feedback1\" [(ngModel)]=\"feedback1\"></textarea>\r\n      </mat-form-field>  \r\n    </div>\r\n    <div class=\"form-group\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"feedback2\">What could be improved?</mat-label>\r\n        <textarea matInput id=\"feedback2\" [(ngModel)]=\"feedback2\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <div class=\"d-flex\">\r\n      <div>\r\n        <button mat-raised-button (click)=\"reset()\">Reset</button>\r\n      </div>\r\n      <div class=\"ml-auto\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"cancel()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\">Submit</button>\r\n      </div>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AuthserviceService } from './authservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient, private authService: AuthserviceService) { }\n\n  getadminData(){\n    return this.http.get<any>(`${environment.apiUrl}/admin`, {\n      withCredentials: true\n    });\n  }\n\n  updateTutor(request){\n    return this.http.post<any>(`${environment.apiUrl}/admin/approve/tutor`, request, {\n      withCredentials: true\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TutorReferralsDetailsComponent } from './tutor-referrals-details/tutor-referrals-details.component';\r\n\r\n@Component({\r\n  selector: 'app-tutor-referrals',\r\n  templateUrl: './tutor-referrals.component.html',\r\n  styleUrls: ['./tutor-referrals.component.css']\r\n})\r\nexport class TutorReferralsComponent implements OnInit {\r\n\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  open() {\r\n    const modalRef = this.modalService.open(TutorReferralsDetailsComponent, { size: 'lg' });\r\n    modalRef.componentInstance.name = 'World';\r\n  }\r\n\r\n}\r\n","<div class=\"card h-100 m-2\">\r\n  <div class=\"card-header card-header-styles\">\r\n    <span class=\"my-refferal\">My Referrals</span>\r\n  </div>\r\n  <div class=\"card-body sub-card\">\r\n    <div class=\"row \">\r\n      <div class=\"col-6\">\r\n        <h2 class=\"card-title refer-friends-earn\">Refer Friends & Earn Credits</h2>\r\n        <h5 class=\"card-text text-left introduce-a-friend-t\">Introduce a friend to VidhyaSadhan and youi’’ be credited $XX to your account.</h5>\r\n      </div>\r\n      <div class=\"col-6 text-right\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"my-credit mb-3 text-center\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-2\">\r\n\r\n                  </div>\r\n                  <div class=\"col-8 mt-4\">\r\n                    <span class=\"text-500 mt-3 text-center\">\r\n                      $ 500\r\n                    </span>\r\n                    <h4 class=\"mt-2\">\r\n                      My Credits\r\n                    </h4>\r\n                      <div class=\"transfer-to-earnings mb-2\">\r\n                        Transfer to Earnings\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"row sub-card-2\">\r\n      <div class=\"col-12 mt-3\">\r\n\r\n        <label for=\"basic-url\" class=\"share-my-referral-li\">Share my referral link with friends</label>\r\n        <div class=\"input-group mb-3 width-65\">\r\n\r\n          <input type=\"text\" class=\"form-control text-box-styles\" id=\"basic-url\"\r\n            placeholder=\"https://...................\" aria-describedby=\"basic-addon3\">\r\n          <div class=\"input-group-append\">\r\n            <button class=\"btn btn-outline-secondary copyLink\" type=\"button\">Copy Link</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <button type=\"button\" class=\"btn btn-fb\"><i class=\"fab fa-facebook-f pr-1\"></i> Facebook</button>\r\n        <!--Twitter-->\r\n        <button type=\"button\" class=\"btn btn-tw\"><i class=\"fab fa-twitter pr-1\"></i> Twitter</button>\r\n        <!--Google +-->\r\n        <button type=\"button\" class=\"btn btn-gplus\"><i class=\"fab fa-google-plus-g pr-1\"></i> Google +</button>\r\n        <!--Linkedin-->\r\n        <button type=\"button\" class=\"btn btn-li\"><i class=\"fab fa-linkedin-in pr-1\"></i> Linkedin</button>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <div class=\"row mt-4\">\r\n          <div class=\"col-6 refferal-card h-100\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4 text-center  my-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-11\">\r\n                    <span class=\"refferal-number\">\r\n                      19\r\n                    </span>\r\n                    <span>\r\n                      <br>\r\n                      <img class=\"my-3\" src=\"assets/referrals/referral-signup.png\" alt=\"referral-signup.png\" />\r\n                      <br>\r\n                      <span class=\"referal-signups\">\r\n                        Referal Signups\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-1 vertical\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4 text-center  my-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-11\">\r\n                    <span class=\"refferal-number\">\r\n                      12\r\n                    </span>\r\n                    <span>\r\n                      <br>\r\n                      <img class=\"my-3\" src=\"assets/referrals/noun-meeting-successful.png\" alt=\"noun-meeting-successful.png\" />\r\n                      <br>\r\n                      <span class=\"referal-signups\">\r\n                        Referal Signups\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-1 vertical\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4 text-center  my-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-11\">\r\n                    <span class=\"refferal-number\">\r\n                      $5\r\n                    </span>\r\n                    <span>\r\n                      <br>\r\n                      <img class=\"my-3\" src=\"assets/referrals/noun-earning.png\" alt=\"noun-earning.png\" />\r\n                      <br>\r\n                      <span class=\"referal-signups\">\r\n                        Referal Signups\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"col-1\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row text-center mb-3\">\r\n                 <div class=\"col-12\">\r\n                  <button class=\"btn btn-primary view-details\" (click)=\"open()\">\r\n                    View Details\r\n                  </button>\r\n                 </div> \r\n            </div>\r\n          </div>\r\n          <div class=\"col-6 referral-imag-top\">\r\n            <img src=\"assets/referrals/referralsideimage.png\" alt=\"referralsideimage.png\" />\r\n    \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n          <p class=\"please-note-that-som mt-3\">\r\n            Please note that some Terms and Conditions apply <br>\r\nYour friends will need to verify their identiy before any cash rewards are paid to your account.\r\n          </p>\r\n      </div>\r\n    </div>\r\n   \r\n  </div>\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { DatePipe } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  templateUrl: './attendancemodal.component.html',\n  styleUrls: ['./attendancemodal.component.css']\n})\nexport class AttendancemodalComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              public dialogRef: MatDialogRef<AttendancemodalComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private datePipe: DatePipe) { }\n\n  public attendanceForm: FormGroup;\n\n  ngOnInit(): void {\n    console.log(this.data);\n    this.attendanceForm = this.formBuilder.group({\n      id: [this.data.id, Validators.required],\n      userId: [this.data.userId, Validators.required],\n      courseId: [this.data.courseId, Validators.required],\n      eventCourseId: [this.data.eventCourseId, Validators.required],\n      attendanceDate: [this.datePipe.transform(this.data.attendanceDate, 'yyyy-MM-dd') , Validators.required],\n      isPresent: [this.data.isPresent],\n      reason: [this.data.reason],\n      remarks: [this.data.remarks],\n    });\n  }\n\n  get f(){\n    return this.attendanceForm.controls;\n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  submittedAttendance(){\n    this.dialogRef.close(this.attendanceForm.value);\n  }\n\n}\n","\n<h1 mat-dialog-title>{{data.event?.title}} - {{data.user?.firstName}}</h1>\n\n<div mat-dialog-content>\n  <form [formGroup]=\"attendanceForm\" (submit)=\"submittedAttendance()\">\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"date\">Date</label>\n        <input type=\"date\" readonly id=\"date\"  class=\"form-control-plaintext\" formControlName=\"attendanceDate\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"status\">Attendance</label>\n        <select id=\"status\" class=\"form-control\" formControlName=\"isPresent\">\n          <option selected></option>\n          <option value=\"true\">Present</option>\n          <option value=\"false\">Absent</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"reason\">Reason</label>\n        <textarea class=\"form-control\" formControlName=\"reason\" id=\"reason\"  rows=\"3\"></textarea>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label for=\"remarks\">Remarks</label>\n        <textarea class=\"form-control\" formControlName=\"remarks\" id=\"remarks\"  rows=\"3\"></textarea>\n      </div>\n    </div>\n    <button type=\"submit\" hidden #submitbutton></button>\n  </form>\n<!--\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n    <input type=\"text\" id=\"name\"  class=\"form-control-plaintext\" [value]=\"data.user?.firstName\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"title\">Course</label>\n    <input type=\"text\" id=\"title\"  class=\"form-control-plaintext\" [value]=\"data.event?.title\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"date\">Date</label>\n    <input type=\"date\" readonly id=\"date\"  class=\"form-control-plaintext\" formControlName=\"attendanceDate\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"status\">Attendance</label>\n    <select id=\"status\" class=\"form-control\" formControlName=\"isPresent\">\n      <option selected></option>\n      <option value=\"true\">Present</option>\n      <option value=\"false\">Absent</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"reason\">Reason</label>\n    <textarea class=\"form-control\" formControlName=\"reason\" id=\"reason\"  rows=\"3\"></textarea>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"remarks\">Remarks</label>\n    <textarea class=\"form-control\" formControlName=\"remarks\" id=\"remarks\"  rows=\"3\"></textarea>\n  </div> -->\n\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button type=\"submit\" (click)=\"submitbutton.click()\"  cdkFocusInitial>Ok</button>\n</div>\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AuthserviceService } from './_services/authservice.service';\r\nimport { NotificationMiddlewareService } from './core/notification-middleware.service';\r\nimport {SwPush, SwUpdate} from '@angular/service-worker';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'vidhyasadhan-ui';\r\n  user: User;\r\n  showFiller = false;\r\n\r\n  constructor(private authService: AuthserviceService){\r\n    this.authService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  ngOnInit(){\r\n    // this.notificationMiddleware.init();\r\n    // this.notificationMiddleware.initialize();\r\n    // if (this.swUpdate.isEnabled){\r\n    //   this.notificationMiddleware.pushNotificationStatus.isSupported = true;\r\n    // }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","<!-- <nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/notifications\">Notifications <span class=\"badge badge-secondary\" *ngIf=\"notificationMiddleware.notifications.length\">{{notificationMiddleware.notifications.length}}</span></a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/broadcast\">Broadcasts</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n  </div>\r\n</nav>  -->\r\n\r\n\r\n<div class=\"app-wide\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- <app-sidenav-bar></app-sidenav-bar> -->\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-vsnavigation',\r\n  templateUrl: './vsnavigation.component.html',\r\n  styleUrls: ['./vsnavigation.component.css']\r\n})\r\nexport class VsnavigationComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"(isHandset$ | async) === false\">\r\n    <mat-toolbar><img class=\"w-100\" src=\"assets/vidhyasadhan-logo.svg\"></mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin']\">Dashboard</a>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin/tutors']\">Tutors</a>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin/students']\">Students</a>\r\n      <a mat-list-item (click)=\"drawer.close()\" [routerLink]=\"['/admin/payments']\">Payments</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <a\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n    </a>\r\n      <span>\r\n        <img *ngIf=\"!drawer.opened\" class=\"w-100\" src=\"assets/vidhyasadhan-logo.svg\">\r\n      </span>\r\n    </mat-toolbar>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { FileuploaderService } from 'src/app/_services/fileuploader.service';\r\n\r\n@Component({\r\n  selector: 'app-studymaterial',\r\n  templateUrl: './studymaterial.component.html',\r\n  styleUrls: ['./studymaterial.component.css']\r\n})\r\nexport class StudymaterialComponent implements OnInit {\r\n\r\n  constructor(private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private fileUploader: FileuploaderService) { }\r\n\r\n  assignments;\r\n  courses;\r\n  filter;\r\n  error;\r\n  isUploaded;\r\n  uploadedFile;\r\n  isSuccess;\r\n  actions = [\r\n    { id: 1, name: 'Courses'},\r\n    { id: 2, name: 'Materials'}\r\n  ];\r\n  selectedAction;\r\n\r\n  ngOnInit(): void {\r\n    this.courseService.getAllCoursesByUser(this.authService.userValue.id)\r\n    .subscribe(x => this.courses = x, (error) => this.error = error);\r\n    // this.courseService.getStudentAssignments(this.authService.userValue.id)\r\n    // .subscribe(x => {this.assignments = x; console.log(this.assignments); },\r\n    //   (error) => this.error = error);\r\n    this.selectedAction = this.actions[0];\r\n  }\r\n\r\n  downloadFile(data) {\r\n    const blob = new Blob([data]);\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(data);\r\n  }\r\n\r\n  fileBrowse(files){\r\n    this.uploadedFile = files[0];\r\n    this.isUploaded = true;\r\n  }\r\n\r\n  onSubmit(assignment){\r\n    assignment.submissionDate = new Date();\r\n    assignment.status = 1;\r\n    if (this.isUploaded){\r\n      const fileToUpload =  this.uploadedFile as File;\r\n      const formData = new FormData();\r\n      formData.append('file', fileToUpload, fileToUpload.name);\r\n      this.fileUploader.uploadFile(formData).subscribe(x => {\r\n        assignment.submissionFile = x.filepath;\r\n        this.update(assignment);\r\n      });\r\n    }\r\n    else{\r\n      this.update(assignment);\r\n    }\r\n  }\r\n\r\n  update(assignment){\r\n    const assignmentToUpdate = {\r\n      assignmentId: assignment.assignmentId,\r\n      status: 1,\r\n      submissionDate: assignment.submissionDate,\r\n      submissionFile: assignment.submissionFile,\r\n      userId: assignment.userId,\r\n    };\r\n    this.courseService.updateStudentAssignments(assignmentToUpdate).subscribe(x => {if (x >= 0){\r\n      this.isSuccess = true;\r\n    }}, (error) => this.isSuccess = false);\r\n  }\r\n\r\n  onDelete(){\r\n    this.uploadedFile = null;\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n  <div class=\"card m-2 min-card\">\r\n    <div class=\"card-header material-bg\">\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>{{selectedAction.name}}</div>\r\n        <div ngbDropdown class=\"d-inline-block\">\r\n          <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>\r\n            {{selectedAction.name}}\r\n          </button>\r\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n            <button ngbDropdownItem (click)=\"selectedAction = action\"\r\n              *ngFor=\"let action of actions\">{{action.name}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <span [ngSwitch]=\"selectedAction.name\">\r\n      <div class=\"card-body\" *ngSwitchCase=\"actions[0].name\">\r\n        <div class=\"alert alert-primary alert-dismissible fade show\" role=\"alert\" *ngIf=\"error\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            <span class=\"sr-only\">Close</span>\r\n          </button>\r\n          <strong>{{error}}</strong>\r\n        </div>\r\n        <div class=\"row m-2\">\r\n          <div class=\"col-md-6\"\r\n            *ngFor=\"let course of courses | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n            <ng-container>\r\n              <div class=\"card m-1\">\r\n                <div class=\"card-header\">\r\n                  <div class=\"d-flex\">\r\n                    <div>\r\n                      <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                      <span class=\"subject\">{{course.title}}</span>\r\n                    </div>\r\n                    <div class=\"ml-auto\">\r\n                     {{course.startDate | date}} - {{course.endDate | date}}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <h3 class=\"card-title title\">{{course.subject}} - {{course.grade}}</h3>\r\n                  <p class=\"card-sub-title subtitle\">Tutor: {{course?.owner?.firstName | uppercase}} {{course?.owner?.lastName | uppercase}}</p>\r\n                  <div class=\"card-text perfomed\">\r\n                    <div class=\"d-flex\">\r\n                      <span>{{course.locationName}}</span>\r\n                      <span class=\"list-inline\">\r\n                        <!-- <span class=\"list-inline-item\" *ngFor=\"let user of assignment.studentAssignments\">\r\n                          <img [src]=\"user.account.profilePic\" class=\"profimg\">\r\n                        </span> -->\r\n                      </span>\r\n                      <span class=\"ml-auto\">\r\n                        <a class=\"badge badge-warning p-2 text-white\">Join Meeting</a>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"card-body\" *ngSwitchCase=\"actions[1].name\">\r\n        <div class=\"alert alert-primary alert-dismissible fade show\" role=\"alert\" *ngIf=\"error\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            <span class=\"sr-only\">Close</span>\r\n          </button>\r\n          <strong>{{error}}</strong>\r\n        </div>\r\n        <div class=\"row m-2\">\r\n          <div class=\"col-md-6\"\r\n            *ngFor=\"let model of assignments | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n            <ng-container>\r\n              <div class=\"card m-1\">\r\n                <div class=\"card-header\">\r\n                  <div class=\"d-flex\">\r\n                    <div>\r\n                      <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                      <span class=\"subject\">{{model.assignment.title}}</span>\r\n                    </div>\r\n                    <div class=\"ml-auto\">\r\n                      <div class=\"list-inline\">\r\n                        <a mat-mini-fab color=\"secondary\" (click)=\"downloadFile(model.assignment.assignmentFile)\" title=\"download\" class=\"list-inline-item\">\r\n                          <mat-icon>cloud_download</mat-icon>\r\n                        </a>\r\n                        <a mat-mini-fab color=\"secondary\" title=\"upload\" (click)=\"uploader.click()\"  class=\"list-inline-item\">\r\n                          <mat-icon>cloud_upload</mat-icon>\r\n                        </a>\r\n                        <input hidden  type=\"file\" #uploader (change)=\"fileBrowse($event.target.files)\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <h3 class=\"card-title title\">{{model.assignment.subject}}</h3>\r\n                  <p class=\"card-sub-title subtitle\">{{model.assignment.topic}}</p>\r\n                  <div class=\"card-text perfomed\">\r\n                    <div class=\"d-flex flex-column\">\r\n                      <span>Due: {{model.assignment.dueDate | date: 'medium'}}</span>\r\n                      <span class=\"list-inline\" *ngIf=\"uploadedFile\">\r\n                          {{uploadedFile.name}}\r\n                      </span>\r\n                      <span *ngIf=\"uploadedFile\">\r\n                        <a (click)=\"onSubmit(model)\"><span class=\"badge badge-pill badge-primary\" >Submit</span></a>\r\n                        <a (click)=\"onDelete()\"><span class=\"badge badge-pill badge-danger\">Delete</span></a>\r\n                      </span>\r\n                      <span class=\"ml-auto\">\r\n                          <ng-container [ngSwitch]=\"model.status\">\r\n                            <span class=\"badge badge-pill badge-warning\" *ngSwitchCase=\"0\">Pending</span>\r\n                            <span class=\"badge badge-pill badge-success\" *ngSwitchCase=\"1\">Submitted</span>\r\n                            <span class=\"badge badge-pill badge-primary\" *ngSwitchCase=\"2\">Evaluated</span>\r\n                          </ng-container>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n      <div class=\"card-body\" *ngSwitchCase=\"actions[1].name\">\r\n        <app-studentmateriallist></app-studentmateriallist>\r\n      </div>\r\n    </span>\r\n\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Dashboard } from 'src/app/_models/dashboard';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  incomes: Dashboard[] = [\r\n    { id: 0, icon: 'leaderboard', text: 'Total Sales', subtext : 'Events', value : '0', type: '', color: '#345398' },\r\n    { id: 1, icon: 'work', text: 'Total Income', subtext : 'Pending tasks', value : '0', type: '', color: '#ddd374' },\r\n    { id: 2, icon: 'business_center', text: 'Total Revenue', subtext : 'Total Revenue', value : '0', type: '', color: '#e85710' },\r\n    { id: 3, icon: 'attach_money', text: 'Profits', subtext : 'Reward points', value : '0%', type: '', color: '#57c44e' }\r\n  ];\r\n\r\n  schedule = {\r\n    title: 'Scheduled Classes',\r\n    type: 'AreaChart',\r\n    data: [\r\n      ['Monday', 20, 4],\r\n      ['Tuesday', 10, 6],\r\n      ['Wednesday', 20, 10],\r\n      ['Thursday', 10, 5],\r\n      ['Friday', 20, 10],\r\n      ['Saturday', 10, 10],\r\n      ['Sunday', 20, 10]\r\n   ],\r\n   columnNames : ['Day', 'Online', 'Offline'],\r\n   width: '550px',\r\n   height: '400px',\r\n  };\r\n\r\n  users = {\r\n    title: 'Active Users',\r\n    type: 'PieChart',\r\n    data: [\r\n      ['Active', 200],\r\n      ['InActive', 20]\r\n   ],\r\n   columnNames : ['Users', 'Percentage'],\r\n   options : {\r\n    slices: {\r\n       1: {offset: 0.2},\r\n       3: {offset: 0.3}\r\n    },\r\n },\r\n   width: '550px',\r\n   height: '400px',\r\n  };\r\n\r\n  constructor(private adminservice: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminservice.getadminData().subscribe(\r\n      x => {\r\n        this.mapdashboard(x);\r\n      }\r\n    );\r\n  }\r\n\r\n  mapdashboard(data){\r\n    this.incomes.find(x => x.id === 0).value = data.classesOrDemos.length;\r\n    this.incomes.find(x => x.id === 1).value = data.newRequests.length;\r\n    this.incomes.find(x => x.id === 2).value = data.totalRevenue.length;\r\n    this.incomes.find(x => x.id === 3).value = data.classesOrDemos.length;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white\">\r\n    <div class=\"tcontainer\">\r\n        <div class=\"ticker-wrap\">\r\n            <div class=\"ticker-move\">\r\n                <div class=\"ticker-item\" *ngFor=\"let income of incomes\">\r\n                    <div class=\"d-flex border rounded m-2 justify-content-center\"> \r\n                        <div class=\"p-2\" [ngStyle]=\"{'background-color':income.color}\">\r\n                            <div class=\"m-4\"><mat-icon>{{income.icon}}</mat-icon></div>                           \r\n                        </div>\r\n                        <div class=\"p-2 bg-white\">\r\n                            <div class=\"m-2 card-width\">\r\n                                <div class=\"text-muted\">{{income.text}}</div>\r\n                                <h2 class=\"text-dark\">{{income.value}}</h2>\r\n                            </div>\r\n                        </div>                                     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"jumbotron bg-white\">\r\n    <div class=\"card-deck\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <div class=\"card-header-title\">{{schedule.title}}</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <google-chart  [type]=\"schedule.type\" \r\n              [data]=\"schedule.data\" [columns]=\"schedule.columnNames\"></google-chart>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <div class=\"card-header-title\">Active Users</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <google-chart  [type]=\"users.type\" \r\n                [data]=\"users.data\" [columns]=\"users.columnNames\" [options]=\"users.options\">\r\n            </google-chart>                  \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { User } from '../_models/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Profile } from '../_models/profile';\r\nimport { map } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private registerSubject: BehaviorSubject<any>;\r\n\r\n  get(id) {\r\n    return this.http.get<User>(`${environment.apiUrl}/profile/` + id);\r\n  }\r\n\r\n  getStudents() {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/users/students`);\r\n  }\r\n\r\n   getTutors() {\r\n    return this.http.get<any>(`${environment.apiUrl}/instructors`);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/users/allusers`);\r\n  }\r\n\r\n  getUserByRole(role){\r\n    const options = { params: new HttpParams().set('role',  role) };\r\n    return this.http.get<any>(`${environment.apiUrl}/accounts/byrole`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n\r\n  addUser(user: User){\r\n    return this.http.post<boolean>(`${environment.apiUrl}/users/register`, user);\r\n  }\r\n\r\n  register(model) {\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/register`, model, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getProfileData(userid){\r\n    const options = userid ?\r\n    { params: new HttpParams().set('id', userid) } : {};\r\n    return this.http.get<Profile>(`${environment.apiUrl}/profile/` + userid);\r\n  }\r\n\r\n  updateProfileData(profile){\r\n    return this.http.post<any>(`${environment.apiUrl}/profile`, profile, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  updateUser(){\r\n\r\n  }\r\n\r\n  deleteUser(){\r\n  }\r\n\r\n  uploadprofilepic(file){\r\n    return this.http.post<User>(`${environment.cloudinary.url}/upload`, file);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { AttendanceService } from 'src/app/_services/attendance.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { LocationModel } from 'src/app/_models/location';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AttendancemodalComponent } from '../attendancemodal/attendancemodal.component';\r\n\r\n@Component({\r\n  selector: 'app-attendance',\r\n  templateUrl: './attendance.component.html',\r\n  styleUrls: ['./attendance.component.css']\r\n})\r\nexport class AttendanceComponent implements OnInit {\r\n\r\n  sortoptions = [\r\n    {id: 0, value: 'Most Recent'},\r\n    {id: 1, value: 'Oldest'}\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<any>;\r\n  primary = 'primary';\r\n  selectedValue = 0;\r\n  selectedCourse;\r\n  isLoading;\r\n  courses;\r\n  filteredCourses;\r\n\r\n  public attendanceForm: FormGroup;\r\n  displayedColumns: string[] = ['name', 'address', 'attendanceDate', 'isPresent', 'reason', 'edit'];\r\n\r\n  constructor(private attendance: AttendanceService,\r\n              private formBuilder: FormBuilder,\r\n              private courseService: CourseService,\r\n              private demoService: DemoService,\r\n              private authService: AuthserviceService,\r\n              public dialog: MatDialog) { }\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.attendanceForm = this.formBuilder.group({\r\n      id: ['', Validators.required],\r\n      userId: ['', Validators.required],\r\n      courseId: ['', Validators.required],\r\n      attendanceDate: ['', Validators.required],\r\n      isPresent: ['', Validators.required],\r\n      reason: ['', Validators.required],\r\n      remarks: ['', Validators.required],\r\n  });\r\n\r\n    this.loadDemos();\r\n  }\r\n\r\n  private loadDemos() {\r\n    this.demoService.getAllDemosByUser(this.authService.userValue.id).subscribe(x => {\r\n      this.courses = x;\r\n      this.filteredCourses = x;\r\n      if (x.length > 0) {\r\n        this.getattendance(x[0]);\r\n        if (this.dataSource !== undefined) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  displaycourse(course){\r\n      return course.title;\r\n  }\r\n\r\n  getattendance(course){\r\n    this.attendance.getattendances(course.courseId).subscribe(x => { console.log(x); this.dataSource = new MatTableDataSource(x); });\r\n  }\r\n\r\n  applyFilter(event){\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource?.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  updateAttendance(attendance){\r\n    const dialogRef = this.dialog.open(AttendancemodalComponent, {\r\n      width: '450px',\r\n      data: attendance,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result !== null || result !== undefined){\r\n        this.attendance.updateAttendance(result).subscribe(\r\n          x => {\r\n            this.loadDemos();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  filterCourse(isOnline){\r\n    this.filteredCourses = this.courses.filter(x => x.eventType === isOnline);\r\n    if (this.filteredCourses.length > 0){\r\n      this.getattendance(this.filteredCourses[0]);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n}\r\n"," <mat-card>\r\n    <mat-card-header class=\"header-rad\">\r\n        <mat-card-title>Attendance Sheet</mat-card-title>\r\n        <mat-card-subtitle>Total Students</mat-card-subtitle>\r\n        <div class=\"row ml-auto\">\r\n            <div class=\"col-md-4\">\r\n                    <mat-form-field>\r\n                        <input matInput type=\"text\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n                        <button mat-button matSuffix mat-icon-button>\r\n                          <mat-icon>search</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n            </div>\r\n            <!-- <div class=\"col-md-3\">\r\n                <mat-form-field>\r\n                <mat-select  [(ngModel)]=\"selectedValue\" name=\"item\">\r\n                    <mat-option *ngFor=\"let item of sortoptions\" [value]=\"item.id\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n               </mat-form-field>\r\n            </div> -->\r\n            <div class=\"col-md-4\">\r\n                <mat-chip-list>\r\n                    <mat-chip class=\"bg-primary\" [color]=\"primary\">Print <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-printer\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M11 2H5a1 1 0 0 0-1 1v2H3V3a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2h-1V3a1 1 0 0 0-1-1zm3 4H2a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h1v1H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1z\"/>\r\n                        <path fill-rule=\"evenodd\" d=\"M11 9H5a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1zM5 8a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H5z\"/>\r\n                        <path d=\"M3 7.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z\"/>\r\n                      </svg></mat-chip>\r\n                    <mat-chip  class=\"bg-primary\" [color]=\"primary\">Export <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-box-arrow-in-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\" d=\"M4.646 8.146a.5.5 0 0 1 .708 0L8 10.793l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                        <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0v-9A.5.5 0 0 1 8 1z\"/>\r\n                        <path fill-rule=\"evenodd\" d=\"M1.5 13.5A1.5 1.5 0 0 0 3 15h10a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 13 4h-1.5a.5.5 0 0 0 0 1H13a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5v-8A.5.5 0 0 1 3 5h1.5a.5.5 0 0 0 0-1H3a1.5 1.5 0 0 0-1.5 1.5v8z\"/>\r\n                      </svg>\r\n                    </mat-chip>\r\n                </mat-chip-list>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                    <button type=\"button\" (click)=\"filterCourse(0)\" class=\"btn btn-secondary\">Online</button>\r\n                    <button type=\"button\" (click)=\"filterCourse(1)\" class=\"btn btn-primary\">Offline</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"card-min-height\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4 ml-auto mt-2 text-right\">\r\n                <mat-form-field>\r\n                    <mat-label for=\"course\">Course</mat-label>\r\n                    <input matInput type=\"text\" id=\"course\"  [matAutocomplete]=\"loc\" placeholder=\"Course\">\r\n                    <mat-autocomplete #loc=\"matAutocomplete\" autoActiveFirstOption=\"true\" [displayWith]=\"displaycourse\" (optionSelected)='getattendance($event.option.value)'>\r\n                      <mat-option *ngFor=\"let course of filteredCourses\" [value]=\"course\">\r\n                       {{course.title}}\r\n                      </mat-option>\r\n                    </mat-autocomplete>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <table mat-table #table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                    <img class=\"img-responsive\" src=\"assets/demo/avatar.png\">\r\n                    {{row.name | uppercase}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"address\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.location}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"attendanceDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.attendanceDate | date:'mediumDate'}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"isPresent\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Attendance </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                    <span [ngSwitch]=\"row.isPresent\">\r\n                    <p *ngSwitchCase=\"true\">\r\n                        <mat-chip class=\"bg-success text-white m-2\">\r\n                            <mat-icon>check_circle</mat-icon> Present\r\n                        </mat-chip>\r\n                    </p>\r\n                    <p *ngSwitchCase=\"false\">\r\n                        <mat-chip class=\"bg-danger text-white m-2\">\r\n                        <mat-icon>block</mat-icon>Absent\r\n                        </mat-chip>\r\n                    </p>\r\n                    </span>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"reason\">\r\n                <th mat-header-cell *matHeaderCellDef> Reason </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.reason}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"edit\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>  </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                <button mat-icon-button (click)=\"updateAttendance(row)\"><mat-icon>edit</mat-icon></button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <!-- <button mat-button>Ok</button> -->\r\n    </mat-card-actions>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule\r\n} from '@angular/material/autocomplete';\r\nimport {\r\n  MatInputModule\r\n} from '@angular/material/input';\r\nimport {\r\n  MatButtonModule\r\n} from '@angular/material/button';\r\nimport {\r\n  MatTableModule\r\n} from '@angular/material/table';\r\nimport {\r\n  MatPaginatorModule\r\n} from '@angular/material/paginator';\r\nimport {\r\n  MatSortModule\r\n} from '@angular/material/sort';\r\nimport {\r\n  MatIconModule\r\n} from '@angular/material/icon';\r\nimport {\r\n  MatMenuModule\r\n} from '@angular/material/menu';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    MatGridListModule,\r\n    MatProgressSpinnerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatBadgeModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatBottomSheetModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatSliderModule,\r\n    MatStepperModule\r\n  ],\r\n  exports: [MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    MatGridListModule,\r\n    MatProgressSpinnerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatBadgeModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatBottomSheetModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatSliderModule,\r\n    MatStepperModule\r\n  ],\r\n  providers: [\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n})\r\nexport class AngmaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AuthserviceService } from './authservice.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n\r\n  constructor(private http: HttpClient, private authService: AuthserviceService) { }\r\n\r\n  saveEnrollment(enrollment){\r\n    return this.http.post<any>(`${environment.apiUrl}/enrollments`, enrollment, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  updateEnrollment(enrollment){\r\n    return this.http.put<any>(`${environment.apiUrl}/enrollments`, enrollment, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getenrollmentsbyTutor(tutorid){\r\n    const options = tutorid ?\r\n    { params: new HttpParams().set('tutorId', tutorid)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/students/bytutor`, options);\r\n  }\r\n\r\n  getEnrollmentsbyStudent(studentId){\r\n    const options = studentId ?\r\n    { params: new HttpParams().set('id', studentId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/enrollments/bystudent`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    });\r\n  }\r\n\r\n  getRequestsbyStudent(studentId){\r\n    return this.http.get<any>(`${environment.apiUrl}/request/byuser`, {\r\n      withCredentials: true,\r\n      params: new HttpParams().set('id', studentId)\r\n    });\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  TemplateRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {\r\n  Calendar\r\n} from 'src/app/_models/calendar';\r\nimport {\r\n  UserService\r\n} from 'src/app/_services/user.service';\r\nimport {\r\n  User\r\n} from 'src/app/_models/user';\r\nimport {\r\n  CourseService\r\n} from 'src/app/_services/course.service';\r\nimport {\r\n  AuthserviceService\r\n} from 'src/app/_services/authservice.service';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours,\r\n} from 'date-fns';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView,\r\n  CalendarEventTitleFormatter,\r\n} from 'angular-calendar';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { EventmodelComponent } from '../eventmodel/eventmodel.component';\r\nimport { CustomCalendarFormat } from './custom-calendar-format';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker/datepicker-input-base';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css'],\r\n  providers: [\r\n    {\r\n      provide: CalendarEventTitleFormatter,\r\n      useClass: CustomCalendarFormat,\r\n    },\r\n  ],\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n  isChecked = false;\r\n\r\n  viewDate: Date = new Date();\r\n  public calendarformForm: FormGroup;\r\n  public submitted = false;\r\n  users: User[] = [];\r\n  selectedDate;\r\n  courses;\r\n  logUser: User;\r\n  showInfo;\r\n  allChecked = true;\r\n  dayName;\r\n  refresh: Subject<any> = new Subject();\r\n  events: CalendarEvent[] = [];\r\n  selectedView = '1';\r\n  activeDayIsOpen = false;\r\n  modalData: {\r\n    action: string;\r\n    event: CalendarEvent;\r\n  };\r\n\r\n  filterActions = [\r\n    {id: 0 , name: 'Confirmed', checked: false},\r\n    {id: 1 , name: 'Pending', checked: false},\r\n    {id: 2 , name: 'Cancelled', checked: false}\r\n  ];\r\n\r\n  actions: CalendarEventAction[] = [\r\n    {\r\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\r\n      a11yLabel: 'Edit',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Edited', event);\r\n      },\r\n    },\r\n    {\r\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\r\n      a11yLabel: 'Delete',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.events = this.events.filter((iEvent) => iEvent !== event);\r\n        this.handleEvent('Deleted', event);\r\n      },\r\n    },\r\n  ];\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private userService: UserService,\r\n              private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private modal: NgbModal,\r\n              public dialog: MatDialog) {}\r\n\r\n  get f() {\r\n    return this.calendarformForm.controls;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.logUser = this.authService.userValue;\r\n    this.selectedDate = new Date();\r\n    console.log(this.logUser.email);\r\n    this.calendarformForm = this.formBuilder.group({\r\n      summary: ['', Validators.required],\r\n      location: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      timeZone: ['Asia/Calcutta', Validators.required],\r\n      start: ['', Validators.required],\r\n      end: ['', Validators.required],\r\n      recurrence: ['', Validators.required],\r\n      attendees: ['', Validators.required],\r\n      organizer: [''],\r\n      count: ['']\r\n    });\r\n\r\n    this.userService.getAll().subscribe(x => this.users = x);\r\n   // this.getCoursesByUser();\r\n    this.getEvents(null);\r\n  }\r\n\r\n  getToday(){\r\n    return new Date();\r\n  }\r\n\r\n  getCoursesByUser() {\r\n    this.courseService.getAllCoursesByUser(this.logUser.id).\r\n    subscribe(x => {\r\n      if (x.length > 0){\r\n        this.courses = x;\r\n      }\r\n    });\r\n  }\r\n\r\n  getEvents(status){\r\n    this.courseService.getAllCoursesByUser(this.logUser.id).\r\n    subscribe((x) => {\r\n      this.courses = x;\r\n      this.events = [];\r\n      console.log(x);\r\n      x.forEach(element => {\r\n        this.events.push(\r\n          {\r\n            start: new Date(element.startDate),\r\n            end: new Date(element.endDate),\r\n            title: element.title,\r\n            color: element.isDemo ? colors.blue : colors.yellow,\r\n            actions: this.actions,\r\n            meta: element,\r\n            startTime: element.startTime,\r\n            endTime: element.endTime,\r\n          },\r\n        );\r\n      });\r\n      if (status?.length > 0){\r\n        this.courses = this.courses.filter(a => status.some(b => a.status === b));\r\n        this.events = this.events.filter(a => status.some(b => a.meta.status === b));\r\n      }\r\n      this.refresh.next();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.calendarformForm.invalid) {\r\n      return;\r\n    }\r\n    const calendar: Calendar = {\r\n      summary: this.f.summary.value,\r\n      location: this.f.location.value,\r\n      description: this.f.description.value,\r\n      timeZone: this.f.timeZone.value,\r\n      start: this.f.start.value,\r\n      end: this.f.end.value,\r\n      recurrence: [{\r\n        frequency: this.f.recurrence.value,\r\n        count: this.f.count.value,\r\n      }],\r\n      attendees: [\r\n        this.f.attendees.value,\r\n        this.logUser.email\r\n      ],\r\n      organizer: null\r\n    };\r\n\r\n    this.courseService.createCalendar(calendar).subscribe(x => {\r\n      this.getCoursesByUser();\r\n    });\r\n\r\n  }\r\n  changeSelected($event, action) {\r\n    action.checked = !action.checked;\r\n    if (action.checked === true){\r\n      this.allChecked = false;\r\n    }\r\n    const statuses = [];\r\n    this.filterActions.forEach(x => {\r\n    if (x.checked){\r\n          statuses.push(x.id);\r\n        }\r\n      });\r\n    this.getEvents(statuses);\r\n  }\r\n\r\n  changeAllSelected($event){\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked === true){\r\n      this.filterActions.forEach(x => x.checked = false);\r\n      this.getEvents(null);\r\n    }\r\n  }\r\n\r\n  addEvent(event: MatDatepickerInputEvent<Date>){\r\n    this.selectedDate = event.value;\r\n  }\r\n\r\n  setView(view: CalendarView) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    this.modalData = { event, action };\r\n    console.log(this.modalData);\r\n   // this.modal.open(this.modalContent, { size: 'md' });\r\n    const dialogRef = this.dialog.open(EventmodelComponent, {\r\n      width: '350px',\r\n      data: this.modalData,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd,\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    this.events = this.events.map((iEvent) => {\r\n      if (iEvent === event) {\r\n        return {\r\n          ...event,\r\n          start: newStart,\r\n          end: newEnd,\r\n        };\r\n      }\r\n      return iEvent;\r\n    });\r\n    this.handleEvent('Dropped or resized', event);\r\n  }\r\n\r\n  changedFilter(event){\r\n    if (event.checked){\r\n      this.courses  = this.courses.filter(x => new Date(x.startDate).getDate() === new Date().getDate());\r\n    }\r\n    else\r\n    {\r\n      this.getCoursesByUser();\r\n    }\r\n  }\r\n}\r\n","<!-- <div class=\"container\">\r\n  <div class=\"card text-center bg-white\">\r\n      <div class=\"card-header\">\r\n          Calendar\r\n      </div>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"calendarformForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"summary\">Summary</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"summary\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.summary.errors }\" />\r\n                <div *ngIf=\"submitted && f.summary.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.summary.errors.required\">Summary is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"location\">Location</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"location\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\r\n                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.location.errors.required\">Locatio is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"description\">Description</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"description\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n                  <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"timeZone\">Timezone</mat-label>\r\n                <input readonly matInput type=\"text\" formControlName=\"timeZone\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.timeZone.errors }\" />\r\n                <div *ngIf=\"submitted && f.timeZone.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.timeZone.errors.required\">TimeZone is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"start\">Start Date</mat-label>\r\n                <input matInput type=\"datetime-local\" formControlName=\"start\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.start.errors }\" />\r\n                <div *ngIf=\"submitted && f.start.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.start.errors.required\">Start Date is Required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"description\">End Date</mat-label>\r\n                  <input matInput type=\"datetime-local\" formControlName=\"end\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.end.errors }\" />\r\n                  <div *ngIf=\"submitted && f.end.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.end.errors.required\">End Date is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"recurrence\">Recurrence</mat-label>\r\n                <mat-select id=\"recurrence\" formControlName=\"recurrence\">\r\n                    <mat-option value=\"None\">None</mat-option>\r\n                    <mat-option value=\"DAILY\">DAILY</mat-option>\r\n                    <mat-option value=\"WEEKLY\">WEEKLY</mat-option>\r\n                    <mat-option value=\"MONTHLY\">MONTHLY</mat-option>\r\n                </mat-select>\r\n                <div *ngIf=\"submitted && f.recurrence.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.recurrence.errors.required\">Recurrence is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"count\">Frequency</mat-label>\r\n                  <mat-select id=\"count\" formControlName=\"count\">\r\n                    <mat-option value=\"1\">1</mat-option>\r\n                    <mat-option value=\"2\">2</mat-option>\r\n                    <mat-option value=\"3\">3</mat-option>\r\n                    <mat-option value=\"4\">4</mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"submitted && f.count.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.count.errors.required\">Locatio is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            <div class=\"col\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"attendees\">Location</mat-label>\r\n                <mat-select id=\"attendees\" formControlName=\"attendees\">\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor=\"let user of users\" [value]=\"user.email\">\r\n                      {{user.email}}\r\n                    </mat-option>\r\n                </mat-select>\r\n                <div *ngIf=\"submitted && f.attendees.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.attendees.errors.required\">Locatio is required</div>\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <button mat-raised-button color=\"warn\" >\r\n              Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <mat-accordion class=\"example-headers-align\" multi>\r\n        <mat-expansion-panel *ngFor=\"let course of courses?.items\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n                {{ course.summary }}\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n                {{ course.description }}\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <mat-nav-list>\r\n            <mat-list-item>\r\n               <div>GMeet</div>\r\n               <a matLine target=\"_blank\" href=\"{{course.hangoutLink}}\">{{ course.hangoutLink }}</a>\r\n            </mat-list-item>\r\n            <mat-list-item>\r\n                <span>StartDate:</span>\r\n                <span>{{ course.start.dateTime | date}}</span>\r\n            </mat-list-item>\r\n            <mat-list-item>\r\n                <span>EndDate:</span>\r\n                <span>{{ course.end.dateTime | date}}</span>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n          </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n</div> -->\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"d-flex\">\r\n      <span class=\"p-2\">Show Only:</span>\r\n      <mat-chip-list>\r\n        <mat-chip selected (click)=\"changeAllSelected($event)\" [ngClass]=\"{'matchip-active' : allChecked}\">\r\n          All\r\n        </mat-chip>\r\n        <mat-chip *ngFor=\"let action of filterActions\" selected (click)=\"changeSelected($event, action)\"\r\n          [ngClass]=\"{'matchip-active' : action.checked}\">\r\n          {{action.name}}\r\n        </mat-chip>\r\n      </mat-chip-list>\r\n      <!-- <div class=\"ml-auto w-25\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label for=\"demoDate\">{{selectedDate | date: 'EEEE'}}</mat-label>\r\n          <input matInput id=\"demoDate\" [value]='selectedDate' (dateChange)=\"addEvent($event)\" [matDatepicker]=\"picker\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"row text-center\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"btn-group\">\r\n              <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Previous\r\n              </div>\r\n              <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\">\r\n                Today\r\n              </div>\r\n              <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\"\r\n                (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Next\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"btn-group\">\r\n              <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month)\"\r\n                [class.active]=\"view === CalendarView.Month\">\r\n                Month\r\n              </div>\r\n              <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Week)\"\r\n                [class.active]=\"view === CalendarView.Week\">\r\n                Week\r\n              </div>\r\n              <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day)\"\r\n                [class.active]=\"view === CalendarView.Day\">\r\n                Day\r\n              </div>\r\n            </div>\r\n            <!-- <mat-button-toggle-group [appearance]=\"'legacy'\" [(value)] =\"selectedView\" #group=\"matButtonToggleGroup\"  name=\"fontStyle\" aria-label=\"Font Style\">\r\n        <mat-button-toggle  value=\"0\">Month</mat-button-toggle>\r\n        <mat-button-toggle value=\"1\">Day</mat-button-toggle>\r\n        <mat-button-toggle value=\"2\">Week</mat-button-toggle>\r\n      </mat-button-toggle-group> -->\r\n\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div [ngSwitch]=\"view\">\r\n          <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n            [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\"\r\n            (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n          </mwl-calendar-month-view>\r\n          <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n            [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\r\n            (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n          </mwl-calendar-week-view>\r\n          <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"events\"\r\n            [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\r\n            (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n          </mwl-calendar-day-view>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h2 class=\"meetings\">\r\n              Meetings <div *ngIf=\"courses?.length > 0\">{{courses?.length}}</div>\r\n            </h2>\r\n          </div>\r\n          <div class=\"col text-right\">\r\n               <mat-slide-toggle [ngModel]=\"isChecked\" (change)=\"changedFilter($event)\">Today Only</mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n        <div class=\"course-height\">\r\n          <ng-container *ngFor=\"let course of courses\">\r\n            <!-- <mat-card-header *ngIf=\"course.startDate !== getToday()\">\r\n              {{course.startDate | date}}\r\n            </mat-card-header>     -->\r\n            <mat-card class=\"m-2 card-left\" [ngClass]=\"{'card-left-demo': !course.isDemo}\">\r\n              <mat-card-content>\r\n                <div class=\"row\">\r\n                  <div class=\"col-10\">\r\n                    <mat-card-title class=\"side-header\">{{course.title}}</mat-card-title>\r\n                  </div>\r\n                  <div class=\"col-2 text-right\">\r\n                    <mat-card-subtitle>\r\n                      <span [ngSwitch]=\"course?.enrollments?.length > 1\">\r\n                        <p *ngSwitchCase=\"true\">\r\n                          <img src=\"assets/bitmap.svg\">\r\n                        </p>\r\n                        <p *ngSwitchCase=\"false\">\r\n                          <img src=\"assets/bitmap.svg\">\r\n                        </p>\r\n                        <p *ngSwitchDefault>\r\n                        </p>\r\n                      </span>\r\n                    </mat-card-subtitle>\r\n                  </div>\r\n                </div>\r\n                <p class=\"card-text\">\r\n                  {{course.startTime}} - {{course.endTime}}\r\n                </p>\r\n                <div class=\"card-text d-flex\">\r\n                  <ng-container *ngFor=\"let profimg of course.enrollments\">\r\n                    <img class=\"list-img\" [src]=\"profimg.student?.profilePic ? profimg.student?.profilePic : 'assets/profile-pic.svg'\">\r\n                  </ng-container>\r\n                </div>\r\n\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </ng-container>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitecontactus',\r\n  templateUrl: './sitecontactus.component.html',\r\n  styleUrls: ['./sitecontactus.component.css']\r\n})\r\nexport class SitecontactusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  title = 'Vidhyasadhan';\r\n  lat = 51.678418;\r\n  lng = 7.809007;\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-5 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/CONTACT US</p>\r\n          <h2 class=\"welove-text\">We provide 24/7 Customer support Including weekends.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-5 offset-md-1\">\r\n          <img src=\"assets/website/contact/contact.png\"\r\n            srcset=\"assets/website/contact/contact-1.png 2x,assets/website/contact/contact-2.png 3x\"\r\n            class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bg-white p-2\">\r\n  <div class=\"contact-us\">\r\n    <h2 class=\"welove-devtext\">Conatct  Us VidhyaSadhan</h2>\r\n    <h4 class=\"reply\">Please note that all message will be replied within the next 12hours</h4>\r\n    <form>\r\n      <div class=\"form-row\">\r\n        <div class=\"col\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Name*\">\r\n        </div>\r\n        <div class=\"col\">\r\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email*\">\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col\">\r\n          <textarea placeholder=\"Your Comment\" class=\"form-control\"></textarea>\r\n        </div>\r\n      </div>\r\n      <a class=\"btn btn-primary publish\" href=\"#\" role=\"button\"><span>PUBLISH</span></a>\r\n    </form>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"bg-white p-2\">\r\n  <div class=\"contact-us\">\r\n    <agm-map [latitude]=\"lat\" [longitude]=\"lng\">\r\n      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\">\r\n        <agm-info-window>\r\n          <div class=\"card\">\r\n            <div class=\"card-body text-left\">\r\n              <ul class=\"list-unstyled map-list\">\r\n                <li><span><mat-icon>place</mat-icon></span><span>4602  Austin Avenue Victoria Island Lagos Nigeria</span></li>\r\n                <li><span><mat-icon>phone</mat-icon></span><span>(+91) 912-332-6685</span></li>\r\n                <li><span><mat-icon>email</mat-icon></span><span>support@vidhyasadhan.com</span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </agm-info-window>\r\n      </agm-marker>\r\n    </agm-map>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-profilemodel',\r\n  templateUrl: './profilemodel.component.html',\r\n  styleUrls: ['./profilemodel.component.css']\r\n})\r\nexport class ProfilemodelComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ProfilemodelComponent>) { }\r\n\r\n  files: any[] = [];\r\n  imagepath;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public dropped(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  public fileBrowse(files){\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  prepareFilesList(files: Array<any>) {\r\n    for (const item of files) {\r\n      item.progress = 0;\r\n      this.files.push(item);\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.imagepath = e.target.result;\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n    this.uploadFilesSimulator(0);\r\n  }\r\n\r\n  uploadFilesSimulator(index: number) {\r\n    setTimeout(() => {\r\n      if (index === this.files.length) {\r\n        return;\r\n      } else {\r\n        const progressInterval = setInterval(() => {\r\n          if (this.files[index].progress === 100) {\r\n            clearInterval(progressInterval);\r\n            this.uploadFilesSimulator(index + 1);\r\n          } else {\r\n            this.files[index].progress += 5;\r\n          }\r\n        }, 200);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n    const k = 1024;\r\n    const dm = decimals <= 0 ? 0 : decimals || 2;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  onUpload(file){\r\n      this.dialogRef.close({file: this.files, image: this.imagepath});\r\n  }\r\n\r\n  onCancel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h4 mat-dialog-title class=\"titlec\">Upload Image</h4>\r\n<div mat-dialog-content>\r\n    <div class=\"container\" appDragndir (fileDropped)=\"dropped($event)\" [ngStyle]=\"{'background-image': 'url(' + imagepath + ')'}\">\r\n        <input type=\"file\" #fileDropRef id=\"fileDropRef\" (change)=\"fileBrowse($event.target.files)\" accept=\"image/gif, image/jpeg, image/png\" />\r\n        <h3 class=\"text-light\">Drag a Photo here</h3>\r\n        <h3 class=\"text-dark\">Or</h3>\r\n        <!-- <label class=\"text-light\" for=\"fileDropRef\">Select a Photo</label> -->\r\n        <a class=\"btn btn-md btn-primary\">Select a Photo</a>\r\n    </div>\r\n    <div class=\"info\">\r\n        <h4 class=\"name\">\r\n            {{ files[0]?.name }}\r\n        </h4>\r\n\t\t<p class=\"size\" *ngIf=\"files.length>0\">\r\n            {{files[0]?.progress}}% of {{ formatBytes(files[0]?.size,0) }}\r\n        </p>\r\n        <mat-progress-bar\r\n            mode=\"buffer\"\r\n            [color]=\"'primary'\"\r\n            [value]=\"files[0]?.progress\"\r\n            [bufferValue]=\"files[0]?.progress\">\r\n        </mat-progress-bar>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions class=\"text-center mt-2\">\r\n    <button class=\"m-2\" mat-raised-button color=\"warn\" (click)=\"onCancel()\">Cancel</button>\r\n    <button class=\"m-2\" mat-raised-button [disabled]=\"files.length === 0\"  color=\"accent\" (click)=\"onUpload(files[0])\" cdkFocusInitial>Upload</button>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { appInitializer } from './_helpers/app-initializer';\r\nimport { AuthserviceService } from './_services/authservice.service';\r\nimport { JwtTokenInterceptor } from './_helpers/jwt-token.interceptor';\r\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\r\nimport { NgbModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RegisterComponent } from './_components/register/register.component';\r\nimport { AngmaterialModule } from './angmaterial.module';\r\nimport { NotificationComponent } from './_components/notification/notification.component';\r\nimport { BroadcastComponent } from './_components/broadcast/broadcast.component';\r\nimport { ServiceWorkerModule} from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NavigationBarComponent } from './_components/navigation-bar/navigation-bar.component';\r\nimport { SidenavBarComponent } from './_components/sidenav-bar/sidenav-bar.component';\r\nimport { ProfileComponent } from './_components/profile/profile.component';\r\nimport { CalendarComponent } from './_components/calendar/calendar.component';\r\nimport { DlDateTimeDateModule, DlDateTimePickerModule } from 'angular-bootstrap-datetimepicker';\r\nimport { ConfirmationComponent } from './_components/confirmation/confirmation.component';\r\nimport { DashboardComponent } from './_components/dashboard/dashboard.component';\r\nimport { AdminDashboardComponent } from './_components/admin-dashboard/admin-dashboard.component';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { DemoComponent } from './_components/demo/demo.component';\r\nimport { DemolistComponent } from './_components/demolist/demolist.component';\r\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { MapcomponentComponent } from './_components/mapcomponent/mapcomponent.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AlertboxComponent } from './_components/alertbox/alertbox.component';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { ClassroomComponent } from './_components/classroom/classroom.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { EventmodelComponent } from './_components/eventmodel/eventmodel.component';\r\nimport { AssignmentsComponent } from './_components/assignments/assignments.component';\r\nimport { AttendanceComponent } from './_components/attendance/attendance.component';\r\nimport { OtpComponent } from './_components/otp/otp.component';\r\nimport { ActivatescreenComponent } from './_components/activatescreen/activatescreen.component';\r\nimport { TutorsComponent } from './_components/tutors/tutors.component';\r\nimport { DemomodelComponent } from './_components/demomodel/demomodel.component';\r\nimport { TutorfilterPipe } from './tutorfilter.pipe';\r\nimport { DemodetailComponent } from './_components/demodetail/demodetail.component';\r\nimport { ProfilemodelComponent } from './_components/profilemodel/profilemodel.component';\r\nimport { TutorReferralsComponent } from './_components/tutor-referrals/tutor-referrals.component';\r\nimport { TutorReferralsDetailsComponent } from './_components/tutor-referrals/tutor-referrals-details/tutor-referrals-details.component';\r\nimport { DragndirDirective } from './directives/dragndir.directive';\r\nimport { AssignmentdetailComponent } from './_components/assignmentdetail/assignmentdetail.component';\r\nimport { AssignmentlistComponent } from './_components/assignmentlist/assignmentlist.component';\r\nimport { FieldsfilterPipe } from './_pipes/fieldsfilter.pipe';\r\nimport { EvaluateComponent } from './_components/evaluate/evaluate.component';\r\nimport { EvaluationDetailComponent } from './_components/evaluation-detail/evaluation-detail.component';\r\nimport { EarningsComponent } from './_components/earnings/earnings.component';\r\nimport { FooterComponent } from './_components/footer/footer.component';\r\nimport { VsnavigationComponent } from './_components/vsnavigation/vsnavigation.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MainlayoutComponent } from './_layouts/mainlayout/mainlayout.component';\r\nimport { EventsComponent } from './_components/events/events.component';\r\nimport { EventdetailComponent } from './_components/events/eventdetail/eventdetail.component';\r\nimport { EventslistComponent } from './_components/events/eventslist/eventslist.component';\r\nimport { ReportsComponent } from './_components/student/reports/reports.component';\r\nimport { AllreportsComponent } from './_components/student/allreports/allreports.component';\r\nimport { AdaptivereportsComponent } from './_components/student/adaptivereports/adaptivereports.component';\r\nimport {NgApexchartsModule} from 'ng-apexcharts';\r\nimport { StudymaterialComponent } from './_components/student/studymaterial/studymaterial.component';\r\nimport { StudentAssignmentsComponent } from './_components/student/assignments/assignments.component';\r\nimport { StudentmateriallistComponent } from './_components/student/studymaterial/studentmateriallist/studentmateriallist.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { NoassignmentsComponent } from './_components/assignments/noassignments/noassignments.component';\r\nimport { AssignmentDetailComponent } from './_components/student/assignments/assignment-detail/assignment-detail.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { CarouselhelperComponent } from './_components/carouselhelper/carouselhelper.component';\r\nimport { UrlsafePipe } from './_pipes/urls/urlsafe.pipe';\r\nimport { AlertModule } from './alert/alert.module';\r\nimport { SitenavComponent } from './_components/website/sitenav/sitenav.component';\r\nimport { SitehomeComponent } from './_components/website/sitehome/sitehome.component';\r\nimport { SitelayoutComponent } from './_layouts/sitelayout/sitelayout.component';\r\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SitefooterComponent } from './_components/website/sitefooter/sitefooter.component';\r\nimport { SiteaboutusComponent } from './_components/website/siteaboutus/siteaboutus.component';\r\nimport { SitepricingComponent } from './_components/website/sitepricing/sitepricing.component';\r\nimport { SitecontactusComponent } from './_components/website/sitecontactus/sitecontactus.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { SitefeaturesComponent } from './_components/website/sitefeatures/sitefeatures.component';\r\nimport { SitesubscribeComponent } from './_components/website/sitesubscribe/sitesubscribe.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AdminComponent } from './_components/dashboard/admin/admin.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { AdminlayoutComponent } from './_layouts/adminlayout/adminlayout.component';\r\nimport { AdmintutorsComponent } from './_components/admin-pages/admintutors/admintutors.component';\r\nimport { AdminstudentsComponent } from './_components/admin-pages/adminstudents/adminstudents.component';\r\nimport { AdminpaymentsComponent } from './_components/admin-pages/adminpayments/adminpayments.component';\r\nimport { PromoterlayoutComponent } from './_layouts/promoterlayout/promoterlayout.component';\r\nimport { PromoterregisterComponent } from './_components/promoter/promoterregister/promoterregister.component';\r\nimport { PromoterloginComponent } from './_components/promoter/promoterlogin/promoterlogin.component';\r\nimport { StudentpaymentsComponent } from './_components/student/studentpayments/studentpayments.component';\r\nimport { AddressComponent } from './_components/profile/address/address.component';\r\nimport { ForgotpasswordComponent } from './_components/login/forgotpassword/forgotpassword.component';\r\nimport { ResetpasswordComponent } from './_components/login/resetpassword/resetpassword.component';\r\nimport { AppnotificationsComponent } from './_components/appnotifications/appnotifications.component';\nimport { AttendancemodalComponent } from './_components/attendancemodal/attendancemodal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    NotificationComponent,\r\n    BroadcastComponent,\r\n    NavigationBarComponent,\r\n    SidenavBarComponent,\r\n    ProfileComponent,\r\n    CalendarComponent,\r\n    ConfirmationComponent,\r\n    DashboardComponent,\r\n    AdminDashboardComponent,\r\n    DemoComponent,\r\n    DemolistComponent,\r\n    MapcomponentComponent,\r\n    AlertboxComponent,\r\n    ClassroomComponent,\r\n    EventmodelComponent,\r\n    AssignmentsComponent,\r\n    AttendanceComponent,\r\n    OtpComponent,\r\n    ActivatescreenComponent,\r\n    TutorsComponent,\r\n    DemomodelComponent,\r\n    TutorfilterPipe,\r\n    DemodetailComponent,\r\n    ProfilemodelComponent,\r\n    TutorReferralsComponent,\r\n    TutorReferralsDetailsComponent,\r\n    DragndirDirective,\r\n    AssignmentdetailComponent,\r\n    AssignmentlistComponent,\r\n    FieldsfilterPipe,\r\n    EvaluateComponent,\r\n    EvaluationDetailComponent,\r\n    EarningsComponent,\r\n    FooterComponent,\r\n    VsnavigationComponent,\r\n    MainlayoutComponent,\r\n    EventsComponent,\r\n    EventdetailComponent,\r\n    EventslistComponent,\r\n    ReportsComponent,\r\n    AllreportsComponent,\r\n    AdaptivereportsComponent,\r\n    StudymaterialComponent,\r\n    StudentAssignmentsComponent,\r\n    StudentmateriallistComponent,\r\n    NoassignmentsComponent,\r\n    AssignmentDetailComponent,\r\n    CarouselhelperComponent,\r\n    UrlsafePipe,\r\n    SitenavComponent,\r\n    SitehomeComponent,\r\n    SitelayoutComponent,\r\n    SitefooterComponent,\r\n    SiteaboutusComponent,\r\n    SitepricingComponent,\r\n    SitecontactusComponent,\r\n    SitefeaturesComponent,\r\n    SitesubscribeComponent,\r\n    AdminComponent,\r\n    AdminlayoutComponent,\r\n    AdmintutorsComponent,\r\n    AdminstudentsComponent,\r\n    AdminpaymentsComponent,\r\n    PromoterlayoutComponent,\r\n    PromoterregisterComponent,\r\n    PromoterloginComponent,\r\n    StudentpaymentsComponent,\r\n    AddressComponent,\r\n    ForgotpasswordComponent,\r\n    ResetpasswordComponent,\r\n    AppnotificationsComponent,\r\n    AttendancemodalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModalModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    AngmaterialModule,\r\n    DlDateTimeDateModule,\r\n    DlDateTimePickerModule,\r\n    GoogleChartsModule,\r\n    NgxMatFileInputModule,\r\n    GoogleMapsModule,\r\n    // ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    NgApexchartsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    CarouselModule,\r\n    AlertModule,\r\n    NgbCollapseModule,\r\n    FontAwesomeModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyAtlbePmPUJ_DaeV4z6ZGb2qj_DWC2Ljdk'\r\n    }),\r\n    MatGridListModule,\r\n    MatMenuModule\r\n    // CloudinaryModule.forRoot(Cloudinary, { cloud_name: 'dfsizfwtr', upload_preset: 'ml_default'}),\r\n  ],\r\n  providers: [\r\n    { provide: APP_INITIALIZER, useFactory: appInitializer, multi: true, deps: [AuthserviceService] },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtTokenInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: MAT_SNACK_BAR_DATA, useValue: {} },\r\n    DatePipe,\r\n    AlertboxComponent\r\n  ],\r\n  entryComponents: [AlertboxComponent, ProfilemodelComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthserviceService,\r\n              private demoService: DemoService, public alertService: AlertService) { }\r\n\r\n  create = false;\r\n  tutions;\r\n  demos;\r\n  events;\r\n  isLoading;\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.getDemos();\r\n  }\r\n\r\n  getDemos(){\r\n    this.demoService.getAllDemosByUser(this.authService.userValue.id).subscribe(\r\n      x => {\r\n        this.events = x;\r\n        this.isLoading = false;\r\n        this.tutions = x.filter(y => !y.isDemo);\r\n        this.demos = x.filter(y => y.isDemo);\r\n      }, (error) => {\r\n        this.alertService.error('Error Loading Events');\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  returnClicked(event){\r\n    this.getDemos();\r\n    event === true ? this.create = false : this.create = true;\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"!create\">\r\n  <div class=\"card m-4\">\r\n    <div class=\"spinner-class\" *ngIf=\"isLoading\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n    <ng-container [ngSwitch]=\"events?.length > 0\" *ngIf=\"!isLoading\">\r\n      <ng-container *ngSwitchCase=\"true\">\r\n        <app-eventslist [demos]=\"demos\" [tutions]=\"tutions\" (returnEvent)=\"returnClicked($event)\"></app-eventslist>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"false\">\r\n        <div class=\"card-header bg-primary\">\r\n          <h2 class=\"my-event\">My Events</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h1 class=\"card-title\">\r\n            <p class=\"Start-your-journey-b\">\r\n              You haven't scheduled any Events yet, \r\n            </p>\r\n            <p class=\"Start-your-journey-b\">\r\n              Click <span style=\"font-weight: bold;\">'+'</span> icon to create a Demo / Tuition event \r\n            </p>\r\n\r\n          </h1>\r\n        </div>\r\n        <div class=\"event-img\">\r\n          <img class=\"img img-responsive\" src=\"assets/event.svg\">\r\n        </div>\r\n        <a class=\"ml-auto m-4 circle-add\" mat-mini-fab (click)=\"create = true\">\r\n          <mat-icon>add</mat-icon>\r\n        </a>\r\n      </ng-container>\r\n\r\n    </ng-container>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"create\">\r\n  <app-eventdetail (returnEvent)=\"returnClicked($event)\"></app-eventdetail>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OtpComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthserviceService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private fb: FormBuilder ) { }\r\n\r\n  phone: number;\r\n  phoneForm: FormGroup;\r\n  submitted;\r\n  loading;\r\n  returnUrl;\r\n  useremail;\r\n  error;\r\n  tokenMessage;\r\n  resend = true;\r\n  otpcode = [\r\n    {name: 'key1', value: null},\r\n    {name: 'key2', value: null},\r\n    {name: 'key3', value: null},\r\n    {name: 'key4', value: null},\r\n    {name: 'key5', value: null}\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.useremail = this.route.snapshot.queryParams['email'];\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/vs';\r\n    this.phoneForm = this.fb.group({\r\n      phone: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  entervalue(event){\r\n    const el = event.srcElement;\r\n    console.log(event);\r\n    const tidx = +(el.getAttribute('tabindex')) + 1,\r\n    elements = document.getElementsByTagName('input');\r\n\r\n    for (let i = elements.length; i--;) {\r\n        const tidx2 = elements[i].getAttribute('tabindex');\r\n        if (Number(tidx2) === tidx) { elements[i].focus(); }\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    let finalcode = '';\r\n    this.submitted = true;\r\n    this.otpcode.forEach(x => {finalcode += x.value; } );\r\n    this.authService.verifyotp(this.useremail, finalcode).subscribe(\r\n      x => {\r\n        if (x){\r\n          this.router.navigate([this.returnUrl]);\r\n        }\r\n        else{\r\n          this.error = 'Invalid token code';\r\n        }\r\n        this.submitted = false;\r\n      },\r\n      (error) => {\r\n        this.error = 'Invalid token code';\r\n        this.submitted = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  sendOtp(){\r\n    this.submitted = true;\r\n    if (this.phoneForm.valid){\r\n      this.loading = true;\r\n      this.authService.sendOtp(this.phoneForm.value).pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.resend = false;\r\n          this.submitted = false;\r\n        },\r\n        error: error => {\r\n          this.error = error;\r\n          this.loading = false;\r\n          this.submitted = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  resendcode(){\r\n    this.authService.resendotp(this.authService.userValue.email).subscribe(x => {\r\n      if (x){\r\n          this.tokenMessage = 'Resent Code Succesfully';\r\n      }\r\n    }, (error) => {\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"w-100 p-2 justify-content-center\">\r\n  <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\r\n</mat-toolbar>\r\n<div class=\"equal-container login-side\">\r\n  <div class=\"equal-col\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 offset-md-1\">\r\n        <mat-card class=\"text-center o-card\">\r\n          <mat-card-content>\r\n            <h4 class=\"otp-title\">Please enter the One-Time Password\r\n              to verify your account</h4>\r\n            <img src=\"assets/OTP/locked.svg\" class=\"locked\">\r\n            <h5 class=\"p-4\">\r\n              A One-Time Password will be sent to your number entered: {{phoneForm.get('phone').value}}\r\n            </h5>\r\n\r\n            <div [ngSwitch]=\"resend\">\r\n              <div *ngSwitchCase=\"true\">\r\n                <form class=\"form\" [formGroup]=\"phoneForm\" (submit)=\"sendOtp()\">\r\n                  <div class=\"form-row align-items-center justify-content-center\">\r\n                    <div class=\"col-auto\">\r\n                      <label class=\"sr-only\" for=\"inlineFormInputGroup\">Registered Phone</label>\r\n                      <div class=\"input-group mb-2\">\r\n                        <div class=\"input-group-append\">\r\n                          <div class=\"input-group-text\">\r\n                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-phone\" fill=\"currentColor\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path fill-rule=\"evenodd\"\r\n                                d=\"M11 1H5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H5z\" />\r\n                              <path fill-rule=\"evenodd\" d=\"M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\r\n                            </svg>\r\n                          </div>\r\n                        </div>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"phone\" id=\"phone\"\r\n                          placeholder=\"10 Digit Phone number\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                      <button mat-flat-button type=\"submit\" class=\"mat-button-base\" color=\"accent\" [disabled]=\"loading\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div *ngSwitchCase=\"false\">\r\n                <mat-grid-list cols=\"5\" rowHeight=\"50px\">\r\n                  <mat-grid-tile *ngFor=\"let tile of otpcode; let i = index\" [colspan]=\"1\" [rowspan]=\"1\">\r\n                    <input class=\"rectangle\" [tabindex]=\"i+10\" maxlength=\"1\" autofocus type=\"text\" name=\"{{tile.name}}\"\r\n                      [(ngModel)]=\"tile.value\" (keyup)=\"entervalue($event)\">\r\n                  </mat-grid-tile>\r\n                </mat-grid-list>\r\n                <button class=\"btn btn-primary m-4\" mat-raised-button (click)=\"onSubmit()\">Validate</button>\r\n                <div class=\"d-flex m-4\">\r\n                  <p class=\"wrong-num\">Entered a wrong number?</p>\r\n                  <p class=\"resend ml-auto\"><a (click)=\"resend = true\">Resend One-time Password</a></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"tokenMessage\" class=\"alert alert-success mt-3 mb-0\">{{tokenMessage}}\r\n              <a (click)=\"tokenMessage = null\">\r\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n                </svg>\r\n              </a> </div>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}\r\n              <a (click)=\"error = null\">\r\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n                </svg>\r\n              </a></div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApexNonAxisChartSeries, ApexPlotOptions, ApexChart, ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexDataLabels,\r\n  ApexYAxis,\r\n  ApexLegend,\r\n  ApexStroke,\r\n  ApexXAxis,\r\n  ApexFill,\r\n  ApexTooltip} from 'ng-apexcharts';\r\n\r\nexport type ChartOptionsRad = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n};\r\nexport type ChartOptionsBar = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n  stroke: ApexStroke;\r\n  legend: ApexLegend;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-allreports',\r\n  templateUrl: './allreports.component.html',\r\n  styleUrls: ['./allreports.component.css']\r\n})\r\nexport class AllreportsComponent implements OnInit {\r\n\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptionsRad>;\r\n  public barChart: Partial<ChartOptionsBar>;\r\n\r\n  constructor() {\r\n    this.chartOptions = {\r\n      series: [85, 55, 75],\r\n      chart: {\r\n        height: 265,\r\n        type: 'radialBar'\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          dataLabels: {\r\n            name: {\r\n              fontSize: '22px'\r\n            },\r\n            value: {\r\n              fontSize: '16px'\r\n            },\r\n            total: {\r\n              show: true,\r\n              label: 'Average',\r\n              formatter(w) {\r\n                return '50';\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      labels: ['Learn', 'Practice', 'Test']\r\n    };\r\n\r\n    this.barChart = {\r\n      series: [\r\n        {\r\n          name: 'Net Profit',\r\n          data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n        }\r\n      ],\r\n      chart: {\r\n        type: 'bar',\r\n        height: 250\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: '35%',\r\n          endingShape: 'rounded'\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          'Feb',\r\n          'Mar',\r\n          'Apr',\r\n          'May',\r\n          'Jun',\r\n          'Jul',\r\n          'Aug',\r\n          'Sep',\r\n          'Oct'\r\n        ]\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: '(hours)'\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter(val) {\r\n            return '$ ' + val + ' hours';\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card text-center\">\r\n  <div class=\"card-header card-header-main\">\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n        <input matInput placeholder=\"Subject\">\r\n        <mat-icon matPrefix>subject</mat-icon>  \r\n    </mat-form-field>\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n        <input matInput placeholder=\"Chapter\">\r\n        <mat-icon matPrefix>topic</mat-icon>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4  align-items-stretch\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <div>Report</div>\r\n                        <div>\r\n                            <mat-icon>settings</mat-icon>\r\n                            <mat-icon>drag_indicator</mat-icon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <apx-chart  [series]=\"chartOptions.series\"\r\n                    [chart]=\"chartOptions.chart\" [plotOptions]=\"chartOptions.plotOptions\"\r\n                    [labels]=\"chartOptions.labels\"></apx-chart>\r\n                </div>\r\n                <div class=\"card-footer text-muted\">\r\n                    <ul class=\"list-inline\">\r\n                        <li class=\"list-inline-item\">Learn</li>\r\n                        <li class=\"list-inline-item\">Practice</li>\r\n                        <li class=\"list-inline-item\">Test</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-8  align-items-stretch\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <div>Report</div>\r\n                        <div>\r\n                            <mat-icon>settings</mat-icon>\r\n                            <mat-icon>drag_indicator</mat-icon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <apx-chart\r\n                    [series]=\"barChart.series\"\r\n                    [chart]=\"barChart.chart\"\r\n                    [dataLabels]=\"barChart.dataLabels\"\r\n                    [plotOptions]=\"barChart.plotOptions\"\r\n                    [yaxis]=\"barChart.yaxis\"\r\n                    [legend]=\"barChart.legend\"\r\n                    [fill]=\"barChart.fill\"\r\n                    [stroke]=\"barChart.stroke\"\r\n                    [tooltip]=\"barChart.tooltip\"\r\n                    [xaxis]=\"barChart.xaxis\"\r\n                  ></apx-chart>\r\n                </div>\r\n                <div class=\"card-footer text-muted\">\r\n                    <ul class=\"list-inline\">\r\n                        <li class=\"list-inline-item\">Weekly</li>\r\n                        <li class=\"list-inline-item\">Quarterly</li>\r\n                        <li class=\"list-inline-item\">Yearly</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.css']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n    <mat-tab label=\"All Reports\">\r\n        <app-allreports></app-allreports>\r\n    </mat-tab>\r\n    <mat-tab label=\"Adaptive Test Reports\">\r\n        <app-adaptivereports></app-adaptivereports>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation-bar',\r\n  templateUrl: './navigation-bar.component.html',\r\n  styleUrls: ['./navigation-bar.component.css']\r\n})\r\nexport class NavigationBarComponent implements OnInit {\r\n\r\n  user: User;\r\n  checked = false;\r\n  navClicked = true;\r\n  notifications = [];\r\n  smClicked = false;\r\n  @Output() toggleSidenav = new EventEmitter<void>();\r\n  constructor(public authService: AuthserviceService, private staticService: StaticdataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.authService.userValue;\r\n    if (this.authService.userValue.id){\r\n      this.staticService.getNotifications(this.authService.userValue.id).subscribe(\r\n        x => this.notifications = x\r\n      );\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  menuClicked(){\r\n    this.toggleSidenav.emit();\r\n    this.navClicked = !this.navClicked;\r\n  }\r\n\r\n  smallmenuClicked(){\r\n    this.smClicked = !this.smClicked;\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"bg-white\">\r\n  <mat-toolbar-row>\r\n    <span [ngSwitch]=\"navClicked\">\r\n      <a *ngSwitchCase=\"true\" [routerLink]=\"['dashboard']\">\r\n        <img src=\"assets/icons/vidhya-sandhhan.svg\">\r\n      </a>\r\n      <a *ngSwitchCase=\"false\" [routerLink]=\"['dashboard']\">\r\n        <img src=\"assets/vidhyasadhan-logo.svg\">\r\n      </a>\r\n    </span>\r\n    <a mat-icon-button (click)=\"menuClicked()\" class=\"d-none d-sm-block\">\r\n      <mat-icon>menu</mat-icon>\r\n    </a>\r\n\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <a mat-icon-button [routerLink]=\"['appnotify']\" class=\"d-block d-sm-none\">\r\n      <mat-icon matBadge=\"{{notifications.length}}\" matBadgeColor=\"warn\">notifications</mat-icon>\r\n    </a>\r\n\r\n    <a mat-icon-button [matMenuTriggerFor]=\"auth1\" class=\"d-block d-sm-none\">\r\n      <!-- <mat-icon>account_circle</mat-icon> -->\r\n      <img class=\"rounded-circle\" width=\"25\" height=\"25\" [src]=\"user.profilePic || 'assets/avatar.svg'\" />\r\n    </a>\r\n    <mat-menu #auth1=\"matMenu\">\r\n      <a mat-menu-item (click)=\"logout()\">\r\n        <mat-icon>exit_to_app</mat-icon>\r\n        <span>Sign out</span>\r\n      </a>\r\n    </mat-menu>\r\n    <a mat-icon-button (click)=\"smallmenuClicked()\" class=\"d-block d-sm-none\">\r\n      <mat-icon>menu</mat-icon>\r\n    </a>\r\n\r\n\r\n    <div class=\"d-none d-sm-block\">\r\n      <ul class=\"navbar-nav flex-row\">\r\n        <li fxHide.xs class=\"nav-item active\">\r\n          <a mat-icon-button [routerLink]=\"['appnotify']\" class=\"nav-link\">\r\n            <mat-icon matBadge=\"{{notifications.length}}\" matBadgeColor=\"warn\">notifications</mat-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a mat-icon-button [matMenuTriggerFor]=\"auth\" class=\"nav-link\">\r\n            <!-- <mat-icon>account_circle</mat-icon> -->\r\n            <img class=\"rounded-circle\" width=\"25\" height=\"25\" [src]=\"user.profilePic || 'assets/avatar.svg'\" />\r\n          </a>\r\n          <mat-menu #auth=\"matMenu\">\r\n            <a mat-menu-item (click)=\"logout()\">\r\n              <mat-icon>exit_to_app</mat-icon>\r\n              <span>Sign out</span>\r\n            </a>\r\n          </mat-menu>\r\n        </li>\r\n        <li fxHide.xs class=\"nav-item\">\r\n          <a class=\"nav-link profile-pic\">{{user.firstName}} {{user.lastName}}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row *ngIf=\"smClicked\" class=\"h-100 d-block d-sm-none toolbar\"\r\n    [ngClass]=\"authService.userValue?.role === 0 ? 'student' : 'tutor'\">\r\n    <ng-container [ngSwitch]=\"authService.userValue?.role === 'Student'\">\r\n      <ng-container *ngSwitchCase=\"true\">\r\n        <ul class=\"navbar-nav mt-auto\">\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/classroom']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/noun-teaching-2380320.svg\"> My Classroom <span\r\n                class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/tutors']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/noun-assignment-3202074.svg\">Book Tutor</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/profile']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/path.svg\">My Profile</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/student/assignments']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/my-earnings.svg\">Study Material</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/progress']\">\r\n              <img class=\"img-nav\" src=\"assets/Student/chart-pie-36.svg\">Progress Report</a>\r\n          </li>\r\n          <!-- <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Dropdown link\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n              <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n          </li> -->\r\n        </ul>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"false\">\r\n        <ul class=\"navbar-nav mt-auto\">\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/classroom']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/noun-teaching-2380320.svg\">My Classroom <span\r\n                class=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/requests']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/noun-assignment-3202074.svg\">Student Requests</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/profile']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/path.svg\">My Profile</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/events']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/vector.svg\">My Events</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/earnings']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/my-earnings.svg\">My Earnings</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"smClicked = !smClicked\" [routerLink]=\"['/vs/tutor-referrals']\">\r\n              <img class=\"img-nav\" src=\"assets/dashboard/my-referrals.svg\">My Referrals</a>\r\n          </li>\r\n        </ul>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import {\r\n  Injectable\r\n} from '@angular/core';\r\nimport {\r\n  Subject,\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  Alert,\r\n  AlertType\r\n} from '../_models/alert';\r\nimport {\r\n  filter\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  private subject = new Subject < Alert > ();\r\n  private defaultId = 'default-alert';\r\n\r\n  constructor() {}\r\n\r\n  onAlert(id = this.defaultId): Observable <Alert> {\r\n    return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n  }\r\n\r\n  success(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Success,\r\n      message\r\n    }));\r\n  }\r\n\r\n  error(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Error,\r\n      message\r\n    }));\r\n  }\r\n\r\n  info(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Info,\r\n      message\r\n    }));\r\n  }\r\n\r\n  warn(message: string, options ?: any) {\r\n    this.alert(new Alert({\r\n      ...options,\r\n      type: AlertType.Warning,\r\n      message\r\n    }));\r\n  }\r\n\r\n  alert(alert: Alert) {\r\n    alert.id = alert.id || this.defaultId;\r\n    this.subject.next(alert);\r\n  }\r\n\r\n  clear(id = this.defaultId) {\r\n    this.subject.next(new Alert({\r\n      id\r\n    }));\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { StudentmateriallistDataSource, StudentmateriallistItem } from './studentmateriallist-datasource';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StudymaterialService } from 'src/app/_services/studymaterial.service';\r\n\r\n@Component({\r\n  selector: 'app-studentmateriallist',\r\n  templateUrl: './studentmateriallist.component.html',\r\n  styleUrls: ['./studentmateriallist.component.css']\r\n})\r\nexport class StudentmateriallistComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) table: MatTable<StudentmateriallistItem>;\r\n  dataSource: StudentmateriallistDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'title', 'subject', 'grade', 'topic', 'files'];\r\n  href;\r\n\r\n  slides = [\r\n    // { id: 1, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 1' },\r\n    // { id: 2, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 2'},\r\n    // { id: 3, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 3'},\r\n    // { id: 4, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 4'},\r\n    // { id: 5, video: 'https://www.youtube.com/embed/M7lc1UVf-VE?autoplay=1&origin=', title: 'video 5'}\r\n  ];\r\n\r\n  constructor(private route: Router, private studyMaterial: StudymaterialService){\r\n    this.href = this.route.url;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new StudentmateriallistDataSource();\r\n    this.studyMaterial.getMaterials().subscribe(x => {\r\n      this.dataSource.data = x;\r\n      x.forEach(a => {\r\n       a.files?.forEach(element => {\r\n          this.slides.push({video: element.filePath, title: element.filePath});\r\n        });\r\n      });\r\n\r\n      this.slides.forEach(x => x.video += window.location.origin);\r\n\r\n    } );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n\r\n  downloadFile(files){\r\n\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.materialId}}</td>\r\n    </ng-container>\r\n\r\n     <!-- Id Column -->\r\n     <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"subject\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Subject</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.subject}}</td>\r\n    </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"grade\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Grade</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.grade}}</td>\r\n      </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"topic\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Topic</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.topic}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"files\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Attachments</th>\r\n      <td mat-cell *matCellDef=\"let row\"><a (click)=\"downloadFile(row.files)\">\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-download\" fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\" />\r\n      </svg> Download\r\n        </a> </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator #paginator\r\n      [length]=\"dataSource?.data.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"5\"\r\n      [pageSizeOptions]=\"[5, 10, 15, 20]\">\r\n  </mat-paginator>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"tcontainer\">\r\n  <div class=\"ticker-wrap\">\r\n      <div class=\"ticker-move\">\r\n          <div class=\"ticker-item\" *ngFor=\"let item of slides\">\r\n              <div class=\"d-flex border rounded m-2 justify-content-center\">\r\n                  <div class=\"p-2 bg-white\">\r\n                      <div class=\"m-2 card-width\">\r\n                        <div class=\"card text-left\">\r\n                          <div class=\"card-body\">\r\n                            <video class=\"video-fluid\" autoplay loop muted>\r\n                              <source [src]=\"item.video\" type=\"video/mp4\" />\r\n                            </video>\r\n                            <h4 class=\"card-title\">Title</h4>\r\n                            <p class=\"card-text\">Body</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"container mt-2\">\r\n  <app-carouselhelper [slidesStore]=\"slides\"></app-carouselhelper>\r\n</div>\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'urlsafe'\r\n})\r\nexport class UrlsafePipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer){\r\n  }\r\n\r\n  transform(value) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { StaticData, State, Country, Statistics } from '../_models/static';\r\nimport { environment } from 'src/environments/environment';\r\nimport { isString, isNullOrUndefined } from 'util';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StaticdataService {\r\n\r\n  staticData: StaticData;\r\n  states: State[] = [];\r\n  country: Country[] = [];\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getStaticData(){\r\n    return this.http.get<StaticData>(`${environment.apiUrl}/resourses/staticdata`);\r\n  }\r\n\r\n  getStates(){\r\n    return this.http.get<State>(`${environment.apiUrl}/resourses/states`);\r\n  }\r\n\r\n  getCountries(){\r\n    return this.http.get<Country>(`${environment.apiUrl}/resourses/countries`);\r\n  }\r\n\r\n  searchLocations(location: string) {\r\n\r\n    if (location?.length > 0){\r\n      const options = { params: new HttpParams().set('access_token', environment.mapbox_accessToken) };\r\n      return this.http.get<any>(environment.mapbox_api + 'mapbox.places/' + location + `.json`, options);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  getNotifications(userId){\r\n    const options = { params: new HttpParams().set('userId', userId) };\r\n    return this.http.get<any>(`${environment.apiUrl}/static/appnotifications`, options);\r\n  }\r\n\r\n  getStaticDataSets(){\r\n    return this.http.get<StaticData>(`${environment.apiUrl}/static/data`);\r\n  }\r\n\r\n  getStatistics(userId){\r\n    const options = { params: new HttpParams().set('userId',  userId) };\r\n    return this.http.get<Statistics>(`${environment.apiUrl}/static/statistics`, options);\r\n  }\r\n\r\n\r\n}\r\n","import { AuthserviceService } from '../_services/authservice.service';\r\n\r\nexport function appInitializer(authenticationService: AuthserviceService) {\r\n    return () => new Promise(resolve => {\r\n        authenticationService.tokenRefresh()\r\n            .subscribe()\r\n            .add(resolve);\r\n    });\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { Demo } from 'src/app/_models/demo';\r\n\r\n@Component({\r\n  selector: 'app-assignments',\r\n  templateUrl: './assignments.component.html',\r\n  styleUrls: ['./assignments.component.css']\r\n})\r\nexport class AssignmentsComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private courseService: CourseService,\r\n              private authService: AuthserviceService) { }\r\n\r\n  displayassignments = true;\r\n  assignmentForm;\r\n  isLoading;\r\n  filteredCourses;\r\n  selectedCourse;\r\n  selectedstudents;\r\n  assignments = [];\r\n  slicedAssignments;\r\n  query;\r\n\r\n  menuItems = [\r\n    {id: 0, value: 'Assignment', icon: 'assignment_turned_in'},\r\n    {id: 1, value: 'Quiz Assignment', icon: 'batch_prediction'},\r\n    // {id: 2, value: 'Question', icon: 'help'},\r\n    // {id: 3, value: 'Material', icon: 'menu_book'},\r\n    {id: 2, value: 'Topic', icon: 'local_library'},\r\n  ];\r\n\r\n  detailsMenu = [\r\n    {id: 0, value: 'Student', icon: 'assignment_turned_in'},\r\n    {id: 1, value: 'Quiz Assignment', icon: 'batch_prediction'},\r\n    // {id: 2, value: 'Question', icon: 'help'},\r\n    // {id: 3, value: 'Material', icon: 'menu_book'},\r\n    {id: 2, value: 'Topic', icon: 'local_library'},\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.updateList();\r\n  }\r\n\r\n  menuClicks(item){\r\n    if (item.id === 0){\r\n      this.displayassignments = false;\r\n    }\r\n  }\r\n\r\n  switchMenus(){\r\n    return this.displayassignments ? this.menuItems : this.detailsMenu;\r\n  }\r\n\r\n  displayCourse(loc: Demo): string {\r\n    return loc ? loc.title : '';\r\n  }\r\n\r\n  updateList(){\r\n    this.courseService.getAssignmentByTutor(this.authService.userValue.id)\r\n    .subscribe(x => {this.assignments = x; this.slicedAssignments = x?.slice(0, 4); this.isLoading = false; },\r\n    (error) => { this.isLoading = false; } );\r\n  }\r\n\r\n  gotolist(){\r\n    this.displayassignments = true;\r\n    this.updateList();\r\n  }\r\n\r\n  pagechange(event){\r\n    const startIndex = event.pageIndex * event.pageSize;\r\n    let endIndex = startIndex + event.pageSize;\r\n\r\n    if (endIndex > this.assignments.length){\r\n      endIndex = this.assignments.length;\r\n    }\r\n\r\n    this.slicedAssignments = this.assignments.slice(startIndex, endIndex);\r\n  }\r\n\r\n  eventClicked(event){\r\n    if (event.id === 0){\r\n      this.displayassignments = false;\r\n    }\r\n  }\r\n\r\n  assignmentCreatedEvent(event){\r\n    this.displayassignments = event;\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav #drawer class=\"sidenav\" position=\"end\" mode=\"over\">\r\n    <h2>Edit Filters <span>Clear Filters</span></h2>\r\n    <nav>\r\n      <h4>Grade/Standard</h4>\r\n      <ul>\r\n        <li>\r\n          <mat-checkbox>\r\n            10th Grade\r\n          </mat-checkbox>\r\n        </li>\r\n        <li>\r\n          <mat-checkbox>\r\n            +2 Grade\r\n          </mat-checkbox>\r\n        </li>\r\n        <li>\r\n          <mat-checkbox>\r\n            7th Grade\r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n      <h4>Assignment Type</h4>\r\n      <div class=\"pl-2 mb-2\">\r\n        <mat-chip-list>\r\n          <mat-chip selected color=\"accent\">Questions</mat-chip>\r\n          <mat-chip selected color=\"warn\">Manual</mat-chip>\r\n        </mat-chip-list>\r\n      </div>\r\n      <h4>Tasks Range</h4>\r\n      <div class=\"pl-4\">\r\n        <span>0<mat-slider [max]=\"100\" [min]=\"0\" [step]=\"10\" [thumbLabel]=\"true\"></mat-slider>100</span>\r\n      </div>\r\n      <!-- <mat-form-field appearance=\"fill\">\r\n        <mat-label>Enter a date range</mat-label>\r\n      </mat-form-field> -->\r\n      <h4>\r\n        Student Type\r\n      </h4>\r\n      <ul>\r\n        <li>\r\n          <mat-slide-toggle>\r\n            Show Only Online\r\n          </mat-slide-toggle>\r\n        </li>\r\n        <li>\r\n          <mat-slide-toggle>\r\n            Toggle State Off!\r\n          </mat-slide-toggle>\r\n        </li>\r\n        <li>\r\n        </li>\r\n      </ul>\r\n      <div class=\"text-center\">\r\n        <button mat-raised-button color=\"accent\">Apply</button>\r\n      </div>\r\n\r\n    </nav>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content class=\"assignments-nav\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header header-rad\" *ngIf=\"assignments?.length > 0\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <div>\r\n            <mat-card-title>\r\n              <ng-container [ngSwitch]=\"displayassignments\">\r\n                <span class=\"student-Assignments\" *ngSwitchCase=\"true\">\r\n                  List of Assignments\r\n                </span>\r\n                <span class=\"student-Assignments\" *ngSwitchCase=\"false\">\r\n                  <a (click)=\"gotolist()\" mat-icon-button>\r\n                    <mat-icon>west</mat-icon>\r\n                  </a>\r\n                  Create Assignments\r\n                </span>\r\n              </ng-container>\r\n            </mat-card-title>\r\n            <mat-card-subtitle *ngIf=\"displayassignments\">Total: {{assignments?.length}}</mat-card-subtitle>\r\n          </div>\r\n          <div class=\"d-flex\" *ngIf=\"displayassignments\">\r\n            <!-- <div class=\"col-md-6\">\r\n                      <mat-form-field appearance=\"fill\" class=\"custom-margin\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input matInput placeholder=\"Search\" [(ngModel)]=\"query\">\r\n                        <button mat-icon-button matSuffix>\r\n                          <mat-icon>search</mat-icon>\r\n                        </button>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                      <div class=\"custom-margin\">\r\n                        <button mat-raised-button color=\"primary\" aria-label=\"Example icon button with a home icon\"\r\n                          (click)=\"drawer.toggle()\">\r\n                          filter <mat-icon>filter_list</mat-icon>\r\n                        </button>\r\n                      </div>\r\n                    </div> -->\r\n            <a class=\"btn btn-primary custom-margin\" [matMenuTriggerFor]=\"menu\">\r\n              <span>New Task</span>\r\n              <mat-icon class=\"align-middle ml-1\">add</mat-icon>\r\n            </a>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n              <a mat-menu-item *ngFor=\"let item of switchMenus()\" (click)=\"menuClicks(item)\">\r\n                <mat-icon>{{item.icon}}</mat-icon>\r\n                <span class=\"menu-font\">{{item.value}}</span>\r\n              </a>\r\n            </mat-menu>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <span [ngSwitch]=\"displayassignments\">\r\n          <p *ngSwitchCase=\"true\">\r\n            <ng-container [ngSwitch]=\"assignments?.length === 0\">\r\n              <ng-container *ngSwitchCase=\"true\">\r\n                <div class=\"spinner-class\" *ngIf=\"isLoading\">\r\n                  <mat-spinner></mat-spinner>\r\n                </div>\r\n                <app-noassignments *ngIf=\"!isLoading\" (assignmentEmitter)=\"eventClicked($event)\"></app-noassignments>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"false\">\r\n                <app-assignmentlist [assignments]=\"assignments\" [filter]=\"query\"></app-assignmentlist>\r\n                <!-- <mat-paginator [length]=\"assignments?.length\" [pageSize]=\"4\" [pageSizeOptions]=\"[4, 8, 12, 16]\"\r\n                  (page)=\"pagechange($event)\"> </mat-paginator> -->\r\n              </ng-container>\r\n            </ng-container>\r\n            <!-- <mat-card *ngIf=\"assignments?.length === 0\">\r\n              <mat-card-header class=\"body-content\">\r\n                <mat-card-title>\r\n                  <div class=\"d-flex\">\r\n                    <div class=\"vsadhan-img\">\r\n                      <img src=\"assets/icons/vidhya-sandhhan.svg\" class=\"img img-responsive vidhya-sandhhan\">\r\n                    </div>\r\n                    <span class=\"p-2\">Assign work to your class here</span>\r\n                  </div>\r\n                </mat-card-title>\r\n              </mat-card-header>\r\n              <mat-card-content class=\"text-center\">\r\n                <mat-action-list>\r\n                  <mat-list-item class=\"profession\">\r\n                    <mat-icon class=\"mat-list-icon\">text_snippet</mat-icon> Create assignments and questions\r\n                  </mat-list-item>\r\n                  <mat-list-item class=\"profession\">\r\n                    <mat-icon class=\"mat-list-icon\">format_list_numbered</mat-icon> Use topic to organise classwork into\r\n                    modules or units\r\n                  </mat-list-item>\r\n                  <mat-list-item class=\"profession\">\r\n                    <mat-icon class=\"mat-list-icon\">format_line_spacing</mat-icon> Order work the way you want students\r\n                    to\r\n                    see it\r\n                  </mat-list-item>\r\n                </mat-action-list>\r\n              </mat-card-content>\r\n            </mat-card> -->\r\n\r\n          </p>\r\n          <p *ngSwitchCase=\"false\">\r\n            <app-assignmentdetail [course]=\"selectedCourse\" [students]=\"selectedstudents\"\r\n              (assignmentCreated)=\"assignmentCreatedEvent($event)\"></app-assignmentdetail>\r\n          </p>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport class Customvalidators {\r\n    static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n        return (control: AbstractControl): { [key: string]: any } => {\r\n          if (!control.value) {\r\n            return null;\r\n          }\r\n\r\n          const valid = regex.test(control.value);\r\n          return valid ? null : error;\r\n        };\r\n      }\r\n\r\n    static passwordMatchValidator(control: AbstractControl) {\r\n        const password: string = control.get('password').value;\r\n        const confirmPassword: string = control.get('confirmPassword').value;\r\n        if (password !== confirmPassword) {\r\n          control.get('confirmPassword').setErrors({ NoPassswordMatch: true });\r\n        }\r\n      }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\n\n@Component({\n  selector: 'app-appnotifications',\n  templateUrl: './appnotifications.component.html',\n  styleUrls: ['./appnotifications.component.css']\n})\nexport class AppnotificationsComponent implements OnInit {\n\n  constructor(public authService: AuthserviceService, private staticService: StaticdataService) { }\n\n  notifications = [];\n\n  ngOnInit(): void {\n    if (this.authService.userValue.id){\n      this.staticService.getNotifications(this.authService.userValue.id).subscribe(\n        x => this.notifications = x\n      );\n    }\n  }\n\n}\n","<div class=\"jumbotron m-2 min-card\">\n  <div class=\"container\">\n    <h1 class=\"display-3\">Notifications</h1>\n    <div class=\"m-auto d-flex align-items-center flex-column\" *ngIf=\"notifications?.length === 0\">\n      <div class=\"m-2\">\n        <svg width=\"20em\" height=\"20em\" viewBox=\"0 0 16 16\" class=\"bi bi-bell\" fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2z\" />\n          <path fill-rule=\"evenodd\"\n            d=\"M8 1.918l-.797.161A4.002 4.002 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4.002 4.002 0 0 0-3.203-3.92L8 1.917zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5.002 5.002 0 0 1 13 6c0 .88.32 4.2 1.22 6z\" />\n        </svg>\n      </div>\n      <h2 class=\"lead\">No New Notifications!</h2>\n    </div>\n    <div class=\"container\">\n\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Category</th>\n            <th scope=\"col\">Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let note of notifications; index as i\">\n            <th scope=\"row\">{{ i + 1 }}</th>\n            <td>\n              {{ note.title }}\n            </td>\n            <td>{{ note.message }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <!-- <div class=\"row\" *ngFor=\"let note of notifications\">\n        <div class=\"col-4\">\n          {{note.title}}\n        </div>\n        <div class=\"col-8\">\n          {{note.message}}\n        </div>\n      </div> -->\n    </div>\n    <!-- <div class=\"list-group\">\n      <a mat-menu-item class=\"list-group-item list-group-item-warning\" *ngFor=\"let note of notifications\">\n        {{note.message}}\n      </a>\n    </div> -->\n  </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-assignmentlist',\r\n  templateUrl: './assignmentlist.component.html',\r\n  styleUrls: ['./assignmentlist.component.css']\r\n})\r\nexport class AssignmentlistComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private courseService: CourseService,\r\n              private authService: AuthserviceService) { }\r\n\r\n  @Input()\r\n  assignments;\r\n\r\n  @Input()\r\n  filter;\r\n\r\n  filteredCourses;\r\n  selectedCourse;\r\n  selectedstudents;\r\n\r\n  success;\r\n  error;\r\n\r\n  displayedColumns: string[] = ['select', 'title', 'grade', 'created', 'subject', 'topic', 'points', 'attachment'];\r\n  dataSource: MatTableDataSource<any>;\r\n  selection = new SelectionModel<any>(true, []);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource(this.assignments);\r\n    this.courseService.getAllCoursesByUser(this.authService.userValue.id)\r\n    .subscribe(x => this.filteredCourses = x);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  pagechange(event){\r\n\r\n  }\r\n\r\n  applyFilter(event: Event){\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: any): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n\r\n  downloadFile(file){\r\n    if (file?.length > 0) {\r\n      window.open(file);\r\n    }\r\n  }\r\n\r\n  addAssignments(){\r\n    if (this.selection.selected.length > 0){\r\n      const saveassignments = [];\r\n      this.selectedstudents.forEach(student => {\r\n        this.selection.selected.forEach(x => {\r\n          saveassignments.push({\r\n            assignmentId: x.assignmentId,\r\n            studentId: student.id,\r\n            courseId: this.selectedCourse.courseId,\r\n            creationDate: new Date(),\r\n          });\r\n        });\r\n      });\r\n      this.courseService.addstudentstoassignment(saveassignments)\r\n      .subscribe(x => {\r\n        this.success = true;\r\n        this.selectedCourse = null;\r\n        this.selectedstudents = null;\r\n      }, (error) => {\r\n        this.error = error;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<!-- <div class=\"col-md-6\" *ngFor=\"let assignment of assignments | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n      <ng-container>\r\n        <div class=\"card m-1\">\r\n          <div class=\"card-header\">\r\n            <div class=\"d-flex\">\r\n              <div>\r\n                <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                <span class=\"subject\">{{assignment.subject}}</span>\r\n              </div>\r\n              <div class=\"ml-auto\">\r\n                <div class=\"list-inline\">\r\n                  <button mat-mini-fab color=\"secondary\" class=\"list-inline-item\">\r\n                    <mat-icon>star_border</mat-icon>\r\n                  </button>\r\n                  <button mat-mini-fab color=\"secondary\" class=\"list-inline-item\">\r\n                    <mat-icon>turned_in_not</mat-icon>\r\n                  </button>\r\n                  <button mat-mini-fab color=\"secondary\" class=\"list-inline-item\">75%</button>\r\n                </div>\r\n                <mat-chip color=\"primary\" class=\"m-2 bg-whieicon\" selected>View Details</mat-chip>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <h3 class=\"card-title title\">{{assignment.title}}</h3>\r\n            <p class=\"card-sub-title subtitle\">{{assignment.topic}}</p>\r\n            <div class=\"card-text perfomed\">\r\n              <div class=\"d-flex\">\r\n                <span>Assignment Performed</span>\r\n                <span class=\"list-inline\">\r\n                  <span class=\"list-inline-item\" *ngFor=\"let user of assignment.studentAssignments\">\r\n                    <img [src]=\"user.account.profilePic\" class=\"profimg\">\r\n                  </span>\r\n                </span>\r\n                <span class=\"ml-auto\">\r\n                  <mat-chip class=\"bg-violet\" selected>Pending with 20</mat-chip>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div> -->\r\n\r\n<div class=\"d-flex justify-content-between\">\r\n  <mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Subject, Grade, Title, Topic\" #input>\r\n  </mat-form-field>\r\n  <div>\r\n    <mat-form-field>\r\n      <mat-label for=\"course\">Course</mat-label>\r\n      <mat-select [(ngModel)]=\"selectedCourse\" name=\"course\">\r\n        <mat-option *ngFor=\"let location of filteredCourses\" [value]=\"location\">\r\n          {{location.title}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"ml-2\">\r\n      <mat-label>Assign To</mat-label>\r\n      <mat-select [(ngModel)]=\"selectedstudents\" multiple>\r\n        <mat-option *ngFor=\"let enrollment of selectedCourse?.enrollments\" [value]=\"enrollment.account\">\r\n          {{enrollment.account?.firstName}} {{enrollment.account?.lastName}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <a class=\"ml-2\" mat-raised-button color=\"accent\" (click)=\"addAssignments()\"\r\n      [disabled]=\"!selectedstudents && selection.selected.length == 0\">Submit</a>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\r\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n          [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- ID Column -->\r\n    <!-- <ng-container matColumnDef=\"id\" hidden>\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.assignmentId}} </td>\r\n      </ng-container> -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <span class=\"img-span\"><img class=\"rounded-circle\" src=\"assets/icons/vidhya-sandhhan.svg\" width=\"24\" height=\"24\"> </span>{{row.title}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"grade\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Grade </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.grade}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Progress Column -->\r\n    <ng-container matColumnDef=\"subject\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Subject </th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.subject}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"created\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Due Date </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.dueDate | date}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"topic\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Topic </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.topic}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"points\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Points </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.points}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"attachment\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Attachment </th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> <a (click)=\"downloadFile(row.assignmentFile)\">\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-download\" fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n        <path fill-rule=\"evenodd\"\r\n          d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\" />\r\n      </svg> Download\r\n        </a> </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  <div class=\"d-flex text-center justify-content-center\">\r\n    <div class=\"alert alert-success\" *ngIf=\"success\" role=\"alert\">\r\n      <strong>Assigned to Students Successfully</strong> <mat-icon (click)=\"success = !success\">cancel</mat-icon>\r\n    </div>\r\n    <div class=\"alert alert-warning\" *ngIf=\"error\" role=\"alert\">\r\n     <strong>{{error}}</strong> <mat-icon (click)=\"error = null\">cancel</mat-icon>\r\n   </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'fieldsfilter'\r\n})\r\nexport class FieldsfilterPipe implements PipeTransform {\r\n\r\n  transform(value, keys: string, term: string) {\r\n    if (!term) { return value; }\r\n    return (value || []).filter(item => keys.split(',').some(key => item.hasOwnProperty(key) && new RegExp(term, 'gi').test(item[key])));\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-eventslist',\r\n  templateUrl: './eventslist.component.html',\r\n  styleUrls: ['./eventslist.component.css']\r\n})\r\nexport class EventslistComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthserviceService,\r\n              private demoService: DemoService, ) { }\r\n\r\n  @Input() tutions;\r\n  @Input() demos;\r\n  splitTutions;\r\n  splitDemos;\r\n  filter1;\r\n  filter2;\r\n  month = new Date();\r\n  @Output() returnEvent = new EventEmitter<boolean>();\r\n  selectedDemo;\r\n\r\n  ngOnInit(): void {\r\n    this.filterEvents();\r\n  }\r\n\r\n  filterEvents(){\r\n    this.splitTutions =  this.tutions;\r\n    this.splitDemos = this.demos;\r\n    this.splitDemos = this.demos.filter(x => ((new Date(x.startDate).getMonth() === this.month.getMonth())\r\n     && (new Date(x.startDate).getFullYear() === this.month.getFullYear())) || ((new Date(x.endDate).getMonth() === this.month.getMonth())\r\n     && (new Date(x.endDate).getFullYear() === this.month.getFullYear())));\r\n    this.splitTutions = this.tutions.filter(x => ((new Date(x.startDate).getMonth() === this.month.getMonth())\r\n    && (new Date(x.startDate).getFullYear() === this.month.getFullYear())) || ((new Date(x.endDate).getMonth() === this.month.getMonth())\r\n    && (new Date(x.endDate).getFullYear() === this.month.getFullYear())));\r\n  }\r\n\r\n  nextClick(side){\r\n    if (side === 'left'){\r\n      this.month = moment(this.month).subtract('1', 'month').toDate() ;\r\n    }\r\n    else{\r\n      this.month = moment(this.month).add('1', 'month').toDate() ;\r\n    }\r\n    this.filterEvents();\r\n  }\r\n\r\n  addEvent(){\r\n    this.returnEvent.emit(false);\r\n  }\r\n\r\n  accessreturnValue(event){\r\n    this.filterEvents();\r\n    if (event){\r\n      this.selectedDemo = null;\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"!selectedDemo\">\r\n  <mat-tab-group mat-align-tabs=\"center\" [backgroundColor]=\"'primary'\">\r\n    <mat-tab label=\"Demos\">\r\n      <div class=\"card min-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"demo-container\">\r\n            <div>\r\n              <p>Demo Events</p>\r\n              <p>Total: {{demos.length}}</p>\r\n            </div>\r\n            <div>\r\n              <a (click)=\"nextClick('left')\">\r\n                <mat-icon>chevron_left</mat-icon>\r\n              </a>\r\n              <span>{{month | date: 'MMMM , yyyy'}}</span>\r\n              <a (click)=\"nextClick('right')\">\r\n                <mat-icon>chevron_right</mat-icon>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <input matInput [(ngModel)]=\"filter1\" placeholder=\"Search\">\r\n                <mat-icon matSuffix>search</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row m-2\">\r\n            <div class=\"col-md-6\"\r\n              *ngFor=\"let demo of splitDemos | fieldsfilter: 'subject,title,topic,grade,dueDate': filter1\">\r\n              <ng-container>\r\n                <div class=\"card m-1\">\r\n                  <div class=\"card-header\">\r\n                    <div class=\"d-flex\">\r\n                      <div>\r\n                        <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                        <span class=\"subject\">{{demo.title}}</span>\r\n                      </div>\r\n                      <div class=\"ml-auto\">\r\n                        <p class=\"card-sub-title subject\">Class: {{demo.grade}}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <h3 class=\"card-title title\">{{demo.subject}}</h3>\r\n                    <p class=\"card-sub-title subtitle\">{{demo.description}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Demo Date: {{demo.startDate | date}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Time: {{demo.startTime}} - {{demo.endTime}}</p>\r\n                    <div class=\"card-text perfomed\">\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"list-inline\" *ngIf=\"authService.userValue.role === 'Tutor'\">\r\n                          <span  class=\"list-inline-item\" *ngFor=\"let user of demo.enrollments\">\r\n                            <img [src]=\"user.account?.accountDetails[0]?.profilePic\" class=\"profimg\">\r\n                          </span>\r\n                        </span>\r\n                        <span class=\"list-inline\" *ngIf=\"authService.userValue.role === 'Student'\">\r\n                          <span  class=\"list-inline-item\">\r\n                            <img [src]=\"demo.owner?.accountDetails[0]?.profilePic\" class=\"profimg\">\r\n                          </span>\r\n                        </span>\r\n                        <span class=\"ml-auto\">\r\n                          <span class=\"badge badge-pill badge-primary pill-font\" (click)=\"selectedDemo = demo\">View Details</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"ml-auto m-4 circle-add\" mat-mini-fab (click)=\"addEvent()\">\r\n            <mat-icon>add</mat-icon>\r\n        </a>\r\n      </div>\r\n\r\n    </mat-tab>\r\n    <mat-tab label=\"Tutions\">\r\n      <div class=\"card min-card\">\r\n        <div class=\"card-header\">\r\n          <div class=\"demo-container\">\r\n            <div>\r\n              <p>Tuition Events</p>\r\n              <p>Total: {{tutions.length}}</p>\r\n            </div>\r\n            <div>\r\n              <a (click)=\"nextClick('left')\">\r\n                <mat-icon>chevron_left</mat-icon>\r\n              </a>\r\n              <span>{{month | date: 'MMMM , yyyy'}}</span>\r\n              <a (click)=\"nextClick('right')\">\r\n                <mat-icon>chevron_right</mat-icon>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <mat-form-field appearance=\"outline\">\r\n                <input matInput [(ngModel)]=\"filter2\" placeholder=\"Search\">\r\n                <mat-icon matSuffix>search</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row m-2\">\r\n            <div class=\"col-md-6\"\r\n              *ngFor=\"let tution of splitTutions | fieldsfilter: 'subject,title,topic,grade,startDate': filter2\">\r\n              <ng-container>\r\n                <div class=\"card m-1\">\r\n                  <div class=\"card-header\">\r\n                    <div class=\"d-flex\">\r\n                      <div>\r\n                        <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                        <span class=\"subject\">{{tution.title}}</span>\r\n                      </div>\r\n                      <div class=\"ml-auto\">\r\n                        <p class=\"card-sub-title subject\">Class: {{tution.grade}}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <h3 class=\"card-title title\">{{tution.subject}}</h3>\r\n                    <p class=\"card-sub-title subtitle\">{{tution.description}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Demo Date: {{tution.startDate | date}}</p>\r\n                    <p class=\"card-sub-title subtitle\">Time: {{tution.startTime}} - {{tution.endTime}}</p>\r\n                    <div class=\"card-text perfomed\">\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"list-inline\">\r\n                          <span class=\"list-inline-item\" *ngFor=\"let user of tution.enrollments\">\r\n                            <img [src]=\"user.student?.profilePic\" class=\"profimg\">\r\n                          </span>\r\n                        </span>\r\n                        <span class=\"ml-auto\">\r\n                          <span class=\"badge badge-pill badge-primary pill-font\" (click)=\"selectedDemo = tution\">View Details</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"ml-auto m-4 circle-add\" mat-mini-fab (click)=\"addEvent()\">\r\n            <mat-icon>add</mat-icon>\r\n          </a>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"selectedDemo\">\r\n    <app-demodetail [course]=\"selectedDemo\" (listView)=\"accessreturnValue($event)\"></app-demodetail>\r\n</ng-container>\r\n","import {\r\n  Injectable, OnDestroy\r\n} from '@angular/core';\r\nimport {\r\n  BehaviorSubject,\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  User\r\n} from '../_models/user';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  HttpClient, HttpHeaders, HttpParams\r\n} from '@angular/common/http';\r\nimport {\r\n  environment\r\n} from 'src/environments/environment';\r\nimport {\r\n  map\r\n} from 'rxjs/operators';\r\nimport { JsonPipe } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthserviceService implements OnDestroy {\r\n\r\n  constructor(private router: Router,\r\n              private http: HttpClient) {\r\n    this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n    this.user = this.userSubject.asObservable();\r\n\r\n    this.loginSubject = new BehaviorSubject<string>(localStorage.getItem('logtype'));\r\n    this.loginuser = this.loginSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  public get userType(): string {\r\n    return this.loginSubject.value;\r\n  }\r\n\r\n\r\n  private userSubject: BehaviorSubject < User > ;\r\n  public user: Observable < User > ;\r\n\r\n  private loginSubject: BehaviorSubject < string >;\r\n  public loginuser: Observable < string > ;\r\n\r\n  private refreshTokenTimeout;\r\n\r\n  ngOnDestroy(){\r\n    localStorage.removeItem('logtype');\r\n  }\r\n\r\n  setLoginSubject(type){\r\n    localStorage.setItem('logtype', type);\r\n    this.loginSubject.next(type);\r\n  }\r\n\r\n  login(username: string, password: string, role: number) {\r\n    return this.http.post < any > (`${environment.apiUrl}/accounts/authenticate`, {\r\n       email : username,\r\n       password,\r\n       rememberMe: false,\r\n       role\r\n      }, {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n        withCredentials: true,\r\n      })\r\n      .pipe(map(user => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.userSubject.next(user);\r\n        this.startRefreshTokenTimer();\r\n        return user;\r\n      }));\r\n  }\r\n\r\n  logout() {\r\n    const token = JSON.parse(localStorage.getItem('user'));\r\n    this.http.post<any>(`${environment.apiUrl}/accounts/revoke-token`, {token: token?.refreshToken}, {\r\n      withCredentials: true,\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n    }).subscribe();\r\n    localStorage.removeItem('user');\r\n    this.stopRefreshTokenTimer();\r\n    this.userSubject.next(null);\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  tokenRefresh() {\r\n    const usert: User = JSON.parse(localStorage.getItem('user')) ;\r\n    return this.http.post < any > (`${environment.apiUrl}/accounts/refresh-token`, {\r\n      Token: usert?.refreshToken\r\n    }, {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n        withCredentials: true\r\n      })\r\n      .pipe(map((user) => {\r\n        this.userSubject.next(user);\r\n        this.startRefreshTokenTimer();\r\n        return user;\r\n      }));\r\n  }\r\n\r\n  private startRefreshTokenTimer() {\r\n    console.log('user' + this.userValue);\r\n    const jwtToken = JSON.parse(atob(this.userValue?.jwtToken.split('.')[1]));\r\n\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n    this.refreshTokenTimeout = setTimeout(() => this.tokenRefresh().subscribe(), timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n\r\n  confirmEmail(value: any) {\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/verify-email`, {token: value},\r\n    {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  reConfirm(user: User){\r\n    const options = user ?\r\n    { params: new HttpParams().set('emailid', user.email)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/users/reconfirm`, options);\r\n  }\r\n\r\n  verifyotp(userid, otp: string){\r\n    const options = otp ?\r\n    { params: new HttpParams().set('otp', otp)} : {};\r\n\r\n    return this.http.get<any>(`${environment.apiUrl}/accounts/verifyotp`, {\r\n      withCredentials: true,\r\n      params: options.params\r\n    }).pipe(map(user => {\r\n      this.userSubject.next(user);\r\n      this.startRefreshTokenTimer();\r\n      return user;\r\n    }));\r\n  }\r\n\r\n  resendotp(emailId){\r\n    const options = emailId ?\r\n    { params: new HttpParams().set('email', emailId)} : {};\r\n    return this.http.get<any>(`${environment.apiUrl}/users/regeneratecode`, options);\r\n  }\r\n\r\n  sendOtp(phone){\r\n    return this.http.post<any>(`${environment.apiUrl}/accounts/generateotp`, phone);\r\n  }\r\n\r\n  forgotpassword(passwordmodel){\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/forgot-password`, passwordmodel, {\r\n      withCredentials: true\r\n    })\r\n    .pipe(map(user => {\r\n      return user;\r\n    }));\r\n  }\r\n\r\n  resetpassword(passwordmodel){\r\n    return this.http.post<any> (`${environment.apiUrl}/accounts/reset-password`, passwordmodel, {\r\n      withCredentials: true\r\n    })\r\n    .pipe(map(user => {\r\n      return user;\r\n    }));\r\n  }\r\n\r\n}\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\nimport { OnInit } from '@angular/core';\r\n// TODO: Replace this with your own data model type\r\nexport interface StudentmateriallistItem {\r\n  subject: string;\r\n  materialId: number;\r\n  topic: string;\r\n  grade: string;\r\n  title: string;\r\n  files: [];\r\n}\r\n\r\nexport class StudentmateriallistDataSource extends DataSource<StudentmateriallistItem> {\r\n  data: StudentmateriallistItem[];\r\n  paginator: MatPaginator;\r\n  sort: MatSort;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<StudentmateriallistItem[]> {\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange\r\n    ];\r\n\r\n    return merge(...dataMutations).pipe(map(() => {\r\n      return this.getPagedData(this.getSortedData([...this.data]));\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: StudentmateriallistItem[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: StudentmateriallistItem[]) {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === 'asc';\r\n      switch (this.sort.active) {\r\n        case 'subject': return compare(a.subject, b.subject, isAsc);\r\n        case 'id': return compare(+a.materialId, +b.materialId, isAsc);\r\n        case 'topic': return compare(a.topic, b.topic, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/subject columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { faGopuram   } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-sitefooter',\r\n  templateUrl: './sitefooter.component.html',\r\n  styleUrls: ['./sitefooter.component.css']\r\n})\r\nexport class SitefooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bg-dark\">\r\n  <div class=\"footer-parent\">\r\n    <div class=\"footer-child\">\r\n      <img src=\"assets/website/vidhyasadhan.svg\"  class=\"img img-fluid site-img\">\r\n      <p class=\"mt-4\">\r\n        Lorem ipsum dolor sit amet, magna habemusius ad, qui minimum voluptaria in. Ad mei modus quodsi complectitur, postea...\r\n      </p>\r\n      <div>\r\n        <ul class=\"list-inline\">\r\n          <li class=\"list-inline-item\">\r\n            <i class=\"fa fa-google-plus\"></i></li>\r\n          <li class=\"list-inline-item\"><i class=\"fa fa-facebook-square\"></i></li>\r\n          <li class=\"list-inline-item\"><i class=\"fa fa-twitter\"></i></li>\r\n          <li class=\"list-inline-item\"><i class=\"fa fa-instagram\"></i></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer-child\">\r\n      <div>\r\n        VidhyaSadhan Links\r\n      </div>\r\n      <ul class=\"list-unstyled mt-4\">\r\n        <li [routerLink]=\"['/']\" class=\"list-item\"><a>Home</a></li>\r\n        <li [routerLink]=\"['/about-us']\" class=\"list-item\">About Us</li>\r\n        <li [routerLink]=\"['/features']\" class=\"list-item\">Features</li>\r\n        <li [routerLink]=\"['/pricing']\" class=\"list-item\">Pricing</li>\r\n        <li [routerLink]=\"['/contact']\" class=\"list-item\">Contact Us</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"footer-child\">\r\n      <div>\r\n        Contact Us\r\n      </div>\r\n      <ul class=\"list-unstyled mt-4\">\r\n        <li class=\"list-item\">(+91) 98846 66785</li>\r\n        <li class=\"list-item\">Vidhyasadhan@gmail.com</li>\r\n        <li class=\"list-item\">Address goes here: Lorem ipsum dolor sit amet, magna habemus.</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"footer-child\">\r\n      <div>\r\n        VidhyaSadhan Instagram\r\n      </div>\r\n      <ul class=\"list-unstyled mt-4\">\r\n        <li class=\"list-item\">\r\n          <ul class=\"list-inline square\">\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <!-- <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n              </svg> -->\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"list-item\">\r\n          <ul class=\"list-inline square\">\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertsComponent } from './alerts/alerts.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AlertsComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [AlertsComponent]\r\n})\r\nexport class AlertModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>© 2020 VidhyaSadhan. All Rights Reserved.</footer>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-admintutors',\n  templateUrl: './admintutors.component.html',\n  styleUrls: ['./admintutors.component.css']\n})\nexport class AdmintutorsComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  error;\n\n  constructor(private adminService: AdminService, private alertService: AlertService) { }\n\n  displayedColumns: string[] = ['sno', 'name', 'email', 'profilePic', 'phone'];\n  dataSource: MatTableDataSource<any>;\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource();\n    this.loadTutors();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadTutors(){\n    this.adminService.getadminData().subscribe(x => {\n      console.log(x.tutors);\n      this.dataSource.data = x.tutors;\n    }, (error) => {\n      this.alertService.error(error);\n    });\n  }\n\n  click(event, row){\n\n  }\n\n  applyFilter(eve){\n    const filterValue = (eve.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n","<div class=\"tutor-table\">\n  <h1>Tutors</h1>\n  <div class=\"form-group row\">\n    <div class=\"offset-md-8 col-md-4\">\n      <div class=\"input-group mb-2\">\n        <input class=\"form-control input-rounded\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\" #input>\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <mat-icon>search</mat-icon>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"mat-container mat-elevation-z8\">\n    <table mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"sno\" sticky>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No. </th>\n        <td mat-cell *matCellDef=\"let i = index\">\n        {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\n      </td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n        <td mat-cell *matCellDef=\"let row\"><a href (click)=\"click($event,row)\">{{row.name | uppercase}}</a> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"profilePic\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Profile </th>\n        <td mat-cell *matCellDef=\"let row\"> <img class=\"profile\" [src]=\"row.accountDetails?.profilePic\"> </td>\n      </ng-container>\n      <ng-container matColumnDef=\"phone\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"startdate\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Start Date </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.account.startDate}} </td>\n      </ng-container> -->\n      <!-- <ng-container matColumnDef=\"star\"  stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-icon color=\"primary\" (click)=\"click($event,row)\">visibility</mat-icon>\n        </td>\n      </ng-container> -->\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationMiddlewareService } from 'src/app/core/notification-middleware.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n\r\n  constructor(public notificationMiddleware: NotificationMiddlewareService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleSubscription() {\r\n    this.notificationMiddleware.toggleSubscription();\r\n  }\r\n\r\n  cleanUrl(url) {\r\n    if (url.indexOf(self.location.origin) >= 0) {\r\n      return url.replace(self.location.origin, '');\r\n    }\r\n    return url;\r\n  }\r\n\r\n  removeNotif(notif) {\r\n    const index = this.notificationMiddleware.notifications.indexOf(notif);\r\n    if (index >= 0) {\r\n      this.notificationMiddleware.notifications.splice(index, 1);\r\n    }\r\n  }\r\n\r\n}\r\n","<h1>Notifications</h1>\r\n\r\n<button (click)=\"toggleSubscription()\" class=\"btn btn-primary\" [disabled]=\"notificationMiddleware.pushNotificationStatus.isInProgress || !notificationMiddleware.pushNotificationStatus.isSupported\">\r\n  <span *ngIf=\"!notificationMiddleware.pushNotificationStatus.isSupported\">Push is NOT supported by this device</span>\r\n  <span *ngIf=\"notificationMiddleware.pushNotificationStatus.isSupported && notificationMiddleware.pushNotificationStatus.isSubscribed\">Unsubscribe</span>\r\n  <span *ngIf=\"notificationMiddleware.pushNotificationStatus.isSupported && !notificationMiddleware.pushNotificationStatus.isSubscribed\">Subscribe</span>\r\n</button>\r\n\r\n{{notificationMiddleware.notifications | json}}\r\n<ul class=\"list-group\">\r\n  \r\n  <li class=\"list-group-item\" *ngFor=\"let notif of notificationMiddleware.notifications\">\r\n    <a [routerLink]=\"cleanUrl(notif.Url)\" (click)=\"removeNotif(notif)\">{{notif.Title}}\r\n      <small>{{notif.Message}}</small>\r\n    </a>\r\n  </li>\r\n</ul>","import { Component, ViewChild } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { ApexAxisChartSeries, ApexChart, ApexDataLabels, ApexFill,\r\n  ApexLegend, ApexNonAxisChartSeries, ApexPlotOptions, ApexResponsive, ApexStroke, ApexTooltip, ApexXAxis, ApexYAxis, ChartComponent } from 'ng-apexcharts';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\nexport type ChartOptionsBar = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n  stroke: ApexStroke;\r\n  legend: ApexLegend;\r\n};\r\n\r\nexport type ChartOptionsTutors = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  responsive: ApexResponsive[];\r\n  labels: any;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent {\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public barChart: Partial<ChartOptionsBar>;\r\n  public tutorPie: Partial<ChartOptionsTutors>;\r\n  public eventPie: Partial<ChartOptionsTutors>;\r\n  adminData;\r\n  tutorrequests = [];\r\n\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n    map(({ matches }) => {\r\n      if (matches) {\r\n        return [\r\n          { title: 'Classes', cols: 2, rows: 1 },\r\n          { title: 'Subscribers', cols: 2, rows: 1 },\r\n          { title: 'Requests', cols: 2, rows: 1 },\r\n          { title: 'Events', cols: 2, rows: 1 },\r\n          { title: 'Recent Activity', cols: 2, rows: 1 }\r\n        ];\r\n      }\r\n\r\n      return [\r\n        { title: 'Classes', cols: 2, rows: 1 },\r\n        { title: 'Subscribers', cols: 1, rows: 1 },\r\n        { title: 'Requests', cols: 1, rows: 1 },\r\n        { title: 'Events', cols: 1, rows: 1 },\r\n        { title: 'Recent Activity', cols: 1, rows: 1 }\r\n      ];\r\n    })\r\n  );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private adminService: AdminService) {\r\n    this.mapAdminData();\r\n  }\r\n\r\n  createBarChart(){\r\n    this.barChart = {\r\n      series: [\r\n        {\r\n          name: 'Count',\r\n          data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n        }\r\n      ],\r\n      chart: {\r\n        type: 'bar',\r\n        height: 250\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: '35%',\r\n          endingShape: 'flat'\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          'Feb',\r\n          'Mar',\r\n          'Apr',\r\n          'May',\r\n          'Jun',\r\n          'Jul',\r\n          'Aug',\r\n          'Sep',\r\n          'Oct'\r\n        ]\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: '(Count)'\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter(val) {\r\n            return '# ' + val;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  createTutorPie(){\r\n    this.tutorPie = {\r\n      series: [this.adminData.tutors.length, this.adminData.students.length, this.adminData.parents.length],\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie'\r\n      },\r\n      labels: ['Tutors', 'Students', 'Parents'],\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  createEventsPie(){\r\n    const classes = this.adminData.classesOrDemos?.filter(x => !x.isDemo);\r\n    const demos = this.adminData.classesOrDemos?.filter(x => x.isDemo);\r\n    this.eventPie = {\r\n      series: [classes.length, demos.length],\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie'\r\n      },\r\n      labels: ['Classes', 'Demos'],\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  mapAdminData(){\r\n    this.adminService.getadminData().subscribe(\r\n      x => {\r\n      this.adminData = x;\r\n      this.tutorrequests = x.tutors.filter(a => a.tutorStatus === 0);\r\n      this.createBarChart();\r\n      this.createTutorPie();\r\n      this.createEventsPie();\r\n      }\r\n    );\r\n  }\r\n\r\n  takeAction(tutor, status){\r\n    this.adminService.updateTutor({userId: tutor.id, status}).subscribe(\r\n      x => {\r\n        this.mapAdminData();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"grid-container\">\r\n  <h1 class=\"mat-h1\">Welcome Admin!</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">Classes/Demos</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/event.svg\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.classesOrDemos.length}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">Tutors #</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/admin/tutors.svg\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.tutors.length}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">Total Revenue</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/website/pricing/pricing-1.png\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.totalRevenue}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">New Requests</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <img src=\"assets/website/aboutus/about-2.png\">\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <h2>{{adminData?.newRequests.length}}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\r\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            {{card.title}}\r\n            <!-- <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n              <button mat-menu-item>Expand</button>\r\n              <button mat-menu-item>Remove</button>\r\n            </mat-menu> -->\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\">\r\n          <div *ngIf=\"card.title === 'Classes'\">\r\n            <apx-chart\r\n            [series]=\"barChart.series\"\r\n            [chart]=\"barChart.chart\"\r\n            [dataLabels]=\"barChart.dataLabels\"\r\n            [plotOptions]=\"barChart.plotOptions\"\r\n            [yaxis]=\"barChart.yaxis\"\r\n            [legend]=\"barChart.legend\"\r\n            [fill]=\"barChart.fill\"\r\n            [stroke]=\"barChart.stroke\"\r\n            [tooltip]=\"barChart.tooltip\"\r\n            [xaxis]=\"barChart.xaxis\"></apx-chart>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Subscribers'\">\r\n            <apx-chart\r\n            [series]=\"tutorPie.series\"\r\n            [chart]=\"tutorPie.chart\"\r\n            [labels]=\"tutorPie.labels\"\r\n            [responsive]=\"tutorPie.responsive\"\r\n          ></apx-chart>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Events'\">\r\n            <apx-chart\r\n            [series]=\"eventPie.series\"\r\n            [chart]=\"eventPie.chart\"\r\n            [labels]=\"eventPie.labels\"\r\n            [responsive]=\"eventPie.responsive\"\r\n          ></apx-chart>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Requests'\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let tutor of tutorrequests\">\r\n                New Tutor Request from {{tutor.name}}\r\n                <a mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\r\n                  <mat-icon>more_vert</mat-icon>\r\n                </a>\r\n                <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n                  <a mat-menu-item (click)=\"takeAction(tutor, 1)\">Accept</a>\r\n                  <a mat-menu-item (click)=\"takeAction(tutor, 2)\">Reject</a>\r\n                  <a mat-menu-item (click)=\"takeAction(tutor, 3)\">Respond</a>\r\n                </mat-menu>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div *ngIf=\"card.title === 'Recent Activity'\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n               Class Completed by Tutor 1\r\n                <a mat-icon-button class=\"more-button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </a>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Class Completed By Tutor 2\r\n                <a mat-icon-button class=\"more-button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </a>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Class Completed By Tutor 3\r\n                <a mat-icon-button class=\"more-button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : environment.apiUrl;\r\n    }\r\n\r\n    subscribe(sub: PushSubscription | null): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Notifications/subscribe\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(sub);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processSubscribe(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processSubscribe(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processSubscribe(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    unsubscribe(sub: PushSubscription | null): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Notifications/unsubscribe\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(sub);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUnsubscribe(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUnsubscribe(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUnsubscribe(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    broadcast(message: NotificationModel | null): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Notifications/broadcast\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(message);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processBroadcast(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processBroadcast(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processBroadcast(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\nexport interface PushSubscription {\r\n    endPoint?: string | undefined;\r\n    auth?: string | undefined;\r\n    p256Dh?: string | undefined;\r\n}\r\n\r\nexport interface NotificationModel {\r\n    title?: string | undefined;\r\n    message?: string | undefined;\r\n    url?: string | undefined;\r\n}\r\n\r\nexport class SwaggerException extends Error {\r\n    message: string;\r\n    status: number;\r\n    response: string;\r\n    headers: { [key: string]: any; };\r\n    result: any;\r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isSwaggerException = true;\r\n\r\n    static isSwaggerException(obj: any): obj is SwaggerException {\r\n        return obj.isSwaggerException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader();\r\n            reader.onload = event => {\r\n                observer.next((<any>event.target).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob);\r\n        }\r\n    });\r\n}","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-assignment-detail',\r\n  templateUrl: './assignment-detail.component.html',\r\n  styleUrls: ['./assignment-detail.component.css']\r\n})\r\nexport class AssignmentDetailComponent {\r\n  addressForm = this.fb.group({\r\n    company: null,\r\n    firstName: [null, Validators.required],\r\n    lastName: [null, Validators.required],\r\n    address: [null, Validators.required],\r\n    address2: null,\r\n    city: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n    postalCode: [null, Validators.compose([\r\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\r\n    ],\r\n    shipping: ['free', Validators.required]\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n\r\n  states = [\r\n    {name: 'Alabama', abbreviation: 'AL'},\r\n    {name: 'Alaska', abbreviation: 'AK'},\r\n    {name: 'American Samoa', abbreviation: 'AS'},\r\n    {name: 'Arizona', abbreviation: 'AZ'},\r\n    {name: 'Arkansas', abbreviation: 'AR'},\r\n    {name: 'California', abbreviation: 'CA'},\r\n    {name: 'Colorado', abbreviation: 'CO'},\r\n    {name: 'Connecticut', abbreviation: 'CT'},\r\n    {name: 'Delaware', abbreviation: 'DE'},\r\n    {name: 'District Of Columbia', abbreviation: 'DC'},\r\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\r\n    {name: 'Florida', abbreviation: 'FL'},\r\n    {name: 'Georgia', abbreviation: 'GA'},\r\n    {name: 'Guam', abbreviation: 'GU'},\r\n    {name: 'Hawaii', abbreviation: 'HI'},\r\n    {name: 'Idaho', abbreviation: 'ID'},\r\n    {name: 'Illinois', abbreviation: 'IL'},\r\n    {name: 'Indiana', abbreviation: 'IN'},\r\n    {name: 'Iowa', abbreviation: 'IA'},\r\n    {name: 'Kansas', abbreviation: 'KS'},\r\n    {name: 'Kentucky', abbreviation: 'KY'},\r\n    {name: 'Louisiana', abbreviation: 'LA'},\r\n    {name: 'Maine', abbreviation: 'ME'},\r\n    {name: 'Marshall Islands', abbreviation: 'MH'},\r\n    {name: 'Maryland', abbreviation: 'MD'},\r\n    {name: 'Massachusetts', abbreviation: 'MA'},\r\n    {name: 'Michigan', abbreviation: 'MI'},\r\n    {name: 'Minnesota', abbreviation: 'MN'},\r\n    {name: 'Mississippi', abbreviation: 'MS'},\r\n    {name: 'Missouri', abbreviation: 'MO'},\r\n    {name: 'Montana', abbreviation: 'MT'},\r\n    {name: 'Nebraska', abbreviation: 'NE'},\r\n    {name: 'Nevada', abbreviation: 'NV'},\r\n    {name: 'New Hampshire', abbreviation: 'NH'},\r\n    {name: 'New Jersey', abbreviation: 'NJ'},\r\n    {name: 'New Mexico', abbreviation: 'NM'},\r\n    {name: 'New York', abbreviation: 'NY'},\r\n    {name: 'North Carolina', abbreviation: 'NC'},\r\n    {name: 'North Dakota', abbreviation: 'ND'},\r\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\r\n    {name: 'Ohio', abbreviation: 'OH'},\r\n    {name: 'Oklahoma', abbreviation: 'OK'},\r\n    {name: 'Oregon', abbreviation: 'OR'},\r\n    {name: 'Palau', abbreviation: 'PW'},\r\n    {name: 'Pennsylvania', abbreviation: 'PA'},\r\n    {name: 'Puerto Rico', abbreviation: 'PR'},\r\n    {name: 'Rhode Island', abbreviation: 'RI'},\r\n    {name: 'South Carolina', abbreviation: 'SC'},\r\n    {name: 'South Dakota', abbreviation: 'SD'},\r\n    {name: 'Tennessee', abbreviation: 'TN'},\r\n    {name: 'Texas', abbreviation: 'TX'},\r\n    {name: 'Utah', abbreviation: 'UT'},\r\n    {name: 'Vermont', abbreviation: 'VT'},\r\n    {name: 'Virgin Islands', abbreviation: 'VI'},\r\n    {name: 'Virginia', abbreviation: 'VA'},\r\n    {name: 'Washington', abbreviation: 'WA'},\r\n    {name: 'West Virginia', abbreviation: 'WV'},\r\n    {name: 'Wisconsin', abbreviation: 'WI'},\r\n    {name: 'Wyoming', abbreviation: 'WY'}\r\n  ];\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  onSubmit() {\r\n    alert('Thanks!');\r\n  }\r\n}\r\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <mat-card class=\"shipping-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>Shipping Information</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\r\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\r\n              First name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\r\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\r\n              Last name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\r\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\r\n              Address is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\r\n            + Add C/O, Apt, Suite, Unit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"City\" formControlName=\"city\">\r\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\r\n              City is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-select placeholder=\"State\" formControlName=\"state\">\r\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\r\n                {{ state.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\r\n              State is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\r\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-radio-group formControlName=\"shipping\">\r\n            <mat-radio-button value=\"free\">Free Shipping</mat-radio-button>\r\n            <mat-radio-button value=\"priority\">Priority Shipping</mat-radio-button>\r\n            <mat-radio-button value=\"nextday\">Next Day Shipping</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthserviceService } from '../_services/authservice.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authenticateService: AuthserviceService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(catchError(err => {\r\n      if ([401, 403].includes(err.status) && this.authenticateService.userValue) {\r\n         // this.authenticateService.logout();\r\n      }\r\n\r\n      const error = (err && err.error && err.error.message) || err.statusText;\r\n      console.error(err);\r\n      return throwError(error);\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Customvalidators } from 'src/app/_helpers/customvalidators';\nimport { IsMatch } from 'src/app/_helpers/fieldmatcher';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthserviceService,\n              private router: ActivatedRoute) { }\n\n  isTutor;\n  passwordForm: FormGroup;\n  passwordsubmitted;\n  loadforgot;\n  error;\n  success;\n  token;\n\n  ngOnInit(): void {\n    this.token = this.router.snapshot.queryParams.token;\n\n    this.passwordForm = this.formBuilder.group({\n      password: ['', Validators.compose([\n        Validators.required,\n        Customvalidators.patternValidator(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, { isInvalid: true }),\n        Validators.minLength(8)])],\n      confirmPassword: ['', Validators.required]\n    }, {validator: IsMatch('password', 'confirmPassword') });\n  }\n\n  get p(){\n    return this.passwordForm.controls;\n  }\n\n  onpasswordSubmit() {\n    this.passwordsubmitted = true;\n\n    this.loadforgot = true;\n    console.log(this.token);\n    if (this.passwordForm.valid){\n      const forgotModel = {\n        token : this.token,\n        password : this.p.password.value,\n        confirmPassword: this.p.confirmPassword.value,\n      };\n      this.authService.resetpassword(forgotModel).subscribe(x => {\n        this.success = x.message;\n        this.loadforgot = false;\n      }, (error) => {\n        this.loadforgot = false;\n        this.error = error;\n      });\n    }\n  }\n}\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor? '':'main-bg'\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n  </mat-toolbar>\n  <div class=\"equal-container login-side\">\n    <div class=\"equal-col\">\n      <div>\n        <div class=\"card rounded\">\n          <div class=\"card-body\" class=\"log-form-mr bg-white\">\n            <div class=\"card-header text-center bg-transparent border-0\">\n              <h2 class=\"m-2\">Reset Password</h2>\n              <img class=\"h-vs\" src=\"assets/icons/vidhya-sandhhan.svg\">\n            </div>\n            <form [formGroup]=\"passwordForm\" class=\"m-4\" (ngSubmit)=\"onpasswordSubmit()\">\n              <div class=\"form-group loginform\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label for=\"password\">New Password</mat-label>\n                  <span matPrefix>\n                    <mat-icon color=\"primary\">lock</mat-icon>\n                    <mat-divider [vertical]=\"true\"></mat-divider>\n                  </span>\n                  <input matInput type=\"password\" formControlName=\"password\"\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\n                  <div *ngIf=\"passwordsubmitted && p.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"p.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"p.password.errors.pattern\">Password should be 8 characters with 1 Upper case letter and a number</div>\n                  </div>\n                </mat-form-field>\n              </div>\n              <div class=\"form-group loginform\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label for=\"confirmPassword\">Confirm Password</mat-label>\n                  <span matPrefix>\n                    <mat-icon color=\"primary\">lock</mat-icon>\n                    <mat-divider [vertical]=\"true\"></mat-divider>\n                  </span>\n                  <input matInput type=\"password\" formControlName=\"confirmPassword\"\n                    [ngClass]=\"{ 'is-invalid': passwordsubmitted && p.password.errors }\" />\n                  <div *ngIf=\"passwordsubmitted && p.confirmPassword.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"p.confirmPassword.errors.required\">Confirm Password is required</div>\n                    <div *ngIf=\"p.confirmPassword.errors.IsMatch\">Passwords are not matching!</div>\n                  </div>\n                </mat-form-field>\n              </div>\n              <div class=\"d-flex justify-content-between text-white\">\n                <a class=\"btn btn-secondary\" type=\"submit\" [routerLink]=\"['/login']\" role=\"button\">Login?</a>\n                <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loadforgot\">\n                  <span *ngIf=\"loadforgot\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                  Submit\n                </button>\n              </div>\n              <div *ngIf=\"passwordsubmitted && success\" class=\"alert alert-danger mt-3 mb-0\">{{success}}</div>\n              <div *ngIf=\"passwordsubmitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { IsMatch } from 'src/app/_helpers/fieldmatcher';\r\nimport { User } from 'src/app/_models/user';\r\nimport { handleException } from 'src/app/_helpers/vsexception';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { Customvalidators } from 'src/app/_helpers/customvalidators';\r\nimport { AlertService } from 'src/app/_services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  isAlert = '';\r\n  error = '';\r\n  isTutor = true;\r\n  success;\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 2, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 2, rows: 1, color: 'lightgreen'},\r\n  ];\r\n\r\n  options = {\r\n    autoClose: true,\r\n    keepAfterRouteChange: false\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    public authService: AuthserviceService,\r\n    private alertService: AlertService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const dat = this.route.url.subscribe(\r\n      x => {this.isTutor = x[1].path === 'tutor'; }\r\n    );\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phone: ['', Validators.required],\r\n      password: [ null, Validators.compose([\r\n        Validators.required,\r\n        Customvalidators.patternValidator(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, { isInvalid: true }),\r\n        // Customvalidators.patternValidator(/[A-Z]/, { hasCapitalCase: true }),\r\n        // Customvalidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\r\n        Validators.minLength(8)])\r\n     ],\r\n      role: [''],\r\n      confirmPassword: [''],\r\n    }, {validator: IsMatch('password', 'confirmPassword') });\r\n  }\r\n\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.error = null;\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid){\r\n      return;\r\n    }\r\n\r\n    const regUser: any = {\r\n       firstName : this.f.firstName.value,\r\n       lastName: this.f.lastName.value,\r\n       email: this.f.email.value,\r\n       password: this.f.password.value,\r\n       phone: this.f.phone.value,\r\n       username: this.f.email.value,\r\n       confirmPassword: this.f.confirmPassword.value,\r\n       acceptTerms: true,\r\n       title: this.isTutor ? 'tutor' : 'student',\r\n       role: this.isTutor ? 1 : 2,\r\n    };\r\n\r\n    this.loading = true;\r\n    this.userService.register(regUser)\r\n    .subscribe(data => {\r\n      this.alertService.success(data.message, this.options);\r\n      this.router.navigate(['login']);\r\n      this.loading = false;\r\n     }, error => {this.alertService.error(error, this.options); this.loading = false; });\r\n\r\n  }\r\n\r\n  registered(){\r\n    this.success = null;\r\n    this.registerForm.reset();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n","<div class=\"home-main flex-column\" [ngClass]=\"isTutor ? '':'main-bg'\">\r\n  <mat-toolbar class=\"w-100 p-2 justify-content-center\">\r\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\r\n  </mat-toolbar>\r\n  <div class=\"equal-container login-side\">\r\n    <div class=\"equal-col\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"registerForm\" class=\"log-form-mr\"  (ngSubmit)=\"onSubmit()\">\r\n            <div>\r\n              <div class=\"card-header bg-img  log-header text-center\">\r\n                <div class=\"signup-txt\">Register For Free</div>\r\n                <div class=\"p-2\"><small >Please fill out the form below to get started.</small></div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"firstname\">First Name</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"firstName\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n                  <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"lastname\">Last Name</mat-label>\r\n                  <input matInput type=\"text\" formControlName=\"lastName\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n                  <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n  \r\n              <!-- <div class=\"form-row\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <mat-label for=\"uname\">User Name</mat-label>\r\n                      <input matInput type=\"text\" formControlName=\"uname\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.uname.errors }\" />\r\n                      <div *ngIf=\"submitted && f.uname.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.uname.errors.required\">User Name is required</div>\r\n                      </div>\r\n                    </mat-form-field>\r\n                  </div> -->\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"email\">Email</mat-label>\r\n                  <input matInput type=\"email\" formControlName=\"email\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email Address is required</div>\r\n                    <div *ngIf=\"f.email.errors.email\">Please Provide a Valid Email Address</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">Password</mat-label>\r\n                  <input matInput type=\"password\" formControlName=\"password\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                  <mat-hint>Minimum 8 characters with atleast one capital letter and a number</mat-hint>\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Please Provide a Password</div>\r\n                    <div *ngIf=\"f.password.errors.pattern\">Password should be 8 characters with 1 Upper case letter and a number</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"password\">Confirm Password</mat-label>\r\n                  <input matInput type=\"password\" formControlName=\"confirmPassword\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n                  <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                    <div *ngIf=\"f.confirmPassword.errors.IsMatch\">Passwords are not matching!</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label for=\"phone\">Phone</mat-label>\r\n                  <input matInput type=\"tel\" formControlName=\"phone\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n                  <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.phone.errors.required\">Please Provide a Phone number</div>\r\n                    <div *ngIf=\"f.phone.errors.pattern\">Please provide a valid phone number</div>\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <mat-card-footer class=\"text-center justify-content-center\">\r\n                <mat-card-actions>\r\n                  <button mat-flat-button color=\"accent\" type=\"submit\" [disabled]=\"loading\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Register\r\n                  </button>\r\n                  <!-- <a mat-flat-button color=\"accent\" [routerLink]=\"'/register'\">Sign Up</a> -->\r\n                  <div class=\"mt-2 p-2\">Already have an account? <a [routerLink]=\"'/login'\">Sign In</a></div>\r\n                </mat-card-actions>\r\n                <div class=\"m-1\">\r\n                  <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success\">\r\n                    <strong>{{success}}</strong>\r\n                    <mat-icon (click)=\"registered()\">close</mat-icon>\r\n                  </div>\r\n                  <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"error\">\r\n                    <strong>Unable to Register!</strong>\r\n                    <mat-icon (click)=\"error = null\">close</mat-icon>\r\n                  </div>\r\n                </div>\r\n              </mat-card-footer>\r\n            </div>         \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexXAxis,\r\n  ApexDataLabels,\r\n  ApexStroke,\r\n  ApexMarkers,\r\n  ApexYAxis,\r\n  ApexGrid,\r\n  ApexTitleSubtitle,\r\n  ApexLegend,\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexFill\r\n} from 'ng-apexcharts';\r\nimport { months } from 'moment';\r\n\r\nexport type LineChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  stroke: ApexStroke;\r\n  dataLabels: ApexDataLabels;\r\n  markers: ApexMarkers;\r\n  colors: string[];\r\n  yaxis: ApexYAxis;\r\n  grid: ApexGrid;\r\n  legend: ApexLegend;\r\n  title: ApexTitleSubtitle;\r\n};\r\n\r\nexport type RadialChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n  fill: ApexFill;\r\n  stroke: ApexStroke;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-adaptivereports',\r\n  templateUrl: './adaptivereports.component.html',\r\n  styleUrls: ['./adaptivereports.component.css']\r\n})\r\nexport class AdaptivereportsComponent implements OnInit {\r\n\r\n\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<LineChartOptions>;\r\n  public radialChartOptions: Partial<RadialChartOptions>;\r\n\r\n  radialCharts = [];\r\n\r\n  constructor() {\r\n    this.lineChartData();\r\n    this.getradialCharts();\r\n\r\n  }\r\n\r\n  reportDate = new Date();\r\n\r\n  lineChartData(){\r\n    const dayArray = [];\r\n    for (let index = 1; index < 31; index++) {\r\n      dayArray.push(index);\r\n    }\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: 'Chapters Completed',\r\n          data: [8, 9, 3, 12, 15, 4 , 15, 3, 8, 9, 6, 2, 8, 9, 12, 2, 15, 4 , 3, 8, 9, 3, 6, 12, 15, 4 , 3, 2, 3]\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: 'line',\r\n        dropShadow: {\r\n          enabled: true,\r\n          color: '#000',\r\n          top: 18,\r\n          left: 7,\r\n          blur: 10,\r\n          opacity: 0.2\r\n        },\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      colors: ['#77B6EA', '#545454'],\r\n      dataLabels: {\r\n        enabled: true\r\n      },\r\n      stroke: {\r\n        curve: 'smooth'\r\n      },\r\n      // title: {\r\n      //   text: 'Average Chapter Completions',\r\n      //   align: 'left',\r\n      // },\r\n      grid: {\r\n        borderColor: '#e7e7e7',\r\n        row: {\r\n          colors: ['#f3f3f3', 'transparent'],\r\n          opacity: 0.5\r\n        }\r\n      },\r\n      markers: {\r\n        size: 1\r\n      },\r\n      xaxis: {\r\n        categories: dayArray,\r\n        title: {\r\n          text: 'Days'\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: 'Chapters'\r\n        },\r\n        min: 1,\r\n        max: 20\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'right',\r\n        floating: true,\r\n        offsetY: -25,\r\n        offsetX: -5\r\n      }\r\n    };\r\n  }\r\n\r\n  getradialCharts(){\r\n    this.radialChartOptions = {\r\n      series: [75],\r\n      chart: {\r\n        height: 250,\r\n        type: 'radialBar',\r\n        toolbar: {\r\n          show: true\r\n        }\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          startAngle: -135,\r\n          endAngle: 225,\r\n          hollow: {\r\n            margin: 0,\r\n            size: '40%',\r\n            background: '#fff',\r\n            image: undefined,\r\n            position: 'front',\r\n            dropShadow: {\r\n              enabled: true,\r\n              top: 3,\r\n              left: 0,\r\n              blur: 4,\r\n              opacity: 0.24\r\n            }\r\n          },\r\n          track: {\r\n            background: '#fff',\r\n            strokeWidth: '5%',\r\n            margin: 0,\r\n            dropShadow: {\r\n              enabled: true,\r\n              top: -3,\r\n              left: 0,\r\n              blur: 4,\r\n              opacity: 0.35\r\n            }\r\n          },\r\n\r\n          dataLabels: {\r\n            show: true,\r\n            name: {\r\n              offsetY: -10,\r\n              show: true,\r\n              color: '#888',\r\n              fontSize: '12px'\r\n            },\r\n            value: {\r\n              formatter: (val) => {\r\n                return parseInt(val.toString(), 10).toString();\r\n              },\r\n              color: '#111',\r\n              fontSize: '14px',\r\n              show: true\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          type: 'horizontal',\r\n          shadeIntensity: 0.5,\r\n          gradientToColors: ['#ff5e3a'],\r\n          inverseColors: true,\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100]\r\n        }\r\n      },\r\n      stroke: {\r\n        lineCap: 'round'\r\n      },\r\n      labels: ['Percent']\r\n    };\r\n\r\n    for (let index = 0; index < 4; index++) {\r\n      this.radialCharts.push(this.radialChartOptions);\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card text-center\">\r\n  <div class=\"card-header card-header-main\">\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n      <input matInput placeholder=\"Subject\">\r\n      <mat-icon matPrefix>subject</mat-icon>\r\n    </mat-form-field>\r\n    <mat-form-field fill=\"outline\" class=\"mr-2\">\r\n      <input matInput placeholder=\"Chapter\">\r\n      <mat-icon matPrefix>topic</mat-icon>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header card-header-main text-left\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <div class=\"d-flex flex-column\">\r\n            <span class=\"chapters\">\r\n              Chapters Completed and Point Gained per Day\r\n            </span>\r\n            <span class=\"chaper-date\">\r\n              {{reportDate | date}}\r\n            </span>\r\n          </div>\r\n          <div class=\"d-flex\">\r\n            <div class=\"d-flex flex-column mr-1\">\r\n              <span class=\"completed\">Completed ({{reportDate | date: 'MMM'}})</span>\r\n              <span class=\"chaper-date\">Total :25</span>\r\n            </div>\r\n            <div class=\"d-flex flex-column mr-1\">\r\n              <span class=\"completed\">Gained Point ({{reportDate | date: 'MMM'}})</span>\r\n              <span class=\"chaper-date\">Total : 282</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\" [xaxis]=\"chartOptions.xaxis\"\r\n          [stroke]=\"chartOptions.stroke\" [colors]=\"chartOptions.colors\" [dataLabels]=\"chartOptions.dataLabels\"\r\n          [legend]=\"chartOptions.legend\" [markers]=\"chartOptions.markers\" [grid]=\"chartOptions.grid\"\r\n          [yaxis]=\"chartOptions.yaxis\" [title]=\"chartOptions.title\"></apx-chart>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"card m-2 text-left\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title register\">Registered Tutions Progress</h4>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-3\" *ngFor=\"let chart of radialCharts\">\r\n                      <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                          <div class=\"d-flex justify-content-between\">\r\n                            <div>Maths</div>\r\n                            <div>\r\n                              <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"\">\r\n                                <mat-icon>drag_indicator</mat-icon>\r\n                              </button>\r\n                              <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n                                <button mat-menu-item>\r\n                                  <span>Announcement</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                  <span>Activity</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                  <span>Ask</span>\r\n                                </button>\r\n                                <button mat-menu-item>\r\n                                  <span>Quiz</span>\r\n                                </button>\r\n                              </mat-menu>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                          <apx-chart [series]=\"chart.series\" [chart]=\"chart.chart\" [plotOptions]=\"chart.plotOptions\"\r\n                            [labels]=\"chart.labels\" [stroke]=\"chart.stroke\" [fill]=\"chart.fill\"></apx-chart>\r\n                        </div>\r\n                        <div class=\"card-footer text-center\">\r\n                           <div class=\"d-flex justify-content-between\">\r\n                               <div class=\"d-flex flex-column\">\r\n                                   <span class=\"chart-left\">15</span>\r\n                                   <span class=\"chart-text\">Chapters Completed</span>\r\n                                </div>\r\n                               <mat-divider\r\n                                   [vertical]=\"true\">\r\n                               </mat-divider>\r\n                               <div class=\"d-flex flex-column\">\r\n                                   <span class=\"chart-right\">7</span>\r\n                                   <span class=\"chart-text\">Chapters Left</span>\r\n                                </div>\r\n                           </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthserviceService } from '../_services/authservice.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router,\r\n              private authenticationService: AuthserviceService){\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n               const user = this.authenticationService.userValue;\r\n               if (user) {\r\n                    return true;\r\n                } else {\r\n                    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n                    return false;\r\n                }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitefeatures',\r\n  templateUrl: './sitefeatures.component.html',\r\n  styleUrls: ['./sitefeatures.component.css']\r\n})\r\nexport class SitefeaturesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/FEATURES</p>\r\n          <h2 class=\"welove-text\">We provide Role-based access control.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/website/features/feature.png\"\r\n            srcset=\"assets/website/features/feature-1.png 2x,assets/website/features/feature-2.png 3x\"\r\n            class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bg-white\">\r\n  <div class=\"contact-us\">\r\n    <h2 class=\"welove-devtext\">Role-based access control</h2>\r\n    <div class=\"line\"></div>\r\n  </div>\r\n  <div class=\"role\">\r\n    <div class=\"role-container\">\r\n      <img src=\"assets/website/features/role.png\" srcset=\"assets/website/features/role-1.png 2x,\r\n      assets/website/features/role-2.png 3x\" class=\"role-1\">\r\n      <div class=\"card bg-transparent border-0\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title student-header\">Students\r\n            Without Limits</h2>\r\n          <p class=\"card-text student-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem.\r\n            Curabitur aliquam tellus eu nisl suscipit, at vestibulum ex rutrum. Nulla facilisi.\r\n            Cras ullamcorper pellentesque orci, nec vestibulum nibh.uspendisseUt enim mi, mattis at\r\n            sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus eu nisl suscipit, at\r\n            vestibulum ex rutrum. Nulla facilisi. Cras ullamcorper</p>\r\n            <a class=\"btn startnow rounded\" role=\"button\">Get started now!</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"role-container-2\">\r\n      <div class=\"card bg-transparent border-0\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title student-header\">Tutors\r\n            Global Community</h2>\r\n          <p class=\"card-text student-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem.\r\n            Curabitur aliquam tellus eu nisl suscipit, at vestibulum ex rutrum. Nulla facilisi.\r\n            Cras ullamcorper pellentesque orci, nec vestibulum nibh.uspendisse</p>\r\n            <a class=\"btn startnow rounded\" role=\"button\">Get started now!</a>\r\n        </div>\r\n      </div>\r\n      <img src=\"assets/website/features/global.png\" srcset=\"assets/website/features/global-1.png 2x,\r\n      assets/website/features/global-2.png 3x\" class=\"role-1\">\r\n    </div>\r\n    <div class=\"role-container\">\r\n      <img src=\"assets/website/features/parent.png\" srcset=\"assets/website/features/parent-1.png 2x,\r\n      assets/website/features/parent-2.png 3x\" class=\"role-1\">\r\n      <div class=\"card bg-transparent border-0\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title student-header\">Parents Monitoring\r\n            from Anywhere</h2>\r\n          <p class=\"card-text student-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem.\r\n            Curabitur aliquam tellus eu nisl suscipit, at vestibulum ex rutrum. Nulla facilisi.\r\n            Cras ullamcorper pellentesque orci, nec vestibulum nibh.uspendisse</p>\r\n            <a class=\"btn startnow rounded\" role=\"button\">Get started now!</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudymaterialService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMaterials(){\r\n    return this.http.get<any>(`${environment.apiUrl}/material`);\r\n  }\r\n}\r\n","import {\n  WeekDay\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport {\n  Observable\n} from 'rxjs';\nimport {\n  StaticData\n} from 'src/app/_models/static';\nimport {\n  StaticdataService\n} from 'src/app/_services/staticdata.service';\nimport {\n  UserService\n} from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-studentpayments',\n  templateUrl: './studentpayments.component.html',\n  styleUrls: ['./studentpayments.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class StudentpaymentsComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private userservice: UserService,\n              private staticdataService: StaticdataService) {}\n\n  detailsForm: FormGroup;\n  form2: FormGroup;\n  cardForm: FormGroup;\n  submitted = false;\n  tutors;\n  staticData;\n  subjects;\n  allChecked = false;\n  days = [{\n      day: 'Monday',\n      selected: false\n    },\n    {\n      day: 'Tuesday',\n      selected: false\n    },\n    {\n      day: 'Wednesday',\n      selected: false\n    },\n    {\n      day: 'Thursday',\n      selected: false\n    },\n    {\n      day: 'Friday',\n      selected: false\n    },\n    {\n      day: 'Saturday',\n      selected: false\n    },\n    {\n      day: 'Sunday',\n      selected: false\n    }\n  ];\n\n  ngOnInit(): void {\n    this.detailsForm = this.formBuilder.group({\n      tutor: ['', Validators.required],\n      subjects: ['', Validators.required],\n      teachingstyle: ['', Validators.required],\n      days: ['', Validators.required],\n      price: ['', Validators.required],\n      currency: ['INR', Validators.required],\n    });\n\n    this.form2 = this.formBuilder.group({\n      options: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      hours: ['', Validators.required],\n      time: ['', Validators.required]\n    });\n\n    this.cardForm = this.formBuilder.group({\n      option: ['', Validators.required],\n      promo: [''],\n      cardNumber: ['', Validators.required],\n      expDate: ['', Validators.required],\n      holderName: ['', Validators.required],\n      cvv: ['', Validators.required]\n    });\n\n    this.tutors = this.userservice.getTutors();\n    this.getSubjects();\n  }\n\n  displayFn(user: any) {\n    return user && user.name ? user.name : '';\n  }\n\n\n  getSubjects() {\n    this.staticdataService.getStaticDataSets().subscribe(\n      data => {\n        this.subjects = data.subjects.map(e => {\n          return {\n            ...e\n          };\n        });\n      }\n    );\n  }\n\n  get f() {\n    return this.detailsForm.controls;\n  }\n\n  get secondForm(){\n    return this.form2.controls;\n  }\n\n  get getGrandTotal(){\n    return this.f.price.value * this.secondForm.hours.value;\n  }\n\n  getSelectedSubjects(){\n    const subjects = [];\n    Array.from(this.f.subjects.value)\n    .forEach((element: any) => {\n      subjects.push(element.group.groupName + '-' + element.name);\n    });\n    return subjects.join(',');\n  }\n\n  getFrequency(){\n    const days = [];\n    Array.from(this.days)\n    .forEach((element: any) => {\n      if (element.selected){\n        days.push(element.day);\n      }\n    });\n    return days.join(',');\n  }\n\n  changeDays(checker, day) {\n    day.selected = checker;\n    this.allChecked = this.days.filter(t => t.selected).length > 0 ? false : this.allChecked;\n  }\n\n  changeAll(completed: boolean) {\n    this.allChecked = completed;\n    if (this.days == null) {\n      return;\n    }\n    this.days.forEach(t => {\n      if (completed === true) {\n        t.selected = true;\n      }\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.detailsForm.valid) {\n\n    }\n  }\n\n}\n","<div class=\"container-fluid mt-2\">\n  <div class=\"card min-card\">\n    <div class=\"card-header payment-header\">\n      <span class=\"payment\">Payment</span>\n    </div>\n    <div class=\"card-body\">\n      <mat-horizontal-stepper color=\"secondary\" labelPosition=\"bottom\" #stepper>\n        <mat-step [stepControl]=\"detailsForm\">\n          <div class=\"verify\">Verify Tutor details</div>\n          <div class=\"container\">\n            <form [formGroup]=\"detailsForm\">\n              <ng-template class=\"header-label\" matStepLabel>Verify Tutor Details</ng-template>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Tutor Name</mat-label>\n                    <input matInput placeholder=\"Sample Name\" required formControlName=\"tutor\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                      <mat-option *ngFor=\"let tutor of tutors | async\" [value]=\"tutor\">\n                        {{tutor.name}}\n                      </mat-option>\n                    </mat-autocomplete>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Subjects</mat-label>\n                    <mat-select formControlName=\"subjects\" multiple>\n                      <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject\">\n                        {{subject.group.groupName}} - {{subject.name}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <mat-label>Teaching Style</mat-label>\n                  <section>\n                    <mat-radio-group formControlName=\"teachingstyle\">\n                      <mat-radio-button class=\"day-margin\" value=\"Online\">Online</mat-radio-button>\n                      <mat-radio-button class=\"day-margin\" value=\"Offline\">Offline</mat-radio-button>\n                      <mat-radio-button class=\"day-margin\" value=\"Both\">Both</mat-radio-button>\n                    </mat-radio-group>\n                  </section>\n                </div>\n                <div class=\"col-md-6\">\n                  <mat-label>Available Days to Tutor</mat-label>\n                  <section>\n                    <mat-checkbox class=\"day-margin\" [checked]=\"allChecked\" (change)=\"changeAll($event.checked)\">All\n                    </mat-checkbox>\n                    <mat-checkbox class=\"day-margin\" [checked]=\"day.selected\" (change)=\"changeDays($event.checked, day)\"\n                      *ngFor=\"let day of days\">{{day.day | slice:0:3}}</mat-checkbox>\n                  </section>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Hourly Rate</mat-label>\n                    <input matInput formControlName=\"price\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-md-6\">\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Currency</mat-label>\n                    <input matInput readonly formControlName=\"currency\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <button #previousButton mat-button hidden matStepperPrevious>Previous</button>\n              <button #nextButton mat-button hidden matStepperNext>Next</button>\n            </form>\n          </div>\n        </mat-step>\n        <mat-step [stepControl]=\"form2\">\n          <div class=\"verify\">Select tution duration</div>\n          <form [formGroup]=\"form2\">\n            <ng-template class=\"header-label\" matStepLabel>Select tution duration</ng-template>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Payment options</mat-label>\n                    <section>\n                      <mat-radio-group formControlName=\"options\">\n                        <mat-radio-button class=\"m-2\" value=\"week\">Weekdays (Mon - Fri)</mat-radio-button>\n                        <mat-radio-button class=\"m-2\" value=\"weekend\">Weekends (Sat - Sun)</mat-radio-button>\n                      </mat-radio-group>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Schedule from</mat-label>\n                    <section>\n                      <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter a date range</mat-label>\n                        <span matPrefix>\n                          <mat-icon>calendar_today</mat-icon>\n                        </span>\n                        <mat-date-range-input [rangePicker]=\"picker\">\n                          <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\">\n                          <input matEndDate formControlName=\"endDate\" placeholder=\"End date\">\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n                      </mat-form-field>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>No. of hours per day</mat-label>\n                    <mat-form-field appearance=\"outline\">\n                      <mat-label>No. of hours per day</mat-label>\n                      <input matInput formControlName=\"hours\">\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Time slot</mat-label>\n                    <mat-form-field appearance=\"outline\">\n                      <mat-label>Time slot</mat-label>\n                      <span matPrefix>\n                        <mat-icon>alarm</mat-icon>\n                      </span>\n                      <input matInput formControlName=\"time\">\n                    </mat-form-field>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6 sidecard\">\n                <div class=\"p-4\">\n                  <h3>Booking Summary</h3>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Tutor name:</div>\n                      <div class=\"col\">{{f.tutor.value.name}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Subjects:</div>\n                      <div class=\"col\"> {{getSelectedSubjects()}} </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Teaching style:</div>\n                      <div class=\"col\">{{f.teachingstyle.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Hourly rate:</div>\n                      <div class=\"col\">{{f.price.value}} {{f.currency.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Frequency of classes:</div>\n                      <div class=\"col\">{{getFrequency()}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Starting from:</div>\n                      <div class=\"col\">{{secondForm.startDate.value | date}} - {{secondForm.endDate.value | date}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">No. of hours per day:</div>\n                      <div class=\"col\">{{secondForm.hours.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Time slot:</div>\n                      <div class=\"col\">{{secondForm.time.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Grand total:</div>\n                      <div class=\"col\">{{getGrandTotal}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <div class=\"verify\">Complete payment</div>\n          <form [formGroup]=\"cardForm\">\n            <ng-template class=\"header-label\" matStepLabel>Complete payment</ng-template>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-checkbox>Apply promo code</mat-checkbox>\n                    <section class=\"m-2\">\n                      <mat-label>Promo code</mat-label>\n                      <mat-form-field appearance=\"outline\">\n                        <mat-label>Promo code</mat-label>\n                        <input matInput formControlName=\"promo\">\n                      </mat-form-field>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <mat-label>Payment Options</mat-label>\n                    <section>\n                      <mat-radio-group formControlName=\"option\">\n                        <mat-radio-button class=\"m-2\" value=\"credit\">Credit Card</mat-radio-button>\n                        <mat-radio-button class=\"m-2\" value=\"online\">Online Banking</mat-radio-button>\n                        <mat-radio-button class=\"m-2\" value=\"payment\">Payment Partners</mat-radio-button>\n                      </mat-radio-group>\n                    </section>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <mat-label>Card Number</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>Card Number</mat-label>\n                      <span matPrefix><mat-icon>credit_card</mat-icon></span>\n                      <input matInput formControlName=\"cardNumber\">\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-4\">\n                    <mat-label>Exp. Date</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>Choose a date</mat-label>\n                      <input matInput [matDatepicker]=\"exppicker\" formControlName=\"expDate\">\n                      <mat-datepicker-toggle matSuffix [for]=\"exppicker\"></mat-datepicker-toggle>\n                      <mat-datepicker #exppicker></mat-datepicker>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-10\">\n                    <mat-label>Cardholder name</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>Name</mat-label>\n                      <input matInput formControlName=\"holderName\">\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-2\">\n                    <mat-label>CVV</mat-label>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>CVV</mat-label>\n                      <span matPrefix><mat-icon>credit_card</mat-icon></span>\n                      <input matInput formControlName=\"cvv\">\n                    </mat-form-field>\n                  </div>\n                </div>\n                <mat-checkbox>I accept the terms & conditions</mat-checkbox>\n              </div>\n              <div class=\"col-md-6 sidecard\">\n                <div class=\"p-4\">\n                  <h3>Booking Summary</h3>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Tutor name:</div>\n                      <div class=\"col\">{{f.tutor.value.name}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Subjects:</div>\n                      <div class=\"col\"> {{getSelectedSubjects()}} </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Teaching style:</div>\n                      <div class=\"col\">{{f.teachingstyle.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Hourly rate:</div>\n                      <div class=\"col\">{{f.price.value}} {{f.currency.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Frequency of classes:</div>\n                      <div class=\"col\">{{getFrequency()}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Starting from:</div>\n                      <div class=\"col\">{{secondForm.startDate.value | date}} - {{secondForm.endDate.value | date}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">No. of hours per day:</div>\n                      <div class=\"col\">{{secondForm.hours.value}}</div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Time slot:</div>\n                      <div class=\"col\">{{secondForm.time.value}}</div>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                  <div class=\"summary\">\n                    <div class=\"row\">\n                      <div class=\"col section-1\">Grand total:</div>\n                      <div class=\"col\">{{getGrandTotal}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n    </div>\n    <div class=\"card-footer bg-white text-muted\">\n      <div class=\"d-flex justify-content-between\">\n        <a class=\"btn btn-light m-2\" (click)=\"previousButton._elementRef.nativeElement.click()\" role=\"button\">Back</a>\n        <div>\n          <a class=\"btn btn-primary m-2\" role=\"button\">Cancel</a>\n          <a class=\"btn btn-primary m-2\" (click)=\"nextButton._elementRef.nativeElement.click()\"\n            type=\"submit\">Continue</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-promoterlayout',\n  templateUrl: './promoterlayout.component.html',\n  styleUrls: ['./promoterlayout.component.css']\n})\nexport class PromoterlayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { RegisterComponent } from './_components/register/register.component';\r\nimport { NotificationComponent } from './_components/notification/notification.component';\r\nimport { BroadcastComponent } from './_components/broadcast/broadcast.component';\r\nimport { NavigationBarComponent } from './_components/navigation-bar/navigation-bar.component';\r\nimport { SidenavBarComponent } from './_components/sidenav-bar/sidenav-bar.component';\r\nimport { ProfileComponent } from './_components/profile/profile.component';\r\nimport { CalendarComponent } from './_components/calendar/calendar.component';\r\nimport { ConfirmationComponent } from './_components/confirmation/confirmation.component';\r\nimport { DashboardComponent } from './_components/dashboard/dashboard.component';\r\nimport { AdminDashboardComponent } from './_components/admin-dashboard/admin-dashboard.component';\r\nimport { DemolistComponent } from './_components/demolist/demolist.component';\r\nimport { DemoComponent } from './_components/demo/demo.component';\r\nimport { ClassroomComponent } from './_components/classroom/classroom.component';\r\nimport { OtpComponent } from './_components/otp/otp.component';\r\nimport { ActivatescreenComponent } from './_components/activatescreen/activatescreen.component';\r\nimport { TutorsComponent } from './_components/tutors/tutors.component';\r\nimport { DemodetailComponent } from './_components/demodetail/demodetail.component';\r\nimport { TutorReferralsComponent } from './_components/tutor-referrals/tutor-referrals.component';\r\nimport { EarningsComponent } from './_components/earnings/earnings.component';\r\nimport { MainlayoutComponent } from './_layouts/mainlayout/mainlayout.component';\r\nimport { EventsComponent } from './_components/events/events.component';\r\nimport { ReportsComponent } from './_components/student/reports/reports.component';\r\nimport { StudymaterialComponent } from './_components/student/studymaterial/studymaterial.component';\r\nimport { SitelayoutComponent } from './_layouts/sitelayout/sitelayout.component';\r\nimport { SitehomeComponent } from './_components/website/sitehome/sitehome.component';\r\nimport { SitenavComponent } from './_components/website/sitenav/sitenav.component';\r\nimport { SiteaboutusComponent } from './_components/website/siteaboutus/siteaboutus.component';\r\nimport { SitepricingComponent } from './_components/website/sitepricing/sitepricing.component';\r\nimport { SitecontactusComponent } from './_components/website/sitecontactus/sitecontactus.component';\r\nimport { SitefeaturesComponent } from './_components/website/sitefeatures/sitefeatures.component';\r\nimport { AdminlayoutComponent } from './_layouts/adminlayout/adminlayout.component';\r\nimport { AdminComponent } from './_components/dashboard/admin/admin.component';\r\nimport { AdmintutorsComponent } from './_components/admin-pages/admintutors/admintutors.component';\r\nimport { AdminstudentsComponent } from './_components/admin-pages/adminstudents/adminstudents.component';\r\nimport { AdminpaymentsComponent } from './_components/admin-pages/adminpayments/adminpayments.component';\r\nimport { PromoterregisterComponent } from './_components/promoter/promoterregister/promoterregister.component';\r\nimport { PromoterlayoutComponent } from './_layouts/promoterlayout/promoterlayout.component';\r\nimport { PromoterloginComponent } from './_components/promoter/promoterlogin/promoterlogin.component';\r\nimport { StudentpaymentsComponent } from './_components/student/studentpayments/studentpayments.component';\r\nimport { ForgotpasswordComponent } from './_components/login/forgotpassword/forgotpassword.component';\r\nimport { ResetpasswordComponent } from './_components/login/resetpassword/resetpassword.component';\r\nimport { AppnotificationsComponent } from './_components/appnotifications/appnotifications.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'vs', component: MainlayoutComponent, canActivate: [AuthGuard],\r\n  children: [\r\n  { path: '', component: HomeComponent, pathMatch: 'full'},\r\n  { path: 'navbar', component: NavigationBarComponent},\r\n  { path: 'sidenav', component: SidenavBarComponent},\r\n  { path: 'tutors', component: TutorsComponent},\r\n  { path: 'earnings', component: EarningsComponent},\r\n  { path: 'notifications', component: NotificationComponent},\r\n  { path: 'broadcast', component: BroadcastComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'calendar', component: CalendarComponent},\r\n  { path: 'dashboard', component: DashboardComponent},\r\n  { path: 'admin', component: AdminDashboardComponent},\r\n  { path: 'demos', component: DemoComponent},\r\n  { path: 'events', component: EventsComponent},\r\n  { path: 'requests', component: DemolistComponent},\r\n  { path: 'demos/create', component: DemoComponent},\r\n  { path: 'demodetail/:id', component: DemodetailComponent},\r\n  { path: 'classroom', component: ClassroomComponent},\r\n  { path: 'tutor-referrals', component: TutorReferralsComponent},\r\n  { path: 'student/assignments', component: StudymaterialComponent},\r\n  { path: 'progress', component: ReportsComponent},\r\n  { path: 'student/payments', component: StudentpaymentsComponent},\r\n  { path: 'appnotify', component: AppnotificationsComponent},\r\n  ] },\r\n  {\r\n    path: '', component: SitelayoutComponent,\r\n    children: [\r\n      { path: '', component: SitehomeComponent, pathMatch: 'full'},\r\n      { path: 'about-us', component: SiteaboutusComponent},\r\n      { path: 'pricing', component: SitepricingComponent},\r\n      { path: 'contact', component: SitecontactusComponent},\r\n      { path: 'features', component: SitefeaturesComponent},\r\n      { path: 'navbar', component: SitenavComponent},\r\n    ]\r\n  },\r\n  {\r\n    path: 'admin', component: AdminlayoutComponent,\r\n    children: [\r\n      { path: '', component: AdminComponent, pathMatch: 'full'},\r\n      { path: 'tutors', component: AdmintutorsComponent},\r\n      { path: 'students', component: AdminstudentsComponent},\r\n      { path: 'payments', component: AdminpaymentsComponent}\r\n    ]\r\n  },\r\n  {\r\n    path: 'promoter', component: PromoterlayoutComponent,\r\n    children: [\r\n      { path: '', component: AdminComponent, pathMatch: 'full'},\r\n      { path: 'register', component: PromoterregisterComponent},\r\n      { path: 'login', component: PromoterloginComponent},\r\n      { path: 'students', component: AdminstudentsComponent},\r\n      { path: 'payments', component: AdminpaymentsComponent}\r\n    ]\r\n  },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register/:id', component: RegisterComponent},\r\n  { path: 'authenticate', component: OtpComponent},\r\n  { path: 'account/forgot-password', component: ForgotpasswordComponent},\r\n  { path: 'account/reset-password', component: ResetpasswordComponent},\r\n  { path: 'welcome', component: ActivatescreenComponent},\r\n  { path: 'verify-email/:token', component: ConfirmationComponent},\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { Dashboard } from 'src/app/_models/dashboard';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { Statistics } from 'src/app/_models/static';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  greetmessage;\r\n  user: User;\r\n  cards: Dashboard[];\r\n  istutor: boolean;\r\n  statistics: Statistics;\r\n  profile;\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: false,\r\n    touchDrag: false,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      400: {\r\n        items: 2\r\n      },\r\n      740: {\r\n        items: 3\r\n      },\r\n      940: {\r\n        items: 5\r\n      }\r\n    },\r\n    nav: true\r\n  };\r\n\r\n  tutorcards: Dashboard[] = [\r\n    {id: 0, icon: 'assets/dashboard/noun-teaching-2380320.svg', text: 'My Classroom', subtext : 'Events',\r\n                                                          value : '0', type: '', class: 'opac-5', path: '/vs/classroom'},\r\n    {id: 1, icon: 'assets/dashboard/noun-assignment-3202074.svg', text: 'Requests',\r\n    subtext : 'Pending tasks', value : '0', type: '', class: 'opac-5', path: '/vs/requests' },\r\n    {id: 2, icon: 'assets/dashboard/path.svg', text: 'My Profile', subtext : 'Completed',\r\n    value : '0%', type: '', class: 'opac-5',\r\n    path: '/vs/profile' },\r\n    {id: 3, icon: 'assets/dashboard/vector.svg', text: 'My Events', subtext : 'Completed',\r\n    value : '0', type: '', class: 'opac-5', path: '/vs/events' },\r\n    {id: 4, icon: 'assets/dashboard/my-earnings.svg', text: 'My Earnings',\r\n    subtext : 'Completed', value : '0', type: '', class: 'opac-5', path: '/vs/earnings' },\r\n    {id: 5, icon: 'assets/dashboard/my-referrals.svg', text: 'My Referrals',\r\n    subtext : 'Rewards', value : '0', type: '', class: 'opac-5', path: '/vs/tutor-referrals' }\r\n  ];\r\n\r\n  studentcards: Dashboard[] = [\r\n    {id: 0, icon: 'assets/Student/noun-teaching-2380320.svg', text: 'My Classroom',\r\n    subtext : 'Events', value : '0',\r\n                                                        type: '', class: 'opac-5', path: '/vs/classroom' },\r\n    {id: 1, icon: 'assets/Student/noun-assignment-3202074.svg', text: 'Book Tutor', subtext : 'Pending tasks', value : '8', type: '', class: 'opac-5', path: '/vs/tutors' },\r\n    {id: 2, icon: 'assets/Student/path.svg', text: 'My Profile',\r\n                                                      subtext : 'Completed', value : '0%', type: '', class: 'student-profile', path: '/vs/profile' },\r\n    {id: 3, icon: 'assets/Student/my-earnings.svg',\r\n                                  text: 'Study Material', subtext : 'Resources', value : '0', type: '', class: 'opac-5', path: '/vs/student/assignments' },\r\n    {id: 4, icon: 'assets/Student/chart-pie-36.svg', text: 'Progress Reports',\r\n                                  subtext : 'Credits', value : '0', type: '', class: 'opac-5', path: '/vs/progress' }\r\n  ];\r\n\r\n  constructor(private authService: AuthserviceService, private userService: UserService,\r\n              private staticService: StaticdataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.CreateWishes();\r\n    this.user = this.authService.userValue;\r\n    this.userService.getProfileData(this.user.id).subscribe(x => {this.profile = x; });\r\n    this.istutor = this.user.role === 'Tutor';\r\n    this.staticService.getStatistics(this.authService.userValue.id).subscribe(x => {\r\n      this.statistics = x;\r\n      if (this.istutor){\r\n        this.tutorcards[0].value = this.statistics?.events.total.toString();\r\n        this.tutorcards[1].value = this.statistics?.events.total.toString();\r\n        this.tutorcards[2].value = this.statistics?.profiles.total.toString() + '%';\r\n        this.tutorcards[3].value = this.statistics?.events.total.toString();\r\n        this.tutorcards[4].value = this.statistics?.earnings.total.toString();\r\n        this.tutorcards[5].value = this.statistics?.progress.total.toString();\r\n      }\r\n      else{\r\n        this.studentcards[0].value = this.statistics?.events.total.toString();\r\n        this.studentcards[1].value = this.statistics?.events.total.toString();\r\n        this.studentcards[2].value = this.statistics?.profiles.total.toString() + '%';\r\n        this.studentcards[3].value = this.statistics?.materials.total.toString();\r\n        this.studentcards[4].value = this.statistics?.progress.total.toString();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private CreateWishes() {\r\n    const today = new Date();\r\n    const hours = today.getHours();\r\n\r\n    if (hours < 12) {\r\n      this.greetmessage = 'Good Morning';\r\n    }\r\n    else if (hours >= 12 && hours <= 17) {\r\n      this.greetmessage = 'Good Afternoon';\r\n    }\r\n    else if (hours >= 17 && hours <= 24) {\r\n      this.greetmessage = 'Good Evening';\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"align-items-center\">\r\n  <div class=\"jumbotron bg-white m-2 j-minheight\">\r\n    <div class=\"dash1-board\">\r\n      <div class=\"card-deck\">\r\n        <div class=\"card col-md-6 border-0 rounded\">\r\n          <div class=\"greet\">\r\n            <h4>Hi {{greetmessage}},</h4>\r\n            <h2 [ngClass]=\"{'first-nm': istutor === false}\">{{user.firstName | uppercase}}\r\n              {{user.lastName | uppercase}}</h2>\r\n            <div class=\"text-container\">\r\n              <p>\r\n                Start your journey by clicking on one of these icons\r\n              </p>\r\n              <img class=\"path-2 d-none d-md-block\" src=\"assets/dashboard/path-2.svg\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card col-md-6 border-0 rounded d-none d-md-block\">\r\n          <img class=\"w-100\" src=\"assets/dashboard/dashboard-1.png\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"icon-cards\">\r\n      <div [ngSwitch]=\"istutor\">\r\n        <div *ngSwitchCase=\"true\">\r\n          <div class=\"row t-card\">\r\n            <div class=\"col-md-4 col-lg-2 col-xl-4 mb-2\" *ngFor=\"let item of tutorcards\">\r\n              <div class=\"card dash-card text-center clearfix\"\r\n                [routerLink]=\"profile?.address?.addressId === 0 && item.text !== 'My Profile' ? '' : item.path\"\r\n                [ngClass]=\"{'opac-blue': profile?.address?.addressId == 0, 'prof-blue': item.text === 'My Profile'}\">\r\n                <div class=\"card-body spl-padding\">\r\n                  <img class=\"img img-responsive\" [src]=\"item.icon\">\r\n                  <h5 class=\"card-title title-text\"><a>{{item.text}}</a></h5>\r\n                  <p class=\"card-text title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                    <span>{{item.value}}</span>{{item.subtext}}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngSwitchCase=\"false\">\r\n          <div class=\"row t-card\">\r\n            <div class=\"col-md-4 col-lg-2 col-xl-4 mb-1\" *ngFor=\"let item of studentcards\">\r\n              <div class=\"card dash-card text-center clearfix\"\r\n                [routerLink]=\"profile?.address?.addressId === 0 && item.text !== 'My Profile' ? '' : item.path\"\r\n                [ngClass]=\"{'opac-pink': profile?.address?.addressId == 0, 'prof-pink': item.text === 'My Profile'}\">\r\n                <div class=\"card-body spl-padding\">\r\n                  <img class=\"img img-responsive\" [src]=\"item.icon\">\r\n                  <h5 class=\"card-title text-dark title-text\"><a>{{item.text}}</a></h5>\r\n                  <p class=\"card-text text-dark title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                    <span>{{item.value}}</span>{{item.subtext}}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <div [ngSwitch]=\"istutor\">\r\n      <div *ngSwitchCase=\"true\">\r\n        <owl-carousel-o [options]=\"customOptions\">\r\n          <ng-container *ngFor=\"let slide of tutorcards\">\r\n            <ng-template carouselSlide [id]=\"slide.id\">\r\n              <div class=\"card dash-card text-center clearfix m-2\"\r\n                [routerLink]=\"profile?.address?.addressId === 0 && slide.text !== 'My Profile' ? '' : slide.path\"\r\n                [ngClass]=\"{'opac-blue': profile?.address?.addressId == 0, 'prof-blue': slide.text === 'My Profile'}\">\r\n                <div class=\"card-body spl-padding\">\r\n                  <img class=\"img img-responsive\" [src]=\"slide.icon\">\r\n                  <h5 class=\"card-title title-text\"><a>{{slide.text}}</a></h5>\r\n                  <p class=\"card-text title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                    <span>{{slide.value}}</span>{{slide.subtext}}</p>\r\n                </div>\r\n                <div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </ng-container>\r\n        </owl-carousel-o>\r\n      </div>\r\n      <div *ngSwitchCase=\"false\">\r\n        <owl-carousel-o [options]=\"customOptions\">\r\n          <ng-container *ngFor=\"let item of studentcards\">\r\n            <ng-template carouselSlide [id]=\"item.id\">\r\n              <div class=\"card dash-card-student text-center clearfix m-2\"\r\n              [routerLink]=\"profile?.address?.addressId === 0 && item.text !== 'My Profile' ? '' : item.path\"\r\n              [ngClass]=\"{'opac-pink': profile?.address?.addressId == 0, 'prof-pink': item.text === 'My Profile'}\">\r\n              <div class=\"card-body spl-padding\">\r\n                <img class=\"img img-responsive\" [src]=\"item.icon\">\r\n                <h5 class=\"card-title text-dark title-text\"><a>{{item.text}}</a></h5>\r\n                <p class=\"card-text text-dark title-subtext\" *ngIf=\"profile?.address?.addressId > 0\">\r\n                  <span>{{item.value}}</span>{{item.subtext}}</p>\r\n              </div>\r\n            </div>\r\n            </ng-template>\r\n          </ng-container>\r\n        </owl-carousel-o>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CourseService } from 'src/app/_services/course.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { FileuploaderService } from 'src/app/_services/fileuploader.service';\r\nimport * as moment from 'moment';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-assignments',\r\n  templateUrl: './assignments.component.html',\r\n  styleUrls: ['./assignments.component.css']\r\n})\r\nexport class StudentAssignmentsComponent implements OnInit {\r\n\r\n  assignments;\r\n  courses;\r\n  filter;\r\n  error;\r\n  isUploaded;\r\n  uploadedFile;\r\n  isSuccess;\r\n  selectdetail = false;\r\n  splitAssignments;\r\n  month = new Date();\r\n  public assignmentFormForm: FormGroup;\r\n  public submitted = false;\r\n  files = [];\r\n  uploadedFilePath;\r\n\r\n  constructor(private courseService: CourseService,\r\n              private authService: AuthserviceService,\r\n              private fileUploader: FileuploaderService,\r\n              private studentService: StudentService,\r\n              private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.filterassignments();\r\n    this.assignmentForm();\r\n  }\r\n\r\n  assignmentForm(){\r\n    this.assignmentFormForm = this.fb.group({\r\n      id: [{\r\n        value: 0,\r\n        disabled: true\r\n      }],\r\n      assignmentId : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      courseId : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      status : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      dueDate: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      submissionDate : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      submissionFile : [''],\r\n      assignmentFile: [''],\r\n      userId : [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      subject: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      title: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      topic: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      grade: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      tutor: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      points: [{\r\n        value: '',\r\n        disabled: true\r\n      }],\r\n      instructions: [{\r\n        value: '',\r\n        disabled: true\r\n      }]\r\n      });\r\n  }\r\n\r\n  filterassignments(){\r\n    this.courseService.getStudentAssignments(this.authService.userValue.id)\r\n    .subscribe(x => {this.assignments = x;\r\n                     this.splitAssignments = x?.filter(y => new Date(y.assignment.dueDate).getMonth() === this.month.getMonth() &&\r\n                     new Date(y.assignment.dueDate).getFullYear() === this.month.getFullYear()); },\r\n      (error) => this.error = error);\r\n  }\r\n\r\n  downloadFile() {\r\n   // const blob = new Blob([data]);\r\n   // const url = window.URL.createObjectURL(blob);\r\n    window.open(this.f.assignmentFile.value);\r\n  }\r\n\r\n  get f() { return this.assignmentFormForm.controls; }\r\n\r\n  fileBrowse(files){\r\n    this.uploadedFile = files[0];\r\n    this.isUploaded = true;\r\n  }\r\n\r\n  viewDetails(assignment){\r\n    this.selectdetail = !this.selectdetail;\r\n    this.assignmentFormForm.patchValue({\r\n      id: assignment.id,\r\n      assignmentId : assignment.assignmentId,\r\n      dueDate: assignment.assignment.dueDate,\r\n      courseId: assignment.courseId,\r\n      submissionDate : new Date(),\r\n      assignmentFile : assignment.assignment.assignmentFile,\r\n      userId : this.authService.userValue.id,\r\n      subject: assignment.assignment.subject,\r\n      title: assignment.assignment.title,\r\n      topic: assignment.assignment.topic,\r\n      grade: assignment.assignment.grade,\r\n      tutor: assignment.assignment.account?.firstName + ' ' + assignment.assignment.account?.lastName,\r\n      points: assignment.assignment.points,\r\n      instructions: assignment.assignment.instructions\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if (this.files.length > 0){\r\n      const fileToUpload =  this.files[0] as File;\r\n      const formData = new FormData();\r\n      formData.append('file', fileToUpload, fileToUpload.name);\r\n      this.fileUploader.uploadFile(formData).subscribe(x => {\r\n        this.update(x.filepath);\r\n        this.filterassignments();\r\n      });\r\n    }\r\n  }\r\n\r\n  update(filePath){\r\n    const assignmentToUpdate = {\r\n      id: this.f.id.value,\r\n      assignmentId: this.f.assignmentId.value,\r\n      status: 1,\r\n      submissionDate: new Date(),\r\n      submissionFile: filePath,\r\n      studentId: this.f.userId.value,\r\n      courseId: this.f.courseId.value\r\n    };\r\n    this.courseService.updateStudentAssignments(assignmentToUpdate).subscribe(x => {if (x.id > 0){\r\n      this.isSuccess = true;\r\n    }}, (error) => this.isSuccess = false);\r\n  }\r\n\r\n  onDelete(){\r\n    this.uploadedFile = null;\r\n  }\r\n\r\n  nextClick(side){\r\n    if (side === 'left'){\r\n      this.month = moment(this.month).subtract('1', 'month').toDate() ;\r\n    }\r\n    else{\r\n      this.month = moment(this.month).add('1', 'month').toDate() ;\r\n    }\r\n    this.filterassignments();\r\n  }\r\n\r\n  dropped(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  prepareFilesList(files: Array<any>) {\r\n    for (const item of files) {\r\n      item.progress = 0;\r\n      this.files.push(item);\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      this.uploadedFilePath = e.target.result;\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n    this.uploadFilesSimulator(0);\r\n  }\r\n\r\n  uploadFilesSimulator(index: number) {\r\n    setTimeout(() => {\r\n      if (index === this.files.length) {\r\n        return;\r\n      } else {\r\n        const progressInterval = setInterval(() => {\r\n          if (this.files[index].progress === 100) {\r\n            clearInterval(progressInterval);\r\n            this.uploadFilesSimulator(index + 1);\r\n          } else {\r\n            this.files[index].progress += 5;\r\n          }\r\n        }, 200);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n    const k = 1024;\r\n    const dm = decimals <= 0 ? 0 : decimals || 2;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  filesBrowse(files) {\r\n    this.prepareFilesList(files);\r\n  }\r\n\r\n  deletefiles(){\r\n    this.files = [];\r\n    this.assignmentFormForm.controls.submissionFile.patchValue('');\r\n  }\r\n\r\n\r\n}\r\n","<ng-container>\r\n  <div class=\"card card-min-height\">\r\n    <div class=\"card-header material-bg\">\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <a *ngIf=\"selectdetail\" (click)=\"selectdetail = !selectdetail\">\r\n            <mat-icon>west</mat-icon>\r\n          </a> Assignments\r\n        </div>\r\n        <div *ngIf=\"!selectdetail\">\r\n          <a (click)=\"nextClick('left')\">\r\n            <mat-icon>chevron_left</mat-icon>\r\n          </a>\r\n          <span>{{month | date: 'MMMM , yyyy'}}</span>\r\n          <a (click)=\"nextClick('right')\">\r\n            <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n    <span [ngSwitch]=\"selectdetail\">\r\n      <form [formGroup]=\"assignmentFormForm\" novalidate (ngSubmit)=\"onSubmit()\" *ngSwitchCase=\"true\">\r\n        <div class=\"card-body\">\r\n          <div class=\"container\">\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"subject\" formControlName=\"subject\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"title\" formControlName=\"title\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"grade\" formControlName=\"grade\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"Due Date\" formControlName=\"dueDate\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"Tutor\" formControlName=\"tutor\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput placeholder=\"Points\" formControlName=\"points\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-8\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <textarea matInput placeholder=\"Instructions\" formControlName=\"instructions\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                assignment file <button mat-icon-button color=\"accent\" (click)=\"downloadFile()\">\r\n                  <mat-icon>cloud_download</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"file-container\" appDragndir (fileDropped)=\"dropped($event)\">\r\n                <input type=\"file\" class=\"fileinput\" #fileDropRef id=\"fileDropRef\" formControlName=\"submissionFile\"\r\n                  (change)=\"filesBrowse($event.target.files)\" />\r\n                <h3 class=\"text-dark\">Drag and Drop the file</h3>\r\n              </div>\r\n              <div class=\"info\" *ngIf=\"files.length>0\">\r\n                <h4 class=\"name\">\r\n                  {{ files[0]?.name }} <button mat-icon-button (click)=\"deletefiles()\" color=\"warn\">\r\n                    <mat-icon>delete_forever</mat-icon>\r\n                  </button>\r\n                </h4>\r\n                <p class=\"size\">\r\n                  {{files[0]?.progress}}% of {{ formatBytes(files[0]?.size,0) }}\r\n                </p>\r\n                <mat-progress-bar mode=\"buffer\" [color]=\"'primary'\" [value]=\"files[0]?.progress\"\r\n                  [bufferValue]=\"files[0]?.progress\">\r\n                </mat-progress-bar>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <div class=\"d-flex justify-content-end m-2\">\r\n            <button mat-raised-button color=\"accent\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"card-body\" *ngSwitchCase=\"false\">\r\n        <div class=\"alert alert-primary alert-dismissible fade show\" role=\"alert\" *ngIf=\"error\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            <span class=\"sr-only\">Close</span>\r\n          </button>\r\n          <strong>{{error}}</strong>\r\n        </div>\r\n        <div class=\"row m-2\">\r\n          <div class=\"col-md-6\"\r\n            *ngFor=\"let model of splitAssignments | fieldsfilter: 'subject,title,topic,grade,dueDate': filter\">\r\n            <ng-container>\r\n              <div class=\"card m-1\">\r\n                <div class=\"card-header\">\r\n                  <div class=\"d-flex\">\r\n                    <div>\r\n                      <img class=\"icon-class\" src=\"assets/icons/vidhya-sandhhan.svg\">\r\n                      <span class=\"subject\">{{model.assignment.title}}</span>\r\n                    </div>\r\n                    <div class=\"ml-auto\">\r\n                      <a (click)=\"viewDetails(model)\"><span class=\"badge badge-pill badge-primary\">View\r\n                          Details</span></a>\r\n                      <!-- <div class=\"list-inline\">\r\n                          <a mat-mini-fab color=\"secondary\" (click)=\"downloadFile(model.assignment.assignmentFile)\" title=\"download\" class=\"list-inline-item\">\r\n                            <mat-icon>cloud_download</mat-icon>\r\n                          </a>\r\n                          <a mat-mini-fab color=\"secondary\" title=\"upload\" (click)=\"uploader.click()\"  class=\"list-inline-item\">\r\n                            <mat-icon>cloud_upload</mat-icon>\r\n                          </a>\r\n                          <input hidden  type=\"file\" #uploader (change)=\"fileBrowse($event.target.files)\" />\r\n                        </div> -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <h3 class=\"card-title title\">{{model.assignment.subject}}</h3>\r\n                  <p class=\"card-sub-title subtitle\">{{model.assignment.topic}}</p>\r\n                  <div class=\"card-text perfomed\">\r\n                    <div class=\"d-flex flex-column\">\r\n                      <span>Due: {{model.assignment.dueDate | date: 'mediumDate'}}</span>\r\n                      <span class=\"list-inline\" *ngIf=\"uploadedFile\">\r\n                        {{uploadedFile.name}}\r\n                      </span>\r\n                      <!-- <span *ngIf=\"uploadedFile\">\r\n                          <a (click)=\"onSubmit(model)\"><span class=\"badge badge-pill badge-primary\" >Submit</span></a>\r\n                          <a (click)=\"onDelete()\"><span class=\"badge badge-pill badge-danger\">Delete</span></a>\r\n                        </span> -->\r\n                      <span class=\"ml-auto\">\r\n                        <ng-container [ngSwitch]=\"model.status\">\r\n                          <span class=\"badge badge-pill badge-warning\" *ngSwitchCase=\"0\">Pending</span>\r\n                          <span class=\"badge badge-pill badge-success\" *ngSwitchCase=\"1\">Submitted</span>\r\n                          <span class=\"badge badge-pill badge-primary\" *ngSwitchCase=\"2\">Evaluated</span>\r\n                        </ng-container>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </span>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { AttendanceService } from 'src/app/_services/attendance.service';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { StudentService } from 'src/app/_services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-earnings',\r\n  templateUrl: './earnings.component.html',\r\n  styleUrls: ['./earnings.component.css']\r\n})\r\nexport class EarningsComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private student: StudentService,\r\n              private authService: AuthserviceService) { }\r\n\r\n  sortoptions = [\r\n    {id: 0, value: 'Most Recent'},\r\n    {id: 1, value: 'Oldest'}\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['name', 'course', 'coursedate', 'sessions', 'status', 'amount'];\r\n  selectedValue = 0;\r\n\r\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource();\r\n    this.getenrollements();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    }\r\n\r\n  getenrollements(){\r\n    this.student.getenrollmentsbyTutor(this.authService.userValue.id)\r\n    .subscribe(x => { console.log(x); this.dataSource.data = x; return x; });\r\n  }\r\n\r\n  applyFilter(event){\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource?.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  actionSelected(row){\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n  <mat-card class=\"earningcard\">\r\n    <mat-card-header class=\"earnings-header\">\r\n      <mat-card-title>My Earnings</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-card class=\"min-card\">\r\n        <mat-card-header class=\"header-rad\">\r\n          <mat-card-title>Students List</mat-card-title>\r\n          <mat-card-subtitle>Total Students: {{dataSource.data.length}}</mat-card-subtitle>\r\n          <div class=\"row ml-auto\">\r\n            <div class=\"col-md-5\">\r\n              <mat-form-field>\r\n                <input matInput type=\"text\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n                <button mat-button matSuffix mat-icon-button>\r\n                  <mat-icon>search</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <mat-form-field>\r\n                <mat-select [(ngModel)]=\"selectedValue\" name=\"item\">\r\n                  <mat-option *ngFor=\"let item of sortoptions\" [value]=\"item.id\">\r\n                    {{item.value}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 text-right\">\r\n               <button class=\"rounded bg-primary\" color=\"accent\" mat-button>Withdraw</button>\r\n            </div>\r\n          </div>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div class=\"example-container mat-elevation-z8\">\r\n            <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n              <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Student Name </mat-header-cell>\r\n                <mat-cell  *matCellDef=\"let row\" data-label=\"Name\">\r\n                  <img class=\"rounded-circle\" [src]=\"row.student.profilePic\" width=\"30\" height=\"30\">\r\n                  {{row.name}}\r\n                </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"course\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Course </mat-header-cell>\r\n                <mat-cell  *matCellDef=\"let row\" data-label=\"Course\"> {{row.course.title}} </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"coursedate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Course Period </mat-header-cell>\r\n                <mat-cell  *matCellDef=\"let row\" data-label=\"Duration\"> {{row.course.startDate | date}} - {{row.course.endDate | date}}\r\n                </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"sessions\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> No of Classes </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\" data-label=\"No of Classes\"> {{row.classCount}} </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"status\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\" data-label=\"Status\">\r\n                  <span\r\n                    [ngSwitch]=\"row.paymentStatus === undefined || row.paymentStatus === null || row.paymentStatus === 'Pending'\">\r\n                    <p *ngSwitchCase=\"true\">\r\n                      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-slash-circle-fill\" fill=\"#ff0000\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\"\r\n                          d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708l-7 7a.5.5 0 0 0 .708.708l7-7z\" />\r\n                      </svg>\r\n                      Pending\r\n                    </p>\r\n                    <p *ngSwitchCase=\"false\">\r\n                      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill\" fill=\"#039f02\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\"\r\n                          d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n                      </svg>\r\n                      Paid\r\n                    </p>\r\n                  </span>\r\n                </mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"amount\">\r\n                <mat-header-cell *matHeaderCellDef> Amount </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\" data-label=\"Amount\"> {{row.paymentAmount | currency: 'INR'}} </mat-cell>\r\n              </ng-container>\r\n              <!-- <ng-container matColumnDef=\"action\">\r\n                              <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                              <td mat-cell *matCellDef=\"let row\">\r\n                                <mat-chip color=\"accent\" selected class=\"text-white m-2\" (click)=\"actionSelected(row)\">\r\n                                  Evaluate\r\n                                </mat-chip>\r\n                              </td>\r\n                            </ng-container> -->\r\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n              <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            </mat-table>\r\n            <mat-paginator [pageSizeOptions]=\"[6, 12, 20]\" showFirstLastButtons></mat-paginator>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <!-- <button mat-button>Ok</button> -->\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Demo } from 'src/app/_models/demo';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { DemoService } from 'src/app/_services/demo.service';\r\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\r\nimport { StaticdataService } from 'src/app/_services/staticdata.service';\r\nimport { LocationModel } from 'src/app/_models/location';\r\nimport * as moment from 'moment';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-demo',\r\n  templateUrl: './demo.component.html',\r\n  styleUrls: ['./demo.component.css']\r\n})\r\nexport class DemoComponent implements OnInit {\r\n\r\npublic demoForm: FormGroup;\r\npublic submitted = false;\r\nisLoading;\r\nlocations: LocationModel[] = [];\r\ntimestamps;\r\nisSuccess;\r\ndemos;\r\nmessage;\r\n\r\neventcolors = [\r\n  {color: 'Red', code: ''},\r\n  {color: 'Yellow', code: ''},\r\n  {color: 'Blue', code: ''},\r\n  {color: 'Blue', code: ''}\r\n];\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: AuthserviceService,\r\n              private demoService: DemoService,\r\n              private staticData: StaticdataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getDemos();\r\n  }\r\n\r\n  getDemos(){\r\n    this.demoService.getAllDemosByUser(this.authService.userValue.id).subscribe(\r\n      x => (this.demos = x), (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  getTimeLabels(){\r\n    const times = (desiredStartTime, interval, period) => {\r\n      const periodsInADay = moment.duration(1, 'day').as(period);\r\n      const timeLabels = [];\r\n      const startTimeMoment = moment(desiredStartTime, 'hh:mm');\r\n      for (let i = 0; i <= periodsInADay; i += interval) {\r\n        startTimeMoment.add(i === 0 ? 0 : interval, period);\r\n        timeLabels.push(startTimeMoment.format('hh:mm A'));\r\n      }\r\n      return timeLabels;\r\n    };\r\n    this.timestamps = times('00:00', 15, 'minutes');\r\n  }\r\n\r\n  displayLoc(loc): string {\r\n    return loc ? loc.locationName : '';\r\n  }\r\n\r\n  get demoFormControls() { return this.demoForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n}\r\n","\r\n<div class=\"alert alert-info\" *ngIf=\"message\">{{message}}</div>\r\n<!-- <div class=\"mt-2 text-center\"><a href  [routerLink]=\"['/demodetail', demo.courseId]\" class=\"btn btn-primary\">View Demo</a></div> -->","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-eventmodel',\r\n  templateUrl: './eventmodel.component.html',\r\n  styleUrls: ['./eventmodel.component.css']\r\n})\r\nexport class EventmodelComponent implements OnInit {\r\n\r\n  submitted;\r\n  calendarformForm: FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<EventmodelComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.calendarformForm = this.formBuilder.group({\r\n      summary: [this.data.event.title, Validators.required],\r\n      location: [this.data.event?.meta?.locationName, Validators.required],\r\n      description: [this.data.event?.meta?.courseDescription, Validators.required],\r\n      timeZone: ['Asia/Calcutta', Validators.required],\r\n      start: [this.data.event.start, Validators.required],\r\n      end: [this.data.event.end, Validators.required],\r\n      recurrence: ['', Validators.required],\r\n      attendees: ['', Validators.required],\r\n      organizer: [''],\r\n      count: ['']\r\n    });\r\n    this.calendarformForm.disable();\r\n  }\r\n\r\n  get f() {\r\n    return this.calendarformForm.controls;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.dialogRef.close(this.f);\r\n  }\r\n\r\n  onNoClick(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Hi {{data.event.title}}</h2>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"calendarformForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"container\">\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"summary\">Summary</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"summary\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.summary.errors }\" />\r\n        <div *ngIf=\"submitted && f.summary.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.summary.errors.required\">Summary is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"location\">Location</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"location\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\r\n        <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.location.errors.required\">Locatio is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"description\">Description</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"description\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n        <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"start\">Start Date</mat-label>\r\n        <input matInput formControlName=\"start\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.start.errors }\" [matDatepicker]=\"picker\"/>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        <div *ngIf=\"submitted && f.start.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.start.errors.required\">Start Date is Required</div>\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label for=\"description\">End Date</mat-label>\r\n        <input matInput formControlName=\"end\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.end.errors }\" [matDatepicker]=\"picker2\"/>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker2></mat-datepicker>\r\n        <div *ngIf=\"submitted && f.end.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.end.errors.required\">End Date is required</div>\r\n        </div>\r\n      </mat-form-field>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <div class=\"d-flex\">\r\n    <button mat-raised-button hidden  color=\"warn\" (click)=\"onNoClick()\">No Thanks</button>  \r\n    <button mat-raised-button  class=\"ml-auto\" color=\"primary\" (click)=\"onSubmit()\" cdkFocusInitial>Ok</button>\r\n  </div>\r\n\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Attendance } from '../_models/attendance';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AttendanceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getattendances(courseid){\r\n    const options = courseid ?\r\n    { params: new HttpParams().set('id', courseid)} : {};\r\n    return this.http.get<any[]>(environment.apiUrl + `/attendance/bycourse`, options);\r\n  }\r\n\r\n  getattendanceByTutor(courseid){\r\n    const options = courseid ?\r\n    { params: new HttpParams().set('id', courseid)} : {};\r\n    return this.http.get<any[]>(environment.apiUrl + `/attendance/bytutor`, options);\r\n  }\r\n\r\n  saveattendance(attendances: Attendance[]){\r\n    return this.http.post(environment.apiUrl + `/attendance`, attendances);\r\n  }\r\n\r\n  updateAttendance(attendance){\r\n    return this.http.put(environment.apiUrl + `/attendance`, attendance, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';\r\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sidenav-bar',\r\n  templateUrl: './sidenav-bar.component.html',\r\n  styleUrls: ['./sidenav-bar.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SidenavBarComponent implements OnInit {\r\n  user;\r\n  IsOpened;\r\n  loginType;\r\n\r\n  @ViewChild('drawer', { static: false })\r\n  drawer: MatSidenav;\r\n  isExpanded;\r\n\r\n  constructor(public authService: AuthserviceService, private route: ActivatedRoute, private router: Router) {\r\n    this.authService.user.subscribe(x => this.user = x);\r\n    this.authService.loginuser.subscribe(x => {this.loginType = x; console.log(this.loginType); } );\r\n   }\r\n\r\n  studentnavs = [\r\n    {route : 'classroom', icon: 'class', title: 'My Classrom'},\r\n    {route : 'tutors', icon: 'assignment', title: 'Tutors'},\r\n    {route : 'profile', icon: 'person_outline', title: 'My Profile'},\r\n    {route : 'earnings', icon: 'account_balance', title: 'My Earnings'},\r\n    {route : 'credits', icon: 'connect_without_contact', title: 'My Referrals'},\r\n  ];\r\n\r\n  tutornavs = [\r\n    {route : 'classroom', icon: 'class', title: 'My Classrom'},\r\n    {route : 'demos', icon: 'assignment', title: 'Demo Requests'},\r\n    {route : 'profile', icon: 'person_outline', title: 'My Profile'},\r\n    {route : 'earnings', icon: 'account_balance', title: 'My Earnings'},\r\n    {route :  'credits', icon: 'connect_without_contact', title: 'My Referrals'},\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n    this.IsOpened = this.isAuthenticated ? true : false;\r\n  }\r\n\r\n  isAuthenticated(){\r\n    return this.user;\r\n  }\r\n\r\n  navigate(card, sidenav){\r\n    sidenav.close();\r\n    console.log(card);\r\n    console.log(this.route);\r\n    this.router.navigate(['..', card.route], { relativeTo: this.route });\r\n  }\r\n\r\n\r\n}\r\n","<app-navigation-bar *ngIf=\"isAuthenticated()\" (toggleSidenav)=\"sidenav.toggle()\">\r\n</app-navigation-bar>\r\n<mat-sidenav-container class=\"example-container mat-typography\"  autosize>\r\n  <mat-sidenav  #sidenav class=\"main-container\" mode=\"side\" [ngClass]=\"{'mat-side-pink' : authService.userValue?.role === 'Student'}\">\r\n    <!-- <img class=\"img img-responsive sidenav-img\" src=\"assets/sidenav-1.png\"\r\n        srcset=\"assets/sidenav-2.png 2x, disableClose=\"true\"\r\n        assets/sidenav-3.png 3x\" > -->\r\n    <!-- <button mat-mini-fab (click)=\"isExpanded = !isExpanded\" color=\"warn\" style=\"margin: 10px;\">\r\n      <mat-icon aria-label=\"Menu\">menu</mat-icon>\r\n    </button> -->\r\n    <!-- <mat-toolbar class=\"logo-toolbar\">\r\n      <mat-toolbar-row [routerLink]=\"['/dashboard']\">\r\n        <img src=\"assets/vidhyasadhan-logo.svg\">\r\n      </mat-toolbar-row>\r\n    </mat-toolbar> -->\r\n    <mat-nav-list>\r\n      <ng-container [ngSwitch]=\"authService.userValue?.role === 'Student'\">\r\n      <ng-container *ngSwitchCase=\"true\">\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/classroom']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > class </mat-icon>\r\n          <h4 mat-line>My Classroom</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/tutors']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon  > assignment </mat-icon>\r\n          <h4 mat-line>Book Tutor</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/profile']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > person_outline </mat-icon>\r\n          <h4 mat-line>My Profile</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/student/assignments']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon> article </mat-icon>\r\n          <h4 mat-line>Study Material</h4>\r\n        </a>\r\n        <a  mat-list-item class=\"pink\"\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/progress']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > pie_chart </mat-icon>\r\n          <h4 mat-line>Progress Report</h4>\r\n        </a>\r\n      </ng-container>\r\n      <ng-container class=\"blueside-nav\" *ngSwitchCase=\"false\">\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/classroom']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > class </mat-icon>\r\n          <h4 mat-line>My Classroom</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/requests']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > assignment </mat-icon>\r\n          <h4 mat-line>Student Requests</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/profile']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > person_outline </mat-icon>\r\n          <h4 mat-line>My Profile</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/events']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > event </mat-icon>\r\n          <h4 mat-line>My Events</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/earnings']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > account_balance </mat-icon>\r\n          <h4 mat-line>My Earnings</h4>\r\n        </a>\r\n        <a  mat-list-item\r\n        (click)=\"sidenav.close()\" [routerLink]=\"['/vs/tutor-referrals']\"\r\n        routerLinkActive=\"list-item-active\">\r\n          <mat-icon matListIcon > connect_without_contact </mat-icon>\r\n          <h4 mat-line>My Referrals</h4>\r\n        </a>\r\n      </ng-container>\r\n      </ng-container>\r\n\r\n      <mat-divider></mat-divider>\r\n      <div class=\"d-flex m-2 align-items-center justify-content-center\" *ngIf=\"sidenav.opened\">\r\n        <div class=\"crown text-center\">\r\n          <img class= \"p-2\" src=\"assets/sidenav/crown.jpg\">\r\n          <h5 class=\"Upgrade-to-Pro\">Upgrade to Pro</h5>\r\n          <p class=\"Make-the-most-of-you\">Make the most of your app with premium</p>\r\n        </div>\r\n      </div>\r\n      <img class=\"side-bg-pic img img-responsive\" src=\"assets/sidenav/group-19.png\" srcset=\"assets/sidenav/group-19@2x.png 2x,assets/sidenav/group-19@3x.png 3x\">\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content class=\"example-sidenav-content\" [ngClass]=\"authService.userValue?.role === 'Student' ? 'sidenav-bg-pink':'sidenav-bg-blue'\">\r\n    <div>\r\n      <img class=\"oval-copy-left-1\" src=\"assets/registration/oval-copy-2.svg\">\r\n      <img class=\"oval-copy-left-2\" src=\"assets/registration/oval-copy-3.svg\">\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n    <div>\r\n      <img class=\"oval-copy-right-1\" src=\"assets/registration/oval.svg\">\r\n      <img class=\"oval-copy-right-2\" src=\"assets/registration/oval-copy-4.svg\">\r\n    </div>\r\n\r\n    <div class=\"bottom-icon\">\r\n      <img class=\"oval-copy-right-3\" src=\"assets/combined-shape.svg\">\r\n      <img class=\"oval-copy-left-3\" src=\"assets/registration/oval-copy.svg\">\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sitepricing',\r\n  templateUrl: './sitepricing.component.html',\r\n  styleUrls: ['./sitepricing.component.css']\r\n})\r\nexport class SitepricingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"about-bg\">\r\n  <div class=\"about-text\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 offset-md-1 text-left\">\r\n          <p class=\"about-us\">HOME/PRICING</p>\r\n          <h2 class=\"welove-text\">We provide Great service,\r\n            Professional support.</h2>\r\n          <p class=\"platform\">VidhyaSadhan is a platform to change the way you Study and Teach.</p>\r\n          <a class=\"btn btn-primary get-start\" href=\"#\" role=\"button\"><span>GET STARTED</span></a>\r\n        </div>\r\n        <div class=\"col-md-6 offset-md-1\">\r\n          <img src=\"assets/website/pricing/pricing-1.png\"\r\n            srcset=\"assets/website/pricing/pricing-1-1.png 2x,assets/website/pricing/pricing-1-2.png 3x\"\r\n            class=\"about-us-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bg-white p-2\">\r\n  <div class=\"justify-content-center text-center\">\r\n    <div class=\"pricing-dev\">\r\n      <h2 class=\"welove-devtext\">VidhyaSadhan Pricing</h2>\r\n      <div class=\"line\"></div>\r\n    </div>\r\n    <div class=\"parallelogram\">\r\n      <div class=\"pricing-parent\">\r\n        <div class=\"pricing-child pricing-child-1\">\r\n          <h2 class=\"basic\">Basic</h2>\r\n          <p class=\"basic-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus\r\n            eu nisl suscipit</p>\r\n          <h4 class=\"basic-price\">$15/mo</h4>\r\n        </div>\r\n        <div class=\"pricing-child pricing-child-2\">\r\n          <h1 class=\"pro\">Pro</h1>\r\n          <div class=\"d-flex flex-column align-items-center\">\r\n            <img class=\"original\" src=\"assets/website/pricing/crown.png\"\r\n              srcset=\"assets/website/pricing/crown-1.png 2x,assets/website/pricing/crown-2.png 3x\">\r\n            <img class=\"reflection\" src=\"assets/website/pricing/crown.png\"\r\n              srcset=\"assets/website/pricing/crown-1.png 2x,assets/website/pricing/crown-2.png 3x\">\r\n          </div>\r\n          <p class=\"basic-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus\r\n            eu nisl suscipit</p>\r\n          <h2 class=\"basic-price m-2\">$20/mo</h2>\r\n          <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill price-svg\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill-rule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n          </svg>\r\n        </div>\r\n        <div class=\"pricing-child pricing-child-3\">\r\n          <h2 class=\"basic\">Business</h2>\r\n          <p class=\"basic-text\">Ut enim mi, mattis at sollicitudin rhoncus, rhoncus eget sem. Curabitur aliquam tellus\r\n            eu nisl suscipit</p>\r\n          <h4 class=\"basic-price\">$45/mo</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"list-parent\">\r\n        <div class=\"d-flex flex-column\">\r\n          <p>Dummy text</p>\r\n          <p>Dummy text Dummy text</p>\r\n          <p>Sample</p>\r\n        </div>\r\n        <div class=\"d-flex flex-column\">\r\n          <p>100 dummy tutors</p>\r\n          <p>100,000 monthly visits</p>\r\n          <p>1,000 form submissions</p>\r\n        </div>\r\n        <div class=\"d-flex flex-column\">\r\n          <p>2000 Sample items</p>\r\n          <p>Material access</p>\r\n          <p>3 content editors</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-sitesubscribe></app-sitesubscribe>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DemoRequest } from 'src/app/_models/demorequest';\r\n\r\n@Component({\r\n  selector: 'app-demomodel',\r\n  templateUrl: './demomodel.component.html',\r\n  styleUrls: ['./demomodel.component.css']\r\n})\r\nexport class DemomodelComponent implements OnInit {\r\n\r\n  availableslots = ['10:00 AM to 11:00 AM', '11:00 AM to 12:00 PM', '4:00 PM to 5:00 PM'];\r\n  selectedValue;\r\n  selectedDate;\r\n  viewDate;\r\n  events = [];\r\n  demomodelForm: FormGroup;\r\n  public submitted = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<DemomodelComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewDate = new Date();\r\n\r\n    this.demomodelForm = this.formBuilder.group({\r\n      demo: [null, Validators.required],\r\n      subject: ['', Validators.required],\r\n      message: [''],\r\n      });\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted = true;\r\n    if (this.demomodelForm.valid) {\r\n      const demoreq: DemoRequest = {\r\n         tutorId: this.data.tutorinfo.id,\r\n         date: this.f.demo.value.startDate,\r\n         studentId:  this.data.student.id,\r\n         slot: this.f.demo.value.courseId,\r\n         subject : this.f.subject.value,\r\n         message : this.f.message.value\r\n      };\r\n      this.dialogRef.close(demoreq);\r\n     }\r\n  }\r\n\r\n  get f() { return this.demomodelForm.controls; }\r\n\r\n  onClose(){\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>\r\n  <span [ngSwitch]=\"data.type\">\r\n  <p *ngSwitchCase=\"true\">\r\n    Scedule a Demo\r\n  </p>\r\n  <p *ngSwitchCase=\"false\">\r\n    Book a Class\r\n  </p>\r\n  </span></h1>\r\n<div mat-dialog-content>\r\n    <form [formGroup]=\"demomodelForm\" (submit)=\"onSubmit()\">\r\n  <ul class=\"list-group\">\r\n      <li class=\"list-group-item\">\r\n          Tutor:\r\n          <span>{{data.tutorinfo.name | uppercase}}</span>\r\n      </li>\r\n    <li  class=\"list-group-item\">\r\n      <mat-form-field class=\"w-100\">\r\n          <mat-label>Select a Session</mat-label>\r\n          <mat-select id=\"national\" formControlName=\"demo\">\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let assignment of data.courses\" [value]=\"assignment\">\r\n              {{assignment.title}} - {{assignment.startDate | date:'mediumDate'}} - {{assignment.startTime}} : {{assignment.endTime}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <!-- <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" name=\"date\"  placeholder=\"Preferred Date\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n          <mat-error *ngIf=\"f.date.invalid\">Date Value is Required</mat-error> -->\r\n      </mat-form-field>\r\n    </li>\r\n    <!-- <li>\r\n        <mwl-calendar-month-view  [viewDate]=\"viewDate\"\r\n        [events]=\"events\" ></mwl-calendar-month-view>\r\n    </li> -->\r\n    <!-- <li class=\"list-group-item\">\r\n        <mat-form-field class=\"w-100\">\r\n        <mat-select placeholder=\"Slot\" formControlName=\"time\" name=\"item\">\r\n            <mat-option *ngFor=\"let item of availableslots\" [value]=\"item\">\r\n                {{item}}\r\n            </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"f.time.invalid\">Time Slot is Required</mat-error>\r\n    </mat-form-field>\r\n    </li> -->\r\n    <li class=\"list-group-item\">\r\n        <mat-form-field class=\"w-100\">\r\n            <mat-label>Subject</mat-label>\r\n            <input matInput placeholder=\"subject\" formControlName=\"subject\">\r\n        </mat-form-field>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n        <mat-form-field class=\"w-100\">\r\n            <mat-label>Additional Details</mat-label>\r\n            <textarea matInput placeholder=\"Additional Details\" formControlName=\"message\"> </textarea>\r\n        </mat-form-field>\r\n    </li>\r\n  </ul>\r\n  <div mat-dialog-actions>\r\n    <div class=\"m-2 text-center justify-content-center\">\r\n      <button mat-button class=\"btn btn-md btn-primary m-2\" type=\"submit\" (click)=\"onSubmit()\">Ok</button>\r\n      <button mat-button class=\"btn btn-md btn-primary m-2\" (click)=\"onClose()\" cdkFocusInitial>Cancel</button>\r\n    </div>\r\n</div>\r\n</form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AuthserviceService } from 'src/app/_services/authservice.service';\n\n@Component({\n  selector: 'app-promoterlogin',\n  templateUrl: './promoterlogin.component.html',\n  styleUrls: ['../promoterregister/promoterregister.component.css']\n})\nexport class PromoterloginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute,\n              private router: Router, private authService: AuthserviceService) {\n                if (this.authService.userValue) {\n                  this.router.navigate(['/vs']);\n                }\n              }\n\n  loginForm: FormGroup;\n  submitted;\n  loading;\n  success;\n  returnUrl: string;\n  error;\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/vs';\n  }\n\n  get f(){\n    return this.loginForm.controls;\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authService.login(this.f.username.value, this.f.password.value, 4)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.router.navigate(['authenticate'], {queryParams: { returnUrl : this.returnUrl, email: this.f.username.value}});\n        },\n        error: error => {\n          this.error = 'Please Check your Password or Email to Confirm';\n          this.loading = false;\n        }\n      });\n  }\n\n  forgotClick(event){\n\n  }\n\n}\n","<div class=\"pbg-1\">\n  <mat-toolbar class=\"justify-content-center tb\">\n    <img src=\"assets/registration/vidhya-sandhhan.svg\" class=\"vidhya-sadhan\">\n\n  </mat-toolbar>\n  <div class=\"content-fit\">\n    <form [formGroup]=\"loginForm\" class=\"log-form-mr\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"p-4\">\n        <div class=\"card-header bg-img border-0  log-header text-center\">\n          <div class=\"signup-txt\">Login to Promoter Account</div>\n          <img class=\"promoter-login\" src=\"assets/registration/promoter-login.svg\">\n        </div>\n\n        <h4 class=\"text-center h-promoter\">Hello Promoter</h4>\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"email\">Email</mat-label>\n          <span matPrefix>\n            <mat-icon color=\"primary\">email</mat-icon>\n            <mat-divider [vertical]=\"true\"></mat-divider>\n          </span>\n          <input matInput type=\"email\" formControlName=\"username\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Email Address is required</div>\n            <div *ngIf=\"f.username.errors.email\">Please Provide a Valid Email Address</div>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label for=\"password\">Password</mat-label>\n          <span matPrefix>\n            <mat-icon color=\"primary\">lock</mat-icon>\n            <mat-divider [vertical]=\"true\"></mat-divider>\n          </span>\n          <input matInput type=\"password\" formControlName=\"password\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n          <span matSuffix><a href (click)=\"forgotClick($event)\">Forgot?</a></span>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Please Provide a Password</div>\n          </div>\n        </mat-form-field>\n\n        <mat-card-footer class=\"text-center justify-content-center\">\n          <mat-card-actions class=\"d-flex justify-content-between align-items-center\">\n            <div class=\"account\">No account? <a [routerLink]=\"['/promoter/register']\">Register</a></div>\n            <button mat-flat-button class=\"mat-button-base\" color=\"accent\" [disabled]=\"loading\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Login\n            </button>\n          </mat-card-actions>\n          <div class=\"promoter-log m-2\">Login as <a [routerLink]=\"['/login']\">Student / Promoter</a> </div>\n          <div *ngIf=\"submitted && error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n        </mat-card-footer>\n      </div>\n    </form>\n  </div>\n</div>\n"]}